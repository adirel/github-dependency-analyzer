<?xml version="1.0"?>
<!-- $Id: build.xml 2087 2009-06-25 13:10:39Z simsce $ -->
<project name="GATE Tokenisers" default="jar" basedir=".">
    <description>
        GATE see http://gate.ac.uk
    </description>
  <!-- set global properties for this build -->
  <!-- Name of the output jar file -->
  <property name="jarFile"  location="heptag_wrapper.jar"/>
  
  <!-- Sources -->
  <property name="srcDir" location="src"/>
  
  <!-- Output directory for the build process -->
  <property name="outputDir"  location="classes"/>

  <!-- Libraries directory for the build process -->
  <property name="libDir"  location="lib"/>
  
  <!-- Extensions directory for the build process -->
  <property name="extDir"  location="lib/ext"/>

  <!-- Documentation directory -->
  <property name="docDir"  location="doc"/>
  
  <!-- Use the new 1.3+ compiler -->
  <property name="build.compiler"  value="modern"/>

  
  <!-- tools.jar path -->
  <path id="tools.jar.path" location="../bin/tools14.jar"/>
  
  <!-- The build CLASSPATH -->
  <path id="build.class.path">
    <fileset file="../../bin/gate.jar"/>
    <fileset file="lib/heptag.jar"/>
  </path>
  
  <!-- Prints out some information messages -->
  <echo level="info">
    This is the ANT build script for a CREOLE GATE component (http://gate.ac.uk).
    Type &quot;ant help&quot; for details about the targets available.
    GATE ${gate.version}, build ${gate.build}</echo>
    
  <!-- Prints out details about the targets -->
  <target name="help">
    <echo level="info">
      This is the ANT build script for gate (http://gate.ac.uk).
      The following targets are available
        -all (default target): compiles GUK and GATE classes and makes the gate.jar archive.
        
        -compile: compiles all the .java files
        -resources: copies the resources to the output directory (${outputDir})
        -jar: creates the gate.jar archive
        -run: starts GATE
        -clean: cleans up the output from all previous builds
        
        -doc: creates the Javadoc and Java2HTML documentation
        -docclean: deletes all built documentation
        -jape: rebuilds the JAPE parser files and associated documentation
        -guk: compiles the GUK classes and builds the guk.jar archive
        -gukdemo: starts the GUK Editor (a.k.a. GATE Unicode Editor)
        -test: runs the GATE test suite
        
        -distro: make a GATE distribution (calls all build tasks in the process)
    </echo>
  </target>
  

	<!-- This target compiles all the classes -->  
  <target name="compile"
          description="compile the source " >
    <!-- Compile the java code from ${srcDir} into ${buildDir} -->
    <javac srcdir="${srcDir}" 
		       destdir="${outputDir}"
           includes="gate/**"
           source="1.4"
					 classpathref="build.class.path"/>
  </target>
	
  <!-- Make gate.jar archive -->
	<target name="jar" depends="compile">
		<jar destfile="${jarFile}" 
         update="false"
         index="true">
      <fileset dir="${outputDir}/"
               includes="gate/**"/>
    </jar>
	</target>
  
  
  <!-- Clear all build output -->
  <target name="clean">
    <delete includeemptydirs="true">
      <fileset dir="${outputDir}" excludes="**/CVS,**/CVS/**,**/.cvsignore"/>
    </delete>
  </target>
  
  <!-- Make documentation -->
  <target name="javadoc">
    <javadoc access="protected" 
              destdir="${docDir}/javadoc"
              classpathref="run.class.path"
              Extdirs="${extDir}"
              Encoding="UTF-8"
              Use="yes"
              Windowtitle="GATE JavaDoc"
              link="http://java.sun.com/j2se/1.4.2/docs/api/"
              docencoding="UTF-8"
              charset="UTF-8"
              source="1.4"
              breakiterator="true">
      <fileset dir="${srcDir}"/>        
    </javadoc>
  </target>
  
  <!-- Make documentation - internal -->
  <target name="internaljavadoc">
    <javadoc access="private" 
              destdir="${docDir}/javadoc/internal"
              classpathref="run.class.path"
              Extdirs="${extDir}"
              Encoding="UTF-8"
              Use="yes"
              Windowtitle="GATE JavaDoc"
              link="http://java.sun.com/j2se/1.4.2/docs/api/"
              docencoding="UTF-8"
              charset="UTF-8"
              source="1.4"
              breakiterator="true">
      <fileset dir="${srcDir}"/>        
    </javadoc>
  </target>

  
  <!-- Convert the source to HTML using the java2html utility -->
  <target name="java2html">
    <java jar="${buildDir}/lib/j2h.jar"
          fork="true"
          spawn="false">
      <jvmarg value="-Dfile.encoding=UTF-8"/>
      <arg value="-d"/> <arg file="${docDir}/java2html/"/>
      <arg value="-js"/> <arg file="${srcDir}"/>
      <arg value="-jd"/> <arg file="${docDir}/javadoc"/>
      <arg value="-m"/> <arg value="4"/>
      <arg value="-t"/> <arg value="2"/>
      <arg value="-n"/> <arg value="&quot;GATE source&quot;"/>
    </java>
  </target>
 
  <target name="doc" depends="javadoc, internaljavadoc, java2html"/>
 
  
  <!-- Clear all built documentation -->
  <target name="docclean">
    <delete includeemptydirs="true">
      <fileset dir="${docDir}/javadoc" excludes="**/CVS,**/CVS/**,**/.cvsignore,internal,internal/**"/>
    </delete>
    <delete includeemptydirs="true">
      <fileset dir="${docDir}/javadoc/internal" excludes="**/CVS,**/CVS/**,**/.cvsignore"/>
    </delete>
    <delete includeemptydirs="true">
      <fileset dir="${docDir}/java2html" excludes="**/CVS,**/CVS/**,**/.cvsignore"/>
    </delete>
  </target>
    
  <target name="test" depends="jar">
    <junit fork="true" 
           showoutput="yes"
           printsummary="yes">
      <classpath refid="run.class.path"/>
      <sysproperty key="gate.config" value="${buildDir}/gate.xml"/>
      <jvmarg value="-Djava.ext.dirs=${extDir}"/>
      <formatter type="plain"
                 usefile="false"/>
      <formatter type="xml"
                 if="write.xml"/>
      <test name="gate.TestGate"
            outfile="testResult"
            todir="${buildDir}"/>
    </junit>
  </target>  
</project>

<!--======================================================================

   Build file for Large KB Gazetteer

   This file will allow you to build your plugin with Ant.  If you do not
   have an Ant installation of your own, you can use the one supplied with
   GATE by running

     {gate.home}/bin/ant

   where {gate.home} is the directory in which GATE was installed.

=======================================================================-->
<project name="lkb-gazetteer" basedir="." default="all">

  <!-- Prevent Ant from warning about includeantruntime not being set -->
  <property name="build.sysclasspath" value="ignore" />

  <property file="build.properties" />

  <!--=======================================================
    Property settings.  You should not need to edit these
    directly, if you need to set a different value for any
    property you should create or edit build.properties and override
    them there. build.properties is ignored in SVN, so you can safely
	put local settings there.
  ========================================================-->

  <property name="plugin.name" value="Gazetteer_LKB" />

  <!-- location of the top-level GATE installation directory -->
  <property name="gate.home" location="../.." />

  <!-- location of GATE lib directory - should be inferred from gate.home -->
  <property name="gate.lib" location="${gate.home}/lib" />

  <!-- location of gate.jar - should be inferred from gate.home -->
  <property name="gate.jar" location="${gate.home}/bin/gate.jar" />

  <!-- Source directory - contains the Java source files for this plugin -->
  <property name="src.dir" location="src" />

  <!-- directory to contain the compiled classes -->
  <property name="classes.dir" location="classes" />

  <!-- documentation directory -->
  <property name="doc.dir" location="doc" />

  <!-- JavaDoc documentation directory -->
  <property name="javadoc.dir" location="${doc.dir}/javadoc" />

  <!-- lib directory - put any additional JAR files your plugin requires into
       this directory.  You will also need to add them as <JAR> entries in
       creole.xml -->
  <property name="lib.dir" location="lib" />

  <!-- location for the generated JAR file -->
  <property name="jar.location" location="${plugin.name}.jar" />



  <!-- Classpath to compile - includes gate.jar, GATE/lib/*.jar and any local
       library JAR files. -->
  <path id="compile.classpath">
    <pathelement location="${gate.jar}" />
    <fileset dir="${gate.lib}">
      <include name="**/*.jar" />
      <include name="**/*.zip" />
    </fileset>
    <fileset dir="${lib.dir}" includes="**/*.jar" />
  </path>
  
  <!--====================== Targets ============================-->
  
  <!-- create build directory structure -->
  <target name="prepare">
    <mkdir dir="${classes.dir}" />
  </target>

  <!-- compile the source -->
  <target name="compile" depends="prepare">
    <javac classpathref="compile.classpath"
           srcdir="${src.dir}"
           destdir="${classes.dir}"
           debug="true"
           debuglevel="lines,source"
           source="1.5" />
  </target>

  <!-- copy resources (anything non-.java) from src to classes -->
  <target name="copy.resources" depends="prepare">
    <copy todir="${classes.dir}">
      <fileset dir="${src.dir}" excludes="**/*.java" />
    </copy>
  </target>

  <!-- create the JAR file -->
  <target name="jar" depends="compile, copy.resources" >
    <jar destfile="${jar.location}"
         update="false"
         basedir="${classes.dir}" />
  </target>

  <!-- remove the generated .class files -->
  <target name="clean.classes" >
    <delete dir="${classes.dir}" />
  </target>

  <!-- Clean up - remove .class and .jar files -->
  <target name="clean" depends="clean.classes" >
    <delete file="${jar.location}" />
  </target>

  <!-- Build JavaDoc documentation -->
  <target name="doc.prepare">
    <mkdir dir="${javadoc.dir}" />
  </target>

  <target name="javadoc" depends="doc.prepare">
    <javadoc destdir="${javadoc.dir}" packagenames="*"
             classpathref="compile.classpath"
             encoding="UTF-8"
             windowtitle="${plugin.name} JavaDoc"
             source="1.6">
      <sourcepath>
        <pathelement location="${src.dir}" />
      </sourcepath>
      <link href="http://docs.oracle.com/javase/6/docs/api/" />
      <link href="http://gate.ac.uk/gate/doc/javadoc/" />
    </javadoc>
  </target>

  <target name="test" depends="jar">
  </target>

  <!-- Build everything - the code and JavaDoc -->
  <target name="all" depends="jar, javadoc" />

  <!-- Targets used by the main GATE build file -->
  <target name="build" depends="jar" />
  <target name="distro.prepare" depends="clean.classes" />
 
</project>
