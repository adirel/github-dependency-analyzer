repositories {
    mavenCentral()
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.10'
}

ext {
    guavaArtifact = 'com.google.guava:guava-jdk5:14.0.1'
    androidBuildArtifact = 'com.android.tools.build:gradle:0.8.+'
    slf4jVersion = '1.7.2'
    junitVersion ='4.8.1'
}
apply plugin: 'java'
apply plugin: 'fatjar'
apply plugin: "application"

def mainClass = 'com.mrd.bitlib.BackupUtil'

mainClassName = mainClass


repositories {
    mavenCentral()
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'eu.appsatori:gradle-fatjar-plugin:0.2-rc1'
    }
}



sourceCompatibility = 1.6
targetCompatibility = 1.6



dependencies {
    compile project(':public:bitlib')
    compile guavaArtifact
    testCompile 'junit:junit:'+junitVersion
}

fatJar {
    manifest {

        attributes(
                "Main-Class": mainClass,
                "Implementation-Version": version ?: 'dev'
        )
    }
}
apply plugin: 'java'

def defaultEncoding = 'UTF-8'
compileJava {
    options.encoding = defaultEncoding
}
compileTestJava {
    options.encoding = defaultEncoding
}

repositories {
    mavenCentral()
}
sourceCompatibility = 1.6
targetCompatibility = 1.6

dependencies {
    testCompile 'junit:junit:' + junitVersion
    compile guavaArtifact
}apply plugin: 'android'

repositories {
    mavenCentral()
}


buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath androidBuildArtifact
    }
}

dependencies {
    instrumentTestCompile 'junit:junit:' + junitVersion
    compile project(':public:zxing-android')
    compile project(':public:mbwapi')
    compile 'com.squareup:otto:1.3.4'
    compile 'com.android.support:appcompat-v7:19.0.+'
}


def commonDebugKeystore = file("../../keystore_debug")

android {

    compileOptions {
        sourceCompatibility = 'VERSION_1_6'
        targetCompatibility = 'VERSION_1_6'
    }


    compileSdkVersion 19
    buildToolsVersion "19.0.1"

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 19

        versionCode 90
        versionName '1.1.11'
    }

    signingConfigs {
        release {
            keyAlias = ''
        }

        testnetplay {
            keyAlias = ''
        }

        commonDebug {
            storeFile commonDebugKeystore
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }

    buildTypes {
        release {
            runProguard true
            proguardFile 'mbw.pro'

            applicationVariants.all { variant ->
                def file = variant.outputFile
                def versionExtension = "-" + defaultConfig.versionName + "build" + defaultConfig.versionCode + ".apk"
                variant.outputFile = new File(file.parent, file.name.replace(".apk", versionExtension))
            }
        }
    }

    productFlavors {

        bitsofgold {
            packageName 'il.co.bitsofgold.wallet'
            versionName = defaultConfig.versionName + '-BOG'
            signingConfig signingConfigs.release
        }

        prodnet {
            packageName 'com.mycelium.wallet'
            signingConfig signingConfigs.release
        }

        dev {
            packageName 'com.mycelium.devwallet'
            signingConfig signingConfigs.debug
        }
        testnet {
            packageName 'com.mycelium.testnetwallet'
            versionName = defaultConfig.versionName + '-TESTNET'
            signingConfig signingConfigs.testnetplay
        }
    }


    sourceSets {
        instrumentTest {
            java.srcDirs = ['instrumentTest/java']
        }
    }

}

if (commonDebugKeystore.exists()) {
    android.buildTypes.debug.signingConfig = android.signingConfigs.commonDebug
    android.productFlavors.dev.signingConfig = android.signingConfigs.commonDebug
    logger.info("keytore_debug detected")
}


if (project.hasProperty('prodKeyStore') &&
        project.hasProperty('prodKeyAlias') &&
        project.hasProperty('prodKeyStorePassword') &&
        project.hasProperty('prodKeyAliasPassword')) {
    android.signingConfigs.release.storeFile = file('../../' + prodKeyStore)
    android.signingConfigs.release.keyAlias = prodKeyAlias
    android.signingConfigs.release.storePassword = prodKeyStorePassword
    android.signingConfigs.release.keyPassword = prodKeyAliasPassword
} else {
    android.productFlavors.prodnet.signingConfig = null
}

if (project.hasProperty('testKeyStore') &&
        project.hasProperty('testKeyAlias') &&
        project.hasProperty('testKeyStorePassword') &&
        project.hasProperty('testKeyAliasPassword')) {
    android.signingConfigs.testnetplay.storeFile = file('../../' + testKeyStore)
    android.signingConfigs.testnetplay.keyAlias = testKeyAlias
    android.signingConfigs.testnetplay.storePassword = testKeyStorePassword
    android.signingConfigs.testnetplay.keyPassword = testKeyAliasPassword
} else {
    android.productFlavors.testnet.signingConfig = null
}
apply plugin: 'java'

repositories {
    mavenCentral()
}


sourceCompatibility = 1.6
targetCompatibility = 1.6



dependencies {
    compile project(':public:bitlib')
    compile guavaArtifact
    compile 'com.squareup:otto:1.3.4'
    testCompile 'junit:junit:'+junitVersion

}apply plugin: 'android-library'

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath androidBuildArtifact
    }
}


dependencies {
    compile project(':public:zxing-core')
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.0.1"

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 10
    }

    compileOptions {
        sourceCompatibility = 'VERSION_1_6'
        targetCompatibility = 'VERSION_1_6'
    }

}apply plugin: 'java'

repositories {
    mavenCentral()
}


sourceCompatibility = 1.6
targetCompatibility = 1.6