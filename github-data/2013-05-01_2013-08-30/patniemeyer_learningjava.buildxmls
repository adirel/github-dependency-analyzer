<project name="learningjava" default="war" basedir=".">

	<property name="war-file" value="${ant.project.name}.war"/>
	<property name="src-dir" value="src" />
	<property name="build-dir" value="classes" />
	<property name="docs-dir" value="docs" />
	<property name="webxml-file" value="min-web.xml" />
	<property name="lib-dir" value="lib" />

	<path id="lib-path">
		<fileset dir="${lib-dir}">
			<include name="**/*.jar"/>
		</fileset>
	</path>

	<target name="compile" depends="">
		<mkdir dir="${build-dir}"/>
		<javac srcdir="${src-dir}" destdir="${build-dir}">
			<classpath>
				<path refid="lib-path"/>
			</classpath>
		</javac>
	</target>

	<target name="war" depends="compile">
		<war warfile="${war-file}" webxml="${webxml-file}">
			<classes dir="${build-dir}"/>
			<fileset dir="${docs-dir}"/>
			<lib dir="${lib-dir}">
				  <exclude name="servlet-api.jar"/>
			</lib>
		</war>
	</target>

	<target name="clean">
		<delete dir="${build-dir}"/>
		<delete file="${war-file}"/>
	</target>

</project>
<project name="learningjava" default="war" basedir=".">

	<property name="war-file" value="${ant.project.name}.war"/>
	<property name="src-dir" value="src" />
	<property name="build-dir" value="classes" />
	<property name="docs-dir" value="docs" />
	<property name="webxml-file" value="all-web.xml" />
	<property name="lib-dir" value="lib" />

	<path id="lib-path">
		<fileset dir="${lib-dir}">
			<include name="**/*.jar"/>
		</fileset>
	</path>

	<target name="compile" depends="">
		<mkdir dir="${build-dir}"/>
		<javac srcdir="${src-dir}" destdir="${build-dir}">
			<classpath>
				<path refid="lib-path"/>
			</classpath>
		</javac>
	</target>

	<target name="war" depends="compile">
		<war warfile="${war-file}" webxml="${webxml-file}">
			<classes dir="${build-dir}"/>
			<fileset dir="${docs-dir}"/>
			<lib dir="${lib-dir}">
				  <exclude name="servlet-api.jar"/>
			</lib>
		</war>
	</target>

	<target name="clean">
		<delete dir="${build-dir}"/>
		<delete file="${war-file}"/>
	</target>

</project>
<project name="magicbeans" default="jar" basedir=".">

	<property name="jar-file" value="${ant.project.name}.jar"/>
	<property name="src-dir" value="src"/>
	<property name="build-dir" value="classes"/>
	<property name="manifest-file" value="magicbeans.manifest" />
	<property name="icons-dir" value="icons" />

	<target name="compile" depends="">
		<mkdir dir="${build-dir}"/>
		<javac srcdir="${src-dir}" deprecation="true" destdir="${build-dir}"/>
		<copy todir="${build-dir}/magicbeans/">
            <fileset dir="${icons-dir}"/>
        </copy>
		<copy todir="${build-dir}">
            <fileset dir="${src-dir}">
				<patternset>
					<include name="magicbeans/sunw/**/*.gif"/>
					<include name="magicbeans/sunw/**/*.xyz"/>
				</patternset>
			</fileset>
        </copy>

	</target>

	<target name="jar" depends="compile">
		<jar jarfile="${jar-file}" manifest="${manifest-file}">
			<fileset dir="${build-dir}"/>
		</jar>
	</target>

	<target name="clean">
		<delete dir="${build-dir}"/>
		<delete file="${jar-file}"/>
	</target>

</project>
<project name="testwrite" default="jars" basedir=".">

	<property name="src-dir" value="src"/>
	<property name="build-dir" value="classes"/>
	<property name="unsigned-jar-file" value="UnsignedTestWrite.jar"/>
	<property name="signed-jar-file" value="SignedTestWrite.jar"/>

	<!-- Don't store your keys here! -->
	<property name="signer-alias" value="Pat"/>
	<property name="storepass" value="access"/>
	<!-- Really, don't do this! -->
	<property name="keypass" value="secure"/>

	<target name="compile" depends="">
		<mkdir dir="${build-dir}"/>
		<javac srcdir="${src-dir}" deprecation="true" destdir="${build-dir}"/>
	</target>

	<target name="jars" depends="compile">
		<jar jarfile="${unsigned-jar-file}">
			<fileset dir="${build-dir}"/>
		</jar>
		<jar jarfile="${signed-jar-file}">
			<fileset dir="${build-dir}"/>
		</jar>
		<signjar jar="${signed-jar-file}" 
			alias="${signer-alias}" keypass="${keypass}" 
			storepass="${storepass}"/>
	</target>

	<target name="clean">
		<delete dir="${build-dir}"/>
		<delete file="${unsigned-jar-file}"/>
		<delete file="${signed-jar-file}"/>
	</target>

</project>
