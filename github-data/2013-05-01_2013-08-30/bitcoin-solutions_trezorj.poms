<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>uk.co.bitcoin-solutions</groupId>
  <artifactId>trezorj-parent</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Trezorj Parent</name>
  <description>Trezor is a Java library providing a simple and consistent API for interacting with a diverse set of
    Trezor hardware implementations.
  </description>

  <properties>
    <!-- Source encoding -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <!-- Library versions -->
    <slf4j.version>1.7.2</slf4j.version>
  </properties>

  <url>http://github.com/bitcoin-solutions/trezorj</url>
  <inceptionYear>2013</inceptionYear>

  <organization>
    <name>Bitcoin Solutions Ltd</name>
    <url>http://bitcoin-solutions.co.uk</url>
  </organization>

  <developers>
    <developer>
      <name>Gary Rowe</name>
      <email>gary.rowe@bitcoin-solutions.co.uk</email>
    </developer>
    <developer>
      <name>Jim Burton</name>
      <email>jim.burton@bitcoin-solutions.co.uk</email>
    </developer>
  </developers>

  <licenses>
    <license>
      <name>MIT</name>
      <url>http://www.opensource.org/licenses/mit-license.php</url>
      <distribution>repo</distribution>
      <comments>All source code is under the MIT license.</comments>
    </license>
  </licenses>

  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/bitcoin-solutions/trezorj/issues</url>
  </issueManagement>

  <repositories>
    <repository>
      <id>bitcoinj-releases</id>
      <name>Bitcoinj Releases</name>
      <url>http://distribution.bitcoinj.googlecode.com/git/releases</url>
      <releases />
    </repository>
  </repositories>

  <distributionManagement>
    <snapshotRepository>
      <id>sonatype-nexus-snapshots</id>
      <name>Sonatype Nexus Snapshots</name>
      <url>http://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <repository>
      <id>sonatype-nexus-staging</id>
      <name>Nexus Release Repository</name>
      <url>http://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
    <downloadUrl>https://oss.sonatype.org/content/groups/public/uk/co/bitcoin-solutions</downloadUrl>
  </distributionManagement>

  <scm>
    <connection>scm:git:git@github.com:bitcoin-solutions/trezorj.git</connection>
    <developerConnection>scm:git:git@github.com:bitcoin-solutions/trezorj.git</developerConnection>
    <url>git@github.com:bitcoin-solutions/trezorj.git</url>
    <tag>HEAD</tag>
  </scm>

  <modules>
    <module>trezorj-core</module>
    <module>trezorj-examples</module>
  </modules>

  <profiles>
    <profile>
      <id>release-sign-artifacts</id>
      <activation>
        <property>
          <name>performRelease</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.4</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <plugins>
      <!-- Ensure compilation is done under Java 6 in all environments -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
          <showDeprecation>true</showDeprecation>
          <showWarnings>true</showWarnings>
        </configuration>
      </plugin>
      <!-- Generates a source code JAR during package -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>2.2.1</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- Generates a Javadoc JAR during package -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.9.1</version>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- For deploying to Maven Central -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>2.4.1</version>
        <configuration>
          <autoVersionSubmodules>true</autoVersionSubmodules>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <!-- Provide defaults for all modules to use -->
  <dependencyManagement>
    <dependencies>

      <!-- Logging is through SLF4J -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>

      <!-- Trezorj consumers are expected to provide their own SLF4J adapters
           such as logback, slf4j-log4j12, slf4j-jcl and so on
           The SLF4J Simple is just for console logging for the tests
           Logback is used specifically in the /examples modules since they are external
           See http://www.slf4j.org/faq.html -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-simple</artifactId>
        <version>${slf4j.version}</version>
        <scope>test</scope>
        <optional>true</optional>
      </dependency>

      <!-- Google Guava for code utilities -->
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>13.0.1</version>
      </dependency>

      <!-- Findbugs annotations -->
      <dependency>
        <groupId>com.google.code.findbugs</groupId>
        <artifactId>jsr305</artifactId>
        <version>1.3.9</version>
      </dependency>

      <!-- Java HID API for USB -->
      <dependency>
        <groupId>com.codeminders</groupId>
        <artifactId>hidapi</artifactId>
        <version>1.1</version>
      </dependency>

      <!-- Bitcoinj for Bitcoin operations -->
      <dependency>
        <groupId>com.google</groupId>
        <artifactId>bitcoinj</artifactId>
        <version>0.10</version>
      </dependency>

      <!-- Testing -->

      <!-- JUnit for testing -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.11</version>
        <scope>test</scope>
      </dependency>

      <!-- FEST for fluent test assertions -->
      <dependency>
        <groupId>org.easytesting</groupId>
        <artifactId>fest-assert-core</artifactId>
        <version>2.0M10</version>
        <scope>test</scope>
      </dependency>

      <!-- Mockito for mocking -->
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>1.8.5</version>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <!-- All modules will have these dependencies -->
  <dependencies>

    <!-- All logging is through SLF4J -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>

    <!-- Google Guava for code utilities -->
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>

    <!-- Findbugs annotations -->
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
    </dependency>

    <!-- Java HID API for USB -->
    <dependency>
      <groupId>com.codeminders</groupId>
      <artifactId>hidapi</artifactId>
    </dependency>

    <!-- Bitcoinj for Bitcoin operations -->
    <dependency>
      <groupId>com.google</groupId>
      <artifactId>bitcoinj</artifactId>
    </dependency>

    <!-- Testing -->

    <!-- SLF4J simple for logging test output -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- JUnit for testing -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>

    <!-- FEST for fluent test assertions -->
    <dependency>
      <groupId>org.easytesting</groupId>
      <artifactId>fest-assert-core</artifactId>
    </dependency>

    <!-- Mockito for mocking -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
    </dependency>

  </dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>uk.co.bitcoin-solutions</groupId>
    <artifactId>trezorj-parent</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>

  <artifactId>trezorj-core</artifactId>

  <name>Trezorj Core</name>
  <description>Core functionality used by all other modules.</description>

  <!-- To active this build as 'mvn -DupdateProtobuf=true clean compile' -->
  <profiles>
    <profile>
      <id>update-protobuf</id>
      <activation>
        <property>
          <name>updateProtobuf</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>compile-protoc</id>
                <phase>generate-sources</phase>
                <configuration>
                  <tasks>
                    <path id="proto.path">
                      <fileset dir="src/main/protobuf">
                        <include name="**/*.proto"/>
                      </fileset>
                    </path>
                    <pathconvert pathsep=" " property="proto.files" refid="proto.path"/>
                    <exec executable="/usr/local/bin/protoc" failonerror="true">
                      <arg value="-I=${project.basedir}/src/main/protobuf"/>
                      <arg value="--java_out=${project.basedir}/src/main/java"/>
                      <arg line="${proto.files}"/>
                    </exec>
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

        </plugins>
      </build>
    </profile>
  </profiles>

  <build>

    <plugins>

      <!-- Use the Enforcer to verify build integrity -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>1.2</version>
        <executions>
          <execution>
            <id>enforce</id>
            <phase>verify</phase>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <digestRule implementation="uk.co.froot.maven.enforcer.DigestRule">

                  <!-- Create a snapshot to build the list of URNs below -->
                  <buildSnapshot>true</buildSnapshot>

                  <!-- List of required hashes -->
                  <!-- Format is URN of groupId:artifactId:version:type:classifier:scope:hash -->
                  <!-- classifier is "null" if not present -->
                  <urns>

                    <urn>com.codeminders:hidapi:1.1:jar:null:compile:65b153b94d8e12b5be1c305f477e2f21c3ec1bb2</urn>
                    <urn>com.google.code.findbugs:jsr305:1.3.9:jar:null:compile:40719ea6961c0cb6afaeb6a921eaa1f6afd4cfdf</urn>
                    <urn>com.google.guava:guava:13.0.1:jar:null:compile:0d6f22b1e60a2f1ef99e22c9f5fde270b2088365</urn>
                    <urn>com.google.protobuf:protobuf-java:2.5.0:jar:null:compile:a10732c76bfacdbd633a7eb0f7968b1059a65dfa</urn>
                    <urn>com.lambdaworks:scrypt:1.3.3:jar:null:compile:06d6813de41e177189e1722717979b4fb5454b1d</urn>
                    <urn>com.madgag:sc-light-jdk15on:1.47.0.2:jar:null:compile:d5c98671cc97fa0d928be1c7eb5edd3fb95d3234</urn>
                    <urn>io.netty:netty:3.6.3.Final:jar:null:compile:1eebfd2f79dd72c44d09d9917c549c60322462b8</urn>
                    <urn>junit:junit:4.11:jar:null:test:4e031bb61df09069aeb2bffb4019e7a5034a4ee0</urn>
                    <urn>net.jcip:jcip-annotations:1.0:jar:null:compile:afba4942caaeaf46aab0b976afd57cc7c181467e</urn>
                    <urn>org.apache.maven.plugins:maven-clean-plugin:2.4.1:maven-plugin:null:runtime:c3ad1d9e5ee3daeac15f8e18e987a214bbaa343a</urn>
                    <urn>org.apache.maven.plugins:maven-compiler-plugin:3.1:maven-plugin:null:runtime:9977a8d04e75609cf01badc4eb6a9c7198c4c5ea</urn>
                    <urn>org.apache.maven.plugins:maven-deploy-plugin:2.5:maven-plugin:null:runtime:5965038c8d7bf2585e63fa2d82eab121f38d67c3</urn>
                    <urn>org.apache.maven.plugins:maven-enforcer-plugin:1.2:maven-plugin:null:runtime:6b755a9a0d618f8f57c0b5c4a0737a012e710a46</urn>
                    <urn>org.apache.maven.plugins:maven-install-plugin:2.3.1:maven-plugin:null:runtime:fe692c15450a75d330510bffe9491264918f58e0</urn>
                    <urn>org.apache.maven.plugins:maven-jar-plugin:2.3.1:maven-plugin:null:runtime:d68ebba6196c6382a496660e3bb477474516f915</urn>
                    <urn>org.apache.maven.plugins:maven-javadoc-plugin:2.9.1:maven-plugin:null:runtime:95ea7abf00e37e08bd927bf7e448c1e7fe4c6cb9</urn>
                    <urn>org.apache.maven.plugins:maven-release-plugin:2.4.1:maven-plugin:null:runtime:983dba8fec0ea4df0788a2828f35eb6d5a870b7d</urn>
                    <urn>org.apache.maven.plugins:maven-resources-plugin:2.4.3:maven-plugin:null:runtime:ac5c1dd6efa6a32b5c2b2628b9afaa473dcff8ad</urn>
                    <urn>org.apache.maven.plugins:maven-site-plugin:2.0.1:maven-plugin:null:runtime:fb2e82e6983c19c8ce8aeeadcd529acee57bd6c1</urn>
                    <urn>org.apache.maven.plugins:maven-source-plugin:2.2.1:maven-plugin:null:runtime:7b6e93e5e6403323cd70a18829a33f6cb4c0388d</urn>
                    <urn>org.apache.maven.plugins:maven-surefire-plugin:2.7.2:maven-plugin:null:runtime:93239ca0f39c30cd950bfb4f0ed859519a73c68c</urn>
                    <urn>org.easytesting:fest-assert-core:2.0M10:jar:null:test:cb7c91cf614901928ae405f19d9bcdedf82781db</urn>
                    <urn>org.easytesting:fest-util:1.2.5:jar:null:test:c4a8d7305b23b8d043be12c979813b096df11f44</urn>
                    <urn>org.hamcrest:hamcrest-core:1.3:jar:null:compile:42a25dc3219429f0e5d060061f71acb49bf010a0</urn>
                    <urn>org.mockito:mockito-core:1.8.5:jar:null:compile:7904ce54a754031a32ac78ec7103f484f81b56c6</urn>
                    <urn>org.objenesis:objenesis:1.0:jar:null:compile:9b473564e792c2bdf1449da1f0b1b5bff9805704</urn>
                    <urn>org.slf4j:slf4j-api:1.7.2:jar:null:compile:0081d61b7f33ebeab314e07de0cc596f8e858d97</urn>

                    <!-- A check for the rules themselves -->
                    <urn>uk.co.froot.maven.enforcer:digest-enforcer-rules:0.0.1:jar:null:runtime:16a9e04f3fe4bb143c42782d07d5faf65b32106f</urn>

                  </urns>

                </digestRule>
              </rules>
            </configuration>
          </execution>
        </executions>

        <!-- Ensure we download the enforcer rules -->
        <dependencies>
          <dependency>
            <groupId>uk.co.froot.maven.enforcer</groupId>
            <artifactId>digest-enforcer-rules</artifactId>
            <version>0.0.1</version>
          </dependency>
        </dependencies>

      </plugin>

    </plugins>

  </build>

  <!-- Parent provides default configuration for most dependencies -->
  <dependencies>

    <!-- Google Protocol Buffers support
         This must match Bitcoinj to allow wider compatibility in higher level
         consumers such as MultiBit
    -->
    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java</artifactId>
      <version>2.4.1</version>
    </dependency>

  </dependencies>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>uk.co.bitcoin-solutions</groupId>
    <artifactId>trezorj-parent</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>

  <artifactId>trezorj-examples</artifactId>

  <name>Trezorj Examples</name>
  <description>Provides a set of examples that demonstrate how to use Trezorj in client applications</description>

  <!-- Parent provides default configuration for dependencies -->
  <dependencies>

    <!-- Trezorj Core -->
    <dependency>
      <groupId>uk.co.bitcoin-solutions</groupId>
      <artifactId>trezorj-core</artifactId>
      <version>0.0.1-SNAPSHOT</version>
    </dependency>

    <!-- SLF4J simple for logging example output -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <scope>compile</scope>
    </dependency>

  </dependencies>

</project>
