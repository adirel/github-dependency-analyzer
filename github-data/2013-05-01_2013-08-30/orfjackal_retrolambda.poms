<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>net.orfjackal.retrolambda</groupId>
        <artifactId>parent</artifactId>
        <version>1.1.5-SNAPSHOT</version>
        <relativePath>../parent/pom.xml</relativePath>
    </parent>

    <artifactId>end-to-end-tests</artifactId>
    <packaging>jar</packaging>

    <build>
        <plugins>

            <!-- Don't deploy the tests to Maven Central -->

            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

            <!-- Run tests using Java 7 (but compile with Java 8) -->

            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Process our byte codes to make them run on Java 7 -->

            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-retrolambda</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>net.orfjackal.retrolambda</groupId>
                                    <artifactId>retrolambda</artifactId>
                                    <version>${project.version}</version>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}</outputDirectory>
                                    <destFileName>retrolambda.jar</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>retrolambda-classes</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <property name="compile_classpath" refid="maven.compile.classpath"/>
                                <exec executable="${env.JAVA8_HOME}/bin/java" failonerror="true">
                                    <arg value="-Dretrolambda.bytecodeVersion=${testBytecodeVersion}"/>
                                    <arg value="-Dretrolambda.inputDir=${project.build.outputDirectory}"/>
                                    <arg value="-Dretrolambda.classpath=${compile_classpath}"/>
                                    <arg value="-javaagent:${project.build.directory}/retrolambda.jar"/>
                                    <arg value="-jar"/>
                                    <arg value="${project.build.directory}/retrolambda.jar"/>
                                </exec>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>retrolambda-test-classes</id>
                        <phase>process-test-classes</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <property name="test_classpath" refid="maven.test.classpath"/>
                                <exec executable="${env.JAVA8_HOME}/bin/java" failonerror="true">
                                    <arg value="-Dretrolambda.bytecodeVersion=${testBytecodeVersion}"/>
                                    <arg value="-Dretrolambda.inputDir=${project.build.testOutputDirectory}"/>
                                    <arg value="-Dretrolambda.classpath=${test_classpath}"/>
                                    <arg value="-javaagent:${project.build.directory}/retrolambda.jar"/>
                                    <arg value="-jar"/>
                                    <arg value="${project.build.directory}/retrolambda.jar"/>
                                </exec>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <profiles>
        <profile>
            <id>eclipse</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>3.1</version>
                        <configuration>
                            <compilerId>eclipse</compilerId>
                            <!-- TODO: check compatibility with the Eclipse JDT compiler (update release scripts) -->
                            <!-- FIXME: we are unable to tell the Eclipse compiler to use Java 1.8
                                It just fails with the warning
                                "Unknown version '1.8', no version setting will be given to the compiler."
                                because the plugin is only aware of Java 7 and below.
                                Also we failed at giving custom compiler arguments, after which we
                                might have been able to make it use a newer Eclipse compiler) -->
                            <!--
                            <compilerArguments>
                                <org.eclipse.jdt.core.compiler.source>1.5</org.eclipse.jdt.core.compiler.source>
                                <org.eclipse.jdt.core.compiler.codegen.targetPlatform>1.5</org.eclipse.jdt.core.compiler.codegen.targetPlatform>
                            </compilerArguments>
                            -->
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>org.codehaus.plexus</groupId>
                                <artifactId>plexus-compiler-eclipse</artifactId>
                                <version>2.3</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.sonatype.oss</groupId>
        <artifactId>oss-parent</artifactId>
        <version>7</version>
        <relativePath/>
    </parent>

    <groupId>net.orfjackal.retrolambda</groupId>
    <artifactId>parent</artifactId>
    <version>1.1.5-SNAPSHOT</version>
    <packaging>pom</packaging>

    <description>Backport of Java 8 lambda expressions to Java 7</description>
    <url>https://github.com/orfjackal/retrolambda</url>
    <inceptionYear>2013</inceptionYear>

    <licenses>
        <license>
            <name>Apache License 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>orfjackal</id>
            <name>Esko Luontola</name>
            <url>http://www.orfjackal.net/</url>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:git://github.com/orfjackal/retrolambda.git</connection>
        <url>https://github.com/orfjackal/retrolambda</url>
    </scm>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <minimumMavenVersion>3.0.3</minimumMavenVersion>
        <compileJavaHome>${env.JAVA8_HOME}</compileJavaHome>
        <testJavaHome>${env.JAVA7_HOME}</testJavaHome>
        <testBytecodeVersion>51</testBytecodeVersion>
    </properties>

    <prerequisites>
        <maven>${minimumMavenVersion}</maven>
    </prerequisites>

    <dependencies>

        <!-- Testing -->

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <dependencyManagement>
        <dependencies>

            <!-- Bytecode Manipulation -->

            <dependency>
                <groupId>org.ow2.asm</groupId>
                <artifactId>asm-debug-all</artifactId>
                <version>5.0_BETA</version>
            </dependency>

            <!-- Testing -->

            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.11</version>
                <exclusions>
                    <!-- Avoid diverging hamcrest-library and hamcrest-core versions -->
                    <exclusion>
                        <groupId>org.hamcrest</groupId>
                        <artifactId>hamcrest-core</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-library</artifactId>
                <version>1.3</version>
            </dependency>

            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>1.9.5</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>

            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <fork>true</fork>
                    <executable>${compileJavaHome}/bin/javac</executable>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <includes>
                        <include>**/*Test.class</include>
                    </includes>
                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
                    <jvm>${compileJavaHome}/bin/java</jvm>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <includes>
                        <include>**/*Test.class</include>
                    </includes>
                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
                    <jvm>${testJavaHome}/bin/java</jvm>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <!-- Overrides the version from oss-parent -->
                <version>2.2</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <!-- Overrides the version from oss-parent -->
                <version>2.9.1</version>
                <configuration>
                    <javadocExecutable>${compileJavaHome}/bin/javadoc</javadocExecutable>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-release-plugin</artifactId>
                <!-- Overrides the version from oss-parent -->
                <version>2.4.1</version>
            </plugin>

            <plugin>
                <artifactId>maven-enforcer-plugin</artifactId>
                <!-- Overrides the version from oss-parent -->
                <version>1.3.1</version>
                <executions>
                    <execution>
                        <!-- XXX: Using a different ID than in oss-parent to avoid overriding its checks by accident. See https://issues.sonatype.org/browse/OSSRH-2004 -->
                        <id>enforce-maven-3</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>[${minimumMavenVersion},)</version>
                                </requireMavenVersion>
                            </rules>
                        </configuration>
                    </execution>
                    <execution>
                        <id>enforce-multiple-java-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireFilesExist>
                                    <message>Java installation directory not found: ${compileJavaHome}</message>
                                    <files>
                                        <file>${compileJavaHome}</file>
                                    </files>
                                </requireFilesExist>
                                <requireFilesExist>
                                    <message>Java installation directory not found: ${testJavaHome}</message>
                                    <files>
                                        <file>${testJavaHome}</file>
                                    </files>
                                </requireFilesExist>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <!-- XXX: workaround for an issue with maven-shade-plugin
                             There appears to be some stale state from previous executions of the Shade plugin,
                             which manifest themselves as "We have a duplicate" warnings on build and also as
                             some classes not being updated on build. -->
                        <id>shade-plugin-workaround</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <delete file="${project.build.directory}/${project.build.finalName}.${project.packaging}"/>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
        <pluginManagement>
            <plugins>

                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>2.5</version>
                </plugin>

                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.1</version>
                </plugin>

                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.6</version>
                </plugin>

                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>2.4</version>
                </plugin>

                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.4</version>
                </plugin>

                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.7</version>
                </plugin>

                <plugin>
                    <artifactId>maven-plugin-plugin</artifactId>
                    <version>3.1</version>
                </plugin>

                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.1</version>
                </plugin>

                <plugin>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>2.1</version>
                    <configuration>
                        <!-- XXX: we cannot relocate the classes or minimize the JAR, because the shade plugin doesn't yet support Java 8 -->
                        <!--<minimizeJar>true</minimizeJar>-->
                        <!-- Keep the generated POM file out of the base directory -->
                        <dependencyReducedPomLocation>
                            ${project.build.directory}/dependency-reduced-pom.xml
                        </dependencyReducedPomLocation>
                    </configuration>
                </plugin>

                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.12.3</version>
                </plugin>

                <plugin>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>2.12.3</version>
                </plugin>

                <plugin>
                    <artifactId>maven-invoker-plugin</artifactId>
                    <version>1.7</version>
                </plugin>

                <plugin>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>2.5.1</version>
                </plugin>

                <plugin>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>1.7</version>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>1.3.1</version>
                </plugin>

                <plugin>
                    <groupId>org.sonatype.plugins</groupId>
                    <artifactId>nexus-staging-maven-plugin</artifactId>
                    <version>1.4.4</version>
                    <configuration>
                        <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                        <serverId>ossrh-releases-net.orfjackal</serverId>
                        <stagingProfileId>9e9bbc30f020cf</stagingProfileId>
                    </configuration>
                </plugin>

            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <id>java6</id>
            <properties>
                <testJavaHome>${env.JAVA6_HOME}</testJavaHome>
                <testBytecodeVersion>50</testBytecodeVersion>
            </properties>
        </profile>
        <profile>
            <id>java5</id>
            <properties>
                <testJavaHome>${env.JAVA5_HOME}</testJavaHome>
                <testBytecodeVersion>49</testBytecodeVersion>
            </properties>
        </profile>
    </profiles>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>net.orfjackal.retrolambda</groupId>
        <artifactId>parent</artifactId>
        <version>1.1.5-SNAPSHOT</version>
        <relativePath>parent/pom.xml</relativePath>
    </parent>

    <artifactId>project</artifactId>
    <packaging>pom</packaging>

    <name>Retrolambda</name>

    <modules>
        <module>parent</module>
        <module>retrolambda</module>
        <module>end-to-end-tests</module>
    </modules>

    <build>
        <plugins>

            <!-- Don't deploy the project's aggregate module to Maven Central -->

            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>net.orfjackal.retrolambda</groupId>
        <artifactId>parent</artifactId>
        <version>1.1.5-SNAPSHOT</version>
        <relativePath>../parent/pom.xml</relativePath>
    </parent>

    <artifactId>retrolambda</artifactId>
    <packaging>jar</packaging>

    <dependencies>

        <dependency>
            <groupId>org.ow2.asm</groupId>
            <artifactId>asm-debug-all</artifactId>
        </dependency>

    </dependencies>

    <build>
        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>net.orfjackal.retrolambda.Main</mainClass>
                        </manifest>
                        <manifestEntries>
                            <Premain-Class>net.orfjackal.retrolambda.PreMain</Premain-Class>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>

            <!-- Create an uber jar containing all dependencies -->
            <!-- XXX: we cannot relocate the classes or minimize the JAR, because the shade plugin doesn't yet support Java 8 -->

            <plugin>
                <artifactId>maven-shade-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>
