buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.1-SNAPSHOT'
    }
}

configurations {
    deployJars
}

apply plugin: 'maven'
apply plugin: 'mcpc'

minecraft {
    version = '1.7.2'
    mcpVersion = '9.01-pre'
    mainClass = 'cpw.mods.fml.relauncher.ServerLaunchWrapper'
    tweakClass = 'cpw.mods.fml.common.launcher.FMLTweaker'
    installerVersion = "1.4"
    subprojects {
        repositories {
            mavenLocal()
            maven {
                name = "sonatype"
                url = "https://oss.sonatype.org/content/repositories/snapshots/"
            }
            flatDir {
                name "fileRepo"
                dirs "repo"
            }
        }
    }
}

group = 'net.minecraftforge'
version = "1.7.2-R0.4-forge1033"

jenkins {
    job = 'MCPC'
}

launch4j {
    jreMinVersion = '1.6.0'
}

def getBuild() {
    // check for jenkins build and if not found, return default
    ext.env = System.getenv()
    if(env.BUILD_NUMBER) {
        return "-$env.BUILD_NUMBER"
    } else {
        return "-B0"
    }
}

tasks.packageUniversal.manifest { 
    attributes([
    'Implementation-Vendor': 'MCPC',
    'Implementation-Title': 'MCPC Plus',
    'Implementation-Version': 'git-MCPC-Plus-'+project.version+getBuild(),
    'Forge-Version': '10.12.0.1033',
    'Specification-Vendor': 'Bukkit Team',
    'Specification-Title': 'Bukkit',
    'Specification-Version': '1.7.2-R0.4-SNAPSHOT'
    ])
}

// TODO CHANGE THIS POM AND STUFF

uploadArchives {
    repositories {
        add getProject().repositories.mavenLocal()
    }
    repositories.mavenDeployer {
        configuration = configurations.deployJars

        if (project.hasProperty("filesmaven")) {
            logger.info('Publishing to files server')
            repository(url: project.filesmaven.url) {
                authentication(userName: project.filesmaven.username, privateKey: project.filesmaven.key)
            }
        } else {
            logger.info('Publishing to repo folder')
            repository(url: 'file://localhost/' + project.file('repo').getAbsolutePath())
        }

        pom {
            groupId = project.group
            version = project.version
            artifactId = project.archivesBaseName
        }
        pom.project {
            name project.archivesBaseName
            packaging 'jar'
            description 'Minecraft Forge API'
            url 'https://github.com/MinecraftForge/MinecraftForge'

            scm {
                url 'https://github.com/MinecraftForge/MinecraftForge'
                connection 'scm:git:git://github.com/MinecraftForge/MinecraftForge.git'
                developerConnection 'scm:git:git@github.com:MinecraftForge/MinecraftForge.git'
            }

            issueManagement {
                system 'github'
                url 'https://github.com/MinecraftForge/MinecraftForge/issues'
            }

            licenses {
                license {
                    name 'Forge Public License'
                    url 'https://raw.github.com/MinecraftForge/MinecraftForge/master/MinecraftForge-License.txt'
                    distribution 'repo'
                }
            }

            developers {
                developer {
                    id 'cpw'
                    name 'cpw'
                    roles { role 'developer' }
                }
                developer {
                    id 'LexManos'
                    name 'Lex Manos'
                    roles { role 'developer' }
                }
                developer {
                    id 'AbrarSyed'
                    name 'Abrar Syed'
                    roles { role 'contributor' }
                }
            }
        }
    }
}
