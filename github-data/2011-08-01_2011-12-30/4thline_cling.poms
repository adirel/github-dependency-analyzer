<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.fourthline.cling</groupId>
        <artifactId>cling</artifactId>
        <version>2.0-SNAPSHOT</version>
    </parent>

    <name>Cling Bridge</name>
    <artifactId>cling-bridge</artifactId>
    <packaging>war</packaging>

    <build>
        <plugins>

            <!-- Build a JAR as well as a WAR -->
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <attachClasses>true</attachClasses>
                </configuration>
            </plugin>

            <!-- Support 'mvn jetty:run' out of the box -->
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jetty.version}</version>
            </plugin>

            <!-- Unit tests -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <suiteXmlFiles>
                        <suiteXmlFile>src/test/AllTests.tng.xml</suiteXmlFile>
                    </suiteXmlFiles>
                </configuration>
            </plugin>

        </plugins>
    </build>

    <dependencies>

        <dependency>
            <groupId>org.fourthline.cling</groupId>
            <artifactId>cling-core</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.seamless</groupId>
            <artifactId>seamless-util</artifactId>
            <version>${seamless.version}</version>
        </dependency>

        <dependency>
            <groupId>org.seamless</groupId>
            <artifactId>seamless-http</artifactId>
            <version>${seamless.version}</version>
        </dependency>

        <dependency>
            <groupId>org.seamless</groupId>
            <artifactId>seamless-xml</artifactId>
            <version>${seamless.version}</version>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>${servlet.api.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jaxrs</artifactId>
            <version>${resteasy.version}</version>
            <!-- RESTEasy dependencies are broken, the author only knows <scope>provided</scope> -->
            <exclusions>
                <!-- Sure, why not have a transitive dependency on an IMPLEMENTATION of this crap -->
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-simple</artifactId>
                </exclusion>
                <!-- No version, now I get two of these because Jetty has a different one -->
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
                <!-- Sure, why not depend on BOTH versions of the Apache http crap -->
                <exclusion>
                    <groupId>org.apache.httpcomponents</groupId>
                    <artifactId>httpclient</artifactId>
                </exclusion>
                <!-- Eh, what? -->
                <exclusion>
                    <groupId>net.jcip</groupId>
                    <artifactId>jcip-annotations</artifactId>
                </exclusion>
                <!-- DataSource, great idea -->
                <exclusion>
                    <groupId>javax.activation</groupId>
                    <artifactId>activation</artifactId>
                </exclusion>
                <!-- Yes dear author, it should be "provided" in an EE environment -->
                <exclusion>
                    <groupId>javax.annotation</groupId>
                    <artifactId>jsr250-api</artifactId>
                </exclusion>
                <!-- And of course there is a hard dependency on this optional feature
                <exclusion>
                    <groupId>org.scannotation</groupId>
                    <artifactId>scannotation</artifactId>
                </exclusion>
                -->
                <!-- But we can at least drop the 500kb for this, all just to scan for two annotations -->
                <exclusion>
                    <groupId>javassist</groupId>
                    <artifactId>javassist</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
            <version>${slf4j.bridge.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.bridge.version}</version>
        </dependency>

    </dependencies>

</project><?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.fourthline.cling</groupId>
        <artifactId>cling</artifactId>
        <version>2.0-SNAPSHOT</version>
    </parent>

    <name>Cling Core</name>
    <artifactId>cling-core</artifactId>
    <packaging>jar</packaging>

    <build>
        <plugins>

            <!-- Unit tests -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <suiteXmlFiles>
                        <suiteXmlFile>src/test/AllTests.tng.xml</suiteXmlFile>
                    </suiteXmlFiles>
                </configuration>
            </plugin>

            <!-- Source JARs -->
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Prepare Javadoc for distribution packaging -->
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <executions>
                    <execution>
                        <id>package-javadoc</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>javadoc</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Generate documentation for distribution packaging -->
            <plugin>
                <groupId>org.fourthline.lemma</groupId>
                <artifactId>lemma-maven-plugin</artifactId>
                <configuration>
                    <!-- The directories containing Java (test) sources for citation -->
                    <sourceDirectories>
                        <sourceDirectory>src/main/java</sourceDirectory>
                        <sourceDirectory>src/test/java</sourceDirectory>
                        <sourceDirectory>../demo/android/browser/src/android</sourceDirectory>
                        <sourceDirectory>../demo/android/browser/src/main/java</sourceDirectory>
                        <sourceDirectory>../demo/android/light/src/main/java</sourceDirectory>
                    </sourceDirectories>
                </configuration>
                <executions>
                    <execution>
                        <id>prepare-package-manual</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>manual</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Website lifecycle -->
            <plugin>
                <artifactId>maven-site-plugin</artifactId>
                <configuration>
                    <reportPlugins>
                        <!-- THESE IGNORE GLOBAL PLUGIN MANAGEMENT! -->

                        <!-- Build the manual for 'site' lifecycle -->
                        <plugin>
                            <groupId>org.fourthline.lemma</groupId>
                            <artifactId>lemma-maven-plugin</artifactId>
                            <reportSets>
                                <reportSet>
                                    <reports>
                                        <report>site-manual</report>
                                    </reports>
                                </reportSet>
                            </reportSets>
                        </plugin>

                        <!-- Javadoc on the website -->
                        <plugin>
                            <artifactId>maven-javadoc-plugin</artifactId>
                            <reports>
                                <report>javadoc</report>
                            </reports>
                            <configuration>
                                <quiet>true</quiet>
                                <detectOfflineLinks>false</detectOfflineLinks>
                            </configuration>
                        </plugin>

                        <!-- We want cross-referenced source code -->
                        <plugin>
                            <artifactId>maven-jxr-plugin</artifactId>
                        </plugin>

                    </reportPlugins>
                </configuration>
            </plugin>

        </plugins>
    </build>

    <dependencies>

        <dependency>
            <groupId>org.seamless</groupId>
            <artifactId>seamless-util</artifactId>
            <version>${seamless.version}</version>
        </dependency>
        <dependency>
            <groupId>org.seamless</groupId>
            <artifactId>seamless-http</artifactId>
            <version>${seamless.version}</version>
        </dependency>
        <dependency>
            <groupId>org.seamless</groupId>
            <artifactId>seamless-xml</artifactId>
            <version>${seamless.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
            <version>${apache.httpcomponents.httpcore.version}</version>
            <scope>compile</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${apache.httpcomponents.httpclient.version}</version>
            <scope>compile</scope>
            <optional>true</optional>
            <exclusions>
                <!-- Don't need these to compile/test Cling -->
                <exclusion>
                    <groupId>commons-codec</groupId>
                    <artifactId>commons-codec</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
            <version>${jetty.version}</version>
            <scope>compile</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-servlet</artifactId>
            <version>${jetty.version}</version>
            <scope>compile</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-client</artifactId>
            <version>${jetty.version}</version>
            <scope>compile</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>com.google.android</groupId>
            <artifactId>android</artifactId>
            <version>${android.version}</version>
            <scope>compile</scope>
            <optional>true</optional>
            <exclusions>
                <!-- Of course, kxml2 is actually used by Android at runtime -->
                <exclusion>
                    <groupId>xpp3</groupId>
                    <artifactId>xpp3</artifactId>
                </exclusion>
                <!-- We depend a newer non-buggy version, httpclient is unusable on Android! -->
                <exclusion>
                    <groupId>org.apache.httpcomponents</groupId>
                    <artifactId>httpclient</artifactId>
                </exclusion>
                <!-- Don't need these to compile Cling -->
                <exclusion>
                    <groupId>org.khronos</groupId>
                    <artifactId>opengl-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.json</groupId>
                    <artifactId>json</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>xerces</groupId>
                    <artifactId>xmlParserAPIs</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <version>${cdi.api.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>net.sf.kxml</groupId>
            <artifactId>kxml2</artifactId>
            <version>${kxml.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.fourthline.cling</groupId>
        <artifactId>cling-demo-android</artifactId>
        <version>2.0-SNAPSHOT</version>
    </parent>

	<name>Cling Demo Android Browser</name>
	<artifactId>cling-demo-android-browser</artifactId>
    <packaging>apk</packaging>

    <build>
		<plugins>
            <plugin>
                <groupId>com.jayway.maven.plugins.android.generation2</groupId>
                <artifactId>android-maven-plugin</artifactId>
                <version>${android.maven.plugin.version}</version>
            </plugin>
        </plugins>
    </build>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.fourthline.cling</groupId>
        <artifactId>cling-demo-android</artifactId>
        <version>2.0-SNAPSHOT</version>
    </parent>

	<name>Cling Demo Android Light</name>
	<artifactId>cling-demo-android-light</artifactId>
    <packaging>apk</packaging>

    <build>
		<plugins>
            <plugin>
                <groupId>com.jayway.maven.plugins.android.generation2</groupId>
                <artifactId>android-maven-plugin</artifactId>
                <version>${android.maven.plugin.version}</version>
            </plugin>
        </plugins>
    </build>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.fourthline.cling</groupId>
        <artifactId>cling-demo</artifactId>
        <version>2.0-SNAPSHOT</version>
    </parent>

	<name>Cling Demo Android</name>
	<artifactId>cling-demo-android</artifactId>
	<packaging>pom</packaging>

	<modules>
		<module>browser</module>
        <module>light</module>
	</modules>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.jayway.maven.plugins.android.generation2</groupId>
                    <artifactId>android-maven-plugin</artifactId>
                    <version>${android.maven.plugin.version}</version>
                    <extensions>true</extensions>
                    <configuration>
                        <sdk>
                            <!-- Don't forget to set your ANDROID_HOME environment variable to your SDK directory! -->
                            <path>${env.ANDROID_HOME}</path>
                            <platform>15</platform>
                        </sdk>
                        <androidManifestFile>${project.basedir}/src/android/AndroidManifest.xml</androidManifestFile>
                        <resourceDirectory>${project.basedir}/src/android/res</resourceDirectory>
                        <assetsDirectory>${project.basedir}/src/android/assets</assetsDirectory>
                        <nativeLibrariesDirectory>${project.basedir}/src/android/native</nativeLibrariesDirectory>
                        <resourceOverlayDirectory>${project.basedir}/src/android/overlay</resourceOverlayDirectory>
                        <extractDuplicates>true</extractDuplicates>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <dependencies>

        <dependency>
            <groupId>org.fourthline.cling</groupId>
            <artifactId>cling-core</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.seamless</groupId>
            <artifactId>seamless-android</artifactId>
            <version>${seamless.version}</version>
            <!-- Not needed for FixedAndroidLoggingHandler -->
            <exclusions>
                <exclusion>
                    <groupId>android.support</groupId>
                    <artifactId>compatibility-v13</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>com.google.android</groupId>
            <artifactId>android</artifactId>
            <version>${android.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- For Android we use the Jetty transport in Cling -->
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
            <version>${jetty.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-servlet</artifactId>
            <version>${jetty.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-client</artifactId>
            <version>${jetty.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

    </dependencies>

</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.fourthline.cling</groupId>
        <artifactId>cling-demo-osgi</artifactId>
        <version>2.0-SNAPSHOT</version>
    </parent>

	<name>Cling Demo OSGi Basic Device</name>
	<artifactId>cling-demo-osgi-basicdevice</artifactId>
    <packaging>bundle</packaging>

    <properties>
        <SymbolicName>org.fourthline.cling.demo.osgi.device.basic</SymbolicName>
    </properties>

    <build>
		<finalName>${SymbolicName}.${project.version}</finalName>
		<plugins>

			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
                    <!-- Eclipse wants the META-INF in root and not in target. Bad Eclipse. -->
					<manifestLocation>META-INF</manifestLocation>
					<instructions>
						<Bundle-SymbolicName>${SymbolicName}</Bundle-SymbolicName>
						<Bundle-Name>${project.name}</Bundle-Name>
						<Bundle-Activator>org.fourthline.cling.demo.osgi.device.basic.Activator</Bundle-Activator>
						<Bundle-Vendor>4th Line</Bundle-Vendor>
						<Bundle-Author>Bruce Green</Bundle-Author>
						<Bundle-Description>
                            Basic Device provides a mechanism for products that wish to use UPnP,
                            but for which there is not yet an appropriate standard
                            base device type.
                        </Bundle-Description>
						<Bundle-DocURL>http://4thline.org/projects/cling4osgi</Bundle-DocURL>
						<Import-Package>org.osgi.framework, org.osgi.service.upnp</Import-Package>
					</instructions>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<configuration>
					<filesets>
						<fileset>
							<directory>META-INF</directory>
						</fileset>
					</filesets>
				</configuration>
			</plugin>

        </plugins>
    </build>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.fourthline.cling</groupId>
        <artifactId>cling-demo-osgi</artifactId>
        <version>2.0-SNAPSHOT</version>
    </parent>

	<name>Cling Demo OSGi Lights</name>
	<artifactId>cling-demo-osgi-lights</artifactId>
	<packaging>bundle</packaging>

	<properties>
		<SymbolicName>org.fourthline.cling.demo.osgi.device.light</SymbolicName>
	</properties>

	<build>
		<finalName>${SymbolicName}.${project.version}</finalName>
		<plugins>

            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
					<!-- Eclipse wants the META-INF in root and not in target. Bad Eclipse. -->
					<manifestLocation>META-INF</manifestLocation>
					<instructions>
						<Bundle-SymbolicName>${SymbolicName}</Bundle-SymbolicName>
						<Bundle-Name>${project.name}</Bundle-Name>
						<Bundle-Activator>org.fourthline.cling.demo.osgi.device.light.Activator</Bundle-Activator>
						<Bundle-Vendor>4th Line</Bundle-Vendor>
						<Bundle-Author>Bruce Green</Bundle-Author>
						<Bundle-Description>A simple representation of a bulb or any other
							kind of light emitting device that can be switched completely on
							or off.</Bundle-Description>
						<Bundle-DocURL>http://4thline.org/projects/cling4osgi</Bundle-DocURL>
						<Import-Package>
							org.osgi.framework,
							org.osgi.service.event,
							org.osgi.service.http,
							org.osgi.service.upnp,
							org.osgi.util.tracker,
							javax.servlet,
							javax.servlet.http
						</Import-Package>
						<Export-Package>
							org.fourthline.cling.osgi.device.light.devices,
							org.fourthline.cling.osgi.device.light.model
						</Export-Package>
					</instructions>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<configuration>
					<filesets>
						<fileset>
							<directory>META-INF</directory>
						</fileset>
					</filesets>
				</configuration>
			</plugin>

		</plugins>

	</build>
    
	<dependencies>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>${servlet.api.version}</version>
		</dependency>

	</dependencies>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (C) 2013 4th Line GmbH, Switzerland
  ~
  ~ The contents of this file are subject to the terms of either the GNU
  ~ Lesser General Public License Version 2 or later ("LGPL") or the
  ~ Common Development and Distribution License Version 1 or later
  ~ ("CDDL") (collectively, the "License"). You may not use this file
  ~ except in compliance with the License. See LICENSE.txt for more
  ~ information.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.fourthline.cling</groupId>
        <artifactId>cling-demo</artifactId>
        <version>2.0-SNAPSHOT</version>
    </parent>

	<name>Cling Demo OSGi</name>
	<artifactId>cling-demo-osgi</artifactId>
	<packaging>pom</packaging>

	<modules>
		<module>basicdevice</module>
		<module>lights</module>
	</modules>

    <dependencies>
        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.core</artifactId>
            <version>${osgi.version}</version>
        </dependency>

        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.compendium</artifactId>
            <version>${osgi.version}</version>
        </dependency>
    </dependencies>

</project><?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.fourthline.cling</groupId>
        <artifactId>cling</artifactId>
        <version>2.0-SNAPSHOT</version>
    </parent>

    <name>Cling Demo</name>
    <artifactId>cling-demo</artifactId>
    <packaging>pom</packaging>

    <modules>
        <module>android</module>
        <module>osgi</module>
    </modules>

    <properties>
        <!-- This module (and its sub-modules) doesn't have a manual -->
        <lemma.manual>false</lemma.manual>
    </properties>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project><?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>cling</artifactId>
        <groupId>org.fourthline.cling</groupId>
        <version>2.0-SNAPSHOT</version>
    </parent>

    <name>Cling Distribution</name>
    <artifactId>cling-distribution</artifactId>
    <packaging>pom</packaging>

    <build>
        <plugins>

            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

            <!-- Package a "legacy" distribution ZIP file -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <id>package-distribution</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <descriptors>
                        <descriptor>src/dist/assembly.xml</descriptor>
                    </descriptors>
                    <workDirectory>target/assembly/work</workDirectory>
                    <appendAssemblyId>false</appendAssemblyId>
                    <archiveBaseDirectory>../</archiveBaseDirectory>
                    <!-- Quality software! Just ignore the warning... http://jira.codehaus.org/browse/MASSEMBLY-289 -->
                    <attach>false</attach>
                </configuration>
            </plugin>

        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>org.fourthline.cling</groupId>
            <artifactId>cling-workbench</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.fourthline.cling</groupId>
            <artifactId>cling-mediarenderer</artifactId>
            <version>${project.version}</version>
        </dependency>
    </dependencies>

</project><?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.fourthline.cling</groupId>
        <artifactId>cling</artifactId>
        <version>2.0-SNAPSHOT</version>
    </parent>

    <name>Cling MediaRenderer</name>
    <artifactId>cling-mediarenderer</artifactId>
    <packaging>jar</packaging>

    <properties>
        <!-- This module (and its sub-modules) doesn't have a manual -->
        <lemma.manual>false</lemma.manual>
    </properties>

    <build>
        <plugins>

            <!-- Package a standalone JAR with all dependencies -->
            <plugin>
                <groupId>org.dstovall</groupId>
                <artifactId>onejar-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>one-jar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <mainClass>org.fourthline.cling.mediarenderer.MediaRenderer</mainClass>
                    <attachToBuild>true</attachToBuild>
                    <classifier>standalone</classifier>
                    <filename>${project.build.finalName}-standalone.jar</filename>
                </configuration>
            </plugin>

            <!-- Build an OS X application and disk image -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>osxappbundle-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>bundle</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <mainClass>org.fourthline.cling.mediarenderer.MediaRenderer</mainClass>
                    <iconFile>${basedir}/src/main/resources/MediaRendererIcon.icns</iconFile>
                    <jvmVersion>1.6+</jvmVersion>
                    <javaApplicationStub>${basedir}/../misc/JavaApplicationStub</javaApplicationStub>
                    <vmOptions>-Djna.library.path=/opt/local/lib</vmOptions>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <suiteXmlFiles>
                        <suiteXmlFile>src/test/AllTests.tng.xml</suiteXmlFile>
                    </suiteXmlFiles>
                    <!-- Run no tests by default, see profiles -->
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>

            <!-- Website lifecycle -->
            <plugin>
                <artifactId>maven-site-plugin</artifactId>
                <configuration>
                    <reportPlugins>
                        <!-- THESE IGNORE GLOBAL PLUGIN MANAGEMENT! -->

                        <!-- Javadoc on the website -->
                        <plugin>
                            <artifactId>maven-javadoc-plugin</artifactId>
                            <reports>
                                <report>javadoc</report>
                            </reports>
                            <configuration>
                                <quiet>true</quiet>
                                <detectOfflineLinks>false</detectOfflineLinks>
                            </configuration>
                        </plugin>

                        <!-- We want cross-referenced source code -->
                        <plugin>
                            <artifactId>maven-jxr-plugin</artifactId>
                        </plugin>

                    </reportPlugins>
                </configuration>
            </plugin>

        </plugins>
    </build>

    <dependencies>

        <dependency>
            <groupId>org.fourthline.cling</groupId>
            <artifactId>cling-support</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna</artifactId>
            <version>${jna.version}</version>
        </dependency>

        <dependency>
            <groupId>com.googlecode.gstreamer-java</groupId>
            <artifactId>gstreamer-java</artifactId>
            <version>${gstreamer.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.eclipse.swt.carbon</groupId>
                    <artifactId>macosx</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.eclipse.swt.gtk.linux</groupId>
                    <artifactId>x86</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.eclipse.swt.gtk.linux</groupId>
                    <artifactId>x86_64</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

    </dependencies>

    <profiles>
        <profile>
            <id>gstreamer-test</id>
            <activation>
                <file>
                    <exists>/opt/local/lib/libgstreamer-0.10.a</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <skipTests>false</skipTests>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.fourthline.cling</groupId>
        <artifactId>cling-osgi</artifactId>
        <version>2.0-SNAPSHOT</version>
    </parent>

    <name>Cling OSGi Base Driver</name>
    <artifactId>cling-osgi-basedriver</artifactId>
    <packaging>bundle</packaging>

    <properties>
        <SymbolicName>org.fourthline.cling.osgi.basedriver</SymbolicName>
    </properties>

    <build>
		<finalName>${SymbolicName}.${project.version}</finalName>
        <plugins>

            <!-- Generate documentation for distribution packaging -->
            <plugin>
                <groupId>org.fourthline.lemma</groupId>
                <artifactId>lemma-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>prepare-package-manual</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>manual</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- Have no real tests yet -->
                    <sourceDirectories>
                        <sourceDirectory>src/main/java</sourceDirectory>
                    </sourceDirectories>
                </configuration>
            </plugin>

            <!-- Build an OSGi bundle -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <!-- Eclipse wants the META-INF in root and not in target. Bad Eclipse. -->
                    <manifestLocation>META-INF</manifestLocation>
                    <instructions>
                        <Bundle-SymbolicName>${SymbolicName}</Bundle-SymbolicName>
                        <Bundle-Name>${project.name}</Bundle-Name>
                        <Bundle-Activator>org.fourthline.cling.osgi.basedriver.Activator</Bundle-Activator>
                        <Bundle-Vendor>4th Line</Bundle-Vendor>
                        <Bundle-Author>Bruce Green</Bundle-Author>
                        <Bundle-Description>
                            This UPnP Base Driver acts as software bridge between UPnP networks and OSGi.
                        </Bundle-Description>
                        <Bundle-DocURL>http://4thline.org/projects/cling/</Bundle-DocURL>
                        <Import-Package>
                            org.osgi.framework,
                            org.osgi.service.event,
                            org.osgi.service.upnp,
                            org.osgi.util.tracker,
                            javax.net.ssl.*,
                            javax.xml.*,
                            org.w3c.dom.*,
                            org.xml.sax.*,
                            org.seamless.http.*,
                            org.seamless.util.*,
                            org.seamless.xml.*,
                            !android.*,
                            !com.sun.*,
                            !sun.net.*,
                            !org.apache.*,
                            !javax.*,
                            !org.hibernate.*,
                            !org.dbunit.*,
                            !org.xmlpull.*,
                            !org.ietf.*,
                            !org.eclipse.jetty.*
                        </Import-Package>
                        <Embed-Transitive>false</Embed-Transitive>
                        <Embed-Dependency>
                            cling-core,
                            seamless-util,
                            seamless-http,
                            seamless-xml,
                            httpcore,
                            httpclient,
                            commons-logging,
                            commons-codec
                        </Embed-Dependency>
                    </instructions>
                </configuration>
            </plugin>

            <!-- Clean up Eclipse mess -->
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>META-INF</directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <!-- Website lifecycle -->
            <plugin>
                <artifactId>maven-site-plugin</artifactId>
                <configuration>
                    <reportPlugins>
                        <!-- THESE IGNORE GLOBAL PLUGIN MANAGEMENT! -->

                        <!-- Build the manual for 'site' lifecycle -->
                        <plugin>
                            <groupId>org.fourthline.lemma</groupId>
                            <artifactId>lemma-maven-plugin</artifactId>
                            <reportSets>
                                <reportSet>
                                    <reports>
                                        <report>site-manual</report>
                                    </reports>
                                </reportSet>
                            </reportSets>
                            <configuration>
                                <!-- Have no real tests yet -->
                                <sourceDirectories>
                                    <sourceDirectory>src/main/java</sourceDirectory>
                                </sourceDirectories>
                            </configuration>
                        </plugin>

                        <!-- Javadoc on the website -->
                        <plugin>
                            <artifactId>maven-javadoc-plugin</artifactId>
                            <reports>
                                <report>javadoc</report>
                            </reports>
                            <configuration>
                                <quiet>true</quiet>
                                <detectOfflineLinks>false</detectOfflineLinks>
                            </configuration>
                        </plugin>

                        <!-- We want cross-referenced source code -->
                        <plugin>
                            <artifactId>maven-jxr-plugin</artifactId>
                        </plugin>

                    </reportPlugins>
                </configuration>
            </plugin>


        </plugins>

    </build>

    <dependencies>

        <dependency>
            <groupId>org.fourthline.cling</groupId>
            <artifactId>cling-core</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.seamless</groupId>
            <artifactId>seamless-util</artifactId>
            <version>${seamless.version}</version>
        </dependency>
        <dependency>
            <groupId>org.seamless</groupId>
            <artifactId>seamless-http</artifactId>
            <version>${seamless.version}</version>
        </dependency>
        <dependency>
            <groupId>org.seamless</groupId>
            <artifactId>seamless-xml</artifactId>
            <version>${seamless.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>${commons.codec.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
            <version>${apache.httpcomponents.httpcore.version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${apache.httpcomponents.httpclient.version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>${commons.logging.version}</version>
            <scope>runtime</scope>
        </dependency>

    </dependencies>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.fourthline.cling</groupId>
        <artifactId>cling</artifactId>
        <version>2.0-SNAPSHOT</version>
    </parent>

    <name>Cling OSGi</name>
    <artifactId>cling-osgi</artifactId>
    <packaging>pom</packaging>

    <modules>
        <module>basedriver</module>
        <module>tests</module>
    </modules>

    <dependencies>

        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.core</artifactId>
            <version>${osgi.version}</version>
        </dependency>

        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.compendium</artifactId>
            <version>${osgi.version}</version>
        </dependency>

    </dependencies>

</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.fourthline.cling</groupId>
        <artifactId>cling-osgi-tests</artifactId>
        <version>2.0-SNAPSHOT</version>
    </parent>

    <name>Cling OSGi Test Common Library</name>
    <artifactId>cling-osgi-tests-common</artifactId>
    <packaging>jar</packaging>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>${commons.codec.version}</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <relativePath>../../</relativePath>
        <groupId>org.fourthline.cling</groupId>
        <artifactId>cling-osgi-tests</artifactId>
        <version>2.0-SNAPSHOT</version>
    </parent>

    <name>Cling OSGi Test Simple Device</name>
    <artifactId>cling-osgi-tests-devices-simple</artifactId>
    <packaging>bundle</packaging>

    <properties>
        <SymbolicName>org.fourthline.cling.osgi.upnp.test.device.simple</SymbolicName>
    </properties>

	<build>
		<finalName>${SymbolicName}.${project.version}</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>
		<plugins>
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
					<manifestLocation>META-INF</manifestLocation>
					<instructions>
						<Bundle-SymbolicName>${SymbolicName}</Bundle-SymbolicName>
						<Bundle-Name>${project.name}</Bundle-Name>
						<Bundle-Activator>org.fourthline.cling.osgi.upnp.test.device.simple.Activator</Bundle-Activator>
						<Bundle-Vendor>4th Line</Bundle-Vendor>
						<Bundle-Author>Bruce Green</Bundle-Author>
						<Bundle-Description>
							A test device that exposes all the capablities of OSGi UPnP.
						</Bundle-Description>
						<Bundle-DocURL>http://4thline.org/projects/cling</Bundle-DocURL>
						<Import-Package>
							org.osgi.framework,
							org.osgi.service.event,
							org.osgi.service.upnp,
							org.osgi.util.tracker
						</Import-Package>
						<Export-Package>
						</Export-Package>
						<Embed-Transitive>false</Embed-Transitive>
						<Embed-Dependency>
							cling-osgi-tests-common,
							commons-codec
						</Embed-Dependency>
					</instructions>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<configuration>
					<filesets>
						<fileset>
							<directory>META-INF</directory>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
		</plugins>
	</build>
    <dependencies>

        <dependency>
            <groupId>org.fourthline.cling</groupId>
            <artifactId>cling-osgi-tests-common</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>

		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>${commons.codec.version}</version>
            <scope>compile</scope>
		</dependency>

    </dependencies>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.fourthline.cling</groupId>
        <artifactId>cling-osgi-tests</artifactId>
        <version>2.0-SNAPSHOT</version>
    </parent>

    <name>Cling OSGi Test Integration</name>
    <artifactId>cling-osgi-tests-integration</artifactId>
    <version>2.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <build>
        <plugins>

            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

            <!--
            OSGi testing uses JUnit, of course to make everything work we have to exclude
            the outdated JUnit 3.x in TestNG (what a fantastic idea that is) and rely on
            the JUnit 4.x dependency of the Pax Exam. And force Maven to use JUnit directly,
            not through TestNG. Automagic configuration is just wonderful.
             -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-junit4</artifactId>
                        <version>2.9</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <!--
                    You need to run the tests manually because the Maven
                    dependency resolution of Pax Exam doesn't resolve "in-build", it
                    wants to lookup all dependencies. It has no idea that we just built what
                    it is looking for. I like how the ShrinkWrap clowns try to
                    solve the same problem. Who would've thought that a build system needs
                    dependency resolution within integration tests!
                    -->
                    <!-- TODO: Also, the test code is only half-done -->
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.ops4j.pax.exam</groupId>
                <artifactId>maven-paxexam-plugin</artifactId>
                <version>${paxexam.version}</version>
            </plugin>

        </plugins>
    </build>

    <dependencies>

        <dependency>
            <groupId>org.fourthline.cling</groupId>
            <artifactId>cling-osgi-tests-common</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.fourthline.cling</groupId>
            <artifactId>cling-core</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.ops4j.pax.exam</groupId>
            <artifactId>pax-exam</artifactId>
            <version>${paxexam.version}</version>
        </dependency>

        <dependency>
            <groupId>org.ops4j.pax.exam</groupId>
            <artifactId>pax-exam-container-default</artifactId>
            <version>${paxexam.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.ops4j.pax.exam</groupId>
            <artifactId>pax-exam-junit</artifactId>
            <version>${paxexam.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>${commons.codec.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
            <version>${apache.httpcomponents.httpcore.version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${apache.httpcomponents.httpclient.version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.felix</groupId>
            <artifactId>org.osgi.compendium</artifactId>
            <version>${felix.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
            <version>${slf4j.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

</project>
        <?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.fourthline.cling</groupId>
        <artifactId>cling-osgi</artifactId>
        <version>2.0-SNAPSHOT</version>
    </parent>

    <name>Cling OSGi Tests</name>
    <artifactId>cling-osgi-tests</artifactId>
    <packaging>pom</packaging>

    <modules>
        <module>common</module>
        <module>devices/simple</module>
        <module>integration</module>
    </modules>

    <properties>
        <!-- This module (and its sub-modules) doesn't have a manual -->
        <lemma.manual>false</lemma.manual>
    </properties>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project><?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- ##################################################################################################### -->

    <groupId>org.fourthline.cling</groupId>
    <artifactId>cling</artifactId>
    <packaging>pom</packaging>
    <version>2.0-SNAPSHOT</version>

    <modules>
        <module>core</module>
        <module>demo</module>
        <module>workbench</module>
        <module>website</module>
        <module>distribution</module>
        <module>support</module>
        <module>mediarenderer</module>
        <!-- TODO: Disabled until we have time to upgrade Jetty and integrate UI from old workbench code
        <module>bridge</module>
        -->
        <module>osgi</module>
    </modules>

    <!-- ##################################################################################################### -->

    <name>Cling</name>
    <url>http://4thline.org/projects/cling/</url>

    <licenses>
        <license>
            <name>GNU Lesser General Public License, Version 2.1 or later</name>
            <url>http://www.gnu.org/licenses/lgpl-2.1.html</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <organization>
        <name>4th Line GmbH, Switzerland</name>
        <url>http://4thline.com</url>
    </organization>

    <developers>
        <developer>
            <id>cb</id>
            <name>Christian Bauer</name>
            <email>cb_AT_4thline.com</email>
            <organization>4th Line GmbH, Switzerland</organization>
            <organizationUrl>http://4thline.com</organizationUrl>
            <roles>
                <role>Project Lead</role>
            </roles>
            <timezone>+1</timezone>
        </developer>
    </developers>

    <distributionManagement>
        <repository>
            <id>4thline.org</id>
            <url>scpexe://4thline.org/webroot/vhosts/8080/4thline.org/m2/</url>
        </repository>
    </distributionManagement>

    <!-- ##################################################################################################### -->

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>6</maven.compiler.source>
        <maven.compiler.target>6</maven.compiler.target>

        <seamless.version>1.0-alpha3</seamless.version>
        <lemma.version>1.1-SNAPSHOT</lemma.version>
        <testng.version>6.2</testng.version>
        <apache.httpcomponents.httpclient.version>4.2.2</apache.httpcomponents.httpclient.version>
        <apache.httpcomponents.httpcore.version>4.2.3</apache.httpcomponents.httpcore.version>
        <android.version>4.0.1.2</android.version>
        <android.maven.plugin.version>3.8.2</android.maven.plugin.version>
        <jetty.version>8.1.8.v20121106</jetty.version>
        <cdi.api.version>1.0-SP4</cdi.api.version>
        <ejb.api.version>3.0</ejb.api.version>
        <servlet.api.version>2.5</servlet.api.version>
        <resteasy.version>2.0.1.GA</resteasy.version>
        <slf4j.version>1.6.1</slf4j.version>
        <slf4j.bridge.version>1.5.11</slf4j.bridge.version>
        <jna.version>3.2.5</jna.version>
        <gstreamer.version>1.4</gstreamer.version>
        <args4j.version>2.0.12</args4j.version>
        <weld.version>1.1.10.Final</weld.version>
        <javassist.version>3.14.0-GA</javassist.version>
        <osgi.version>4.2.0</osgi.version>
        <commons.codec.version>1.4</commons.codec.version>
        <commons.logging.version>1.1.1</commons.logging.version>
        <paxexam.version>1.2.4</paxexam.version>
        <felix.version>1.4.0</felix.version>
        <kxml.version>2.3.0</kxml.version>

    </properties>

    <!-- ##################################################################################################### -->

    <repositories>
        <repository>
            <id>4thline-repo</id>
            <url>http://4thline.org/m2</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>maven2-repository.dev.java.net</id>
            <url>http://download.java.net/maven/2</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>restlet-repo</id>
            <url>http://maven.restlet.org</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>jboss-repo</id>
            <url>https://repository.jboss.org/nexus/content/groups/public/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>4thline-repo</id>
            <url>http://4thline.org/m2</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>maven2-repository.dev.java.net</id>
            <url>http://download.java.net/maven/2</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>onejar-maven-plugin.googlecode.com</id>
            <url>http://onejar-maven-plugin.googlecode.com/svn/mavenrepo</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <!-- ##################################################################################################### -->

    <build>

        <pluginManagement>
            <plugins>
                
                <!-- Assembly -->
                <plugin>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>2.2.1</version>
                </plugin>

                <!-- Unit tests -->
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.9</version>
                    <configuration>
                        <redirectTestOutputToFile>true</redirectTestOutputToFile>
                    </configuration>
                </plugin>

                <!-- Javadoc generation settings -->
                <plugin>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>2.8</version>
                    <configuration>
                        <quiet>true</quiet>
                    </configuration>
                </plugin>

                <!-- Source JARs -->
                <plugin>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>2.1.2</version>
                </plugin>

                <!-- Cross-referenced source code -->
                <plugin>
                    <artifactId>maven-jxr-plugin</artifactId>
                    <version>2.1</version>
                </plugin>

                <!-- Deploy phase -->
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.7</version>
                </plugin>

                <!-- Ant fallback -->
                <plugin>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>1.3</version>
                </plugin>

                <!-- Cleanup -->
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>2.4.1</version>
                </plugin>

                <!-- WAR bundle for bridge -->
                <plugin>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>2.1</version>
                </plugin>

                <!-- Website lifecycle -->
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.0-beta-3</version>
                    <dependencies>
                        <!-- We have raw XHTML files -->
                        <dependency>
                            <groupId>org.apache.maven.doxia</groupId>
                            <artifactId>doxia-module-xhtml</artifactId>
                            <version>1.1.2</version>
                        </dependency>
                    </dependencies>
                </plugin>

                <!-- OSGi bundles -->
                <plugin>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>maven-bundle-plugin</artifactId>
                    <version>2.3.4</version>
                </plugin>

                <!-- One-JAR executable -->
                <plugin>
                    <groupId>org.dstovall</groupId>
                    <artifactId>onejar-maven-plugin</artifactId>
                    <version>1.4.4</version>
                </plugin>

                <!-- OS X executable -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>osxappbundle-maven-plugin</artifactId>
                    <version>1.0-alpha-2</version>
                </plugin>

                <!-- Manual generation settings -->
                <plugin>
                    <groupId>org.fourthline.lemma</groupId>
                    <artifactId>lemma-maven-plugin</artifactId>
                    <version>${lemma.version}</version>
                    <configuration>
                        <!-- Generate unique identifiers for all citations
                        TODO: Docs cleanup necessary for this
                        <processXRefs>false</processXRefs>
                        -->
                    </configuration>
                </plugin>

                <!-- Fixing the versions so Maven stops looking for the latest online... -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.3.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.6</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>2.4</version>
                </plugin>

            </plugins>

        </pluginManagement>

        <!-- Required for we-don't-care-about-compatibility-Maven3 'deploy' goal -->
        <extensions>
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ssh-external</artifactId>
                <version>1.0-beta-7</version>
            </extension>
        </extensions>

    </build>

    <!-- ##################################################################################################### -->

    <reporting>
        <excludeDefaults>true</excludeDefaults>
    </reporting>

    <!-- ##################################################################################################### -->

    <dependencies>

        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testng.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

    </dependencies>

    <!-- ##################################################################################################### -->

    <!--
        Build only the core (or other module) manual, parent pom.xml's current directory (output in ./target/manual/)

        mvn -N clean org.fourthline.lemma:lemma-maven-plugin:manual \
            -Dmanual.templateFilename=cling-core-manual.xhtml \
            -Dmanual.manualSourceDirectory=core/src/manual \
            -Dmanual.testSourceDirectory=core/src/test
    -->

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.fourthline.cling</groupId>
        <artifactId>cling</artifactId>
        <version>2.0-SNAPSHOT</version>
    </parent>

    <name>Cling Support</name>
    <artifactId>cling-support</artifactId>
    <packaging>jar</packaging>

    <build>
        <plugins>

            <!-- Unit tests -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <suiteXmlFiles>
                        <suiteXmlFile>src/test/AllTests.tng.xml</suiteXmlFile>
                    </suiteXmlFiles>
                </configuration>
            </plugin>

            <!-- Source JARs -->
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Prepare Javadoc for distribution packaging -->
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <executions>
                    <execution>
                        <id>package-javadoc</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>javadoc</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Generate documentation for distribution packaging -->
            <plugin>
                <groupId>org.fourthline.lemma</groupId>
                <artifactId>lemma-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>prepare-package-manual</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>manual</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Website lifecycle -->
            <plugin>
                <artifactId>maven-site-plugin</artifactId>
                <configuration>
                    <reportPlugins>
                        <!-- THESE IGNORE GLOBAL PLUGIN MANAGEMENT! -->

                        <!-- Build the manual for 'site' lifecycle -->
                        <plugin>
                            <groupId>org.fourthline.lemma</groupId>
                            <artifactId>lemma-maven-plugin</artifactId>
                            <reportSets>
                                <reportSet>
                                    <reports>
                                        <report>site-manual</report>
                                    </reports>
                                </reportSet>
                            </reportSets>
                        </plugin>

                        <!-- Javadoc on the website -->
                        <plugin>
                            <artifactId>maven-javadoc-plugin</artifactId>
                            <reports>
                                <report>javadoc</report>
                            </reports>
                            <configuration>
                                <quiet>true</quiet>
                                <detectOfflineLinks>false</detectOfflineLinks>
                            </configuration>
                        </plugin>

                        <!-- We want cross-referenced source code -->
                        <plugin>
                            <artifactId>maven-jxr-plugin</artifactId>
                        </plugin>

                    </reportPlugins>
                </configuration>
            </plugin>

        </plugins>
    </build>

    <dependencies>

        <dependency>
            <groupId>org.fourthline.cling</groupId>
            <artifactId>cling-core</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.seamless</groupId>
            <artifactId>seamless-swing</artifactId>
            <version>${seamless.version}</version>
        </dependency>

        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <version>${cdi.api.version}</version>
            <scope>provided</scope>
        </dependency>

    </dependencies>

</project><?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>cling</artifactId>
        <groupId>org.fourthline.cling</groupId>
        <version>2.0-SNAPSHOT</version>
    </parent>

    <name>Cling Website</name>
    <artifactId>cling-website</artifactId>
    <packaging>pom</packaging>

    <build>
        <plugins>

            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>finalize-site</id>
                        <phase>post-site</phase>
                        <configuration>
                            <tasks>

                                <copy todir="${project.reporting.outputDirectory}/core">
                                    <fileset dir="../core/target/site">
                                        <include name="*.html"/>
                                        <exclude name="project-reports.*"/>
                                        <include name="manual/**/*"/>
                                        <include name="apidocs/**/*"/>
                                        <include name="xref/**/*"/>
                                        <include name="xref-test/**/*"/>
                                    </fileset>
                                </copy>

                                <copy todir="${project.reporting.outputDirectory}/support">
                                    <fileset dir="../support/target/site">
                                        <include name="*.html"/>
                                        <exclude name="project-reports.*"/>
                                        <include name="manual/**/*"/>
                                        <include name="apidocs/**/*"/>
                                        <include name="xref/**/*"/>
                                        <include name="xref-test/**/*"/>
                                    </fileset>
                                </copy>

                                <copy todir="${project.reporting.outputDirectory}/workbench">
                                    <fileset dir="../workbench/target/site">
                                        <include name="*.html"/>
                                        <exclude name="project-reports.*"/>
                                        <include name="images/**/*"/>
                                        <include name="xref/**/*"/>
                                    </fileset>
                                </copy>

                                <copy todir="${project.reporting.outputDirectory}/mediarenderer">
                                    <fileset dir="../mediarenderer/target/site">
                                        <include name="*.html"/>
                                        <exclude name="project-reports.*"/>
                                        <include name="images/**/*"/>
                                        <include name="xref/**/*"/>
                                    </fileset>
                                </copy>

                                <copy todir="${project.reporting.outputDirectory}/osgi">
                                    <fileset dir="../osgi/basedriver/target/site">
                                        <include name="*.html"/>
                                        <exclude name="project-reports.*"/>
                                        <include name="manual/**/*"/>
                                        <include name="apidocs/**/*"/>
                                        <include name="xref/**/*"/>
                                    </fileset>
                                </copy>

                                <!-- The Maven site plugin mangles all filenames, rename them back to .xhtml -->
                                <move todir="${project.reporting.outputDirectory}">
                                    <fileset dir="${project.reporting.outputDirectory}">
                                        <include name="**/*.html"/>
                                        <exclude name="**/apidocs/**/*"/>
                                        <exclude name="**/xref/**/*"/>
                                        <exclude name="**/xref-test/**/*"/>
                                    </fileset>
                                    <mapper type="glob" from="*.html" to="*.xhtml"/>
                                </move>

                                <delete dir="${project.reporting.outputDirectory}/css"/>
                                <delete dir="${project.reporting.outputDirectory}/images"/>
                                <delete dir="${project.reporting.outputDirectory}/core/manual/css"/>

                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>org.fourthline.cling</groupId>
            <artifactId>cling-workbench</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.fourthline.cling</groupId>
            <artifactId>cling-mediarenderer</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.fourthline.cling</groupId>
            <artifactId>cling-osgi-basedriver</artifactId>
            <version>${project.version}</version>
        </dependency>
    </dependencies>

</project><?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.fourthline.cling</groupId>
        <artifactId>cling</artifactId>
        <version>2.0-SNAPSHOT</version>
    </parent>

    <name>Cling Workbench</name>
    <artifactId>cling-workbench</artifactId>
    <packaging>jar</packaging>

    <properties>
        <!-- This module (and its sub-modules) doesn't have a manual -->
        <lemma.manual>false</lemma.manual>
    </properties>

    <build>
        <plugins>

            <!-- Package a standalone JAR with all dependencies -->
            <plugin>
                <groupId>org.dstovall</groupId>
                <artifactId>onejar-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>workbench-standalone-jar</id>
                        <goals>
                            <goal>one-jar</goal>
                        </goals>
                        <configuration>
                            <mainClass>org.fourthline.cling.workbench.Workbench</mainClass>
                            <attachToBuild>true</attachToBuild>
                            <classifier>standalone</classifier>
                            <filename>${project.build.finalName}-standalone.jar</filename>
                        </configuration>
                    </execution>
                    <!-- TODO: Move to bridge module
                    <execution>
                        <id>workbench-bridge-cli-jar</id>
                        <goals>
                            <goal>one-jar</goal>
                        </goals>
                        <configuration>
                            <mainClass>org.fourthline.cling.bridge.ui.Main</mainClass>
                            <attachToBuild>true</attachToBuild>
                            <classifier>bridge-cli</classifier>
                            <filename>${project.build.finalName}-bridge-cli.jar</filename>
                        </configuration>
                    </execution>
                    -->
                </executions>
            </plugin>

            <!-- Build an OS X application and disk image -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>osxappbundle-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>bundle</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <mainClass>org.fourthline.cling.workbench.Workbench</mainClass>
                    <iconFile>${basedir}/src/main/resources/WorkbenchIcon.icns</iconFile>
                    <jvmVersion>1.6+</jvmVersion>
                    <javaApplicationStub>${basedir}/../misc/JavaApplicationStub</javaApplicationStub>
                </configuration>
            </plugin>

            <!-- Website lifecycle -->
            <plugin>
                <artifactId>maven-site-plugin</artifactId>
                <configuration>
                    <reportPlugins>
                        <!-- THESE IGNORE GLOBAL PLUGIN MANAGEMENT! -->

                        <!-- We want cross-referenced source code -->
                        <plugin>
                            <artifactId>maven-jxr-plugin</artifactId>
                        </plugin>

                    </reportPlugins>
                </configuration>
            </plugin>
            
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>org.fourthline.cling</groupId>
            <artifactId>cling-support</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.seamless</groupId>
            <artifactId>seamless-cdi</artifactId>
            <version>${seamless.version}</version>
        </dependency>

        <dependency>
            <groupId>args4j</groupId>
            <artifactId>args4j</artifactId>
            <version>${args4j.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jboss.weld.se</groupId>
            <artifactId>weld-se-core</artifactId>
            <version>${weld.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-core</artifactId>
            <version>${weld.version}</version>
        </dependency>

        <dependency>
            <groupId>org.javassist</groupId>
            <artifactId>javassist</artifactId>
            <version>${javassist.version}</version>
        </dependency>

        <!-- Here you pick what logging system you really want to use -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <!-- Oh, I have an idea! There is one in every JVM classpath! -->
            <artifactId>slf4j-jdk14</artifactId>
            <!-- Has to be >= 1.5.5 because SLF4J is garbage -->
            <version>${slf4j.version}</version>
        </dependency>

        <!-- TODO: http://seamframework.org/Community/WeldSEAndSlf4j
        <dependency>
            <groupId>org.jboss.weld.se</groupId>
            <artifactId>weld-se</artifactId>
            <version>1.1.1.Final</version>
        </dependency>
        -->

        <dependency>
            <groupId>javax.ejb</groupId>
            <artifactId>ejb-api</artifactId>
            <version>${ejb.api.version}</version>
        </dependency>

        <!--
        Enable for alternative WorkbenchUpnpConfiguration, see beans.xml

        <dependency>
            <groupId>net.sf.kxml</groupId>
            <artifactId>kxml2</artifactId>
            <version>${kxml.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
            <version>${jetty.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-servlet</artifactId>
            <version>${jetty.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-client</artifactId>
            <version>${jetty.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        -->

    </dependencies>

</project>