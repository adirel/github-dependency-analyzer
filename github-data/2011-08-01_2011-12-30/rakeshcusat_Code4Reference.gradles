apply plugin: 'groovy'
apply plugin: 'maven'
dependencies {
    compile gradleApi()
    groovy localGroovy()
}
repositories {
    mavenCentral()
}

group='com.code4reference'
version='1.1-SNAPSHOT'

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: uri('../repo'))
        }
    }
}
buildscript {
    repositories {
        maven {
            url uri('../repo')
        }
    }
    dependencies {
        classpath group: 'com.code4reference', name: 'code4ReferencePlugin', version: '1.1-SNAPSHOT'
    }
}
apply plugin: 'code4reference'
apply plugin: 'groovy'
apply plugin: 'maven'
dependencies {
    compile gradleApi()
    groovy localGroovy()
}
repositories {
    mavenCentral()
}

group='com.code4reference'
version='1.2-SNAPSHOT'

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: uri('../repo'))
        }
    }
}
buildscript {
    repositories {
        maven {
            url uri('../repo')
        }
    }
    dependencies {
        classpath group: 'com.code4reference', 
                  name: 'code4ReferencePlugin', 
                  version: '1.2-SNAPSHOT'
    }
}

apply plugin: 'code4reference'

c4rArgs {
    sender = 'Rakesh'
    message = 'Hello there !!!!'

    nestedArgs{
       receiver = "gradleAdmin"
       email = "gradleAdmin@code4reference.com"
    }
}


task parseXml() {
    def parsedProjectXml = (new XmlParser()).parse('xmlexample.xml')
    println "project Name : " + parsedProjectXml.@name + 
            ", version : " +  parsedProjectXml.@version
    println "ModuleList name : " + parsedProjectXml.modulelist[0].@name +
            ", shortName : " + parsedProjectXml.modulelist[0].@shortName
    parsedProjectXml.modulelist.module.each{ module ->
      println "Name : " +  module.@name + ", version : " + module.@version
    }
    println parsedProjectXml.description.text()
}
apply plugin: 'java'

jar.baseName = 'C4RJMeter'  //custom jar file name.

repositories {
    mavenCentral()
}

dependencies {
    //This JMeter plugin source code build depends on JMeter2.9 version.
    compile 'org.apache.jmeter:ApacheJMeter_core:2.9'  
    compile 'org.apache.jmeter:ApacheJMeter_components:2.9'
}

sourceSets {
   main {
      java {
         srcDir 'src/java'  //JMeter plugin source directory.
      }
   }
}

jar {
   manifest {
      attributes 'Implementation-Title': 'Code4Reference',
         'Built-By': System.getProperty('user.name'),
         'Built-Date': new Date(),
         'Built-JDK': System.getProperty('java.version')
   }
}
task env_read<<{

  println "$System.env.HOME"

  //Other way
  println System.getenv()['HOME'] 

  //
  
}
apply plugin: 'java'
apply plugin: 'war'

repositories {
   mavenCentral()
}
dependencies {
        compile 'org.springframework:spring-webmvc:3.0.5.RELEASE'
        compile 'commons-codec:commons-codec:1.4'
        providedCompile "javax.servlet:servlet-api:2.5"
        
}


