/*
* Copyright 2011 Kenshoo.com
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/  
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'project-report'

sourceCompatibility = 1.6
version = '1.0'

ideaProject {
   jdkName = '1.6'
}

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'eu.appsatori:gradle-fatjar-plugin:0.2-rc1'
    }
}

apply plugin: 'fatjar'

fatJar {
    exclude "META-INF/*.SF"
    exclude "META-INF/*.DSA"
    exclude "META-INF/*.RSA"
}

repositories {
    mavenCentral()
    mavenRepo url: "https://repository.cloudera.com/artifactory/cloudera-repos/"
}


dependencies {

    compile (group: 'com.cloudera', name: 'flume-core', version: '0.9.4-cdh3u2') {
        transitive = false
    }
    compile group: 'commons-io', name: 'commons-io' , version: '1.2'
    compile group: 'commons-cli', name: 'commons-cli' , version: '1.1'

    compile group: 'com.rabbitmq', name: 'amqp-client' , version: '2.5.1'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.6.4'

    compile group: 'commons-lang', name: 'commons-lang' , version: '2.3'

    testCompile group: 'junit', name: 'junit', version: '4.8.2'
    testCompile group: 'org.jmock', name: 'jmock-junit4', version: '2.5.1'
    testRuntime group: 'org.slf4j', name: 'slf4j-simple', version: '1.6.4'
}

fatJar {
    exclude 'org/slf4j/*'
    exclude 'com/cloudera/*'
    exclude 'org/apache/avro/*'
    exclude 'org/apache/thrift/*'
    exclude 'org/apache/hadoop/*'
}
sourceSets {
  main {
    java {
      srcDir 'java'
    }
  }

  test {
    java {
      srcDir 'test'
    }
  }
}

tasks.withType(Test) { systemProperties = System.getProperties() }

idea.project.ipr {
    withXml { provider ->
        provider.node.component.find { it.@name == 'VcsDirectoryMappings' }.mapping.@vcs = 'Git'
    }
}

build.dependsOn fatJar


