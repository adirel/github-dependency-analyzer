<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<parent>
		<groupId>org.opennaas</groupId>
		<artifactId>org.opennaas.clients</artifactId>
		<version>0.28</version>
	</parent>

	<modelVersion>4.0.0</modelVersion>
	<artifactId>org.opennaas.gui.vcpe</artifactId>
	<packaging>war</packaging>
	<name>OpenNaas :: GUI :: Virtual CPE</name>
	<url>http://maven.apache.org</url>

	<dependencies>
		<!-- Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>
		<!--  Spring -->
		<!-- Application Context 
		    (depends on spring-core, spring-expression, spring-aop, spring-beans)
		    This is the central artifact for Spring's Dependency Injection Container
		    and is generally always defined-->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-context</artifactId>
		</dependency>
		<!-- Core utilities used by other modules.
		    Define this if you use Spring Utility APIs 
		    (org.springframework.core.*/org.springframework.util.*)-->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-core</artifactId>
		</dependency>
		<!-- Expression Language (depends on spring-core)
		    Define this if you use Spring Expression APIs 
		    (org.springframework.expression.*)-->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-expression</artifactId>
		</dependency>
		<!-- Bean Factory and JavaBeans utilities (depends on spring-core)
		    Define this if you use Spring Bean APIs 
		    (org.springframework.beans.*)-->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-beans</artifactId>
		</dependency>
		<!-- Aspect Oriented Programming (AOP) Framework 
		    (depends on spring-core, spring-beans)
		    Define this if you use Spring AOP APIs 
		    (org.springframework.aop.*)-->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-aop</artifactId>
		</dependency>
		<!-- Various Application Context utilities, including EhCache, JavaMail, Quartz, 
		    and Freemarker integration
		    Define this if you need any of these integrations-->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-context-support</artifactId>
		</dependency>
		<!-- Transaction Management Abstraction 
		    (depends on spring-core, spring-beans, spring-aop, spring-context)
		    Define this if you use Spring Transactions or DAO Exception Hierarchy
		    (org.springframework.transaction.*/org.springframework.dao.*)-->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-tx</artifactId>
		</dependency>
		<!-- Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA and iBatis.
		    (depends on spring-core, spring-beans, spring-context, spring-tx)
		    Define this if you need ORM (org.springframework.orm.*)-->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-orm</artifactId>
		</dependency>
		<!-- Object-to-XML Mapping (OXM) abstraction and integration with JAXB, JiBX, 
		    Castor, XStream, and XML Beans.
		    (depends on spring-core, spring-beans, spring-context)
		    Define this if you need OXM (org.springframework.oxm.*)-->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-oxm</artifactId>
		</dependency>
		<!-- Contains core authentication and access-contol classes and interfaces, 
			remoting support and basic provisioning APIs. -->
		<dependency>
    		<groupId>org.springframework.security</groupId>
    		<artifactId>spring-security-core</artifactId>
 		</dependency> 
 		<!-- Contains filters and related web-security infrastructure code. 
 			Anything with a servlet API dependency. You'll need it if you require Spring Security 
 			web authentication services and URL-based access-control. -->
		<dependency>
    		<groupId>org.springframework.security</groupId>
    		<artifactId>spring-security-web</artifactId>
  		</dependency>
  		<!-- Contains the security namespace parsing code. 
  			You need it if you are using the Spring Security XML namespace for configuration. 
  			The main package is org.springframework.security.config. 
  			None of the classes are intended for direct use in an application. --> 
  		<dependency>
    		<groupId>org.springframework.security</groupId>
    		<artifactId>spring-security-config</artifactId>
  		</dependency>
  		<!-- Spring Security has its own taglib which provides basic support for accessing 
  			security information and applying security constraints in JSPs. -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
		</dependency>
		<!-- Web application development utilities applicable to both Servlet and 
		    Portlet Environments 
		    (depends on spring-core, spring-beans, spring-context)
		    Define this if you use Spring MVC, or wish to use Struts, JSF, or another
		    web framework with Spring (org.springframework.web.*)-->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-web</artifactId>
		</dependency>
		<!-- Spring MVC for Servlet Environments 
		    (depends on spring-core, spring-beans, spring-context, spring-web)
		    Define this if you use Spring MVC with a Servlet Container such as 
		    Apache Tomcat (org.springframework.web.servlet.*)-->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-webmvc</artifactId>
		</dependency>
		<!-- Spring MVC for Portlet Environments 
		    (depends on spring-core, spring-beans, spring-context, spring-web)
		    Define this if you use Spring MVC with a Portlet Container 
		    (org.springframework.web.portlet.*)-->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-webmvc-portlet</artifactId>
		</dependency>
		<!-- Support for testing Spring applications with tools such as JUnit and TestNG
		    This artifact is generally always defined with a 'test' scope for the 
		    integration testing framework and unit testing stubs-->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-test</artifactId>
		    <scope>test</scope>
		</dependency>
		<!--  JSR 303 with Hibernate Validator -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>
		<!--  Joda Time -->
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time-jsptags</artifactId>
			<scope>runtime</scope>
		</dependency>	
		<!-- Logging -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		</dependency>
		<!-- Jersey Client -->
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-bundle</artifactId>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-core</artifactId>
		</dependency>
		<!-- Tiles -->
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-jsp</artifactId>
		</dependency>
		<!-- OpenNaaS -->
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.router.model</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>org.osgi.foundation</artifactId>
					<groupId>org.apache.felix</groupId>
				</exclusion>
				<exclusion>
					<artifactId>slf4j-api</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
				<exclusion>
					<artifactId>slf4j-log4j12</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.vcpe</artifactId>
		</dependency>
		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	
	<build>
		<finalName>opennaas-vcpe</finalName>
		<plugins>
      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.3</version>
        <configuration>
          <!--
            Exclude all spring 2.5 jars
          -->
          <packagingExcludes>
            WEB-INF/lib/org.springframework.*-2.5*.jar
          </packagingExcludes>
        </configuration>
      </plugin>
    </plugins>
	</build>
	
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<packaging>pom</packaging>
	
	<parent>
		<groupId>org.opennaas</groupId>
        <artifactId>opennaas</artifactId>
        <version>0.28</version>
	</parent>
	
	<name>OpenNaaS :: Clients</name>
	<artifactId>org.opennaas.clients</artifactId>

	<modules>
        <module>opennaas-gui-vcpe</module>
 	</modules>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<packaging>bundle</packaging>
	<parent>
		<artifactId>org.opennaas.core</artifactId>
		<groupId>org.opennaas</groupId>
		<version>0.28</version>
	</parent>
	<name>OpenNaaS :: Core :: Features</name>
	<artifactId>org.opennaas.core.features</artifactId>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-artifacts</id>
						<phase>package</phase>
						<goals>
							<goal>attach-artifact</goal>
						</goals>
						<configuration>
							<artifacts>
								<artifact>
									<file>target/features.xml</file>
									<type>xml</type>
									<classifier>features</classifier>
								</artifact>
							</artifacts>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<parent>
		<artifactId>org.opennaas.core</artifactId>
		<groupId>org.opennaas</groupId>
		<version>0.28</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<artifactId>org.opennaas.core.hsqldb</artifactId>
	<name>OpenNaaS :: Core :: HSQLDB Database</name>
	<packaging>bundle</packaging>
	<dependencies>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.osgi</groupId>
			<artifactId>spring-osgi-core</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.servicemix.bundles</groupId>
			<artifactId>org.apache.servicemix.bundles.commons-dbcp</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>com.springsource.org.hsqldb</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<Import-Package>org.slf4j,*</Import-Package>
						<Private-Package>org.opennaas.core.hsqldb.internal</Private-Package>
					</instructions>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>org.opennaas.core</artifactId>
		<groupId>org.opennaas</groupId>
		<version>0.28</version>
	</parent>
	<artifactId>karafbranding-opennaas</artifactId>
	<packaging>bundle</packaging>
	<name>OpenNaaS :: Core :: karaf branding</name>
	<description>Branding of the karaf shell to suit our preferences</description>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<Import-Package>*</Import-Package>
						<Private-Package>!*</Private-Package>
						<Export-Package>
                            org.apache.karaf.branding
                        </Export-Package>
						<Spring-Context>*;public-context:=false</Spring-Context>
					</instructions>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<parent>
		<artifactId>org.opennaas.core</artifactId>
		<groupId>org.opennaas</groupId>
		<version>0.28</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<artifactId>org.opennaas.core.persistence</artifactId>
	<packaging>bundle</packaging>
	<name>OpenNaaS :: Core :: JPA Persistence</name>
	<description>Dynamic JPA Persistence tools for Nexus</description>
	<dependencies>
		<dependency>
			<groupId>org.apache.openjpa</groupId>
			<artifactId>openjpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.osgi.compendium</artifactId>
		</dependency>
		<!--<dependency>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-jpa_2.0_spec</artifactId>
		</dependency>-->
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.hsqldb</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<Bundle-Activator>org.opennaas.core.persistence.Activator</Bundle-Activator>
						<Import-Package>org.osgi.framework, javax.persistence, org.w3c.dom, javax.xml.parsers, org.slf4j, *</Import-Package>
						<Export-Package>org.opennaas.core.persistence.*;version="${project.version}"</Export-Package>
					</instructions>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<packaging>pom</packaging>
	<parent>
		<artifactId>opennaas</artifactId>
		<groupId>org.opennaas</groupId>
		<version>0.28</version>
	</parent>
	<name>OpenNaaS :: Core</name>
	<artifactId>org.opennaas.core</artifactId>
	<modules>
		<module>features</module>
		<module>karafbranding</module>
		<module>persistence</module>
		<module>hsqldb</module>
		<module>resources</module>
		<!-- Bundles past this point do depend on the resources bundle -->
		<!--<module>org.opennaas.core.resourcemanager-soapendpoint</module>-->
		<module>security</module>
		<module>tests-mockprofile</module>
	</modules>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
			</plugin>
			<plugin>
			    <groupId>org.codehaus.mojo</groupId>
			    <artifactId>license-maven-plugin</artifactId>
			    <configuration>
			        <verbose>false</verbose>
			    </configuration>
			    <executions>
			        <execution>
			            <id>core-license</id>
			            <goals>
			                <goal>update-file-header</goal>
			            </goals>
			            <phase>compile</phase>
			            <configuration>
			                <licenseName>lgpl_v3</licenseName>
			                <roots>
			                    <root>src/main/java</root>
			                    <root>src/test/java</root>			                    
			                </roots>
			            </configuration>
			        </execution>
			    </executions>
			</plugin>			
		</plugins>
	</build>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<parent>
		<artifactId>org.opennaas.core</artifactId>
		<groupId>org.opennaas</groupId>
		<version>0.28</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<artifactId>org.opennaas.core.resources</artifactId>
	<name>OpenNaaS :: Core :: Resources</name>
	<description>OpenNaaS Resources Core Components </description>
	<packaging>bundle</packaging>
	<dependencies>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.persistence</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.features</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.servicemix.specs</groupId>
			<artifactId>org.apache.servicemix.specs.jaxb-api-2.2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.karaf.shell</groupId>
			<artifactId>org.apache.karaf.shell.console</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.gogo.runtime</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.compendium</artifactId>
		</dependency>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.enterprise</artifactId>
		</dependency>		
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.exam</groupId>
			<artifactId>pax-exam-junit4</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.openengsb.labs.paxexam.karaf</groupId>
			<artifactId>paxexam-karaf-container</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>net.i2cat.netconf</groupId>
			<artifactId>netconf4j</artifactId>
		</dependency>	
		<!-- REST annotations -->
		<dependency>
			<groupId>org.apache.servicemix.specs</groupId>
			<artifactId>org.apache.servicemix.specs.jsr311-api-1.1</artifactId>
		</dependency>		
	

	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.ops4j</groupId>
				<artifactId>maven-pax-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<Bundle-Activator>org.opennaas.core.resources.Activator</Bundle-Activator>
						
						<!-- Guava and Pax Exam are optional
						     depedencies because we currently use them
						     in the context of the JUnitRunner and not
						     from withing the OSGi based test
						     container. -->
						<Import-Package>
							org.hsqldb,
							org.ops4j.pax.exam.junit;resolution:=optional,
							com.google.common.*;resolution:=optional,
							org.slf4j,
							org.osgi.framework,
							javax.ws.rs;version=${javax.ws.rs.version},
							*
						</Import-Package>
						<Meta-Persistence>META-INF/persistence.xml</Meta-Persistence>
					</instructions>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.openjpa</groupId>
				<artifactId>openjpa-maven-plugin</artifactId>
				<configuration>
					<includes>**/descriptor/**/*.class</includes>
					<excludes>**/ResourceDescriptorRepository.class,**/ResourceDescriptorConstants.class</excludes>
					<addDefaultConstructor>true</addDefaultConstructor>
					<enforcePropertyRestrictions>true</enforcePropertyRestrictions>
				</configuration>
				<executions>
					<execution>
						<id>enhancer</id>
						<phase>process-classes</phase>
						<goals>
							<goal>enhance</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.openjpa
										</groupId>
										<artifactId>
											openjpa-maven-plugin
										</artifactId>
										<versionRange>
											[2.2.0,)
										</versionRange>
										<goals>
											<goal>enhance</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<parent>
		<artifactId>org.opennaas.core</artifactId>
		<groupId>org.opennaas</groupId>
		<version>0.28</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<artifactId>org.opennaas.core.security</artifactId>
	<name>OpenNaaS :: Core :: Security</name>
	<description>OpenNaaS Core Security </description>
	<packaging>bundle</packaging>
	<dependencies>
		<!-- Servlet API -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
		</dependency>
		<!-- Spring security -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-acl</artifactId>
		</dependency>
		<!-- Required for the ACL cache -->
		<dependency>
			<groupId>org.apache.servicemix.bundles</groupId>
			<artifactId>org.apache.servicemix.bundles.ehcache</artifactId>
		</dependency>
		<!-- Spring DM -->
		<dependency>
			<groupId>org.springframework.osgi</groupId>
			<artifactId>spring-osgi-core</artifactId>
		</dependency>
		<!-- OSGi -->
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.core</artifactId>
		</dependency>
		<!-- OpenNaaS bundles -->
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.resources</artifactId>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.ops4j</groupId>
				<artifactId>maven-pax-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<Bundle-Activator>org.opennaas.core.security.Activator</Bundle-Activator>
						<Import-Package>
							javax.persistence,
							javax.servlet,
							javax.servlet.http,
							net.sf.ehcache.exceptionhandler;version="${ehcache.version}",
							net.sf.ehcache.loader;version="${ehcache.version}",
							net.sf.ehcache.extension;version="${ehcache.version}",
							net.sf.ehcache.util;version="${ehcache.version}",
							net.sf.ehcache.hibernate;version="${ehcache.version}",
							net.sf.ehcache.store;version="${ehcache.version}",
							net.sf.ehcache.event;version="${ehcache.version}",
							net.sf.ehcache.management;version="${ehcache.version}",
							net.sf.ehcache.constructs.blocking;version="${ehcache.version}",
							net.sf.ehcache.config;version="${ehcache.version}",
							net.sf.ehcache.distribution;version="${ehcache.version}",
							net.sf.ehcache.concurrent;version="${ehcache.version}",
							net.sf.ehcache.bootstrap;version="${ehcache.version}",
							net.sf.ehcache;version="${ehcache.version}",
							org.springframework.beans.factory.config;version="${spring.version}",
							org.springframework.beans.factory.support;version="${spring.version}",
							org.springframework.cache.ehcache;version="${spring.version}",
							org.springframework.jdbc;version="${spring.version}",
							org.springframework.web.filter,
							org.springframework.web.context,
							org.springframework.osgi.web.context.support,
							org.springframework.security.core.userdetails.memory,
							org.springframework.security.web;version="${spring.security.version}",
							org.springframework.security.web.authentication;version="${spring.security.version}",
							org.springframework.security.web.authentication.www;version="${spring.security.version}",
							org.springframework.security.access.vote;version="${spring.security.version}",
							org.springframework.aop;version="${spring.version}",
							org.springframework.aop.framework;version="${spring.version}",
							org.aopalliance.aop;version="1.0.0",
							*
						</Import-Package>
						<Meta-Persistence>META-INF/security-persistence.xml</Meta-Persistence>
					</instructions>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.openjpa
										</groupId>
										<artifactId>
											openjpa-maven-plugin
										</artifactId>
										<versionRange>
											[2.2.0,)
										</versionRange>
										<goals>
											<goal>enhance</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<!--  parent parameters  -->
	<parent>
		<artifactId>org.opennaas.core</artifactId>
		<groupId>org.opennaas</groupId>
		<version>0.28</version>
	</parent>

	<artifactId>org.opennaas.core.tests-mockprofile</artifactId>
	<modelVersion>4.0.0</modelVersion>
	<name>OpenNaaS :: Core :: Mock Profile for testing</name>
	<description>Nexus profile just for testing</description>
	<packaging>bundle</packaging>

	<dependencies>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.resources</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<Import-Package>*</Import-Package>
						<Export-Package>
							org.opennaas.core.testprofile;version="${project.version}",
						</Export-Package>
					</instructions>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.opennaas</groupId>
		<artifactId>org.opennaas.extensions.bundles</artifactId>
		<version>0.28</version>
	</parent>
	<artifactId>org.opennaas.extensions.genericnetwork</artifactId>
	<!-- Maven configuration -->
	<packaging>bundle</packaging>
	<name>OpenNaaS :: Generic Network </name>
	<description>Generic Network Resource Implementation</description>

	<dependencies>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.resources</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.openflowswitch</artifactId>
		</dependency>
		<!-- Google Guava library -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-net</groupId>
			<artifactId>commons-net</artifactId>
			<version>3.3</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.ops4j</groupId>
				<artifactId>maven-pax-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<!-- | the following instructions build a simple set of public/private 
					classes into an OSGi bundle -->
				<configuration>
					<instructions>
						<Bundle-Activator>org.opennaas.extensions.genericnetwork.Activator</Bundle-Activator>
						<Import-Package>
							!org.opennaas.extensions.genericnetwork.*,
							javax.persistence,
							*
						</Import-Package>
					</instructions>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-artifacts</id>
						<phase>package</phase>
						<goals>
							<goal>attach-artifact</goal>
						</goals>
						<configuration>
							<artifacts>
								<artifact>
									<file>${basedir}/target/features.xml</file>
									<type>xml</type>
									<classifier>features</classifier>
								</artifact>
							</artifacts>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<artifactId>org.opennaas.extensions.bundles</artifactId>
		<groupId>org.opennaas</groupId>
		<version>0.28</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<packaging>bundle</packaging>
	<artifactId>org.opennaas.extensions.gim</artifactId>
	<version>0.28</version>
	<name>GIM :: GIModel and APC PDU driver</name>
	<description>APC PDU driver for GIM model using SNMP</description>
	
	<dependencies>
		<dependency>
			<groupId>org.apache.servicemix.bundles</groupId>
			<artifactId>org.apache.servicemix.bundles.snmp4j</artifactId>
			<version>${snmp4j.version}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	
	<build>
		<plugins>
			<plugin>
				<groupId>org.ops4j</groupId>
				<artifactId>maven-pax-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<!--
					| the following instructions build a simple set of public/private
					classes into an OSGi bundle
				-->
				<configuration>
					<instructions>
						<Bundle-Activator>org.opennaas.extensions.gim.Activator</Bundle-Activator>
						<Import-Package>org.slf4j,*</Import-Package>
						<Export-Package>
							org.opennaas.extensions.gim.controller;version="${project.version}",
							org.opennaas.extensions.gim.controller.capabilities;version="${project.version}",
							org.opennaas.extensions.gim.controller.snmp;version="${project.version}",
							org.opennaas.extensions.gim.model;version="${project.version}",
							org.opennaas.extensions.gim.model.core;version="${project.version}",
							org.opennaas.extensions.gim.model.core.entities;version="${project.version}",
							org.opennaas.extensions.gim.model.core.entities.pdu;version="${project.version}",
							org.opennaas.extensions.gim.model.core.entities.sockets;version="${project.version}",
							org.opennaas.extensions.gim.model.energy;version="${project.version}",
							org.opennaas.extensions.gim.model.load;version="${project.version}",
							org.opennaas.extensions.gim.model.log;version="${project.version}"
						</Export-Package>
						</instructions>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.opennaas</groupId>
		<artifactId>org.opennaas.extensions.bundles</artifactId>
		<version>0.28</version>
	</parent>
	
	<artifactId>org.opennaas.extensions.openflowswitch</artifactId>
	<!--  Maven configuration -->
	<packaging>bundle</packaging>
	<name>OpenNaaS :: OpenFlow Switch </name>
	<description>OpenFlow Switch Resource Implementation</description>

	<dependencies>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.resources</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.ops4j</groupId>
				<artifactId>maven-pax-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<!--
					| the following instructions build a simple set of public/private
					classes into an OSGi bundle
				-->
				<configuration>
					<instructions>
						<Bundle-Activator>org.opennaas.extensions.openflowswitch.repository.Activator</Bundle-Activator>
						<Import-Package>javax.persistence,*</Import-Package>
					</instructions>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>org.opennaas.extensions.bundles</artifactId>
    <groupId>org.opennaas</groupId>
    <version>0.28</version>
  </parent>
  <artifactId>org.opennaas.extensions.pdu</artifactId>
  	<!--  Maven configuration -->
  	<modelVersion>4.0.0</modelVersion>
  	<packaging>bundle</packaging>
	<name>OpenNaaS :: PDU Resource </name>
	<description>PDU Resource  Implementation</description>
 	<dependencies>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.resources</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.gim</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.powernet</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.karaf.shell</groupId>
			<artifactId>org.apache.karaf.shell.console</artifactId>
		</dependency>
 	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.ops4j</groupId>
				<artifactId>maven-pax-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<!--
					| the following instructions build a simple set of public/private
					classes into an OSGi bundle
				-->
				<configuration>
					<instructions>
						<Bundle-Activator>org.opennaas.extensions.pdu.Activator</Bundle-Activator>
						<Import-Package>
							javax.persistence,
							org.slf4j,
							org.opennaas.extensions.gim.controller.capabilities;version="${opennaas.gim.version}",
							org.opennaas.extensions.gim.controller.snmp;version="${opennaas.gim.version}",
							org.opennaas.extensions.gim.model.core;version="${opennaas.gim.version}",
							org.opennaas.extensions.gim.model.core.entities;version="${opennaas.gim.version}",
							org.opennaas.extensions.gim.model.core.entities.pdu;version="${opennaas.gim.version}",
							org.opennaas.extensions.gim.model.energy;version="${opennaas.gim.version}",
							org.opennaas.extensions.gim.model.load;version="${opennaas.gim.version}",
							org.opennaas.extensions.gim.model.log;version="${opennaas.gim.version}",
							*
						</Import-Package>
						<Export-Package>
							org.opennaas.extensions.pdu;version="${project.version}",
							org.opennaas.extensions.pdu.capability;version="${project.version}",
							org.opennaas.extensions.pdu.model;version="${project.version}"
						</Export-Package>
						</instructions>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project><?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<packaging>pom</packaging>
	<parent>
		<artifactId>org.opennaas.extensions</artifactId>
		<groupId>org.opennaas</groupId>
		<version>0.28</version>
	</parent>
	<name>OpenNaaS :: Extensions :: Bundles</name>
	<artifactId>org.opennaas.extensions.bundles</artifactId>
	<dependencies>
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymockclassextension</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<modules>


		<!-- All extensions Features -->
	    <module>all.features</module>

		<!-- Router Resource -->
		<module>router.repository</module>
		<module>router.capability.chassis</module>
		<module>router.capability.ip</module>
		<module>router.capability.gretunnel</module>
		<module>router.capability.ospf</module>
		<module>router.capability.ospfv3</module>		
		<module>router.capability.staticroute</module>
		<module>router.capability.bgp</module>
		<module>router.capability.vrrp</module>
		<module>router.capability.l3vlan</module>		
		<module>router.capability.linkaggregation</module>
		<module>router.capability.vlanbridge</module>
		<module>router.capabilities.api</module>		
		<module>router.model</module>
		<module>router.features</module>

		<!-- Router Actionsets -->
		<module>router.actionsets.junos</module>
		<module>router.actionsets.opener</module>
		<module>router.actionsets.features</module>

		<!-- Velocity templates -->		
		<module>fragment.velocity</module>
		
		<module>queuemanager</module>
		<module>com.wonesys.emsModule</module>

		<!-- ROADM resource -->
		<module>roadm.repository</module>
		<module>roadm.capability.connections</module>
		<module>roadm.capability.monitoring</module>
		<module>roadm.features</module>

		<!-- ROADM Actionset -->
		<module>roadm.actionsets.wonesys</module>
		<module>roadm.actionsets.features</module>
		

		<!-- Network resource -->
		<module>network.model</module>
		<module>network.repository</module>
		<module>network.capability.basic</module>
		<module>network.capability.queue</module>
		<module>network.capability.ospf</module>
		<module>network.features</module>

		<!-- BoD Resource -->
		<module>bod.repository</module>
		<module>bod.capability.l2bod</module>
		<module>bod.features</module>

		<!-- BoD Actionsets -->
		<module>bod.actionsets.dummy</module>
		<module>bod.autobahn</module>
		<module>bod.actionsets.features</module>

		<!-- Transports -->
		<module>transports.sockets</module>
		<module>transports.telnet</module>
		<module>transports.virtual</module>
		<module>transports.features</module>
		
		<!-- Protocols -->
		<module>protocols.netconf</module>
		<module>protocols.cli</module>
		<module>protocols.tl1</module>
		<module>roadm.protocols.wonesys</module>	
		<module>protocols.features</module>		
		
		<!-- MacBridge Resource -->
		<module>macbridge.model</module>
		<module>macbridge.capability.vlanawarebridge</module>
		<module>macbridge.ios.resource</module>
    	<module>macbridge.features</module>
		
		<!-- VNMapper Resource -->
		<module>vnmapper</module>
		<module>vnmapper.features</module>
		
		<!-- vCPE -->
		<module>vcpe</module>
		<module>vcpe.features</module>
	
		<!-- Quantum Resource -->
		<module>quantum</module>
		<module>quantum.features</module>	
		
		<!-- PDU Resource -->
		<module>gim</module>
		<module>powernet</module>
		<module>pdu</module>
		<module>power.capabilities</module>
		<module>pdu.features</module>		
		
		<!-- Sample Resource -->
		<module>sampleresource</module>
		<module>sampleresource.features</module>
		
		<!-- Openflow Switch Resource -->
		<module>openflowswitch</module>
		<module>openflowswitch.features</module>		
	
		<!-- Openflow Switch Drivers -->
		<module>openflowswitch.driver.floodlight</module>
		<module>openflowswitch.driver.features</module>	
		
		<!-- GenericNetwork -->
		<module>genericnetwork</module>
		
		<!-- OFERTIE -->
		<module>ofertie.ncl</module>

	</modules>
</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>org.opennaas.extensions.bundles</artifactId>
    <groupId>org.opennaas</groupId>
    <version>0.28</version>
  </parent>
  <artifactId>org.opennaas.extensions.powernet</artifactId>
  	<!--  Maven configuration -->
  	<modelVersion>4.0.0</modelVersion>
  	<packaging>bundle</packaging>
	<name>OpenNaaS :: Power Net Resource </name>
	<description>Power Net Resource Implementation</description>
 	<dependencies>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.resources</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.gim</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.karaf.shell</groupId>
			<artifactId>org.apache.karaf.shell.console</artifactId>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.ops4j</groupId>
				<artifactId>maven-pax-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<!--
					| the following instructions build a simple set of public/private
					classes into an OSGi bundle
				-->
				<configuration>
					<instructions>
						<Bundle-Activator>org.opennaas.extensions.powernet.Activator</Bundle-Activator>
						<Import-Package>org.slf4j,javax.persistence,*</Import-Package>
						<Export-Package>
							org.opennaas.extensions.powernet.capability.mgt;version="${project.version}",
							org.opennaas.extensions.powernet.model;version="${project.version}"
						</Export-Package>
						</instructions>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project><?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<!-- Maven parent -->
	<parent>
		<artifactId>org.opennaas.extensions.bundles</artifactId>
		<groupId>org.opennaas</groupId>
		<version>0.28</version>
	</parent>
	<!-- POM id -->
	<artifactId>org.opennaas.extensions.quantum</artifactId>
	<!-- Maven configuration -->
	<modelVersion>4.0.0</modelVersion>
	<packaging>bundle</packaging>
	<name>OpenNaaS :: Quantum</name>
	<description>OpenStack Quantum Network Provider</description>

	<dependencies>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.resources</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.queuemanager</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
  			<artifactId>org.opennaas.extensions.bod.capability.l2bod</artifactId>
		</dependency>		
		<dependency>
			<groupId>org.opennaas</groupId>
		  	<artifactId>org.opennaas.extensions.bod.autobahn</artifactId>
		</dependency>	
		<!-- Guava -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
		</dependency>
		<!-- Jackson (old version of Jackson, instead of 2.x, due to bug integrating with CXF DOSGi
			http://cxf.547215.n5.nabble.com/Using-Jackson-as-JSON-body-reader-writer-with-DOSGi-td5729257.html)-->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-xc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-jaxrs</artifactId>
		</dependency>
		<!-- JSON Assert (https://github.com/skyscreamer/JSONassert) -->
		<dependency>
			<groupId>org.skyscreamer</groupId>
			<artifactId>jsonassert</artifactId>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.ops4j</groupId>
				<artifactId>maven-pax-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<!-- | the following instructions build a simple set of public/private 
					classes into an OSGi bundle -->
				<configuration>
					<instructions>
						<Bundle-Activator>org.opennaas.extensions.quantum.Activator</Bundle-Activator>
						<Import-Package>
							javax.persistence,
							org.slf4j,
							*
						</Import-Package>
					</instructions>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.cxf</groupId>
										<artifactId>cxf-wadl2java-plugin</artifactId>
										<versionRange>[${cxf.version},)</versionRange>
										<goals>
											<goal>wadl2java</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<!-- Maven parent  -->
	<parent>
		<artifactId>org.opennaas.extensions.bundles</artifactId>
		<groupId>org.opennaas</groupId>
		<version>0.28</version>
	</parent>
	<!--  POM id -->
	<artifactId>org.opennaas.extensions.queuemanager</artifactId>
	<!--  Maven configuration -->
	<modelVersion>4.0.0</modelVersion>
	<packaging>bundle</packaging>
	<name>OpenNaaS :: Queue Manager</name>
	<description>Queue Manager Implementation</description>
	<dependencies>
		<!--  it will be necessary to change the place the  -->
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.resources</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.router.model</artifactId>
		</dependency>

		<!-- 		<dependency>
		    <groupId>org.apache.felix.karaf.shell</groupId>
		    <artifactId>org.apache.felix.karaf.shell.console</artifactId>
  		</dependency>	-->
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.ops4j</groupId>
				<artifactId>maven-pax-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<!--
					| the following instructions build a simple set of public/private
					classes into an OSGi bundle
				-->
				<configuration>
					<instructions>
						<Bundle-Activator>org.opennaas.extensions.queuemanager.Activator</Bundle-Activator>
						<Import-Package>,org.slf4j,
							org.apache.felix.service.command,				<!--  necessary to do karaf commands -->
							*
						</Import-Package>
						<Export-Package>
						org.opennaas.extensions.queuemanager;version="${project.version}"
						</Export-Package>
					</instructions>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>org.opennaas.extensions.bundles</artifactId>
    <groupId>org.opennaas</groupId>
    <version>0.28</version>
  </parent>
  <artifactId>org.opennaas.extensions.sampleresource</artifactId>
  	<!--  Maven configuration -->
  	<modelVersion>4.0.0</modelVersion>
  	<packaging>bundle</packaging>
	<name>OpenNaaS :: Sample Resource </name>
	<description>Sample Resource  Implementation</description>
 	<dependencies>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.resources</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.queuemanager</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.karaf.shell</groupId>
			<artifactId>org.apache.karaf.shell.console</artifactId>
		</dependency>

 	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.ops4j</groupId>
				<artifactId>maven-pax-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<!--
					| the following instructions build a simple set of public/private
					classes into an OSGi bundle
				-->
				<configuration>
					<instructions>
						<Bundle-Activator>org.opennaas.extensions.sampleresource.capability.example.Activator</Bundle-Activator>
						<Import-Package>javax.persistence,org.slf4j,*</Import-Package>
						<Export-Package>
							org.opennaas.extensions.sampleresource.capability.example;version="${project.version}"
						</Export-Package>
						</instructions>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project><?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<!-- Maven parent  -->
	<parent>
		<artifactId>org.opennaas.extensions.bundles</artifactId>
		<groupId>org.opennaas</groupId>
		<version>0.28</version>
	</parent>
	<!--  POM id -->
	<artifactId>org.opennaas.extensions.vcpe</artifactId>
	<!--  Maven configuration -->
	<modelVersion>4.0.0</modelVersion>
	<packaging>bundle</packaging>
	<name>OpenNaaS :: vCPENetwork </name>
	<description>vCPE Network Implementation</description>
	<dependencies>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.resources</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.router.capability.chassis</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.router.capability.ip</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.router.capability.staticroute</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.router.capability.vrrp</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.router.capability.bgp</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.queuemanager</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.router.model</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.network.model</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.bod.capability.l2bod</artifactId>
		</dependency>
		<dependency>
		  <groupId>joda-time</groupId>
		  <artifactId>joda-time</artifactId>
	  	</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
		</dependency>		
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.ops4j</groupId>
				<artifactId>maven-pax-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<!--
					| the following instructions build a simple set of public/private
					classes into an OSGi bundle
				-->
				<configuration>
					<instructions>
						<Bundle-Activator>org.opennaas.extensions.vcpe.Activator</Bundle-Activator>
						<Import-Package>javax.persistence,*</Import-Package>
						<Export-Package>
							org.opennaas.extensions.vcpe.*;version="${project.version}"
						</Export-Package>
					</instructions>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>org.opennaas.extensions.bundles</artifactId>
    <groupId>org.opennaas</groupId>
    <version>0.28</version>
  </parent>
  <artifactId>org.opennaas.extensions.vnmapper</artifactId>
  	<!--  Maven configuration -->
  	<modelVersion>4.0.0</modelVersion>
  	<packaging>bundle</packaging>
	<name>OpenNaaS :: VNMapper Resource </name>
	<description>VNMapper Resource  Implementation</description>
 	<dependencies>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.resources</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.karaf.shell</groupId>
			<artifactId>org.apache.karaf.shell.console</artifactId>
		</dependency>
		<dependency>
		   <groupId>org.opennaas</groupId>
		   <artifactId>org.opennaas.extensions.network.model</artifactId>
		</dependency>
		<dependency>
		   <groupId>org.opennaas</groupId>
		   <artifactId>org.opennaas.extensions.network.repository</artifactId>
		   <scope>test</scope>
		</dependency>		
		
 	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.ops4j</groupId>
				<artifactId>maven-pax-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<!--
					| the following instructions build a simple set of public/private
					classes into an OSGi bundle
				-->
				<configuration>
					<instructions>
						<Bundle-Activator>org.opennaas.extensions.vnmapper.capability.vnmapping.Activator</Bundle-Activator>
						<Import-Package>javax.persistence,org.slf4j,*</Import-Package>
						<Export-Package>
							org.opennaas.extensions.vnmapper.capability.vnmapping;version="${project.version}",
							org.opennaas.extensions.vnmapper;version="${project.version}"
						</Export-Package>
						</instructions>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<parent>
		<groupId>org.opennaas</groupId>
		<artifactId>opennaas</artifactId>
		<version>0.28</version>
	</parent>

	<modelVersion>4.0.0</modelVersion>
	<artifactId>org.opennaas.extensions</artifactId>

	<packaging>pom</packaging>
	<name>OpenNaaS :: Extensions</name>

	<licenses>
		<license>
			<name>GNU General Public License 3</name>
			<url>LICENSE</url>
		</license>
	</licenses>

	<dependencies>
		<!-- OSGI API -->
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.compendium</artifactId>
		</dependency>
		<!-- Unit tests -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.logging</groupId>
			<artifactId>pax-logging-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.logging</groupId>
			<artifactId>pax-logging-service</artifactId>
		</dependency>
	</dependencies>

	<modules>
		<module>bundles</module>
	</modules>

	<build>
		<!--
			<pluginManagement> <plugins> <plugin>
			<groupId>com.google.code.maven-license-plugin</groupId>
			<artifactId>maven-license-plugin</artifactId>
			</plugin> </plugins> </pluginManagement>
		-->
		<plugins>
			<!--
				<plugin> <groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.1.2</version> <executions> <execution>
				<id>attach-sources</id> <phase>verify</phase> <goals>
				<goal>jar-no-fork</goal> </goals> </execution> </executions>
				</plugin>
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
			</plugin>
			<!--<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>enforce-versions</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireJavaVersion>
									<version>1.6</version>
								</requireJavaVersion>
								<requireOS> <family>unix</family> </requireOS>
								<requireMavenVersion>
									<version>3.0.3</version>
								</requireMavenVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>-->
			<plugin>
				<groupId>org.apache.karaf.tooling</groupId>
				<artifactId>features-maven-plugin</artifactId>
			</plugin>
			<plugin>
			    <groupId>org.codehaus.mojo</groupId>
			    <artifactId>license-maven-plugin</artifactId>
			    <configuration>
			        <verbose>false</verbose>
			    </configuration>
			    <executions>
			        <execution>
			            <id>extensions-license</id>
			            <goals>
			                <goal>update-file-header</goal>
			            </goals>
			            <phase>compile</phase>
			            <configuration>
			                <licenseName>apache_v2</licenseName>
			                <roots>
			                    <root>src/main/java</root>
			                    <root>src/test/java</root>
			                </roots>
			            </configuration>
			        </execution>
			    </executions>
			</plugin>					
		</plugins>
	</build>
</project>
<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<artifactId>org.opennaas.itests</artifactId>
		<groupId>org.opennaas</groupId>
		<version>0.28</version>
	</parent>

	<artifactId>org.opennaas.itests.bod</artifactId>
	<modelVersion>4.0.0</modelVersion>
	<name>OpenNaaS :: iTests :: BoD</name>
	<packaging>jar</packaging>

	<dependencies>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.resources</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
  			<artifactId>org.opennaas.extensions.bod.capability.l2bod</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.network.model</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.queuemanager</artifactId>
		</dependency>	
		<dependency>
			<groupId>org.opennaas.itests</groupId>
			<artifactId>org.opennaas.itests.helpers</artifactId>
		</dependency>
		
		
	</dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.opennaas</groupId>
		<artifactId>org.opennaas.itests</artifactId>
		<version>0.28</version>
		<relativePath>../../</relativePath>
	</parent>
	<artifactId>org.opennaas.itests.circuitprovisioning.internal</artifactId>
	<name>OpenNaaS :: iTests :: CircuitProvisioning :: Internal</name>
	<packaging>jar</packaging>

	<dependencies>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.resources</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.genericnetwork</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.openflowswitch.driver.floodlight</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas.itests</groupId>
			<artifactId>org.opennaas.itests.helpers</artifactId>
		</dependency>

		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

</project><?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<artifactId>org.opennaas.itests</artifactId>
		<groupId>org.opennaas</groupId>
		<version>0.28</version>
	</parent>

	<artifactId>org.opennaas.itests.core</artifactId>
	<modelVersion>4.0.0</modelVersion>
	<name>OpenNaaS :: iTests :: Core</name>
	<packaging>jar</packaging>

	<dependencies>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.resources</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.tests-mockprofile</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.queuemanager</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas.itests</groupId>
			<artifactId>org.opennaas.itests.helpers</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.protocols.netconf</artifactId>
		</dependency>
		
	</dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<!-- Skip /itests/pom.xml and use root's as parent to avoid cyclic dependency 
			on platform -->
		<artifactId>opennaas</artifactId>
		<groupId>org.opennaas</groupId>
		<version>0.28</version>
		<relativePath>../..</relativePath>
	</parent>

	<name>OpenNaaS :: iTests :: Helpers</name>
	<groupId>org.opennaas.itests</groupId>
	<artifactId>org.opennaas.itests.helpers</artifactId>
	<modelVersion>4.0.0</modelVersion>
	<packaging>bundle</packaging>

		<dependencies>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.resources</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.gogo.runtime</artifactId>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.exam</groupId>
			<artifactId>pax-exam-junit4</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.openengsb.labs.paxexam.karaf</groupId>
			<artifactId>paxexam-karaf-container</artifactId>
			<scope>compile</scope>
		</dependency>
		<!-- Required for createRestClient -->
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-bundle-minimal</artifactId>
			<version>2.7.4</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-server</artifactId>
		</dependency>

		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlet</artifactId>
		</dependency>

		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-http</artifactId>
		</dependency>

		<!-- Jackson (old version of Jackson, instead of 2.x, due to bug integrating 
			with CXF DOSGi http://cxf.547215.n5.nabble.com/Using-Jackson-as-JSON-body-reader-writer-with-DOSGi-td5729257.html) -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
		</dependency>
            
            
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.ops4j</groupId>
				<artifactId>maven-pax-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<!-- | the following instructions build a simple set of public/private 
					classes into an OSGi bundle -->
				<configuration>
					<instructions>

						<Import-Package>
							org.ops4j.pax.exam.junit;resolution:=optional,
							com.google.common.*;resolution:=optional,
							org.slf4j,
							org.osgi.framework,
							org.apache.commons.lang;version="2.4",
							*
						</Import-Package>
						<!-- | assume public classes are in the top package, and private classes 
							are under ".internal" -->
						<Export-Package>
							org.opennaas.itests.helpers;version="${project.version}",
							org.opennaas.itests.helpers.server;version="${project.version}",
						</Export-Package>
					</instructions>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.opennaas</groupId>
		<artifactId>org.opennaas.itests</artifactId>
		<version>0.28</version>
		<relativePath>../../</relativePath>		
	</parent>
	<artifactId>org.opennaas.itests.ip.opener</artifactId>
	<name>OpenNaaS :: iTests :: IP :: Opener</name>
	<packaging>jar</packaging>

	<dependencies>

		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.resources</artifactId>
		</dependency>

		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.router.repository</artifactId>
		</dependency>

		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.router.model</artifactId>
		</dependency>

		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.queuemanager</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.router.capability.ip</artifactId>
		</dependency>

		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.router.actionsets.opener</artifactId>
		</dependency>

		<dependency>
			<groupId>org.opennaas.itests</groupId>
			<artifactId>org.opennaas.itests.helpers</artifactId>
		</dependency>

		<dependency>
			<groupId>net.i2cat.netconf</groupId>
			<artifactId>netconf4j</artifactId>
		</dependency>

	</dependencies>

</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.opennaas</groupId>
		<artifactId>org.opennaas.itests</artifactId>
		<version>0.28</version>
		<relativePath>../../</relativePath>
	</parent>
	<artifactId>org.opennaas.itests.monitoring.floodlight</artifactId>
	<name>OpenNaaS :: iTests :: Monitoring :: Floodlight</name>
	<packaging>jar</packaging>

	<dependencies>

		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.resources</artifactId>
		</dependency>

		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.openflowswitch</artifactId>
		</dependency>

		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.openflowswitch.driver.floodlight</artifactId>
		</dependency>

		<dependency>
			<groupId>org.opennaas.itests</groupId>
			<artifactId>org.opennaas.itests.helpers</artifactId>
		</dependency>

	</dependencies>


</project><?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<artifactId>org.opennaas.itests</artifactId>
		<groupId>org.opennaas</groupId>
		<version>0.28</version>
	</parent>

	<artifactId>org.opennaas.itests.nclmonitoring</artifactId>
	<modelVersion>4.0.0</modelVersion>
	<name>OpenNaaS :: iTests :: NCL Monitoring</name>
	<packaging>jar</packaging>

	<dependencies>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.resources</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas.itests</groupId>
			<artifactId>org.opennaas.itests.helpers</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.genericnetwork</artifactId>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<scope>test</scope>
		</dependency>
 	</dependencies>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.opennaas</groupId>
    <artifactId>org.opennaas.itests</artifactId>
    <version>0.28</version>
    <relativePath>../../</relativePath>
  </parent>
  <artifactId>org.opennaas.itests.nettopology.internal</artifactId>
  <name>OpenNaaS :: iTests :: NetTopology :: Internal</name>
  <packaging>jar</packaging>  
  
  <dependencies>
	
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.resources</artifactId>
		</dependency>  
		
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.genericnetwork</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.opennaas.itests</groupId>
			<artifactId>org.opennaas.itests.helpers</artifactId>
		</dependency>

  </dependencies>
  
</project><?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<artifactId>org.opennaas.itests</artifactId>
		<groupId>org.opennaas</groupId>
		<version>0.28</version>
	</parent>

	<artifactId>org.opennaas.itests.network</artifactId>
	<modelVersion>4.0.0</modelVersion>
	<name>OpenNaaS :: iTests :: Network</name>
	<packaging>jar</packaging>

	<dependencies>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.resources</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas.itests</groupId>
			<artifactId>org.opennaas.itests.helpers</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.queuemanager</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.router.repository</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.network.capability.queue</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.network.capability.ospf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.network.capability.basic</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.router.actionsets.junos</artifactId>
		</dependency>
		
 	</dependencies>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.opennaas</groupId>
		<artifactId>org.opennaas.itests</artifactId>
		<version>0.28</version>
		<relativePath>../../</relativePath>
	</parent>
	<artifactId>org.opennaas.itests.openflowforwarding.floodlight</artifactId>
	<name>OpenNaaS :: iTests :: OpenflowForwarding :: Floodlight</name>
	<packaging>jar</packaging>

	<dependencies>
		
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.resources</artifactId>
		</dependency>

		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.openflowswitch</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.openflowswitch.driver.floodlight</artifactId>
		</dependency>

		<dependency>
			<groupId>org.opennaas.itests</groupId>
			<artifactId>org.opennaas.itests.helpers</artifactId>
		</dependency>

	</dependencies>

</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.opennaas</groupId>
    <artifactId>org.opennaas.itests</artifactId>
    <version>0.28</version>
  </parent>
  <groupId>org.opennaas.itests.openflowswitch</groupId>
  <artifactId>org.opennaas.itests.openflowswitch</artifactId>
  <name>OpenNaaS :: iTests :: Openflow Switch</name>
  <packaging>jar</packaging>  
  
  <dependencies>
	
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.resources</artifactId>
		</dependency>  
		
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.openflowswitch</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.openflowswitch.driver.floodlight</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas.itests</groupId>
			<artifactId>org.opennaas.itests.helpers</artifactId>
		</dependency>

  </dependencies>
  
</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.opennaas</groupId>
		<artifactId>org.opennaas.itests</artifactId>
		<version>0.28</version>
		<relativePath>../../</relativePath>
	</parent>
	<artifactId>org.opennaas.itests.pathfinding.internal</artifactId>
	<name>OpenNaaS :: iTests :: PathFinding :: Internal</name>
	<packaging>jar</packaging>

	<dependencies>

		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.resources</artifactId>
		</dependency>

		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.genericnetwork</artifactId>
		</dependency>

		<dependency>
			<groupId>org.opennaas.itests</groupId>
			<artifactId>org.opennaas.itests.helpers</artifactId>
		</dependency>

	</dependencies>

</project><?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<parent>
        <groupId>org.opennaas</groupId>
        <artifactId>opennaas</artifactId>
        <version>0.28</version>
	</parent>

	<artifactId>org.opennaas.itests</artifactId>
	<modelVersion>4.0.0</modelVersion>
	<name>OpenNaaS :: iTests</name>
	<packaging>pom</packaging>

	<modules>
		<module>helpers</module>

		<module>core</module>
		<module>router</module>
		<module>network</module>
		<module>roadm</module>
		<module>bod</module>
		<module>vcpe</module>
		<module>vnmapper</module>
		<module>security</module>
		<module>openflowswitch</module>
		<module>ofertie.ncl</module>
		<module>openflowforwarding/floodlight</module>
		<module>monitoring/floodlight</module>
		<module>ip/opener</module>
		<module>sampleresource</module>
		<module>vrrp/junos10</module>
		<module>nettopology/internal</module>
		<module>pathfinding/internal</module>
		<module>nclmonitoring</module>
		<module>circuitprovisioning/internal</module>
	</modules>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.swissbox</groupId>
			<artifactId>pax-swissbox-framework</artifactId>
		</dependency>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.compendium</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>platform</artifactId>
			<version>${project.version}</version>
			<type>zip</type>
			<scope>test</scope>
			<exclusions>
				<!-- This exclusion is recommended by the Karaf test
				     container manual to ensure compatibility with
				     Eclipse. -->
				<exclusion>
					<groupId>org.apache.karaf.shell</groupId>
					<artifactId>org.apache.karaf.shell.dev</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.servicemix.tooling</groupId>
				<artifactId>depends-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>generate-depends-file</id>
						<goals>
							<goal>generate-depends-file</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
			    <groupId>org.codehaus.mojo</groupId>
			    <artifactId>license-maven-plugin</artifactId>
			    <configuration>
			        <verbose>false</verbose>
			    </configuration>
			    <executions>
			        <execution>
			            <id>extensions-license</id>
			            <goals>
			                <goal>update-file-header</goal>
			            </goals>
			            <phase>compile</phase>
			            <configuration>
			                <licenseName>apache_v2</licenseName>
			                <roots>
			                    <root>src/main/java</root>
			                    <root>src/test/java</root>
			                </roots>
			            </configuration>
			        </execution>
			    </executions>
			</plugin>			
		</plugins>
	</build>
</project>
<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<artifactId>org.opennaas.itests</artifactId>
		<groupId>org.opennaas</groupId>
		<version>0.28</version>
	</parent>

	<artifactId>org.opennaas.itests.roadm</artifactId>
	<modelVersion>4.0.0</modelVersion>
	<name>OpenNaaS :: iTests :: ROADM</name>
	<packaging>jar</packaging>

	<dependencies>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.resources</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.queuemanager</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.roadm.repository</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.roadm.capability.monitoring</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.roadm.capability.connections</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.roadm.actionsets.wonesys</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.roadm.protocols.wonesys</artifactId>
		</dependency>
		<dependency>
			<groupId>com.wonesys</groupId>
			<artifactId>org.opennaas.extensions.com.wonesys.emsModule</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas.itests</groupId>
			<artifactId>org.opennaas.itests.helpers</artifactId>
		</dependency>
		
		<!-- FIXME OpticalSwitchFactory must be moved to a roadm bundle. -->
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.router.model</artifactId>
		</dependency>
		
	</dependencies>

	<!-- FIXME Why is this necessary? -->
	<build>
		<plugins>
          <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-surefire-plugin</artifactId>
              <configuration>
                  <excludes>
                      <exclude>**/WonesysTransportTest.class</exclude>
                  </excludes>
              </configuration>
          </plugin>
		</plugins>
	</build>

</project>
<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<artifactId>org.opennaas.itests</artifactId>
		<groupId>org.opennaas</groupId>
		<version>0.28</version>
	</parent>

	<artifactId>org.opennaas.itests.router</artifactId>
	<modelVersion>4.0.0</modelVersion>
	<name>OpenNaaS :: iTests :: Router</name>
	<packaging>jar</packaging>

	<dependencies>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.resources</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.router.repository</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.router.model</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.queuemanager</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.router.capability.chassis</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.router.capability.staticroute</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.router.capability.ospf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.router.capability.ospfv3</artifactId>
		</dependency>		
	    <dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.router.capability.gretunnel</artifactId>
	    </dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.router.capability.ip</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.router.actionsets.junos</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId> 
			<artifactId>org.opennaas.extensions.router.actionsets.opener</artifactId>
		</dependency>		
		<dependency>
			<groupId>org.opennaas.itests</groupId>
			<artifactId>org.opennaas.itests.helpers</artifactId>
		</dependency>		
		<dependency>
			<groupId>net.i2cat.netconf</groupId>
			<artifactId>netconf4j</artifactId>
		</dependency>

	</dependencies>

</project>
<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.opennaas</groupId>
		<artifactId>org.opennaas.itests</artifactId>
		<version>0.28</version>
	</parent>
	<artifactId>org.opennaas.itests.sampleresource</artifactId>
	<name>OpenNaaS :: iTests :: Sample Resource</name>

	<dependencies>

		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.resources</artifactId>
		</dependency>

		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.sampleresource</artifactId>
		</dependency>

		<dependency>
			<groupId>org.opennaas.itests</groupId>
			<artifactId>org.opennaas.itests.helpers</artifactId>
		</dependency>

	</dependencies>

</project>
<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<artifactId>org.opennaas.itests</artifactId>
		<groupId>org.opennaas</groupId>
		<version>0.28</version>
	</parent>

	<artifactId>org.opennaas.itests.security</artifactId>
	<modelVersion>4.0.0</modelVersion>
	<name>OpenNaaS :: iTests :: Security</name>
	<packaging>jar</packaging>

	<dependencies>
		<dependency>
			<groupId>org.opennaas.itests</groupId>
			<artifactId>org.opennaas.itests.helpers</artifactId>
		</dependency>		
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.resources</artifactId>
		</dependency>
	</dependencies>

</project>
<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<artifactId>org.opennaas.itests</artifactId>
		<groupId>org.opennaas</groupId>
		<version>0.28</version>
	</parent>

	<artifactId>org.opennaas.itests.vcpe</artifactId>
	<modelVersion>4.0.0</modelVersion>
	<name>OpenNaaS :: iTests :: VCPENetwork</name>
	<packaging>jar</packaging>

	<dependencies>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.resources</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.vcpe</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas.itests</groupId>
			<artifactId>org.opennaas.itests.helpers</artifactId>
		</dependency>
	</dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>org.opennaas.itests</artifactId>
    <groupId>org.opennaas</groupId>
    <version>0.28</version>
  </parent>
  
  <artifactId>org.opennaas.itests.vnmapper</artifactId>
  <modelVersion>4.0.0</modelVersion>
  <name>OpenNaaS :: iTests :: VNMapper</name>
  <packaging>jar</packaging>

	<dependencies>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.resources</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.vnmapper</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.network.capability.basic</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas.itests</groupId>
			<artifactId>org.opennaas.itests.helpers</artifactId>
		</dependency>
	</dependencies>  
  
  
</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<artifactId>org.opennaas.itests</artifactId>
		<groupId>org.opennaas</groupId>
		<version>0.28</version>
		<relativePath>../../</relativePath>
	</parent>

	<artifactId>org.opennaas.itests.vrrp.junos10</artifactId>
	<modelVersion>4.0.0</modelVersion>
	<name>OpenNaaS :: iTests :: VRRP :: Junos 10</name>
	<packaging>jar</packaging>

	<dependencies>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.resources</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.router.repository</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.router.model</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.queuemanager</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.router.capability.chassis</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.router.actionsets.junos</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas.itests</groupId>
			<artifactId>org.opennaas.itests.helpers</artifactId>
		</dependency>
		<dependency>
			<groupId>net.i2cat.netconf</groupId>
			<artifactId>netconf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>net.i2cat</groupId>
			<artifactId>netconf-server</artifactId>
			<version>${netconf-server.version}</version>
		</dependency>
		<dependency>
			<groupId>xmlunit</groupId>
			<artifactId>xmlunit</artifactId>
			<version>1.5</version>
		</dependency>
	</dependencies>

</project><?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<artifactId>opennaas</artifactId>
		<groupId>org.opennaas</groupId>
		<version>0.28</version>
	</parent>

	<packaging>pom</packaging>
	<name>OpenNaaS :: Platform</name>
	<artifactId>platform</artifactId>

	<properties>
		<servicemix.path>apache-servicemix-${servicemix.version}</servicemix.path>
	</properties>

	<dependencies>
		<!-- We must list all the things we want to include in the distribution. 
			Otherwise there is no guarantee that Maven has build those artifacts first. -->
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>karafbranding-opennaas</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.hsqldb</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.persistence</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.resources</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.tests-mockprofile</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.features</artifactId>
		</dependency>

		<dependency>
			<groupId>org.opennaas.itests</groupId>
			<artifactId>org.opennaas.itests.helpers</artifactId>
		</dependency>		
		
		<dependency>
			<groupId>org.apache.servicemix</groupId>
			<artifactId>apache-servicemix</artifactId>
			<type>tar.gz</type>
		</dependency>
		

	</dependencies>

	<pluginRepositories>
		<!-- Codehause Snapshots - NSIS plugin requirement -->
		<pluginRepository>
			<id>Codehaus Snapshots</id>
			<url>http://nexus.codehaus.org/snapshots/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</pluginRepository>
	</pluginRepositories>

	<build>
		<plugins>
			<plugin>
				<!-- Unpack servicemix. The assembly will use this when packaging opennaas. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack-apache-servicemix</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.apache.servicemix</groupId>
									<artifactId>apache-servicemix</artifactId>
									<type>tar.gz</type>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<!-- Build a system repository with the artifacts we need. The assembly 
					will include this when packaging opennaas. Build following this guide: http://fusesource.com/docs/esb/4.4/esb_deploy_osgi/Locate-CustomRepo.html -->
				<groupId>org.apache.karaf.tooling</groupId>
				<artifactId>features-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-features-to-repo</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>add-features-to-repo</goal>
						</goals>
						<configuration>
							<karafVersion>${karaf.version}</karafVersion>
							<descriptors>
								<!-- List taken from featuresRepositories in org/apache/servicemix/apache-servicemix/${servicemix.version}/etc/org.apache.karaf.features.cfg -->
								<!-- Some of they may be unused -->
								<descriptor>mvn:org.apache.karaf.assemblies.features/standard/${karaf.version}/xml/features</descriptor>
								<descriptor>mvn:org.apache.karaf.assemblies.features/enterprise/${karaf.version}/xml/features</descriptor>
								<descriptor>mvn:org.apache.servicemix.nmr/apache-servicemix-nmr/${nmr.version}/xml/features</descriptor>
								<descriptor>mvn:org.apache.servicemix/apache-servicemix/${servicemix.version}/xml/features</descriptor>
								<descriptor>mvn:org.apache.camel.karaf/apache-camel/${camel.version}/xml/features</descriptor>
								<!-- <descriptor>mvn:org.apache.activemq/activemq-karaf/5.5.1-fuse-03-06/xml/features</descriptor> -->
								<!-- Other featuresRepositories our ones depend on -->
								<!-- Our featuresRepositories -->
								<descriptor>mvn:org.opennaas/org.opennaas.core.features/${project.version}/xml/features</descriptor>
								<descriptor>mvn:org.opennaas/org.opennaas.extensions.all.features/${project.version}/xml/features</descriptor>
							
							</descriptors>
							<addTransitiveFeatures>true</addTransitiveFeatures>
							<features>
								<feature version="${project.version}">opennaas-core</feature>
								<feature version="${project.version}">opennaas-extensions-all</feature> 
							</features>
							<repository>target/system</repository>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<id>make-distribution</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>src/main/assembly/opennaas.xml</descriptor>
							</descriptors>
							<formats>
								<format>dir</format>
								<format>tar.gz</format>
								<format>zip</format>
							</formats>
							<appendAssemblyId>false</appendAssemblyId>
							<finalName>opennaas-${project.version}</finalName>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>win-installer</id>
			<build>
				<plugins>
					<!-- NSIS plugin for producing Windows installer -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>nsis-maven-plugin</artifactId>
						<version>1.0-alpha-1</version>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>generate-headerfile</goal>
									<goal>make</goal>
								</goals>
								<configuration>
									<scriptFile>src/nsis/opennaas.nsi</scriptFile>
									<outputFile>opennaas-${project.version}-installer.exe</outputFile>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.opennaas</groupId>
	<artifactId>opennaas</artifactId>
	<version>0.28</version>
	<name>OpenNaaS</name>
	<packaging>pom</packaging>

	<url>http://www.mantychore.eu/</url>

	<description>
        OpenNaaS - Network as a Service platform
    </description>

	<organization>
		<name>Fundació Privada i2CAT, Internet i Innovació a Catalunya</name>
		<url>http://www.i2cat.net/en</url>
	</organization>

    <licenses>
        <license>
            <name>GNU Lesser General Public License 3</name>
            <url>http://www.gnu.org/licenses/lgpl-3.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<ant.version>1.7.0_4</ant.version>
		<activemq.version>5.7.0</activemq.version>
		<apache.oro.version>2.0.8_6</apache.oro.version>
		<axiom.version>1.2.12</axiom.version>
		<beanutils.version>1.8.0</beanutils.version>
		<camel.version>2.10.6</camel.version>
		<commons.logging.version>1.1.1</commons.logging.version>
		<commons.codec.version>1.4</commons.codec.version>
		<commons.collections.version>3.2.1_1</commons.collections.version>
		<commons.configuration.version>1.6</commons.configuration.version>
		<commons.dbcp.version>1.2.2_7</commons.dbcp.version>
		<commons.digester.version>2.1</commons.digester.version>
		<commons.io.version>1.4</commons.io.version>
		<commons.jxpath.version>1.2_5</commons.jxpath.version>
		<commons-lang.version>2.5</commons-lang.version>
		<commons.net.version>1.4.1_3</commons.net.version>
		<commons.pool.version>1.5.4</commons.pool.version>
		<cxf.version>2.7.7</cxf.version>
		<cxf.dosgi.version>1.5.0</cxf.dosgi.version>
		<dom4j.version>1.6.1_5</dom4j.version>
		<easymock.version>3.1</easymock.version>
		<powermock.version>1.5.4</powermock.version>
		<felix.eventadmin.version>1.2.14</felix.eventadmin.version>
		<felix.gogo.version>0.10.0</felix.gogo.version>
		<geronimo.jaxws.version>1.0</geronimo.jaxws.version>
		<geronimo.jpa.version>1.1</geronimo.jpa.version>
		<geronimo.jta.version>1.1.1</geronimo.jta.version>
		<geronimo.wsmetadata.version>1.1.3</geronimo.wsmetadata.version>
		<geronimo.servlet.version>1.1.2</geronimo.servlet.version>
		<guava.version>16.0.1</guava.version>
		<hibernate.version>3.6.9.Final</hibernate.version>
		<hibernate-validator>4.3.0.Final</hibernate-validator>
		<hibernate.jpa-api.version>2.0-cr-1</hibernate.jpa-api.version>
		<hsqldb.version>1.8.0.10</hsqldb.version>
		<!-- Jackson (old version of Jackson, instead of 2.x, due to bug integrating with CXF DOSGi
			http://cxf.547215.n5.nabble.com/Using-Jackson-as-JSON-body-reader-writer-with-DOSGi-td5729257.html)-->	
		<jackson.version>1.9.12</jackson.version>
		<javamail.version>1.4.4</javamail.version>
		<javax.ws.rs.version>2.0.0.m10</javax.ws.rs.version>
		<jaxb.impl.version>2.2.1.1_1</jaxb.impl.version>		
		<jersey-bundle.version>1.10-b01</jersey-bundle.version>	
		<jersey-core.version>1.12</jersey-core.version>
		<jetty.version>7.5.4.v20111024</jetty.version>
		<jodatime.version>2.1</jodatime.version>
		<joda-time-jsptags.version>1.1.1</joda-time-jsptags.version>
		<jdom.version>1.1_4</jdom.version>
		<jsonassert.version>1.2.0</jsonassert.version>					
		<jslt.version>1.2</jslt.version>
		<jsp-api.version>2.1</jsp-api.version>
		<junit.version>4.10</junit.version>
		<karaf.version>2.2.11</karaf.version>
		<log4j.version>1.2.16</log4j.version>
		<mantychore.version>${project.version}</mantychore.version>
		<neethi.version>3.0.0</neethi.version>
		<netconf4j.version>0.0.8</netconf4j.version>
		<nmr.version>1.6.1</nmr.version>
		<openjpa.version>2.2.0</openjpa.version>
		<opennaas.version>${project.version}</opennaas.version>
		<opensaml.version>2.4.1_1</opensaml.version>
		<oro.version>2.0.8_4</oro.version>
		<osgi.version>4.2.0</osgi.version>
		<pax.exam2.version>2.3.1</pax.exam2.version>
		<paxexam-karaf-container.version>0.5.1</paxexam-karaf-container.version>
		<pax.logging.version>1.6.5</pax.logging.version>
		<plexus.api.version>1.0-alpha-32</plexus.api.version>
		<plexus.utils.version>2.0.5</plexus.utils.version>
		<servicemix.version>4.5.2</servicemix.version>
		<servicemix.specs.version>2.2.0</servicemix.specs.version>
		<servicemix.velocity.version>1.7_1</servicemix.velocity.version>
		<servicemix.xerces.version>2.11.0_1</servicemix.xerces.version>
		<servicemix.cglib.version>2.1_3_6</servicemix.cglib.version>
		<servicemix.saaj.specs>1.8.0</servicemix.saaj.specs>
		<servicemix.serp.version>1.13.1_4</servicemix.serp.version>
		<servicemix.javax-inject.version>1_2</servicemix.javax-inject.version>
		<!-- 
			Both versions of ehcache are linked, thus they must be updated together. 
			ehcache.version is used for package version, servicemix.ehcache.version is used for bundles
		-->
		<!--  <ehcache.version>1.6.2</ehcache.version> -->
		<ehcache.version>1.6.2</ehcache.version> 
		<servicemix.ehcache.version>1.6.2_2</servicemix.ehcache.version>
		<servlet-api.version>2.5</servlet-api.version>
		<slf4j.version>1.6.1</slf4j.version>
		<snmp4j.version>2.1.0_1</snmp4j.version>
		<spring.version>3.0.7.RELEASE</spring.version>
		<spring.security.version>3.0.8.RELEASE</spring.security.version>
		<spring.osgi.version>1.2.1</spring.osgi.version>
		<stax2.api.version>3.1.1</stax2.api.version>
		<tiles-api.version>2.2.2</tiles-api.version>
		<tiles-core.version>2.2.2</tiles-core.version>
		<tiles-jsp.version>2.2.2</tiles-jsp.version>
		<validation-api>1.0.0.GA</validation-api>
		<westhawk.snmp.version>4_13</westhawk.snmp.version>
		<woodstox.asl.version>4.2.0</woodstox.asl.version>
		<wsdl4j.version>1.6.2_5</wsdl4j.version>
		<xbean.version>3.9</xbean.version>
		<xmlschema.version>1.4.7</xmlschema.version>
		<xml.resolver.version>1.2_1</xml.resolver.version>
		<xml.soap.api.version>1.3.7</xml.soap.api.version>
		<!-- OpenNaaS extensions versions -->
		<opennaas.gim.version>0.28</opennaas.gim.version>
		<!-- Maven license plugin version -->
		<license.plugin.version>1.6</license.plugin.version>
		
		<!-- Properties for license -->
		<project.inceptionYear>2007</project.inceptionYear>
		<project.organization.name>Fundació Privada i2CAT, Internet i Innovació a Catalunya</project.organization.name>
		<project.name>OpenNaaS</project.name>
		
		<!-- Netconf server for itests -->
		<netconf-server.version>0.0.3</netconf-server.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- Our own modules -->
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>platform</artifactId>
				<version>${project.version}</version>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.core.hsqldb</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.core.persistence</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.core.resources</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.bod.actionsets.dummy</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.bod.capability.l2bod</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.bod.autobahn</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.core.tests-mockprofile</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>karafbranding-opennaas</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.core.features</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.core.security</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.transports.sockets</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.protocols.cli</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.protocols.tl1</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.roadm.protocols.wonesys</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.roadm.actionsets.wonesys</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.roadm.capability.connections</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.roadm.capability.monitoring</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.roadm.repository</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.wonesys</groupId>
				<artifactId>org.opennaas.extensions.com.wonesys.emsModule</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.router.model</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.queuemanager</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.protocols.netconf</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.fragment.velocity</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.router.actionsets.junos</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.router.actionsets.opener</artifactId>
				<version>${project.version}</version>
			</dependency>				
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.router.capability.chassis</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.router.capability.ip</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.router.capability.vlanbridge</artifactId>
				<version>${project.version}</version>				
			</dependency>			
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.router.repository</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
			 	<groupId>org.opennaas</groupId>
			 	<artifactId>org.opennaas.extensions.router.capabilities.api</artifactId>
			 	<version>${project.version}</version>
			</dependency>			
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.network.capability.basic</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.network.model</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.network.repository</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.network.capability.ospf</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.network.capability.queue</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.router.capability.gretunnel</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.router.capability.ospf</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.router.capability.ospfv3</artifactId>
				<version>${project.version}</version>
			</dependency>			
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.router.capability.staticroute</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.router.capability.bgp</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.router.capability.vrrp</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.router.capability.l3vlan</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.router.capability.linkaggregation</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.sampleresource</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.macbridge.capability.vlanawarebridge</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.macbridge.model</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.macbridge.ios.resource</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.vcpe</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.vnmapper</artifactId>
				<version>${project.version}</version>
			</dependency>	
	  		<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.quantum</artifactId>
				<version>${project.version}</version>				
			</dependency>
	  		<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.openflowswitch</artifactId>
				<version>${project.version}</version>				
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.openflowswitch.driver.floodlight</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.gim</artifactId>
				<version>${opennaas.gim.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.pdu</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.powernet</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
	 			<artifactId>org.opennaas.extensions.ofertie.ncl</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opennaas</groupId>
				<artifactId>org.opennaas.extensions.genericnetwork</artifactId>
				<version>${project.version}</version>
			</dependency>
			
			<!-- iTests -->
			<dependency>
				<groupId>org.opennaas.itests</groupId>
				<artifactId>org.opennaas.itests.helpers</artifactId>
				<version>${project.version}</version>
			</dependency>
			<!-- Netconf4j -->
			<dependency>
				<groupId>net.i2cat.netconf</groupId>
				<artifactId>netconf4j</artifactId>
				<version>${netconf4j.version}</version>
			</dependency>
			<!-- Digester, velocity and deps -->
			<dependency>
				<groupId>xerces</groupId>
				<artifactId>xercesImpl</artifactId>
				<version>2.9.1</version>
			</dependency>
			<dependency>
				<groupId>commons-configuration</groupId>
				<artifactId>commons-configuration</artifactId>
				<version>${commons.configuration.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.servicemix.bundles</groupId>
				<artifactId>org.apache.servicemix.bundles.xerces</artifactId>
				<version>${servicemix.xerces.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>${commons-lang.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.0.1</version>
			</dependency>
			<dependency>
				<groupId>commons-digester</groupId>
				<artifactId>commons-digester</artifactId>
				<version>${commons.digester.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.servicemix.bundles</groupId>
				<artifactId>org.apache.servicemix.bundles.velocity</artifactId>
				<version>${servicemix.velocity.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-jta_1.1_spec</artifactId>
				<version>${geronimo.jta.version}</version>
			</dependency>
			<!-- Persistence -->
			<dependency>
				<groupId>org.apache.openjpa</groupId>
				<artifactId>openjpa</artifactId>
				<version>${openjpa.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hsqldb</groupId>
				<artifactId>com.springsource.org.hsqldb</artifactId>
				<version>${hsqldb.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-jpa_2.0_spec</artifactId>
				<version>${geronimo.jpa.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.servicemix.bundles</groupId>
				<artifactId>org.apache.servicemix.bundles.commons-dbcp</artifactId>
				<version>${commons.dbcp.version}</version>
			</dependency>
			<dependency>
  				<groupId>org.apache.servicemix.bundles</groupId>
  				<artifactId>org.apache.servicemix.bundles.commons-net</artifactId>
 				<version>${commons.net.version}</version>
			</dependency>
			<!-- OSGI API -->
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.core</artifactId>
				<version>${osgi.version}</version>
			</dependency>
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.compendium</artifactId>
				<version>${osgi.version}</version>
			</dependency>
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.enterprise</artifactId>
				<version>${osgi.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.servicemix.bundles</groupId>
				<artifactId>org.apache.servicemix.bundles.javax-inject</artifactId>
				<version>${servicemix.javax-inject.version}</version>
			</dependency>
			<!-- Karaf -->
			<dependency>
				<groupId>org.apache.karaf.shell</groupId>
				<artifactId>org.apache.karaf.shell.console</artifactId>
				<version>${karaf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.karaf.jaas</groupId>
				<artifactId>org.apache.karaf.jaas.boot</artifactId>
				<version>${karaf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.karaf.jaas</groupId>
				<artifactId>org.apache.karaf.jaas.config</artifactId>
				<version>${karaf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.karaf.jaas</groupId>
				<artifactId>org.apache.karaf.jaas.modules</artifactId>
				<version>${karaf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.osgi.compendium</artifactId>
				<version>1.4.0</version>
			</dependency>
			<!-- Spring Framework -->
			<!-- Core utilities used by other modules.
			    Define this if you use Spring Utility APIs 
			    (org.springframework.core.*/org.springframework.util.*)-->
			<dependency>
			    <groupId>org.springframework</groupId>
			    <artifactId>spring-core</artifactId>
			    <version>${spring.version}</version>
			</dependency>
			<!-- Expression Language (depends on spring-core)
			    Define this if you use Spring Expression APIs 
			    (org.springframework.expression.*)-->
			<dependency>
			    <groupId>org.springframework</groupId>
			    <artifactId>spring-expression</artifactId>
			    <version>${spring.version}</version>
			</dependency>
			<!-- Bean Factory and JavaBeans utilities (depends on spring-core)
			    Define this if you use Spring Bean APIs 
			    (org.springframework.beans.*)-->
			<dependency>
			    <groupId>org.springframework</groupId>
			    <artifactId>spring-beans</artifactId>
			    <version>${spring.version}</version>
			</dependency>
			<!-- Aspect Oriented Programming (AOP) Framework 
			    (depends on spring-core, spring-beans)
			    Define this if you use Spring AOP APIs 
			    (org.springframework.aop.*)-->
			<dependency>
			    <groupId>org.springframework</groupId>
			    <artifactId>spring-aop</artifactId>
			    <version>${spring.version}</version>
			</dependency>
			<!-- Application Context 
			    (depends on spring-core, spring-expression, spring-aop, spring-beans)
			    This is the central artifact for Spring's Dependency Injection Container
			    and is generally always defined-->
			<dependency>
			    <groupId>org.springframework</groupId>
			    <artifactId>spring-context</artifactId>
			    <version>${spring.version}</version>
			</dependency>
			<!-- Various Application Context utilities, including EhCache, JavaMail, Quartz, 
			    and Freemarker integration
			    Define this if you need any of these integrations-->
			<dependency>
			    <groupId>org.springframework</groupId>
			    <artifactId>spring-context-support</artifactId>
			    <version>${spring.version}</version>
			</dependency>
			<!-- Transaction Management Abstraction 
			    (depends on spring-core, spring-beans, spring-aop, spring-context)
			    Define this if you use Spring Transactions or DAO Exception Hierarchy
			    (org.springframework.transaction.*/org.springframework.dao.*)-->
			<dependency>
			    <groupId>org.springframework</groupId>
			    <artifactId>spring-tx</artifactId>
			    <version>${spring.version}</version>
			</dependency>
			<!-- JDBC Data Access Library 
			    (depends on spring-core, spring-beans, spring-context, spring-tx)
			    Define this if you use Spring's JdbcTemplate API 
			    (org.springframework.jdbc.*)-->
			<dependency>
			    <groupId>org.springframework</groupId>
			    <artifactId>spring-jdbc</artifactId>
			    <version>${spring.version}</version>
			</dependency>
			<!-- Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA and iBatis.
			    (depends on spring-core, spring-beans, spring-context, spring-tx)
			    Define this if you need ORM (org.springframework.orm.*)-->
			<dependency>
			    <groupId>org.springframework</groupId>
			    <artifactId>spring-orm</artifactId>
			    <version>${spring.version}</version>
			</dependency>
			<!-- Object-to-XML Mapping (OXM) abstraction and integration with JAXB, JiBX, 
			    Castor, XStream, and XML Beans.
			    (depends on spring-core, spring-beans, spring-context)
			    Define this if you need OXM (org.springframework.oxm.*)-->
			<dependency>
			    <groupId>org.springframework</groupId>
			    <artifactId>spring-oxm</artifactId>
			    <version>${spring.version}</version>
			</dependency>
			<!-- Spring Security -->
			<!-- Contains core authentication and access-contol classes and interfaces, 
				remoting support and basic provisioning APIs. -->
			<dependency>
	    		<groupId>org.springframework.security</groupId>
	    		<artifactId>spring-security-core</artifactId>
			    <version>${spring.security.version}</version>
	 		</dependency> 
	 		<!-- Contains filters and related web-security infrastructure code. 
	 			Anything with a servlet API dependency. You'll need it if you require Spring Security 
	 			web authentication services and URL-based access-control. -->
			<dependency>
	    		<groupId>org.springframework.security</groupId>
	    		<artifactId>spring-security-web</artifactId>
			    <version>${spring.security.version}</version>
	  		</dependency>
	  		<!-- Contains the security namespace parsing code. 
	  			You need it if you are using the Spring Security XML namespace for configuration. 
	  			The main package is org.springframework.security.config. 
	  			None of the classes are intended for direct use in an application. --> 
	  		<dependency>
	    		<groupId>org.springframework.security</groupId>
	    		<artifactId>spring-security-config</artifactId>
			    <version>${spring.security.version}</version>
	  		</dependency>
	  		<!-- Spring Security has its own taglib which provides basic support for accessing 
	  			security information and applying security constraints in JSPs. -->
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-taglibs</artifactId>
			    <version>${spring.security.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-acl</artifactId>
				<version>${spring.security.version}</version>
			</dependency>
			<!-- Required for the ACL cache -->
			<dependency>
				<groupId>org.apache.servicemix.bundles</groupId>
				<artifactId>org.apache.servicemix.bundles.ehcache</artifactId>
				<version>${servicemix.ehcache.version}</version>
			</dependency>
			<!-- Web application development utilities applicable to both Servlet and 
			    Portlet Environments 
			    (depends on spring-core, spring-beans, spring-context)
			    Define this if you use Spring MVC, or wish to use Struts, JSF, or another
			    web framework with Spring (org.springframework.web.*)-->
			<dependency>
			    <groupId>org.springframework</groupId>
			    <artifactId>spring-web</artifactId>
			    <version>${spring.version}</version>
			</dependency>
			<!-- Spring MVC for Servlet Environments 
			    (depends on spring-core, spring-beans, spring-context, spring-web)
			    Define this if you use Spring MVC with a Servlet Container such as 
			    Apache Tomcat (org.springframework.web.servlet.*)-->
			<dependency>
			    <groupId>org.springframework</groupId>
			    <artifactId>spring-webmvc</artifactId>
			    <version>${spring.version}</version>
			</dependency>
			<!-- Spring MVC for Portlet Environments 
			    (depends on spring-core, spring-beans, spring-context, spring-web)
			    Define this if you use Spring MVC with a Portlet Container 
			    (org.springframework.web.portlet.*)-->
			<dependency>
			    <groupId>org.springframework</groupId>
			    <artifactId>spring-webmvc-portlet</artifactId>
			    <version>${spring.version}</version>
			</dependency>
			<!-- Support for testing Spring applications with tools such as JUnit and TestNG
			    This artifact is generally always defined with a 'test' scope for the 
			    integration testing framework and unit testing stubs-->
			<dependency>
			    <groupId>org.springframework</groupId>
			    <artifactId>spring-test</artifactId>
			    <version>${spring.version}</version>
			    <scope>test</scope>
			</dependency>
			<!-- Spring DM -->
			<dependency>
				<groupId>org.springframework.osgi</groupId>
				<artifactId>spring-osgi-extender</artifactId>
				<version>${spring.osgi.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.osgi</groupId>
				<artifactId>spring-osgi-annotation</artifactId>
				<version>${spring.osgi.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.osgi</groupId>
				<artifactId>spring-osgi-core</artifactId>
				<version>${spring.osgi.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.osgi</groupId>
				<artifactId>spring-osgi-mock</artifactId>
				<version>${spring.osgi.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.osgi</groupId>
				<artifactId>spring-osgi-test</artifactId>
				<version>${spring.osgi.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.osgi</groupId>
				<artifactId>spring-osgi-io</artifactId>
				<version>${spring.osgi.version}</version>
			</dependency>
			<!-- Active MQ -->
			<dependency>
				<groupId>org.apache.activemq</groupId>
				<artifactId>activemq-core</artifactId>
				<version>${activemq.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.activemq</groupId>
				<artifactId>kahadb</artifactId>
				<version>${activemq.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.activemq</groupId>
				<artifactId>activemq-ra</artifactId>
				<version>${activemq.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.activemq</groupId>
				<artifactId>activemq-pool</artifactId>
				<version>${activemq.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.activemq</groupId>
				<artifactId>activemq-console</artifactId>
				<version>${activemq.version}</version>
			</dependency>
			<!-- Servlet -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>${servlet-api.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.servlet.jsp</groupId>
				<artifactId>jsp-api</artifactId>
				<version>${jsp-api.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jstl</artifactId>
				<version>${jslt.version}</version>
			</dependency>
			<!-- Tiles -->
			<dependency>
				<groupId>org.apache.tiles</groupId>
				<artifactId>tiles-core</artifactId>
				<version>${tiles-core.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.tiles</groupId>
				<artifactId>tiles-api</artifactId>
				<version>${tiles-api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.tiles</groupId>
				<artifactId>tiles-jsp</artifactId>
				<version>${tiles-jsp.version}</version>
			</dependency>
			<!-- Logging -->
			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>${commons.logging.version}</version>
			</dependency>
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>${log4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>log4j-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.ops4j.pax.logging</groupId>
				<artifactId>pax-logging-api</artifactId>
				<version>${pax.logging.version}</version>
			</dependency>
			<dependency>
				<groupId>org.ops4j.pax.logging</groupId>
				<artifactId>pax-logging-service</artifactId>
				<version>${pax.logging.version}</version>
				<exclusions>
					<exclusion>
						<groupId>log4j</groupId>
						<artifactId>log4j</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- Web services support -->
			<dependency>
				<groupId>org.apache.servicemix.specs</groupId>
				<artifactId>org.apache.servicemix.specs.jsr311-api-1.1</artifactId>
				<version>${servicemix.specs.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.servicemix.specs</groupId>
				<artifactId>org.apache.servicemix.specs.jaxb-api-2.1</artifactId>
				<version>${servicemix.specs.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.servicemix.specs</groupId>
				<artifactId>org.apache.servicemix.specs.jaxb-api-2.2</artifactId>
				<version>${servicemix.specs.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.servicemix.bundles</groupId>
				<artifactId>org.apache.servicemix.bundles.jaxb-impl</artifactId>
				<version>${jaxb.impl.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-jaxws_2.1_spec</artifactId>
				<version>${geronimo.jaxws.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.ws.commons.schema</groupId>
				<artifactId>XmlSchema</artifactId>
				<version>${xmlschema.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-ws-metadata_2.0_spec</artifactId>
				<version>${geronimo.wsmetadata.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.ws.commons.axiom</groupId>
				<artifactId>axiom-impl</artifactId>
				<version>${axiom.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.ws.commons.axiom</groupId>
				<artifactId>axiom-api</artifactId>
				<version>${axiom.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-bundle</artifactId>
				<version>${cxf.version}</version>
				<exclusions>
					<exclusion>
						<groupId>bouncycastle</groupId>
						<artifactId>bcprov-jdk14</artifactId>
					</exclusion>
					<exclusion>
						<groupId>net.java.dev.stax-utils</groupId>
						<artifactId>stax-utils</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.codehaus.jra</groupId>
						<artifactId>jra</artifactId>
					</exclusion>
					<exclusion>
						<groupId>xml-apis</groupId>
						<artifactId>xml-apis</artifactId>
					</exclusion>
					<exclusion>
						<groupId>jaxen</groupId>
						<artifactId>jaxen</artifactId>
					</exclusion>
					<exclusion>
						<groupId>opensaml</groupId>
						<artifactId>opensaml</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-core</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-frontend-jaxws</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
			    <groupId>org.apache.cxf</groupId>
			    <artifactId>cxf-bundle-jaxrs</artifactId>
			    <version>${cxf.version}</version>
			</dependency>			
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-transports-http</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-transports-http-jetty</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-databinding-aegis</artifactId>
				<version>${cxf.version}</version>
			</dependency>	
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-bundle-minimal</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf.dosgi</groupId>
				<artifactId>cxf-dosgi-ri-discovery-local</artifactId>
				<version>${cxf.dosgi.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf.dosgi</groupId>
				<artifactId>cxf-dosgi-ri-dsw-cxf</artifactId>
				<version>${cxf.dosgi.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.plexus</groupId>
				<artifactId>plexus-component-api</artifactId>
				<version>${plexus.api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.plexus</groupId>
				<artifactId>plexus-utils</artifactId>
				<version>${plexus.utils.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.xbean</groupId>
				<artifactId>xbean-spring</artifactId>
				<version>${xbean.version}</version>
			</dependency>
			<dependency>
				<groupId>com.sun.jersey</groupId>
				<artifactId>jersey-core</artifactId>
				<version>${jersey-core.version}</version>
			</dependency>
			<dependency>
				<groupId>com.sun.jersey</groupId>
				<artifactId>jersey-bundle</artifactId>
				<version>${jersey-bundle.version}</version>
			</dependency>
			<!-- Unit tests -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.easymock</groupId>
				<artifactId>easymock</artifactId>
				<version>${easymock.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.easymock</groupId>
				<artifactId>easymockclassextension</artifactId>
				<version>${easymock.version}</version>
				<scope>test</scope>
			</dependency>
			<!-- PowerMock (https://code.google.com/p/powermock/) and
			     Mockito (https://code.google.com/p/mockito/) 
				 test frameworks -->
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-module-junit4</artifactId>
				<version>${powermock.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-api-mockito</artifactId>
				<version>${powermock.version}</version>
				<scope>test</scope>
			</dependency>
			<!-- Integration tests -->
			<dependency>
				<groupId>org.openengsb.labs.paxexam.karaf</groupId>
				<artifactId>paxexam-karaf-container</artifactId>
				<version>${paxexam-karaf-container.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.ops4j.pax.exam</groupId>
				<artifactId>pax-exam-junit4</artifactId>
				<version>${pax.exam2.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.ops4j.pax.swissbox</groupId>
				<artifactId>pax-swissbox-framework</artifactId>
				<version>1.5.0</version>
				<scope>test</scope>
			</dependency>
			<!-- Features -->
			<!--  -->
			<dependency>
				<groupId>org.apache.servicemix</groupId>
				<artifactId>apache-servicemix</artifactId>
				<version>${servicemix.version}</version>
				<type>tar.gz</type>
			</dependency>
			<!-- Misc -->
			<dependency>
				<groupId>westhawk</groupId>
				<artifactId>snmp</artifactId>
				<version>${westhawk.snmp.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.gogo.runtime</artifactId>
				<version>${felix.gogo.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-entitymanager</artifactId>
				<version>${hibernate.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate.java-persistence</groupId>
				<artifactId>jpa-api</artifactId>
				<version>${hibernate.jpa-api.version}</version>
			</dependency>
			<dependency>
				<!-- Guava's Team is releasing Guava as OSGi since 12.0.0 -->
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>
			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>${jodatime.version}</version>
			</dependency>
			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time-jsptags</artifactId>
				<version>${joda-time-jsptags.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>javax.validation</groupId>
				<artifactId>validation-api</artifactId>
				<version>${validation-api}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${hibernate-validator}</version>
			</dependency>
			<!-- Jackson -->
			<!-- Jackson (old version of Jackson, instead of 2.x, due to bug integrating with CXF DOSGi
				http://cxf.547215.n5.nabble.com/Using-Jackson-as-JSON-body-reader-writer-with-DOSGi-td5729257.html)-->
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-mapper-asl</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-xc</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-jaxrs</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<!-- JSON Assert (https://github.com/skyscreamer/JSONassert) -->
			<dependency>
				<groupId>org.skyscreamer</groupId>
				<artifactId>jsonassert</artifactId>
				<version>${jsonassert.version}</version>
			</dependency>			
			
			<!-- Jetty -->
	       <dependency>
	           <groupId>org.eclipse.jetty</groupId>
	           <artifactId>jetty-server</artifactId>
	           <version>${jetty.version}</version>
	       </dependency>
       
		    <dependency>
		       <groupId>org.eclipse.jetty</groupId>
		       <artifactId>jetty-servlet</artifactId>
	           <version>${jetty.version}</version>
		   </dependency>     			
			
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-http</artifactId>
	           <version>${jetty.version}</version>				
			</dependency>

		</dependencies>
	</dependencyManagement>

	<modules>
        <module>core</module>
		<module>extensions</module>
		<module>platform</module>
		<module>itests</module>
		<module>clients</module>
		<!-- <module>utils/new-cim</module> -->
	</modules>
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.5</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.3</version>
					<configuration>
						<tarLongFileMode>gnu</tarLongFileMode>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.karaf.tooling</groupId>
					<artifactId>features-maven-plugin</artifactId>
					<version>${karaf.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<version>2.3.7</version>
					<configuration>
						<instructions>
							<Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
						</instructions>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.ops4j</groupId>
					<artifactId>maven-pax-plugin</artifactId>
					<version>1.5</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>2.1.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.cxf</groupId>
					<artifactId>cxf-java2ws-plugin</artifactId>
					<version>${cxf.version}</version>
					<dependencies>
						<dependency>
							<groupId>org.apache.cxf</groupId>
							<artifactId>cxf-rt-frontend-jaxws</artifactId>
							<version>${cxf.version}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.cxf</groupId>
							<artifactId>cxf-rt-frontend-simple</artifactId>
							<version>${cxf.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.cxf</groupId>
					<artifactId>cxf-wadl2java-plugin</artifactId>
					<version>${cxf.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>1.7</version>
				</plugin>
				<plugin>
					<groupId>org.apache.servicemix.tooling</groupId>
					<artifactId>depends-maven-plugin</artifactId>
					<version>1.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.12</version>
				</plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.ops4j</groupId>
										<artifactId>
											maven-pax-plugin
										</artifactId>
										<versionRange>
											[1.5,)
										</versionRange>
										<goals>
											<goal>compile</goal>
											<goal>testCompile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.servicemix.tooling
										</groupId>
										<artifactId>
											depends-maven-plugin
										</artifactId>
										<versionRange>
											[1.2,)
										</versionRange>
										<goals>
											<goal>
												generate-depends-file
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.cxf
										</groupId>
										<artifactId>
											cxf-java2ws-plugin
										</artifactId>
										<versionRange>
											[2.2.9,)
										</versionRange>
										<goals>
											<goal>java2ws</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.openjpa</groupId>
					<artifactId>openjpa-maven-plugin</artifactId>
					<version>${openjpa.version}</version>
					<dependencies>
						<dependency>
							<groupId>org.apache.openjpa</groupId>
							<artifactId>openjpa</artifactId>
							<version>${openjpa.version}</version>
						</dependency>
						<dependency>
							<groupId>commons-logging</groupId>
							<artifactId>commons-logging</artifactId>
							<version>${commons.logging.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
          			<groupId>org.codehaus.mojo</groupId>
          			<artifactId>license-maven-plugin</artifactId>
          			<version>${license.plugin.version}</version>
        		</plugin>		
			</plugins>
		</pluginManagement>

		<plugins>
			<!--<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>1.0</version>
				<executions>
					<execution>
						<id>enforce-versions</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireJavaVersion>
									<version>1.6</version>
								</requireJavaVersion>
								<requireOS>
									<family>unix</family>
								</requireOS>
								<requireMavenVersion>
									<version>3.0.3</version>
								</requireMavenVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.ops4j</groupId>
				<artifactId>maven-pax-plugin</artifactId>
				<configuration>
					<provision>
						<param>--platform=felix</param>
					</provision>
				</configuration>
				<extensions>true</extensions>
					<!--| uncomment to auto-generate IDE files
						<executions>
						<execution>
						<id>ide-support</id>
						<goals>
						<goal>eclipse</goal>
						</goals>
						</execution>
						</executions>
					-->
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.2.2</version>
				<configuration>
					<autoVersionSubmodules>true</autoVersionSubmodules>
					<tagNameFormat>v@{project.version}</tagNameFormat>
					<pushChanges>false</pushChanges>
					<localCheckout>true</localCheckout>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<repositories>
		<repository>
			<id>maven.i2cat.net</id>
			<name>maven.i2cat.net-releases</name>
			<url>http://maven.i2cat.net:8081/artifactory/libs-release-local</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>i2cat</id>
			<name>i2cat maven repository</name>
			<url>http://maven.i2cat.net:8081/artifactory/libs-release</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>i2cat ext-release-local</id>
			<name>i2cat maven repository for third party libraries</name>
			<url>http://maven.i2cat.net:8081/artifactory/ext-release-local</url>
		</repository>
		<repository>
			<id>i2cat libs-snapshot-local</id>
			<name>maven.i2cat.net-snapshots</name>
			<url>http://maven.i2cat.net:8081/artifactory/libs-snapshot-local</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>interval:1</updatePolicy>
			</snapshots>
		</repository>		
		<repository>
			<id>springsource-external</id>
			<name>SpringSource Enterprise Bundle Repository - External Bundle
				Releases</name>
			<url>http://repository.springsource.com/maven/bundles/external</url>
		</repository>
		<repository>
			<id>springsource-releases</id>
			<name>SpringSource Enterprise Bundle Repository - SpringSource Bundle
				Releases</name>
			<url>http://repository.springsource.com/maven/bundles/release</url>
		</repository>
		<repository>
      		<id>apache</id>
      		<name>Apache Releases</name>
      		<url>https://repository.apache.org/</url>
 			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
			    <enabled>false</enabled>
			</snapshots>     		
   		</repository> 		
		<repository>
			<id>Maven-central</id>
			<name>Maven central</name>
			<url>http://repo1.maven.org/maven2</url>
		</repository>
		<repository>
			<id>osp4j</id>
			<name>OSP4J releases</name>
			<url>http://repository.ops4j.org/maven2</url>
		</repository>
		<repository>
			<id>servicemix.m2-repo</id>
			<name>ServiceMix Maven 2 repository</name>
			<url>http://svn.apache.org/repos/asf/servicemix/m2-repo</url>
			<releases>
			    <enabled>true</enabled>
			</releases>
			<snapshots>
			    <enabled>false</enabled>
			</snapshots>
	    </repository>
		<repository>
			<id>fusesource</id>
			<name>Fuse Source releases</name>
			<url>http://repo.fusesource.com/maven2/</url>
		</repository>
		<!--<repository>
			<id>java</id>
			<name>Java.net releases</name>
			<url>http://download.java.net/maven/2/</url>
		</repository>-->
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>central</id>
			<url>http://maven.i2cat.net:8081/artifactory/plugins-release</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>snapshots</id>
			<url>http://maven.i2cat.net:8081/artifactory/plugins-snapshot</url>
			<releases>
				<enabled>false</enabled>
			</releases>
		</pluginRepository>
		<pluginRepository>
			<id>ops4j.releases</id>
			<url>http://repository.ops4j.org/maven2</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>ibiblio</id>
			<url>http://mirrors.ibiblio.org/pub/mirrors/maven2/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>fusesource</id>
			<name>Fuse Source releases</name>
			<url>http://repo.fusesource.com/maven2/</url>
		</pluginRepository>
	</pluginRepositories>

	<scm>
        <connection>scm:git:git://github.com/dana-i2cat/opennaas.git</connection>
        <developerConnection>scm:git:git@github.com:dana-i2cat/opennaas.git</developerConnection>
        <url>http://github.com/dana-i2cat/opennaas</url>
	</scm>

	<distributionManagement>
		<repository>
			<uniqueVersion>false</uniqueVersion>
			<id>maven.i2cat.net</id>
			<name>maven.i2cat.net-releases</name>
			<url>http://maven.i2cat.net:8081/artifactory/libs-release-local</url>
		</repository>
		<snapshotRepository>
			<uniqueVersion>true</uniqueVersion>
			<id>i2cat-snapshot</id>
			<name>libs-snapshot-local</name>
			<url>http://maven.i2cat.net:8081/artifactory/libs-snapshot-local</url>
		</snapshotRepository>
		<site>
			<id>github</id>
			<name>opennaas</name>
			<url>http://github.com/dana-i2cat/opennaas/</url>
		</site>
	</distributionManagement>

	<issueManagement>
		<system>JIRA</system>
		<url>http://jira.i2cat.net/browse/OPENNAAS</url>
	</issueManagement>

	<mailingLists>
		<mailingList>
			<name>opennaas-dev</name>
			<subscribe>http://lists.opennaas.org/cgi-bin/mailman/listinfo/dev</subscribe>
			<unsubscribe>http://lists.opennaas.org/cgi-bin/mailman/listinfo/dev</unsubscribe>
			<post>dev@lists.opennaas.org</post>
			<archive>http://lists.opennaas.org/pipermail/dev/</archive>
		</mailingList>
		<mailingList>
			<name>opennaas-user</name>
			<subscribe>http://lists.opennaas.org/cgi-bin/mailman/listinfo/users</subscribe>
			<unsubscribe>http://lists.opennaas.org/cgi-bin/mailman/listinfo/users</unsubscribe>
			<post>users@lists.opennaas.org</post>
			<archive>http://lists.opennaas.org/pipermail/users/</archive>
		</mailingList>
	</mailingLists>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.4</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>index</report>
							<report>scm</report>
							<report>license</report>
							<report>dependencies</report>
							<report>dependency-convergence</report>
							<report>dependency-management</report>
							<report>mailing-list</report>
							<report>modules</report>
							<report>summary</report>
						</reports>
					</reportSet>
				</reportSets>
				<configuration>
					<!-- Adding location information is very slow, so
					     we disable it. -->
					<dependencyLocationsEnabled>false</dependencyLocationsEnabled>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.8.1</version>
				<!-- Only generating an aggregated report for the
				     top-level project is considerably faster and we
				     don't need individual JavaDoc reports anyway. -->
				<inherited>false</inherited>
				<reportSets>
					<reportSet>
						<id>aggregate</id>
						<reports>
							<report>aggregate</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.3</version>
				<!-- Similar to the JavaDoc report, the value of a
				     single top-level report is bigger than individual
				     reports. -->
				<inherited>false</inherited>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.12</version>
				<configuration>
					<aggregate>true</aggregate>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>2.4.0</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>2.7.1</version>
				<configuration>
					<sourceEncoding>utf-8</sourceEncoding>
					<minimumTokens>100</minimumTokens>
					<targetJdk>1.6</targetJdk>
					<aggregate>true</aggregate>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.opennaas.archetypes</groupId>
		<artifactId>opennaas-archetypes</artifactId>
		<version>1.0.0</version>
	</parent>

	<artifactId>org.opennaas.archetypes.features</artifactId>

	<name>OpenNaaS :: Archetypes :: Features Archetype</name>
	<packaging>jar</packaging>

</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<artifactId>${artifactId}</artifactId>
	<packaging>bundle</packaging>

	<!-- EDIT NAME -->
	<name>${name}</name>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>target</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-artifacts</id>
						<phase>package</phase>
						<goals>
							<goal>attach-artifact</goal>
						</goals>
						<configuration>
							<artifacts>
								<artifact>
									<file>target/features.xml</file>
									<type>xml</type>
									<classifier>features</classifier>
								</artifact>
							</artifacts>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.opennaas.archetypes</groupId>
		<artifactId>opennaas-archetypes</artifactId>
		<version>1.0.0</version>
	</parent>
	
	<artifactId>org.opennaas.archetypes.itests</artifactId>

	<name>OpenNaaS :: Archetypes :: Itests Archetype</name>
	<packaging>jar</packaging>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>



	<artifactId>${artifactId}</artifactId>
	<packaging>jar</packaging>

	<dependencies>

		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.core.resources</artifactId>
		</dependency>

		<dependency>
			<groupId>org.opennaas.itests</groupId>
			<artifactId>org.opennaas.itests.helpers</artifactId>
		</dependency>

	</dependencies>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.opennaas.archetypes</groupId>
  <artifactId>opennaas-archetypes</artifactId>
  <version>1.0.0</version>
  <packaging>pom</packaging>
  <name>OpenNaaS :: Archetypes</name>
  
  <modules>
  	<module>features-archetype</module>
    <module>itests-archetype</module>
  </modules>
</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<parent>
		<groupId>org.opennaas</groupId>
		<artifactId>opennaas</artifactId>
		<version>0.15-SNAPSHOT</version>
	</parent>

	<!-- POM id -->
	<artifactId>org.opennaas.cim.model</artifactId>
	<modelVersion>4.0.0</modelVersion>

	<!-- Maven configuration -->
	<packaging>jar</packaging>
	<name>OpenNaaS :: CIM Model</name>
	<description>OpenNaaS :: CIM Model</description>

	<dependencies>
		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>antlr-runtime</artifactId>
			<version>3.1.3</version>
		</dependency>
		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>stringtemplate</artifactId>
			<version>3.2</version>
		</dependency>
		<dependency>
			<groupId>args4j</groupId>
			<artifactId>args4j</artifactId>
			<version>2.0.10</version>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.cim.tool</artifactId>
			<version>0.15-SNAPSHOT</version>
		</dependency>
	</dependencies>

	<repositories>
		<repository>
			<id>java.net</id>
			<url>http://download.java.net/maven/2</url>
		</repository>
	</repositories>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
                    <exclude>**/*.mof</exclude>
					<exclude>**/*.stg</exclude>
                </excludes>
                <filtering>false</filtering>
            </resource>
        </resources>
	
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.1.1</version>
				<executions>
					<execution>
						<phase>generate-resources</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<mainClass>com.kyben.translatecim.TranslateCIM</mainClass>
							<arguments>
								<argument>${project.build.directory}/../src/main/resources/mof-files/cim_schema_2.27.0.mof</argument>
								<argument>${project.build.directory}/../src/main/resources/mof-files/TranslateCIM-java.stg</argument>
								<argument>${project.build.directory}/generated-sources/org/opennaas/cim</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/generated-sources</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<executions>
					<execution>
						<phase>install</phase>
						<configuration>
							<source>1.6</source>
							<target>1.6</target>
							<workspace>${basedir}</workspace>
							<workspaceCodeStylesURL>http://maven.apache.org/developers/maven-eclipse-codestyle.xml</workspaceCodeStylesURL>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											exec-maven-plugin
										</artifactId>
										<versionRange>
											[1.1.1,)
										</versionRange>
										<goals>
											<goal>java</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>


</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<parent>
		<groupId>org.opennaas</groupId>
		<artifactId>org.opennaas.cim</artifactId>
		<version>0.15-SNAPSHOT</version>
	</parent>
	
	<modelVersion>4.0.0</modelVersion>
	<artifactId>org.opennaas.cim.tool</artifactId>
	<packaging>jar</packaging>
	<name>OpenNaaS :: Tool to auto-generate CIM Model</name>
	<url>http://maven.apache.org</url>
	<dependencies>
		<dependency>
			<groupId>args4j</groupId>
			<artifactId>args4j</artifactId>
			<version>2.0.10</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>antlr-runtime</artifactId>
			<version>3.1.3</version>
		</dependency>
		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>stringtemplate</artifactId>
			<version>3.2</version>
		</dependency>
	</dependencies>
	<pluginRepositories>
		<pluginRepository>
			<!-- to get latest antlr-maven plugin, 3.1.4-SNAPSHOT -->
			<id>antlr-snapshot</id>
			<name>ANTLR Testing Snapshot Repository</name>
			<url>http://antlr.org/antlr-snapshot</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</pluginRepository>
	</pluginRepositories>
	<repositories>
		<repository>
			<!-- to get args4j -->
			<id>java.net</id>
			<url>http://download.java.net/maven/2</url>
		</repository>
	</repositories>
	<build>
		<plugins>

			<plugin>
				<groupId>org.antlr</groupId>
				<artifactId>antlr3-maven-plugin</artifactId>
				<version>3.1.3-1</version>
				<!-- <executions> -->
				<!-- <execution> -->
				<!-- <goals> -->
				<!-- <goal>antlr</goal> -->
				<!-- </goals> -->
				<!-- </execution> -->
				<!-- </executions> -->
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
			</plugin>
			<!-- the following causes a 2nd jar file to be created, named TranslateCIM-1.0-SNAPSHOT-jar-with-dependencies.jar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<!-- make the jar executable and specify the class that contains "main" -->
							<mainClass>com.kyben.translatecim.TranslateCIM</mainClass>
						</manifest>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase> <!-- append to the packaging phase. -->
						<goals>
							<goal>attached</goal> <!-- goals == mojos -->
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
<parent>
    <!-- Skip non existing /utils/pom.xml -->
    <artifactId>opennaas</artifactId>
    <groupId>org.opennaas</groupId>
    <version>0.15-SNAPSHOT</version>
    <relativePath>../..</relativePath>
  </parent>
  
  <name>OpenNaaS :: Autogenerated CIM model</name>
  <artifactId>org.opennaas.cim</artifactId>
  <modelVersion>4.0.0</modelVersion>
  <packaging>pom</packaging>
  
  <modules>
  	<module>cim-tool</module>
  	<module>cim-model</module>
  </modules>
  
 </project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<!-- Maven parent -->
	<parent>
		<artifactId>org.opennaas.extensions.bundles</artifactId>
		<groupId>org.opennaas</groupId>
		<version>0.15-SNAPSHOT</version>
	</parent>
	<!-- POM id -->
	<artifactId>rest.example</artifactId>
	<!-- Maven configuration -->
	<modelVersion>4.0.0</modelVersion>
	<packaging>bundle</packaging>
	<name>Rest - Test</name>
	<description>Rest - Test</description>

	<dependencies>
		<!-- Jersey Client -->
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-core</artifactId>
			<version>1.12</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-bundle</artifactId>
			<version>1.10-b01</version>
		</dependency>
		<!-- OpenNaaS -->
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.router.capability.ip</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.router.capability.ospf</artifactId>
		</dependency>		
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.bod.capability.l2bod</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.network.capability.queue</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.queuemanager</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.macbridge.model</artifactId>
		</dependency>	
		<dependency>
			<groupId>org.opennaas</groupId>
			<artifactId>org.opennaas.extensions.vcpe</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.ops4j</groupId>
				<artifactId>maven-pax-plugin</artifactId>
				<extensions>true</extensions>
			</plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<Bundle-Name>${project.name}</Bundle-Name>
						<Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
						<Bundle-Activator>bundle.internal.Activator</Bundle-Activator>
						<Export-Package>bundle</Export-Package>
						<Import-Package>javax.ws.rs.*,*</Import-Package>
						<DynamicImport-Package>org.apache.cxf.dosgi.dsw.qos,org.apache.cxf</DynamicImport-Package>
					</instructions>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>