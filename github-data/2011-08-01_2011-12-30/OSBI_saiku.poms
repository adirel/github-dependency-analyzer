<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.saiku</groupId>
	<artifactId>saiku-bi-platform-plugin-p5</artifactId>
	<packaging>jar</packaging>
	<version>2.6-SNAPSHOT</version>
	<name>saiku biserver plugin</name>

	<properties>
		<maven.compiler.source>1.5</maven.compiler.source>
		<maven.compiler.target>1.5</maven.compiler.target>
		<pentaho.libs.version>TRUNK-SNAPSHOT</pentaho.libs.version>
		<pentaho.platform.version>5.0.0</pentaho.platform.version>
		<slf4j.version>1.6.1</slf4j.version>
		<enunciate.version>1.28</enunciate.version>
		<jersey.version>1.11</jersey.version>
	</properties>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy</id>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.saiku</groupId>
									<artifactId>saiku-ui</artifactId>
									<version>${project.version}</version>
									<type>war</type>
									<outputDirectory>target/stage</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.saiku</groupId>
									<artifactId>saiku-service</artifactId>
									<version>${project.version}</version>
									<type>jar</type>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.saiku</groupId>
									<artifactId>saiku-web</artifactId>
									<version>${project.version}</version>
									<type>jar</type>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.saiku</groupId>
									<artifactId>saiku-olap-util</artifactId>
									<version>${project.version}</version>
									<type>jar</type>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.saiku</groupId>
									<artifactId>saiku-query</artifactId>
									<version>0.1-SNAPSHOT</version>
									<type>jar</type>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>

								<artifactItem>
									<groupId>org.jvnet</groupId>
  									<artifactId>mimepull</artifactId>
  									<version>1.6</version>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>pentaho</groupId>
									<artifactId>mondrian</artifactId>
									<version>3.6.5</version>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.olap4j</groupId>
									<artifactId>olap4j-xmla</artifactId>
									<version>1.2.0-SNAPSHOT</version>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.olap4j</groupId>
									<artifactId>olap4j</artifactId>
									<version>1.2.0-SNAPSHOT</version>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>eigenbase</groupId>
									<artifactId>eigenbase-properties</artifactId>
									<version>1.1.0.10924</version>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>eigenbase</groupId>
									<artifactId>eigenbase-resgen</artifactId>
									<version>1.3.0.11873</version>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>

								</artifactItem>
								<artifactItem>
									<groupId>eigenbase</groupId>
									<artifactId>eigenbase-xom</artifactId>
									<version>1.3.0.11999</version>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>commons-lang</groupId>
									<artifactId>commons-lang</artifactId>
									<version>2.4</version>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.jdom</groupId>
									<artifactId>jdom</artifactId>
									<version>1.1</version>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>pentaho</groupId>
									<artifactId>cda</artifactId>
									<version>TRUNK-SNAPSHOT</version>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>pentaho</groupId>
									<artifactId>cpf-core</artifactId>
									<version>REFACTOR-SNAPSHOT</version>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>pentaho</groupId>
									<artifactId>cpf-pentaho5</artifactId>
									<version>REFACTOR-SNAPSHOT</version>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.2</version>
				<executions>
					<execution>
						<id>copy-package</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<unzip dest="target/dist/saiku/ui/">
									<fileset dir="target/stage/">
										<include name="saiku-ui-${project.version}.war" />
									</fileset>
								</unzip>
								<copy
									file="${basedir}/target/${project.artifactId}-${project.version}.jar"
									todir="target/dist/saiku/lib" />
								<copy todir="target/dist/saiku/" overwrite="true">
									<fileset dir="${basedir}/src/main/plugin/" />
								</copy>
								<copy todir="target/dist/saiku/ui/" overwrite="true">
									<fileset dir="${basedir}/src/main/plugin/">
										<include name="*.properties" />
									</fileset>
								</copy>
								<zip destfile="target/saiku-plugin-p5-${project.version}.zip">
									<zipfileset dir="target/dist/" />
								</zip>

							</tasks>
						</configuration>
					</execution>
				</executions>

			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.3</version>
				<!-- set encoding to something not platform dependent -->
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<!-- Restrict execution of source compilation to install -->
						<phase>install</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>


		</plugins>
	</build>
	<repositories>
		<repository>
			<id>pentaho-repo</id>
			<name>pentaho repository</name>
			<url>http://repository.pentaho.org/artifactory/pentaho</url>
		</repository>
		<repository>
			<id>pentaho-third-party</id>
			<url>http://repo.pentaho.org/artifactory/third-party/</url>
		</repository>
                <repository>
			<id>alabs-repo</id>
			<name>alabs repository</name>
			<url>http://repo.analytical-labs.com/repo/</url>
		</repository>
		<repository>
			<id>ibiblio</id>
			<url>http://ibiblio.org/maven2/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>java</id>
			<url>http://download.java.net/maven/2/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	<dependencies>
		<dependency>
			<groupId>org.saiku</groupId>
			<artifactId>saiku-service</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.saiku</groupId>
			<artifactId>saiku-web</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.saiku</groupId>
			<artifactId>saiku-olap-util</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>pentaho</groupId>
			<artifactId>cpf-core</artifactId>
			<version>REFACTOR-SNAPSHOT</version>
			<exclusions>
			<exclusion>
					<groupId>janino</groupId>
					<artifactId>janino</artifactId>
			</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>pentaho</groupId>
			<artifactId>cpf-pentaho5</artifactId>
			<version>REFACTOR-SNAPSHOT</version>
			<exclusions>
				<exclusion>
					<groupId>pentaho</groupId>
					<artifactId>pentaho-user-console-package</artifactId>
				</exclusion>
				<exclusion>
					<groupId>janino</groupId>
					<artifactId>janino</artifactId>
				</exclusion>
				                <exclusion>
					<groupId>pentaho-kettle</groupId>
					<artifactId>kettle-ui-swt</artifactId>
                </exclusion>
                <exclusion>
                	<groupId>pentaho</groupId>
                	<artifactId>pentaho-platform-extensions</artifactId>
                </exclusion>
				
			</exclusions>
		</dependency>
<!-- 
		<dependency>
			<groupId>pentaho</groupId>
			<artifactId>cda</artifactId>
			<version>TRUNK-SNAPSHOT</version>
		</dependency>
		<dependency>
		 	<groupId>pentaho-library</groupId>
  			<artifactId>libloader</artifactId>
  			<version>${pentaho.platform.version}</version>
		</dependency>
-->
		<dependency>
			<groupId>pentaho</groupId>
			<artifactId>mondrian</artifactId>
			<version>3.6.5</version>
		</dependency>
		<dependency>
			<groupId>eigenbase</groupId>
			<artifactId>eigenbase-properties</artifactId>
			<version>1.1.0.10924</version>
		</dependency>
		<dependency>
			<groupId>eigenbase</groupId>
			<artifactId>eigenbase-resgen</artifactId>
			<version>1.3.0.11873</version>
		</dependency>
		<dependency>
			<groupId>eigenbase</groupId>
			<artifactId>eigenbase-xom</artifactId>
			<version>1.3.0.11999</version>
		</dependency>
		<dependency>
			<groupId>org.olap4j</groupId>
			<artifactId>olap4j-xmla</artifactId>
			<version>1.2.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.14</version>
		</dependency>
		<dependency>
			<groupId>pentaho</groupId>
			<artifactId>pentaho-platform-api</artifactId>
			<version>${pentaho.platform.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>pentaho</groupId>
			<artifactId>pentaho-platform-core</artifactId>
			<version>${pentaho.platform.version}</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>gnujaxp</groupId>
					<artifactId>gnujaxp</artifactId>
				</exclusion>
				<exclusion>
					<groupId>xerces</groupId>
					<artifactId>xmlParserAPIs</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.faces</groupId>
					<artifactId>jsf-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.xbean</groupId>
					<artifactId>xbean</artifactId>
				</exclusion>
				<exclusion>
					<groupId>adaptx</groupId>
					<artifactId>adaptx</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.jvnet.staxex</groupId>
					<artifactId>stax-ex</artifactId>
				</exclusion>
				<exclusion>
					<groupId>net.sourceforge.nekohtml</groupId>
					<artifactId>nekohtml</artifactId>
				</exclusion>
				<exclusion>
					<groupId>janino</groupId>
					<artifactId>janino</artifactId>
				</exclusion>
				<exclusion>
					<groupId>xml-apis</groupId>
					<artifactId>xmlParserAPIs</artifactId>
				</exclusion>
				<exclusion>
					<groupId>xerces</groupId>
					<artifactId>xmlParserAPIs</artifactId>
				</exclusion>
				<exclusion>
					<artifactId>secondstring</artifactId>
					<groupId>secondstring</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>pentaho</groupId>
			<artifactId>pentaho-platform-extensions</artifactId>
			<version>${pentaho.platform.version}</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>javax.faces</groupId>
					<artifactId>jsf-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.xbean</groupId>
					<artifactId>xbean</artifactId>
				</exclusion>
				<exclusion>
					<groupId>adaptx</groupId>
					<artifactId>adaptx</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.jvnet.staxex</groupId>
					<artifactId>stax-ex</artifactId>
				</exclusion>
				<exclusion>
					<groupId>net.sourceforge.nekohtml</groupId>
					<artifactId>nekohtml</artifactId>
				</exclusion>
				<exclusion>
					<groupId>janino</groupId>
					<artifactId>janino</artifactId>
				</exclusion>
				<exclusion>
					<groupId>xml-apis</groupId>
					<artifactId>xmlParserAPIs</artifactId>
				</exclusion>
				<exclusion>
					<groupId>xerces</groupId>
					<artifactId>xmlParserAPIs</artifactId>
				</exclusion>
				<exclusion>
					<artifactId>secondstring</artifactId>
					<groupId>secondstring</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-core</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-server</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey.contribs</groupId>
			<artifactId>jersey-multipart</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jvnet</groupId>
  			<artifactId>mimepull</artifactId>
  			<version>1.6</version>
  		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-servlet</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey.contribs</groupId>
			<artifactId>jersey-spring</artifactId>
			<version>${jersey.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-beans</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-aop</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-context</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-web</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-client</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>2.0.5.RELEASE</version>
		</dependency>
	</dependencies>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.saiku</groupId>
	<artifactId>saiku-bi-platform-plugin</artifactId>
	<packaging>jar</packaging>
	<version>2.6-SNAPSHOT</version>
	<name>saiku biserver plugin</name>

	<properties>
		<maven.compiler.source>1.5</maven.compiler.source>
		<maven.compiler.target>1.5</maven.compiler.target>
		<pentaho.libs.version>3.10.0-stable</pentaho.libs.version>
		<slf4j.version>1.6.1</slf4j.version>
		<enunciate.version>1.28</enunciate.version>
		<jersey.version>1.11</jersey.version>
	</properties>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy</id>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.saiku</groupId>
									<artifactId>saiku-ui</artifactId>
									<version>${project.version}</version>
									<type>war</type>
									<outputDirectory>target/stage</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.saiku</groupId>
									<artifactId>saiku-service</artifactId>
									<version>${project.version}</version>
									<type>jar</type>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.saiku</groupId>
									<artifactId>saiku-web</artifactId>
									<version>${project.version}</version>
									<type>jar</type>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.saiku</groupId>
									<artifactId>saiku-olap-util</artifactId>
									<version>${project.version}</version>
									<type>jar</type>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.saiku</groupId>
									<artifactId>saiku-query</artifactId>
									<version>0.1-SNAPSHOT</version>
									<type>jar</type>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>

								<artifactItem>
									<groupId>org.codehaus.enunciate</groupId>
									<artifactId>enunciate-rt</artifactId>
									<version>${enunciate.version}</version>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.codehaus.enunciate</groupId>
									<artifactId>enunciate-spring3-app-rt</artifactId>
									<version>${enunciate.version}</version>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.codehaus.enunciate</groupId>
									<artifactId>enunciate-core-annotations</artifactId>
									<version>${enunciate.version}</version>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>asm</groupId>
									<artifactId>asm</artifactId>
									<version>3.1</version>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.codehaus.enunciate</groupId>
									<artifactId>enunciate-jersey-rt</artifactId>
									<version>${enunciate.version}</version>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>com.sun.jersey</groupId>
									<artifactId>jersey-core</artifactId>
									<version>${jersey.version}</version>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>com.sun.jersey</groupId>
									<artifactId>jersey-server</artifactId>
									<version>${jersey.version}</version>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>com.sun.jersey</groupId>
									<artifactId>jersey-servlet</artifactId>
									<version>${jersey.version}</version>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>com.sun.jersey.contribs</groupId>
									<artifactId>jersey-spring</artifactId>
									<version>${jersey.version}</version>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>com.sun.jersey</groupId>
									<artifactId>jersey-client</artifactId>
									<version>${jersey.version}</version>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>com.sun.jersey.contribs</groupId>
									<artifactId>jersey-multipart</artifactId>
									<version>${jersey.version}</version>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.jvnet</groupId>
  									<artifactId>mimepull</artifactId>
  									<version>1.6</version>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.codehaus.jackson</groupId>
									<artifactId>jackson-core-asl</artifactId>
									<version>1.7.4</version>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.codehaus.jackson</groupId>
									<artifactId>jackson-jaxrs</artifactId>
									<version>1.7.4</version>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.codehaus.jackson</groupId>
									<artifactId>jackson-mapper-asl</artifactId>
									<version>1.7.4</version>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.codehaus.jackson</groupId>
									<artifactId>jackson-xc</artifactId>
									<version>1.7.4</version>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>com.sun.xml.bind</groupId>
									<artifactId>jaxb-impl</artifactId>
									<version>2.2.2</version>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>

								<artifactItem>
									<groupId>pentaho</groupId>
									<artifactId>mondrian</artifactId>
									<version>3.6.5</version>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.olap4j</groupId>
									<artifactId>olap4j-xmla</artifactId>
									<version>1.2.0-SNAPSHOT</version>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.olap4j</groupId>
									<artifactId>olap4j</artifactId>
									<version>1.2.0-SNAPSHOT</version>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>eigenbase</groupId>
									<artifactId>eigenbase-properties</artifactId>
									<version>1.1.0.10924</version>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>eigenbase</groupId>
									<artifactId>eigenbase-resgen</artifactId>
									<version>1.3.0.11873</version>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>

								</artifactItem>
								<artifactItem>
									<groupId>eigenbase</groupId>
									<artifactId>eigenbase-xom</artifactId>
									<version>1.3.0.11999</version>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>commons-lang</groupId>
									<artifactId>commons-lang</artifactId>
									<version>2.4</version>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.jdom</groupId>
									<artifactId>jdom</artifactId>
									<version>1.1</version>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>pentaho</groupId>
									<artifactId>cda</artifactId>
									<version>TRUNK-SNAPSHOT</version>
									<outputDirectory>target/dist/saiku/lib</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.2</version>
				<executions>
					<execution>
						<id>copy-package</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<unzip dest="target/dist/saiku/ui/">
									<fileset dir="target/stage/">
										<include name="saiku-ui-${project.version}.war" />
									</fileset>
								</unzip>
								<copy
									file="${basedir}/target/${project.artifactId}-${project.version}.jar"
									todir="target/dist/saiku/lib" />
								<copy todir="target/dist/saiku/" overwrite="true">
									<fileset dir="${basedir}/src/main/plugin/" />
								</copy>
								<copy todir="target/dist/saiku/ui/" overwrite="true">
									<fileset dir="${basedir}/src/main/plugin/">
										<include name="*.properties" />
									</fileset>
								</copy>
								<zip destfile="target/saiku-plugin-${project.version}.zip">
									<zipfileset dir="target/dist/" />
								</zip>

							</tasks>
						</configuration>
					</execution>
				</executions>

			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.3</version>
				<!-- set encoding to something not platform dependent -->
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<!-- Restrict execution of source compilation to install -->
						<phase>install</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>


		</plugins>
	</build>
	<repositories>
		<repository>
			<id>pentaho-repo</id>
			<name>pentaho repository</name>
			<url>http://repository.pentaho.org/artifactory/pentaho</url>
		</repository>
		<repository>
			<id>pentaho-third-party</id>
			<url>http://repo.pentaho.org/artifactory/third-party/</url>
		</repository>
                <repository>
			<id>alabs-repo</id>
			<name>alabs repository</name>
			<url>http://repo.analytical-labs.com/repo/</url>
		</repository>
		<repository>
			<id>ibiblio</id>
			<url>http://ibiblio.org/maven2/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>java</id>
			<url>http://download.java.net/maven/2/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	<dependencies>
		<dependency>
			<groupId>org.saiku</groupId>
			<artifactId>saiku-service</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.saiku</groupId>
			<artifactId>saiku-web</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.saiku</groupId>
			<artifactId>saiku-olap-util</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>pentaho</groupId>
			<artifactId>mondrian</artifactId>
			<version>3.6.5</version>
		</dependency>
		<dependency>
			<groupId>eigenbase</groupId>
			<artifactId>eigenbase-properties</artifactId>
			<version>1.1.0.10924</version>
		</dependency>
		<dependency>
			<groupId>eigenbase</groupId>
			<artifactId>eigenbase-resgen</artifactId>
			<version>1.3.0.11873</version>
		</dependency>
		<dependency>
			<groupId>eigenbase</groupId>
			<artifactId>eigenbase-xom</artifactId>
			<version>1.3.0.11999</version>
		</dependency>
		<dependency>
			<groupId>org.olap4j</groupId>
			<artifactId>olap4j-xmla</artifactId>
			<version>1.2.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.14</version>
		</dependency>
		<dependency>
			<groupId>pentaho</groupId>
			<artifactId>cda</artifactId>
			<version>TRUNK-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>pentaho-library</groupId>
			<artifactId>libloader</artifactId>
			<version>1.2.3</version>
		</dependency>

		<dependency>
			<groupId>pentaho</groupId>
			<artifactId>pentaho-bi-platform-api</artifactId>
			<version>${pentaho.libs.version}</version>
		</dependency>
		<dependency>
			<groupId>pentaho</groupId>
			<artifactId>pentaho-bi-platform-engine-core</artifactId>
			<version>${pentaho.libs.version}</version>
		</dependency>
		<dependency>
			<groupId>pentaho</groupId>
			<artifactId>pentaho-bi-platform-engine-services</artifactId>
			<version>${pentaho.libs.version}</version>
		</dependency>
		<dependency>
			<groupId>pentaho</groupId>
			<artifactId>pentaho-bi-platform-web-servlet</artifactId>
			<version>${pentaho.libs.version}</version>
		</dependency>
		<dependency>
			<groupId>pentaho</groupId>
			<artifactId>pentaho-bi-platform-util</artifactId>
			<version>${pentaho.libs.version}</version>
		</dependency>
		<dependency>
			<groupId>pentaho</groupId>
			<artifactId>pentaho-bi-platform-plugin-services</artifactId>
			<version>${pentaho.libs.version}</version>
		</dependency>
		<dependency>
			<groupId>pentaho</groupId>
			<artifactId>pentaho-bi-platform-plugin-actions</artifactId>
			<version>${pentaho.libs.version}</version>
			<exclusions>
				<exclusion>
					<groupId>pentaho</groupId>
					<artifactId>pentaho-third-party-security</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.codehaus.enunciate</groupId>
			<artifactId>enunciate-rt</artifactId>
			<version>${enunciate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.enunciate</groupId>
			<artifactId>enunciate-jersey-rt</artifactId>
			<version>${enunciate.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-core</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-server</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey.contribs</groupId>
			<artifactId>jersey-multipart</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jvnet</groupId>
  			<artifactId>mimepull</artifactId>
  			<version>1.6</version>
  		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-servlet</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey.contribs</groupId>
			<artifactId>jersey-spring</artifactId>
			<version>${jersey.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-beans</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-aop</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-context</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-web</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-client</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>2.0.5.RELEASE</version>
		</dependency>
	</dependencies>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.saiku</groupId>
	<artifactId>saiku-core</artifactId>
	<packaging>pom</packaging>
	<name>saiku - core libraries</name>
       <version>2.6-SNAPSHOT</version>
	<properties>
		<maven.compiler.source>1.5</maven.compiler.source>
		<maven.compiler.target>1.5</maven.compiler.target>
    	<spring.version>3.0.0.RELEASE</spring.version>
        <slf4j.version>1.6.4</slf4j.version>
        <enunciate.version>1.28</enunciate.version>
        <jersey.version>1.11</jersey.version>
	</properties>

	<modules>
        <module>saiku-olap-util</module>
		<module>saiku-service</module>
		<module>saiku-web</module>
	</modules>
	<repositories>
<repository>
                        <id>pentaho-third-party</id>
                        <url>http://repo.pentaho.org/artifactory/third-party/</url>
        </repository>
	<repository>
                        <id>codehaus</id>
                        <url>http://repository.codehaus.org/</url>
        </repository>
		
<repository>
			<id>pentaho-repo</id>
			<name>pentaho repository</name>
			<url>http://repository.pentaho.org/artifactory/pentaho</url>
		</repository>
			<repository>
			<id>ibiblio</id>
			<url>http://ibiblio.org/maven2/</url>
			<snapshots><enabled>false</enabled></snapshots>
		</repository>
			<repository>
			<id>java</id>
			<url>http://download.java.net/maven/2/</url>
			<snapshots><enabled>true</enabled></snapshots>
		</repository>
        <repository>
            <id>Analytical Labs Repo</id>
            <name>Analytical Labs Repo-releases</name>
            <url>http://repo.analytical-labs.com/alabs-release-local</url>
        </repository>
        <repository>
            <id>Analytical Labs snapshots</id>
            <name>Analytical Labs Repo-releases</name>
            <url>http://repo.analytical-labs.com/alabs-snapshot-local</url>
        </repository>


	</repositories>
	<build>
<plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <version>2.4</version>
		 <configuration>
          <formats>
            <format>html</format>
            <format>xml</format>
          </formats>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
 <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.7</version>
                <configuration>
                    <outputEncoding>UTF-8</outputEncoding>
                    <charset>UTF-8</charset>
                    <docencoding>UTF-8</docencoding>
                    <encoding>UTF-8</encoding>
                    <verbose>false</verbose>
                    <quiet>true</quiet>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <phase>package</phase>
                        <goals>
                            <goal>javadoc</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
    </plugins>
	</build>
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>2.1</version>
                <configuration>
                    <aggregate>true</aggregate>
                </configuration>
            </plugin>
            <!-- Unit tests report -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>2.3</version>
            </plugin>
            <!-- "Release Audit" report (checks license headers etc.) -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>rat-maven-plugin</artifactId>
                <version>1.0-alpha-3</version>
            </plugin>
            <!-- FindBugs Report -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>1.0.0</version>
                <configuration>
                    <threshold>Normal</threshold>
                    <effort>Default</effort>
                </configuration>
            </plugin>
            <!-- Checkstyle report -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.1</version>
                <configuration>
                    <!--configLocation>checkstyle.xml</configLocation-->
                    <enableRulesSummary>false</enableRulesSummary>
                </configuration>
            </plugin>
            <!-- Project website generation -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>2.0-beta-7</version>
                <configuration>
                    <outputEncoding>UTF-8</outputEncoding>
                </configuration>
            </plugin>
   <plugin>
                         <groupId>org.apache.maven.plugins</groupId>
                                             <artifactId>maven-javadoc-plugin</artifactId>
                                                                 <version>2.8</version>
                                                                             </plugin>
          </plugins>
    </reporting>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.saiku</groupId>
	<artifactId>saiku-olap-util</artifactId>
	<packaging>jar</packaging>
	<version>2.6-SNAPSHOT</version>
	<name>saiku olap util</name>

	<properties>
		<maven.compiler.source>1.5</maven.compiler.source>
		<maven.compiler.target>1.5</maven.compiler.target>
		<pentaho.libs.version>3.10.0-stable</pentaho.libs.version>
		<slf4j.version>1.6.1</slf4j.version>
	</properties>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.4</version>
				<!-- set encoding to something not platform dependent -->
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<!-- Restrict execution of source compilation to install -->
						<phase>install</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>


		</plugins>
	</build>
	<repositories>
		<repository>
			<id>pentaho-repo</id>
			<name>pentaho repository</name>
			<url>http://repository.pentaho.org/artifactory/pentaho</url>
		</repository>
		<repository>
			<id>pentaho-third-party</id>
			<url>http://repo.pentaho.org/artifactory/third-party/</url>
		</repository>

		<repository>
			<id>ibiblio</id>
			<url>http://ibiblio.org/maven2/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>java</id>
			<url>http://download.java.net/maven/2/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	<dependencies>

		<dependency>
			<groupId>pentaho</groupId>
			<artifactId>mondrian</artifactId>
			<version>3.6.5</version>
		</dependency>
		<dependency>
			<groupId>eigenbase</groupId>
			<artifactId>eigenbase-properties</artifactId>
			<version>1.1.0.10924</version>
		</dependency>
		<dependency>
			<groupId>eigenbase</groupId>
			<artifactId>eigenbase-resgen</artifactId>
			<version>1.3.0.11873</version>
		</dependency>
		<dependency>
			<groupId>eigenbase</groupId>
			<artifactId>eigenbase-xom</artifactId>
			<version>1.3.0.11999</version>
		</dependency>
  		<dependency>
			<groupId>org.olap4j</groupId>
			<artifactId>olap4j</artifactId>
			<version>1.2.0-SNAPSHOT</version>
        </dependency>
  		<dependency>
			<groupId>org.olap4j</groupId>
			<artifactId>olap4j-xmla</artifactId>
			<version>1.2.0-SNAPSHOT</version>
        </dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.14</version>
		</dependency>
	</dependencies>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <artifactId>saiku-core</artifactId>
        <groupId>org.saiku</groupId>
        <version>2.6-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.saiku</groupId>
    <artifactId>saiku-service</artifactId>
    <version>2.6-SNAPSHOT</version>
    <name>saiku - services</name>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.2</version>
                <executions>
                    <execution>
                        <id>create-package</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <unzip dest="target/test/">
                                    <fileset dir="${basedir}/../../util/">
                                        <include name="foodmart_hsql.script.zip"/>
                                    </fileset>
                                </unzip>
                                <copy todir="target/test/foodmart/">
                                    <fileset dir="${basedir}/../../util/">
                                        <include name="FoodMart.xml"/>
                                    </fileset>
                                </copy>

                                <copy todir="target/test-classes/org/saiku/" overwrite="true">
                                    <fileset dir="target/test/">
                                        <include name="foodmart_hsql.script"/>
                                    </fileset>
                                </copy>
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.0.2</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.3</version>
                <!-- set encoding to something not platform dependent -->
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <dependencies>
    <dependency>
            <groupId>org.saiku</groupId>
            <artifactId>saiku-query</artifactId>
            <version>0.1-SNAPSHOT</version>
     </dependency>
		<dependency>
			<groupId>org.saiku</groupId>
			<artifactId>saiku-olap-util</artifactId>
			<version>${project.version}</version>
		</dependency>
        <dependency>
            <groupId>org.olap4j</groupId>
            <artifactId>olap4j</artifactId>
            <version>1.2.0-SNAPSHOT</version>
            <exclusions>
                <exclusion>
                    <groupId>asm</groupId>
                    <artifactId>asm</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>asm</groupId>
                    <artifactId>asm-commons</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>retroweaver</groupId>
                    <artifactId>retroweaver</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>retroweaver</groupId>
                    <artifactId>retroweaver-rt</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>pentaho</groupId>
            <artifactId>mondrian</artifactId>
            <version>3.6.5</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.servlet</groupId>
                    <artifactId>jsp-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>3.7</version>
        </dependency>
        <dependency>
		    <groupId>org.apache.poi</groupId>
		    <artifactId>poi-ooxml</artifactId>
		    <version>3.7</version>
		</dependency>        
        <dependency>
            <groupId>eigenbase</groupId>
            <artifactId>eigenbase-properties</artifactId>
            <version>1.1.0.10924</version>
        </dependency>
        <dependency>
            <groupId>eigenbase</groupId>
            <artifactId>eigenbase-resgen</artifactId>
            <version>1.3.0.11873</version>
        </dependency>
        <dependency>
            <groupId>eigenbase</groupId>
            <artifactId>eigenbase-xom</artifactId>
            <version>1.3.0.11999</version>
        </dependency>
        <dependency>
            <groupId>org.olap4j</groupId>
            <artifactId>olap4j-xmla</artifactId>
            <version>1.2.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>org.jdom</groupId>
            <artifactId>jdom</artifactId>
            <version>1.1</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.14</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.10</version>
        </dependency>
        <dependency>
            <groupId>hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>1.8.0.10</version>
        </dependency>
    </dependencies>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<parent>
		<artifactId>saiku-core</artifactId>
		<groupId>org.saiku</groupId>
		<version>2.6-SNAPSHOT</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.saiku</groupId>
	<artifactId>saiku-web-tests</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>Maven Webapp</name>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.saiku</groupId>
			<artifactId>saiku-webapp</artifactId>
			<version>${project.version}</version>
			<type>war</type>
		</dependency>
		<dependency>
			<groupId>org.saiku</groupId>
			<artifactId>saiku-service</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>3.0.4.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey.jersey-test-framework</groupId>
			<artifactId>jersey-test-framework-core</artifactId>
			<version>{jersey.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey.jersey-test-framework</groupId>
			<artifactId>jersey-test-framework-external</artifactId>
			<version>{jersey.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>1.8.0.10</version>
		</dependency>
			<dependency>
			<groupId>org.springframework.security.oauth</groupId>
			<artifactId>spring-security-oauth</artifactId>
			<version>1.0.0.BUILD-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
			<version>20020423</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.3.2</version>
		</dependency>
	</dependencies>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<spring.version>3.0.5.RELEASE</spring.version>
		<spring.security.version>3.0.5.RELEASE</spring.security.version>
		<spring.security.tiger.version>2.0.6.RELEASE</spring.security.tiger.version>
	</properties>


	<build>
		<finalName>saiku-web-tests</finalName>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.cargo</groupId>
					<artifactId>cargo-maven2-plugin</artifactId>
					<version>1.0.5</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
		<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			 <version>2.3.2</version>
        <executions>
          <execution>
            <goals>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<!--
						Exclude all integration tests so that they are not executed during
						the test phase. This is because of a limitation in Maven 2.0.x
						which only supports compiling a single test source tree. The
						recommendation is to create a separate module for functional tests
						as is done in the cargo-archetype-webapp-functional-test-module
					-->
					<!-- <excludes>
						<exclude>**/it/**</exclude>
					</excludes> -->
				</configuration>
				<executions>
					<execution>
						<phase>integration-test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<!--
								Include only integration tests so that they are executed during
								the integration-test phase. Again this this is because of a
								limitation in Maven 2.0.x which only supports compiling a single
								test source tree. The recommendation is to create a separate
								module for functional tests as is done in the
								cargo-archetype-webapp-functional-test-module
							-->
						<!-- 	<excludes>
								<exclude>none</exclude>
							</excludes>
							<includes>
								<include>**/it/**</include>
							</includes> -->
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven2-plugin</artifactId>
				<configuration>
					<wait>false</wait>
					<configuration>
						<properties>
							<cargo.servlet.port>9999</cargo.servlet.port>
						</properties>
						<type>standalone</type>
					
					<deployables>
						<deployable>
							<type>war</type>
							<groupId>org.saiku</groupId>
							<artifactId>saiku-webapp</artifactId>
							<properties>
								<context>saiku</context>
							</properties>
						</deployable>
					</deployables>
					</configuration>
				</configuration>

				<executions>
					<execution>
						<id>start</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>stop</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>integration</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<version>1.0</version>
						<configuration>
							<!-- Container configuration -->
							<container>
								<containerId>tomcat6x</containerId>
								<zipUrlInstaller>
									<url>http://archive.apache.org/dist/tomcat/tomcat-6/v6.0.29/bin/apache-tomcat-6.0.29.zip</url>
									<installDir>${basedir}/cargo-installs</installDir>
								</zipUrlInstaller>
							</container>
							<configuration>
								<properties>
									<cargo.servlet.port>9999</cargo.servlet.port>
								</properties>
								<!-- <type>existing</type> -->
								<home>${project.build.directory}/apache-tomcat-6.0.18</home>
							
							<deployables>
								<deployable>
									<type>war</type>
									<groupId>org.saiku</groupId>
									<artifactId>saiku-webapp</artifactId>
									<properties>
										<context>saiku</context>
									</properties>
								</deployable>
							</deployables>
							</configuration>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>jetty6x</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<configuration>
							<container>
								<containerId>jetty6x</containerId>
								<type>embedded</type>
							</container>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>tomcat6x</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<configuration>
							<container>
								<containerId>tomcat6x</containerId>
								<zipUrlInstaller>
									<url>http://archive.apache.org/dist/tomcat/tomcat-6/v6.0.29/bin/apache-tomcat-6.0.29.zip</url>
								</zipUrlInstaller>
							</container>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>jonas5x</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<configuration>
							<container>
								<containerId>jonas5x</containerId>
								<zipUrlInstaller>
									<url>http://download.fr.forge.objectweb.org/jonas/jonas-full-5.1.2-bin.tar.gz</url>
								</zipUrlInstaller>
							</container>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>jboss51x</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<configuration>
							<container>
								<containerId>jboss51x</containerId>
								<zipUrlInstaller>
									<url>http://downloads.sourceforge.net/jboss/jboss-5.1.0.GA.zip?big_mirror=1</url>
								</zipUrlInstaller>
							</container>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>glassfish3x</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<configuration>
							<container>
								<containerId>glassfish3x</containerId>
								<zipUrlInstaller>
									<url>http://download.java.net/glassfish/v3/release/glassfish-v3-web.zip</url>
								</zipUrlInstaller>
							</container>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<parent>
		<artifactId>saiku-core</artifactId>
		<groupId>org.saiku</groupId>
		<version>2.6-SNAPSHOT</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.saiku</groupId>
	<artifactId>saiku-web</artifactId>
	<version>2.6-SNAPSHOT</version>
	<name>saiku - web</name>
	<packaging>jar</packaging>

	<properties>
		<spring.version>3.0.3.RELEASE</spring.version>
		<spring.security.version>3.0.3.RELEASE</spring.security.version>
	</properties>

	<build>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.1.2</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			

			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<!-- <configuration> <contextPath>/</contextPath> <scanIntervalSeconds>10</scanIntervalSeconds> 
					<stopKey>sparklr</stopKey> <stopPort>9999</stopPort> </configuration> <executions> 
					<execution> <id>start-jetty</id> <phase>pre-integration-test</phase> <goals> 
					<goal>run</goal> </goals> <configuration> <scanIntervalSeconds>0</scanIntervalSeconds> 
					<daemon>true</daemon> </configuration> </execution> <execution> <id>stop-jetty</id> 
					<phase>post-integration-test</phase> <goals> <goal>stop</goal> </goals> </execution> 
					</executions> -->
			</plugin>


		</plugins>
	</build>
	<dependencies>
		<dependency>
			<groupId>org.saiku</groupId>
			<artifactId>saiku-service</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.saiku</groupId>
			<artifactId>saiku-olap-util</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.14</version>
		</dependency>
		<!-- Spring modules -->
<dependency>
  <groupId>org.springframework</groupId>
  <artifactId>spring-core</artifactId>
  <version>${spring.version}</version>
</dependency>
 
 <dependency>
  <groupId>org.springframework</groupId>
  <artifactId>spring-beans</artifactId>
  <version>${spring.version}</version>
</dependency>
<dependency>
  <groupId>org.springframework</groupId>
  <artifactId>spring-aop</artifactId>
  <version>${spring.version}</version>
</dependency>
<dependency>
  <groupId>org.springframework</groupId>
  <artifactId>spring-context</artifactId>
  <version>${spring.version}</version>
</dependency>
 <dependency>
  <groupId>org.springframework</groupId>
  <artifactId>spring-context-support</artifactId>
  <version>${spring.version}</version>
</dependency>
 


		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
			<version>${spring.security.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-web</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-ldap</artifactId>
			<version>${spring.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.enunciate</groupId>
			<artifactId>enunciate-jersey-rt</artifactId>
			<version>${enunciate.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-core</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey.contribs</groupId>
			<artifactId>jersey-multipart</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		
		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>jsr311-api</artifactId>
			<version>1.1.1</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey.jersey-test-framework</groupId>
			<artifactId>jersey-test-framework-core</artifactId>
			<version>${jersey.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.sun.grizzly</groupId>
			<artifactId>grizzly-servlet-webserver</artifactId>
			<version>1.9.18-i</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.8.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.enunciate</groupId>
			<artifactId>enunciate-rt</artifactId>
			<version>${enunciate.version}</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>2.2</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jettison</groupId>
			<artifactId>jettison</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>1.8.0.10</version>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.2.2</version>
		</dependency>
		<dependency>
			<groupId>commons-pool</groupId>
			<artifactId>commons-pool</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>commons-vfs</groupId>
			<artifactId>commons-vfs</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>commons-math</groupId>
			<artifactId>commons-math</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.1</version>
		</dependency>


		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.3</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.3.2</version>
		</dependency>
		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
			<version>20020423</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.0</version>
			<scope>provided</scope>
		</dependency>

		<!-- Batik/SVG -->
		<dependency>
			<groupId>org.apache.xmlgraphics</groupId>
			<artifactId>batik-transcoder</artifactId>
			<version>1.7</version>
		</dependency>
		<dependency>
			<groupId>org.apache.xmlgraphics</groupId>
			<artifactId>batik-codec</artifactId>
			<version>1.7</version>
		</dependency>
		<dependency>
			<groupId>avalon-framework</groupId>
			<artifactId>avalon-framework</artifactId>
			<version>4.1.5</version>
		</dependency>
		<dependency>
			<groupId>org.apache.xmlgraphics</groupId>
			<artifactId>xmlgraphics-commons</artifactId>
			<version>1.2</version>
		</dependency>
<dependency>
	<groupId>com.lowagie</groupId>
	<artifactId>itext</artifactId>
	<version>4.2.0</version>
</dependency>
            
            
	</dependencies>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.7</version>
				<configuration>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.4</version>
			</plugin>
		</plugins>
	</reporting>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.saiku</groupId>
	<artifactId>saiku-server</artifactId>
	<packaging>pom</packaging>
    <version>2.6-SNAPSHOT</version>
	<properties>
		<tomcat.version>apache-tomcat-6.0.24</tomcat.version>
		<tomcat.source>target/stage/tomcat/</tomcat.source>
		<maven.build.timestamp.format>yyyyMMdd-HHmm</maven.build.timestamp.format>
	</properties>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy</id>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.saiku</groupId>
									<artifactId>saiku-webapp</artifactId>
									<version>${project.version}</version>
									<type>war</type>
									<outputDirectory>target/stage/</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.saiku</groupId>
									<artifactId>saiku-ui</artifactId>
									<version>${project.version}</version>
									<type>war</type>
									<outputDirectory>target/stage/</outputDirectory>
								</artifactItem>
							</artifactItems>
							
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.2</version>
				<executions>
					<execution>
						<id>copy-package</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<unzip dest="target/stage/webapp/">
									<fileset dir="target/stage/">
										<include name="saiku-webapp-${project.version}.war" />
									</fileset>
								</unzip>
								
								<unzip dest="target/stage/tomcat/">
									<fileset dir="${basedir}/tomcat/">
										<include name="${tomcat.version}.zip" />
									</fileset>
								</unzip>								
								<copy todir="target/dist/saiku-server/">
									<fileset dir="${basedir}/scripts/" />
								</copy>
								<copy todir="target/dist/saiku-server/tomcat">
									<fileset dir="${tomcat.source}${tomcat.version}/" >
									    <exclude name="webapps/docs/**" />
          								<exclude name="webapps/examples/**" />
          								<exclude name="webapps/host-manager/**" />
          								<exclude name="webapps/manager/**" />
          							    <exclude name="webapps/ROOT/**" />
									</fileset>
								</copy>
								
								<unzip dest="target/dist/saiku-server/tomcat/webapps/ROOT">
									<fileset dir="target/stage/">
										<include name="saiku-ui-${project.version}.war" />
									</fileset>
								</unzip>
								
								<copy todir="target/dist/saiku-server/tomcat/webapps/saiku">
									<fileset dir="target/stage/webapp" />
								</copy>
								
								<chmod perm="a+x" dir="target/dist/saiku-server/" includes="**/*.sh" />
								<zip destfile="target/saiku-server-${project.version}.zip">
									<zipfileset dir="target/dist/" />
								</zip>
								<tar destfile="target/saiku-server-${project.version}.tar.gz"
           							longfile="gnu" compression="gzip" >
      									<tarfileset dir="target/dist/" mode="755">
        									<include name="**/*.sh" />
      									</tarfileset>
      									<tarfileset dir="target/dist">
        									<exclude name="**/*.sh" />
      									</tarfileset>
           						</tar>
           						
           						<unzip dest="target/dist/saiku-server/tomcat/webapps/saiku/WEB-INF/classes/">
									<fileset dir="${basedir}/../util/">
										<include name="foodmart.zip" />
									</fileset>
								</unzip>
								<copy todir="target/dist/saiku-server/tomcat/webapps/saiku/WEB-INF/classes/saiku-datasources/" overwrite="true">
									<fileset dir="${basedir}/../util/">
										<include name="foodmart" />
									</fileset>
								</copy>
                                <copy todir="target/dist/saiku-server/tomcat/webapps/saiku/WEB-INF/classes/foodmart/" overwrite="true">
									<fileset dir="${basedir}/../util/">
										<include name="FoodMart.xml" />
									</fileset>
								</copy>

								
								<zip destfile="target/saiku-server-foodmart-${project.version}.zip">
									<zipfileset dir="target/dist/" />
								</zip>
								<tar destfile="target/saiku-server-foodmart-${project.version}.tar.gz"
           							longfile="gnu" compression="gzip" >
      									<tarfileset dir="target/dist/" mode="755">
        									<include name="**/*.sh" />
      									</tarfileset>
      									<tarfileset dir="target/dist">
        									<exclude name="**/*.sh" />
      									</tarfileset>
           						</tar>
           						
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<parent>
		<artifactId>saiku-core</artifactId>
		<groupId>org.saiku</groupId>
		<version>2.6-SNAPSHOT</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.saiku</groupId>
	<artifactId>saiku-webapp</artifactId>
	<version>2.6-SNAPSHOT</version>
	<name>saiku - webapp</name>
	<packaging>war</packaging>

	<properties>
		<spring.version>3.0.3.RELEASE</spring.version>
		<spring.security.version>3.0.3.RELEASE</spring.security.version>
		<enunciate.version>1.28</enunciate.version>
		<jersey.version>1.11</jersey.version>
	</properties>

	<build>
		<!-- <outputDirectory>target/WEB-INF/classes</outputDirectory> -->
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.2</version>
				<executions>
					<execution>
						<id>create-package</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<zip destfile="target/${project.artifactId}-${project.version}.war">
									<zipfileset dir="target/${project.artifactId}-${project.version}/" />
								</zip>
								<copy todir="target/${project.artifactId}-foodmart-${project.version}">
									<fileset dir="target/${project.artifactId}-${project.version}/" />
								</copy>
								<unzip
									dest="target/${project.artifactId}-foodmart-${project.version}/WEB-INF/classes/">
									<fileset dir="${basedir}/../util/">
										<include name="foodmart.zip" />
									</fileset>
								</unzip>
								<copy
									todir="target/${project.artifactId}-foodmart-${project.version}/WEB-INF/classes/foodmart/"
									overwrite="true">
									<fileset dir="${basedir}/../util/">
										<include name="FoodMart.xml" />
									</fileset>
								</copy>
								<copy
									todir="target/${project.artifactId}-foodmart-${project.version}/WEB-INF/classes/saiku-datasources/"
									overwrite="true">
									<fileset dir="${basedir}/../util/">
										<include name="foodmart" />
									</fileset>
								</copy>
								<zip
									destfile="target/${project.artifactId}-foodmart-${project.version}.war">
									<zipfileset
										dir="target/${project.artifactId}-foodmart-${project.version}/" />
								</zip>
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.enunciate</groupId>
				<artifactId>maven-enunciate-spring-plugin</artifactId>
				<version>${enunciate.version}</version>
				<configuration>
					<configFile>enunciate.xml</configFile>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>assemble</goal>
						</goals>
					</execution>
				</executions>
			</plugin>


			<!-- <plugin> <groupId>org.mortbay.jetty</groupId> <artifactId>jetty-maven-plugin</artifactId> 
				<version>7.2.0.v20101020</version> </plugin> -->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<executions>
					<execution>
						<id>surefire-it</id>
						<phase>integration-test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<skip>false</skip>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<!-- <configuration> <contextPath>/</contextPath> <scanIntervalSeconds>10</scanIntervalSeconds> 
					<stopKey>sparklr</stopKey> <stopPort>9999</stopPort> </configuration> <executions> 
					<execution> <id>start-jetty</id> <phase>pre-integration-test</phase> <goals> 
					<goal>run</goal> </goals> <configuration> <scanIntervalSeconds>0</scanIntervalSeconds> 
					<daemon>true</daemon> </configuration> </execution> <execution> <id>stop-jetty</id> 
					<phase>post-integration-test</phase> <goals> <goal>stop</goal> </goals> </execution> 
					</executions> -->
			</plugin>
		</plugins>
	</build>
	<dependencies>
		<dependency>
			<groupId>org.saiku</groupId>
			<artifactId>saiku-service</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>org.saiku</groupId>
			<artifactId>saiku-web</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.saiku</groupId>
			<artifactId>saiku-olap-util</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.saiku</groupId>
			<artifactId>saiku-query</artifactId>
			<version>0.1-SNAPSHOT</version>
		</dependency>
		
		<!-- Spring modules -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
			<version>${spring.security.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-web</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-core</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey.contribs</groupId>
			<artifactId>jersey-spring</artifactId>
			<version>${jersey.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-beans</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-aop</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-context</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-web</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-server</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey.contribs</groupId>
			<artifactId>jersey-multipart</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jvnet</groupId>
  			<artifactId>mimepull</artifactId>
  			<version>1.6</version>
  		</dependency>
		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>jsr311-api</artifactId>
			<version>1.1.1</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey.jersey-test-framework</groupId>
			<artifactId>jersey-test-framework-core</artifactId>
			<version>${jersey.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.sun.grizzly</groupId>
			<artifactId>grizzly-servlet-webserver</artifactId>
			<version>1.9.18-i</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.enunciate</groupId>
			<artifactId>enunciate-jersey-rt</artifactId>
			<version>${enunciate.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.sun.jersey</groupId>
					<artifactId>jersey-server</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.8.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.enunciate</groupId>
			<artifactId>enunciate-rt</artifactId>
			<version>${enunciate.version}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>2.2</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.enunciate</groupId>
			<artifactId>enunciate-spring3-app-rt</artifactId>
			<version>${enunciate.version}</version>
		</dependency>


		<dependency>
			<groupId>org.codehaus.jettison</groupId>
			<artifactId>jettison</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>1.8.0.10</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.17</version>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.2.2</version>
		</dependency>
		<dependency>
			<groupId>commons-pool</groupId>
			<artifactId>commons-pool</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>commons-vfs</groupId>
			<artifactId>commons-vfs</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>commons-math</groupId>
			<artifactId>commons-math</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.1</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.3</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.3.2</version>
		</dependency>
		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
			<version>20020423</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>
	<reporting>
		<plugins>
			<!-- FIXME: currently produces a NullPointerException <plugin> <groupId>org.apache.maven.plugins</groupId> 
				<artifactId>maven-changes-plugin</artifactId> <version>2.0</version> <configuration> 
				<component>12311070</component> <resolutionIds>1</resolutionIds> <statusIds>5,6</statusIds> 
				<fixVersionIds>${jira.fix.version.ids}</fixVersionIds> </configuration> <reportSets> 
				<reportSet> <reports> <report>jira-report</report> </reports> </reportSet> 
				</reportSets> </plugin> -->
			<!-- Produce Source cross references -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<aggregate>true</aggregate>
				</configuration>
			</plugin>
			<!-- Unit tests report -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.3</version>
			</plugin>
			<!-- "Release Audit" report (checks license headers etc.) -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>rat-maven-plugin</artifactId>
				<version>1.0-alpha-3</version>
			</plugin>
			<!-- FindBugs Report -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>1.0.0</version>
				<configuration>
					<threshold>Normal</threshold>
					<effort>Default</effort>
				</configuration>
			</plugin>
			<!-- Checkstyle report -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<!--configLocation>checkstyle.xml</configLocation -->
					<enableRulesSummary>false</enableRulesSummary>
				</configuration>
			</plugin>
			<!-- Project website generation -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>2.0-beta-7</version>
				<configuration>
					<outputEncoding>UTF-8</outputEncoding>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
</project>
