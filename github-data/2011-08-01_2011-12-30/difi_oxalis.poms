<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>oxalis</artifactId>
        <groupId>no.sendregning.ap</groupId>
        <version>3.0-beta-SNAPSHOT</version>
    </parent>
    <artifactId>oxalis-api</artifactId>

    <name>Oxalis-api</name>
    <description>
        Holds the stuff required by external components, which may be hooked into Oxalis.
        Classes and resources in this module should be made available to oxalis-inbound
        by placing it into a shared library in the web container.
    </description>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>2.1.9</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <prefix>git</prefix>
                    <dateFormat>dd.MM.yyyy '@' HH:mm:ss z</dateFormat>
                    <verbose>true</verbose>
                    <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                    <skipPoms>true</skipPoms>
                    <generateGitPropertiesFile>false</generateGitPropertiesFile>
                    <generateGitPropertiesFilename>src/main/resources/git.properties</generateGitPropertiesFilename>
                    <failOnNoGitDirectory>false</failOnNoGitDirectory>
                    <skip>false</skip>
                    <excludeProperties>
                        <!-- <excludeProperty>git.user.*</excludeProperty> -->
                    </excludeProperties>
                    <gitDescribe>
                        <!-- don't generate the describe property -->
                        <skip>false</skip>
                        <!-- if no tag was found "near" this commit, just print the commit's id instead, -->
                        <always>true</always>
                        <!-- how many chars should be displayed as the commit object id? 7 is git's default, -->
                        <abbrev>7</abbrev>
                        <!-- when the build is triggered while the repo is in "dirty state", append this suffix -->
                        <dirty>-dirty</dirty>
                        <!-- always print using the "tag-commits_from_tag-g_commit_id-maybe_dirty" format, even if "on" a tag. -->
                        <forceLongFormat>true</forceLongFormat>
                    </gitDescribe>
                </configuration>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
    </build>
</project>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>no.sendregning.ap</groupId>
        <artifactId>oxalis</artifactId>
        <version>3.0-beta-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>oxalis-as2</artifactId>
    <packaging>jar</packaging>

    <name>oxalis-as2</name>
    <description>Library holding classes and stuff pertaining to AS2</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>

        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcmail-jdk15on</artifactId>
        </dependency>

        <!-- redundant?  JAF should be included with Java SE 6 and newer -->
        <dependency>
            <groupId>javax.activation</groupId>
            <artifactId>activation</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
        </dependency>

        <dependency>
            <groupId>no.sendregning.ap</groupId>
            <artifactId>oxalis-commons</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>no.sendregning.ap</groupId>
        <artifactId>oxalis</artifactId>
        <version>3.0-beta-SNAPSHOT</version>
    </parent>
    <artifactId>oxalis-commons</artifactId>
    <name>Oxalis commons</name>
    <description>
        Holds the stuff which is common for both inbound and outbound messages and should be shared between them.
    </description>

    <dependencies>
        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-impl</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.glassfish.metro</groupId>
            <artifactId>webservices-rt</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>javax.activation</groupId>
                    <artifactId>activation</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
        </dependency>

        <dependency>
            <groupId>no.sendregning.ap</groupId>
            <artifactId>oxalis-api</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymock</artifactId>
        </dependency>

        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.8</version>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>

        <!-- Only used for testing / validating the SimpleMessageRepository JSON output -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.2.2</version>
            <scope>test</scope>
        </dependency>

        <!-- Only used for testing -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
            <version>1.4</version>
        </dependency>

    </dependencies>

    <build>
        <resources>
            <!-- The two resource blocks are required due to the fact that we have
            binary stuff, which should not be filtered, together with stuff, which
            should be filtered -->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <excludes>
                    <exclude>**/*.jks</exclude>
                    <exclude>**/*.key</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>**/*.jks</include>
                    <include>**/*.key</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.jvnet.jaxb2.maven2</groupId>
                <artifactId>maven-jaxb2-plugin</artifactId>
                <version>0.8.0</version>
                <executions>
                    <!-- Builds the JAXB stuff for looking up data in the SMP -->
                    <execution>
                        <id>smp</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <schemaDirectory>src/main/resources/smp</schemaDirectory>
                            <generatePackage>org.busdox.smp</generatePackage>
                            <generateDirectory>${project.build.directory}/generated-sources/xjc-smp</generateDirectory>
                        </configuration>
                    </execution>
                    <!-- Builds the classes for parsing the Standard Business Document Header (SBDH) -->
                    <execution>
                        <id>sbdh</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <generateDirectory>${project.build.directory}/generated-sources/xjc-sbdh</generateDirectory>
                            <schemaDirectory>src/main/resources/sbdh</schemaDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>oxalis</artifactId>
        <groupId>no.sendregning.ap</groupId>
        <version>3.0-beta-SNAPSHOT</version>
    </parent>
    <artifactId>oxalis-distribution</artifactId>
    <packaging>pom</packaging>
    <name>oxalis-distribution</name>
    <description>Creates a complete distribution which may be uploaded and made available.</description>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <build>
        <plugins>
            <plugin>
                <!-- NOTE: We don't need a groupId specification because the group is
                    org.apache.maven.plugins ...which is assumed by default.
                -->
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <!-- Where to place the generated .zip and tar.gz files -->
                    <outputDirectory>target</outputDirectory>
                    <descriptors>
                        <descriptor>src/main/assembly/distribution.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>make-distribution</id>
                        <!-- this is used for inheritance merges -->
                        <phase>package</phase>
                        <!-- bind to the packaging phase -->
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <groupId>no.sendregning.ap</groupId>
        <artifactId>oxalis</artifactId>
        <version>3.0-beta-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>oxalis-inbound</artifactId>
    <name>Oxalis START inbound (WAR)</name>
    <description>The inbound web application.</description>
    <packaging>war</packaging>
    <url>https://github.com/difi/oxalis/oxalis-inbound/</url>

    <dependencies>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>

        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${joda.version}</version>
        </dependency>


        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-impl</artifactId>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>javax.xml.stream</groupId>
                    <artifactId>stax-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>jsr250-api</artifactId>
            <version>1.0</version>
        </dependency>

        <dependency>
            <groupId>org.glassfish.metro</groupId>
            <artifactId>webservices-rt</artifactId>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>javax.activation</groupId>
                    <artifactId>activation</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>         <!-- OBS! -->
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>no.sendregning.ap</groupId>
            <artifactId>oxalis-commons</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>no.sendregning.ap</groupId>
            <artifactId>oxalis-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>no.sendregning.ap</groupId>
            <artifactId>oxalis-sql</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>no.sendregning.ap</groupId>
            <artifactId>oxalis-jdbc-dbcp</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>no.sendregning.ap</groupId>
            <artifactId>oxalis-as2</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.inject.extensions</groupId>
            <artifactId>guice-servlet</artifactId>
        </dependency>

        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymock</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcmail-jdk15on</artifactId>
        </dependency>

    </dependencies>

    <build>
        <finalName>oxalis</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>war</goal>
                        </goals>
                        <configuration>
                            <warSourceDirectory>src/main/webapp</warSourceDirectory>
                            <webResources>
                                <resource>
                                    <directory>src/main/webapp</directory>
                                    <filtering>true</filtering>
                                    <includes>
                                        <include>**/*.xml</include>
                                        <include>**/*.wsdl</include>
                                    </includes>
                                </resource>
                            </webResources>
                            <archive>
                                <manifest>
                                    <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                    <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                                </manifest>
                            </archive>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.jvnet.jax-ws-commons</groupId>
                <artifactId>jaxws-maven-plugin</artifactId>
                <version>2.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>wsimport</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <wsdlDirectory>${basedir}/src/main/webapp/WEB-INF/wsdl/accessPointService</wsdlDirectory>
                    <wsdlFiles>
                        <wsdlFile>${wsdl}.wsdl</wsdlFile>
                    </wsdlFiles>
                    <extension>true</extension>
                    <packageName>org.w3._2009._02.ws_tra</packageName>
                    <sei />
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
                <version>1.1.3</version>
                <configuration>
                    <container>
                        <containerId>tomcat7x</containerId>
                        <type>remote</type>
                    </container>
                    <configuration>
                        <type>runtime</type>
                        <properties>
                            <cargo.servlet.port>8080</cargo.servlet.port>
                            <cargo.remote.username>manager</cargo.remote.username>
                            <cargo.remote.password>manager</cargo.remote.password>
                        </properties>
                    </configuration>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <parent>
        <groupId>no.sendregning.ap</groupId>
        <artifactId>oxalis</artifactId>
        <version>3.0-beta-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <description>
        Oxalis integration test.

        Experiment to see if running with embedded Tomcat will work.
        The idea is to compile and package everything, after which the web container
        is started in the pre-integration-test phase, the .war file is deployed
        and the tests are executed in the integration-test phase.
        After the tests have been executed, the web container is stopped in
        the post-integration-test phase.

        The reason for using failsafe is the fact that Surefire would fail the build
        in the integration-test phase, without taking down the server in the
        post-integration-test phase.

        This implementation uses Tomcat, but you may change this to your liking.

        See http://cargo.codehaus.org/Maven2+plugin for more information.
    </description>

    <artifactId>oxalis-integration-test</artifactId>
    <packaging>jar</packaging>

    <name>oxalis-integration-test</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <servlet.port>8080</servlet.port>
    </properties>

    <dependencies>

        <!-- Apache HTTP Client -->

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>

        <!-- Oxalis AS2 -->
        <dependency>
            <groupId>no.sendregning.ap</groupId>
            <artifactId>oxalis-as2</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- We need logging as well -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>

        <!-- The Oxalis web application -->
        <dependency>
            <groupId>no.sendregning.ap</groupId>
            <artifactId>oxalis-inbound</artifactId>
            <version>${project.version}</version>
            <type>war</type>
        </dependency>

        <!-- The outbound library of Oxalis -->
        <dependency>
            <groupId>no.sendregning.ap</groupId>
            <artifactId>oxalis-outbound</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>no.sendregning.ap</groupId>
            <artifactId>oxalis-sql</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>no.sendregning.ap</groupId>
            <artifactId>oxalis-jdbc-dbcp</artifactId>
            <version>${project.version}</version>
        </dependency>


        <!-- Gives us access to the Metro stuff -->
        <dependency>
            <groupId>org.glassfish.metro</groupId>
            <artifactId>webservices-rt</artifactId>
            <version>${metro.version}</version>
            <scope>compile</scope>
            <exclusions>
                <exclusion>
                    <groupId>javax.activation</groupId>
                    <artifactId>activation</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <!-- Failsafe will execute tests in the integration-test phase, rather than in the test phase -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>2.16</version>
                </plugin>

                <!-- Defines the general attributes of the Cargo plugin -->
                <plugin>
                    <groupId>org.codehaus.cargo</groupId>
                    <artifactId>cargo-maven2-plugin</artifactId>
                    <version>1.4.5</version>

                    <configuration>
                        <configuration>
                            <properties>
                                <cargo.servlet.port>${servlet.port}</cargo.servlet.port>
                            </properties>
                        </configuration>
                        <deployables>
                            <!-- References the dependencies section -->
                            <deployable>
                                <groupId>no.sendregning.ap</groupId>
                                <artifactId>oxalis-inbound</artifactId>
                                <type>war</type>
                                <properties>
                                    <!-- Makes our application available at http://localhost:${servlet.port}/oxalis -->
                                    <context>oxalis</context>
                                </properties>
                            </deployable>
                        </deployables>

                        <container>
                            <dependencies>
                                <!-- Declares the Metro framework as a dependency required for the web container -->
                                <dependency>
                                    <groupId>org.glassfish.metro</groupId>
                                    <artifactId>webservices-rt</artifactId>
                                </dependency>
                            </dependencies>
                        </container>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

    </build>

    <profiles>

        <profile>
            <id>it-test</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.codehaus.cargo</groupId>
                            <artifactId>cargo-maven2-plugin</artifactId>
                            <configuration>
                                <container>
                                    <containerId>tomcat7x</containerId>
                                    <zipUrlInstaller>
                                        <url>
                                            http://apache.komsys.org/tomcat/tomcat-7/v7.0.52/bin/apache-tomcat-7.0.52.zip
                                        </url>
                                    </zipUrlInstaller>
                                </container>
                                <configuration>
                                    <!-- Note: this will cause Tomcat to ONLY accept https on 8443 -->
                                    <!-- In order to keep passwords etc. out of the build, the SSL certificate -->
                                    <!-- should be stored separately, for instance in your OXALIS_HOME directory -->
                                    <!-- Configure these properties in your .m2/settings.xml file -->
                                    <properties>
                                        <cargo.servlet.port>8443</cargo.servlet.port>
                                        <cargo.protocol>https</cargo.protocol>
                                        <cargo.tomcat.connector.clientAuth>false</cargo.tomcat.connector.clientAuth>
                                        <cargo.tomcat.connector.sslProtocol>TLS</cargo.tomcat.connector.sslProtocol>
                                        <!-- Declare your SSL password etc in ~/.m2/settings.xml -->
                                        <cargo.tomcat.connector.keystoreFile>${ssl.keystore}</cargo.tomcat.connector.keystoreFile>
                                        <cargo.tomcat.connector.keystorePass>${ssl.password}</cargo.tomcat.connector.keystorePass>
                                        <cargo.tomcat.connector.keyAlias>${ssl.alias}</cargo.tomcat.connector.keyAlias>
                                        <cargo.tomcat.httpSecure>true</cargo.tomcat.httpSecure>
                                        <cargo.logging>medium</cargo.logging>
                                    </properties>
                                </configuration>
                            </configuration>
                            <dependencies>
                            </dependencies>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <plugin>
                        <!-- Concrete configuration of failsafe-plugin -->
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>perform-it</id>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                                <configuration>
                                    <systemProperties>
                                        <property>
                                            <name>servlet.port</name>
                                            <value>${servlet.port}</value>
                                        </property>
                                    </systemProperties>
                                    <excludedGroups>none,difi,manual</excludedGroups>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <!-- See also the pluginManagement section above -->
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven2-plugin</artifactId>
                        <executions>
                            <execution>
                                <!-- Starts the web container in the pre-integration-test phase -->
                                <id>start-cargo</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <configuration>
                                        <properties>
                                            <cargo.logging>medium</cargo.logging>
                                        </properties>
                                    </configuration>
                                </configuration>
                            </execution>
                            <execution>
                                <!-- Stops the web container in the post-integration-test phase -->
                                <id>stop-cargo</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <!-- Enforces that various properties have been set as required -->
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>check-ssl-stuff</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <requireProperty>
                                            <property>ssl.keystore</property>
                                            <message>Path to SSL keystore (ssl.keystore) required. Add it to .m2/settings.xml</message>
                                        </requireProperty>
                                        <requireProperty>
                                            <property>ssl.password</property>
                                            <message>Password for SSL keystore (ssl.password) required. Add it to .m2/settings.xml</message>
                                        </requireProperty>
                                        <requireProperty>
                                            <property>ssl.alias</property>
                                            <message>
                                                Keystore alias for the SSL certificate (ssl.alias) required. Add it to .m2/settings.xml
                                            </message>
                                        </requireProperty>
                                        <requireFilesExist>
                                            <files>
                                                <file>${ssl.keystore}</file>
                                            </files>
                                        </requireFilesExist>
                                    </rules>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>oxalis</artifactId>
        <groupId>no.sendregning.ap</groupId>
        <version>3.0-beta-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <description>
        Connects to a SQL database via JDBC using the JDBC properties defined in OXALIS_HOME. The
        DataSource is wrapped by Apache DBCP
    </description>
    <artifactId>oxalis-jdbc-dbcp</artifactId>
    <packaging>jar</packaging>

    <name>oxalis-jdbc-dbcp</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>

        <dependency>
            <groupId>no.sendregning.ap</groupId>
            <artifactId>oxalis-commons</artifactId>
            <version>${project.version}</version>
        </dependency>
        <!-- DBCP 1.4 compiles and runs under JDK 1.6 only (JDBC 4) -->
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
        </dependency>

    </dependencies>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>oxalis</artifactId>
        <groupId>no.sendregning.ap</groupId>
        <version>3.0-beta-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>oxalis-jdbc-jndi</artifactId>
    <packaging>jar</packaging>

    <name>oxalis-jdbc-jndi</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>no.sendregning.ap</groupId>
            <artifactId>oxalis-api</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>no.sendregning.ap</groupId>
            <artifactId>oxalis-commons</artifactId>
            <version>${project.version}</version>
        </dependency>

    </dependencies>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <groupId>no.sendregning.ap</groupId>
        <artifactId>oxalis</artifactId>
        <version>3.0-beta-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>oxalis-outbound</artifactId>
    <name>Oxalis outbound</name>

    <packaging>jar</packaging>

    <dependencies>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-impl</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>javax.xml.stream</groupId>
                    <artifactId>stax-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.glassfish.metro</groupId>
            <artifactId>webservices-rt</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>javax.activation</groupId>
                    <artifactId>activation</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>no.sendregning.ap</groupId>
            <artifactId>oxalis-commons</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>no.sendregning.ap</groupId>
            <artifactId>oxalis-as2</artifactId>
            <version>${project.version}</version>
        </dependency>


        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
        </dependency>
        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymock</artifactId>
        </dependency>


    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.jvnet.jax-ws-commons</groupId>
                <artifactId>jaxws-maven-plugin</artifactId>
                <version>2.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>wsimport</goal>
                        </goals>
                        <configuration>
                            <wsdlDirectory>${basedir}/src/main/resources/META-INF/wsdl</wsdlDirectory>
                            <wsdlFiles>
                                <wsdlFile>${wsdl}.wsdl</wsdlFile>
                            </wsdlFiles>
                            <extension>true</extension>
                            <packageName>org.w3._2009._02.ws_tra</packageName>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>oxalis</artifactId>
        <groupId>no.sendregning.ap</groupId>
        <version>3.0-beta-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <description>
        SQL based repository of various objects related to Oxalis statistics.
        This implementation is based upon use of MySQL
    </description>
    <artifactId>oxalis-sql</artifactId>
    <packaging>jar</packaging>

    <name>oxalis-sql</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jooq.version>3.0.0-RC3</jooq.version>
    </properties>

    <dependencies>

        <dependency>
            <groupId>no.sendregning.ap</groupId>
            <artifactId>oxalis-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>no.sendregning.ap</groupId>
            <artifactId>oxalis-commons</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- We use the simplest way possible for testing the SQL stuff. I.e. the JDBC with DBCP -->
        <dependency>
            <groupId>no.sendregning.ap</groupId>
            <artifactId>oxalis-jdbc-dbcp</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymock</artifactId>
        </dependency>

        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
            <scope>test</scope>
        </dependency>


    </dependencies>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <groupId>no.sendregning.ap</groupId>
        <artifactId>oxalis</artifactId>
        <version>3.0-beta-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>oxalis-standalone</artifactId>
    <name>Oxalis standalone CLI program</name>
    <description>Standalone CLI program which may be used for sending a PEPPOL document.</description>
    <packaging>jar</packaging>
    <dependencies>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>

        <dependency>
            <groupId>net.sf.jopt-simple</groupId>
            <artifactId>jopt-simple</artifactId>
            <version>4.4</version>
        </dependency>

        <dependency>
            <groupId>no.sendregning.ap</groupId>
            <artifactId>oxalis-outbound</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- Implementation of statistics repository -->
        <dependency>
            <groupId>no.sendregning.ap</groupId>
            <artifactId>oxalis-jdbc-dbcp</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>no.sendregning.ap</groupId>
            <artifactId>oxalis-sql</artifactId>
            <version>${project.version}</version>
        </dependency>


        <!-- TODO: verify dynamic loading of the JDBC driver and remove dependency from oxalis-standalone pom -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.18</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <id>package standalone</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- This is where the name of the artifact is determined -->
                    <finalName>oxalis-standalone</finalName>
                    <appendAssemblyId>false</appendAssemblyId>
                    <archive>
                        <manifest>
                            <mainClass>eu.sendregning.oxalis.Main</mainClass>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                        </manifest>
                    </archive>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>no.sendregning.ap</groupId>
    <artifactId>oxalis</artifactId>
    <packaging>pom</packaging>
    <name>Oxalis - PEPPOL access point Plug-and-Play</name>
    <description>The binary plug-and-play implementation of the PEPPOL sample code.</description>
    <version>3.0-beta-SNAPSHOT</version>
    <url>https://github.com/difi/oxalis</url>
    <scm>
        <connection>scm:git:git@github.com:difi/oxalis.git</connection>
        <url>scm:git:git@github.com:difi/oxalis.git</url>
        <developerConnection>scm:git:git@github.com:difi/oxalis.git</developerConnection>
        <tag>HEAD</tag>
    </scm>
    <modules>
        <module>oxalis-inbound</module>
        <module>oxalis-outbound</module>
        <module>oxalis-commons</module>
        <module>oxalis-standalone</module>
        <module>oxalis-api</module>
        <module>oxalis-distribution</module>
        <module>oxalis-integration-test</module>
        <module>oxalis-jdbc-dbcp</module>
        <module>oxalis-jdbc-jndi</module>
        <module>oxalis-sql</module>
        <module>oxalis-as2</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <metro.version>2.2.1-1</metro.version>
        <slf4j.version>1.6.6</slf4j.version>
        <wsdl>wsdl_v2.0</wsdl>
        <logback.version>1.0.7</logback.version>
        <joda.version>2.1</joda.version>
        <mysql.version>5.1.18</mysql.version>
        <jopt.version>4.4</jopt.version>
        <jersey.version>1.17</jersey.version>
        <bouncycastle.version>1.49</bouncycastle.version>
        <google.guice.version>3.0</google.guice.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jul-to-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>


            <dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-impl</artifactId>
                <version>2.2.4</version>
            </dependency>

            <dependency>
                <groupId>org.glassfish.metro</groupId>
                <artifactId>webservices-rt</artifactId>
                <version>${metro.version}</version>
            </dependency>

            <dependency>
                <groupId>org.easymock</groupId>
                <artifactId>easymock</artifactId>
                <version>3.1</version>
                <scope>test</scope>
            </dependency>
            <!-- Command line argument parsing -->
            <dependency>
                <groupId>net.sf.jopt-simple</groupId>
                <artifactId>jopt-simple</artifactId>
                <version>${jopt.version}</version>
            </dependency>

            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda.version}</version>
            </dependency>

            <dependency>
                <groupId>net.sf.ehcache</groupId>
                <artifactId>ehcache-core</artifactId>
                <version>2.6.6</version>
            </dependency>

            <!-- Google Guice -->
            <dependency>
                <groupId>com.google.inject</groupId>
                <artifactId>guice</artifactId>
                <version>${google.guice.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.inject.extensions</groupId>
                <artifactId>guice-servlet</artifactId>
                <version>${google.guice.version}</version>
            </dependency>

            <!-- Jersey JAX-RS (REST) libraries -->
            <dependency>
                <groupId>com.sun.jersey</groupId>
                <artifactId>jersey-servlet</artifactId>
                <version>${jersey.version}</version>
            </dependency>

            <dependency>
                <groupId>com.sun.jersey.contribs</groupId>
                <artifactId>jersey-guice</artifactId>
                <version>${jersey.version}</version>
            </dependency>

            <dependency>
                <groupId>com.sun.jersey</groupId>
                <artifactId>jersey-jrebel</artifactId>
                <version>1.9.1</version>
            </dependency>

            <!-- DBCP 1.4 compiles and runs under JDK 1.6 only (JDBC 4) -->
            <dependency>
                <groupId>commons-dbcp</groupId>
                <artifactId>commons-dbcp</artifactId>
                <version>1.4</version>
            </dependency>

            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcmail-jdk15on</artifactId>
                <version>${bouncycastle.version}</version>
            </dependency>

            <!-- redundant?  JAF should be included with Java SE 6 and newer -->
            <dependency>
                <groupId>javax.activation</groupId>
                <artifactId>activation</artifactId>
                <version>1.1.1</version>
            </dependency>

            <dependency>
                <groupId>javax.mail</groupId>
                <artifactId>mail</artifactId>
                <version>1.4.4</version>
            </dependency>

            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>4.3.1</version>
            </dependency>

            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.4</version>
            </dependency>

        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>6.8.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.14.1</version>
                    <configuration>
                        <!-- Don't execute tests requiring the presences of keystores, config files etc. -->
                        <!-- Nor do we execute the tests that require manual inspection -->
                        <excludedGroups>integration,difi,manual</excludedGroups>
                    </configuration>
                </plugin>
                <plugin>
                    <!-- NOTE: We don't need a groupId specification because the group is
                        org.apache.maven.plugins ...which is assumed by default.
                    -->
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>2.4</version>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>2.4</version>
                </plugin>
                <plugin>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>1.3.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.4.1</version>
                </plugin>

                <plugin>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>2.14</version>
                </plugin>
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.3</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>cobertura-maven-plugin</artifactId>
                    <version>2.5.1</version>
                    <configuration>
                        <formats>
                            <format>html</format>
                            <format>xml</format>
                        </formats>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-release-plugin</artifactId>
            </plugin>

            <plugin>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-maven</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <rules>
                        <requireMavenVersion>
                            <version>[3.0.3,)</version>
                        </requireMavenVersion>
                        <requireJavaVersion>
                            <version>[1.6,)</version>
                        </requireJavaVersion>
                    </rules>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <developers>
        <developer>
            <name>Nige Parker</name>
            <organization>Mazeppa AS</organization>
            <roles>
                <role>Developer</role>
            </roles>
        </developer>
        <developer>
            <name>Steinar Overbeck Cook</name>
            <organization>SendRegning.no</organization>
            <roles>
                <role>Architect</role>
                <role>Developer</role>
                <role>Manager</role>
            </roles>
        </developer>
    </developers>

    <profiles>
        <!-- Inspects the file system to locate the oxalis-global.properties file, which -->
        <!-- is required for integration tests -->
        <profile>
            <!-- Activated if the environment variable OXALIS_HOME has been set -->
            <id>oxalis-config-from-env</id>
            <activation>
                <file>
                    <exists>${env.OXALIS_HOME}/oxalis-global.properties</exists>
                </file>
            </activation>
            <properties>
                <oxalis.config.present>true</oxalis.config.present>
                <oxalis.configuration.file>${env.OXALIS_HOME}/oxalis-global.properties</oxalis.configuration.file>
            </properties>
        </profile>
        <profile>
            <!-- Activated if ~/.oxalis/oxalis-global.properties has been found -->
            <id>oxalis-config-from-default-dir</id>
            <activation>
                <file>
                    <exists>${user.home}/.oxalis/oxalis-global.properties</exists>
                </file>
            </activation>
            <properties>
                <oxalis.config.present>true</oxalis.config.present>
                <oxalis.configuration.file>${user.home}/.oxalis/oxalis-global.properties</oxalis.configuration.file>
            </properties>
        </profile>

        <!--
        The test groups are:
            none        - ordinary unit tests, should always be executed
            difi        - requires private key for encryption and local DBMS for aggregated statistics
            integration - tests that require the presence of OXALIS_HOME/oxalis-global.properties or
                         ~/.oxalis/oxalis-global.properties
            manual      - tests which should be executed by a human to determine failure or not.

        -->

        <profile>
            <id>it-test</id>
            <activation>
                <property>
                    <name>oxalis.configuration.file</name>
                </property>
            </activation>

            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <!-- Overrides the default declared in the pluginManagement section -->
                            <excludedGroups>none,difi,manual</excludedGroups>
                        </configuration>
                    </plugin>
                    <plugin>
                        <!-- Verifies the existence of the global Oxalis configuration file -->
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <configuration>
                            <rules>
                                <requireFilesExist>
                                    <files>
                                        <file>${oxalis.configuration.file}</file>
                                    </files>
                                </requireFilesExist>
                            </rules>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>

    <distributionManagement>
        <!-- use the following if you're not using a snapshot version. -->
        <repository>
            <id>sr-repo</id>
            <name>Nexus repository</name>
            <url>http://nexus.sendregning.no:8081/nexus/content/repositories/sendregning/</url>
        </repository>

        <!-- use the following if you ARE using a snapshot version. -->
        <snapshotRepository>
            <id>sr-snapshot-repo</id>
            <name>Nexus snapshot repository</name>
            <url>http://nexus.sendregning.no:8081/nexus/content/repositories/snapshots/</url>
        </snapshotRepository>
        <site>
            <id>oxalis.website</id>
            <name>Oxalis website</name>
            <url>file://${java.io.tmpdir}/oxalis</url>
        </site>
    </distributionManagement>

</project>
