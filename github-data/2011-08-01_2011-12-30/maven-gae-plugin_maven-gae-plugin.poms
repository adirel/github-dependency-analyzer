<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>net.kindleit</groupId>
    <artifactId>maven-gae-parent</artifactId>
    <version>0.9.7-SNAPSHOT</version>
    <relativePath>..</relativePath>
  </parent>

  <artifactId>gae-archetype-gwt</artifactId>
  <packaging>maven-archetype</packaging>

  <name>Archetype - GAE-GWT</name>
  <description>Archetype for creating maven-gae projects that uses GWT for the view</description>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <includes><include>**/archetype-metadata.xml</include></includes>
      </resource>
    </resources>
  </build>

</project>
#set($dollar = '$')
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>${groupId}</groupId>
  <artifactId>${artifactId}</artifactId>
  <version>${version}</version>
  <packaging>war</packaging>

  <name>${gaeApplicationName}</name>

  <dependencies>

    <!-- Google App Engine meta-package -->
    <dependency>
      <groupId>net.kindleit</groupId>
      <artifactId>gae-runtime</artifactId>
      <version>${gae.version}</version>
      <type>pom</type>
    </dependency>

    <dependency>
      <groupId>javax.transaction</groupId>
      <artifactId>jta</artifactId>
      <version>1.1</version>
    </dependency>

    <!-- GWT dependencies -->
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-servlet</artifactId>
      <version>${dollar}{gwt.version}</version>
    </dependency>

    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-user</artifactId>
      <version>${dollar}{gwt.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- J2EE Servlet API. We need it to compile IndexServlet class. You can probably remove
      it, if you don't explicitly use Servlets -->
    <dependency>
      <groupId>org.apache.geronimo.specs</groupId>
      <artifactId>geronimo-servlet_2.5_spec</artifactId>
      <version>1.2</version>
      <scope>provided</scope>
    </dependency>

    <!-- Make use of JSP tags. Remove, if you don't use JSPs -->
    <dependency>
      <artifactId>standard</artifactId>
      <groupId>taglibs</groupId>
      <version>1.1.2</version>
      <type>jar</type>
      <scope>runtime</scope>
    </dependency>

    <!-- These dependencies are here just for enabling logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.6.1</version>
    </dependency>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>0.9.24</version>
    </dependency>

    <!-- Test scope -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.5</version>
      <scope>test</scope>
    </dependency>

    <!-- GAE libraries for local testing as described here: http://code.google.com/appengine/docs/java/howto/unittesting.html -->
    <dependency>
      <groupId>com.google.appengine</groupId>
      <artifactId>appengine-api-labs</artifactId>
      <version>${dollar}{gae.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.google.appengine</groupId>
      <artifactId>appengine-api-stubs</artifactId>
      <version>${dollar}{gae.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.google.appengine</groupId>
      <artifactId>appengine-testing</artifactId>
      <version>${dollar}{gae.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- This plug-in "enhances" your domain model objects (i.e. makes them persistent for
        datanucleus) -->
      <plugin>
        <groupId>org.datanucleus</groupId>
        <artifactId>maven-datanucleus-plugin</artifactId>
        <version>1.1.4</version>
        <configuration>
          <!-- Make sure this path contains your persistent classes! -->
          <mappingIncludes>**/model/*.class</mappingIncludes>
          <verbose>true</verbose>
          <enhancerName>ASM</enhancerName>
          <api>JDO</api>
        </configuration>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>enhance</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.datanucleus</groupId>
            <artifactId>datanucleus-core</artifactId>
            <version>1.1.5</version>
            <exclusions>
              <exclusion>
                <groupId>javax.transaction</groupId>
                <artifactId>transaction-api</artifactId>
              </exclusion>
            </exclusions>
          </dependency>
          <dependency>
            <groupId>org.datanucleus</groupId>
            <artifactId>datanucleus-rdbms</artifactId>
            <version>1.1.5</version>
          </dependency>
          <dependency>
            <groupId>org.datanucleus</groupId>
            <artifactId>datanucleus-enhancer</artifactId>
            <version>1.1.4</version>
          </dependency>
        </dependencies>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.1-beta-1</version>
        <configuration>
          <webResources>
            <resource>
              <directory>src/main/webapp</directory>
              <filtering>true</filtering>
              <includes>
                <include>**/appengine-web.xml</include>
              </includes>
            </resource>
          </webResources>
        </configuration>
      </plugin>

      <!-- Maven GWT plugin (ex. http://gwt-maven.googlecode.com/svn/docs/maven-googlewebtoolkit2-plugin/index.html)
        http://mojo.codehaus.org/gwt-maven-plugin -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>gwt-maven-plugin</artifactId>
        <version>1.2</version>
        <configuration>
          <logLevel>INFO</logLevel>

          <!-- match -Dgae.port -->
          <port>${dollar}{gae.port}</port>

          <!-- This must point to your GWT modules! -->
          <compileTargets>
            <value>net.kindleit.gae.example.Messages</value>
          </compileTargets>

          <!-- This is for generating Asynch interfaces -->
          <!-- <servicePattern>**/client/*Service.java</servicePattern> -->

          <extraJvmArgs>-Xmx512m</extraJvmArgs>
          <!--<jvm>${JAVA_HOME}/bin/java</jvm> -->
          <!--<noServer>false</noServer> -->

          <!-- TODO This should help running GAE stuff in hosted mode (when gwt-maven-plugin-1.2
            is released, see http://jira.codehaus.org/browse/MGWT-112) -->
          <server>com.google.appengine.tools.development.gwt.AppEngineLauncher
                    </server>

          <runTarget>/index.html</runTarget>
          <style>DETAILED</style>
          <webXml>war/WEB-INF/web.xml</webXml>
          <!-- this parameter is VERY important with automatic mode - has to match the version
            in your declared deps -->
          <!-- if this is set incorrect (not a match), or left out (default is 1.5.2 for 2.0-beta23)
            you will have mysterious errors -->
          <gwtVersion>${dollar}{gwt.version}</gwtVersion>
        </configuration>
        <executions>
          <!-- <execution> <id>generateAsynch</id> <phase>generate-sources</phase> <goals>
            <goal>generateAsync</goal> </goals> </execution> -->
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- The actual maven-gae-plugin. Type "mvn gae:run" to run project, "mvn gae:deploy"
        to upload to GAE. -->
      <plugin>
        <groupId>net.kindleit</groupId>
        <artifactId>maven-gae-plugin</artifactId>
        <version>${gaePluginVersion}</version>
      </plugin>

      <!-- Upload application to the appspot automatically, during release:perform -->
      <plugin>
        <artifactId>maven-release-plugin</artifactId>
        <configuration>
          <goals>gae:deploy</goals>
        </configuration>
      </plugin>

      <!-- Java compiler version -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.0</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <!-- Specify hard-coded project properties here -->
  <properties>

    <!-- Sets the project's default encoding.
         http://docs.codehaus.org/display/MAVENUSER/POM+Element+for+Source+File+Encoding -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- This is just for "eclipse:eclipse" goal to always attempt downloading sources -->
    <downloadSources>true</downloadSources>

    <!-- Specify AppEngine version for your project. It should match SDK version pointed to
      by ${gae.home} property (Typically, one used by your Eclipse plug-in) -->
    <gae.version>${gaeVersion}</gae.version>

    <!-- GWT version -->
    <gwt.version>${gwtVersion}</gwt.version>

    <!-- Upload to http://test.latest.<applicationName>.appspot.com by default -->
    <gae.application.version>test</gae.application.version>

    <!-- port defaults to 8080 -->
    <gae.port>8080</gae.port>

    <!-- Produce detailed JS during GWT compilation for development environment -->
    <gwt.style>DETAILED</gwt.style>
  </properties>

  <profiles>

    <!-- We can configure our integration server to activate this profile and perform gae:deploy,
      thus uploading latest snapshot to the http://1.latest.<applicationName>.appspot.com automatically -->
    <profile>
      <id>integration-build</id>
      <properties>
        <gae.application.version>stage</gae.application.version>

        <!-- Produce pretty JS during GWT compilation for test environment -->
        <gwt.style>PRETTY</gwt.style>
      </properties>
    </profile>

    <!-- This profile will activate automatically during release and upload application to
      the http://2.latest.<applicationName>.appspot.com (We might want to set the 2nd version as
      our applications Default version to be accessible at http://<applicationName>.appspot.com) -->
    <profile>
      <id>release-build</id>
      <activation>
        <property>
          <name>performRelease</name>
          <value>true</value>
        </property>
      </activation>

      <properties>
        <!-- During release, set application version in appengine-web.xml to 2 -->
        <gae.application.version>release</gae.application.version>

        <!-- Produce compressed JS during GWT compilation for production environment -->
        <gwt.style>OBFUSCATED</gwt.style>
      </properties>
    </profile>
  </profiles>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <artifactId>maven-gae-parent</artifactId>
    <groupId>net.kindleit</groupId>
    <version>0.9.7-SNAPSHOT</version>
    <relativePath>..</relativePath>
  </parent>

  <artifactId>gae-archetype-jsf</artifactId>
  <packaging>maven-archetype</packaging>

  <name>Archetype - GAE-JSF</name>
  <description>Archetype for creating maven-gae projects that works under Java Server Faces</description>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <includes><include>**/archetype-metadata.xml</include></includes>
      </resource>
    </resources>
  </build>

</project>#set($dollar = '$')
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!-- The Basics -->
  <groupId>${groupId}</groupId>
  <artifactId>${artifactId}</artifactId>
  <version>${version}</version>
  <packaging>war</packaging>

  <name>${gaeApplicationName}</name>

	<dependencies>

    <!-- JSF dependencies -->
    <dependency>
      <groupId>com.sun.faces</groupId>
      <artifactId>jsf-impl</artifactId>
      <version>2.1.7</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.web</groupId>
      <artifactId>el-impl</artifactId>
      <version>2.2</version>
    </dependency>

    <!-- Google App Engine meta-package -->
    <dependency>
      <groupId>net.kindleit</groupId>
      <artifactId>gae-runtime</artifactId>
      <version>${gae.version}</version>
      <type>pom</type>
    </dependency>
		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>jta</artifactId>
			<version>1.1</version>
		</dependency>

		<!--
			J2EE Servlet API. We need it to compile IndexServlet class. You can
			probably remove it, if you don't explicitly use Servlets
		-->
		<dependency>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-servlet_2.5_spec</artifactId>
			<version>1.2</version>
			<scope>provided</scope>
		</dependency>

		<!-- Test scope -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.5</version>
			<scope>test</scope>
		</dependency>

		<!--
			GAE libraries for local testing as described here:
			http://code.google.com/appengine/docs/java/howto/unittesting.html
		-->
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-labs</artifactId>
			<version>${dollar}{gae.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-stubs</artifactId>
			<version>${dollar}{gae.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-testing</artifactId>
			<version>${dollar}{gae.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!--
				This plug-in "enhances" your domain model objects (i.e. makes them
				persistent for datanucleus)
			-->
			<plugin>
				<groupId>org.datanucleus</groupId>
				<artifactId>maven-datanucleus-plugin</artifactId>
				<version>1.1.4</version>
				<configuration>
					<!--
						Make sure this path contains your persistent classes!
					-->
					<mappingIncludes>**/model/*.class</mappingIncludes>
					<verbose>true</verbose>
					<enhancerName>ASM</enhancerName>
					<api>JDO</api>
				</configuration>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>enhance</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.datanucleus</groupId>
						<artifactId>datanucleus-core</artifactId>
						<version>1.1.5</version>
						<exclusions>
							<exclusion>
								<groupId>javax.transaction</groupId>
								<artifactId>transaction-api</artifactId>
							</exclusion>
						</exclusions>
					</dependency>
					<dependency>
						<groupId>org.datanucleus</groupId>
						<artifactId>datanucleus-rdbms</artifactId>
						<version>1.1.5</version>
					</dependency>
					<dependency>
						<groupId>org.datanucleus</groupId>
						<artifactId>datanucleus-enhancer</artifactId>
						<version>1.1.4</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1-beta-1</version>
				<configuration>
					<webResources>
						<resource>
							<directory>src/main/webapp</directory>
							<filtering>true</filtering>
							<includes>
								<include>**/appengine-web.xml</include>
							</includes>
						</resource>
					</webResources>
				</configuration>
			</plugin>

			<!--
				The actual maven-gae-plugin. Type "mvn gae:run" to run project, "mvn
				gae:deploy" to upload to GAE.
			-->
			<plugin>
				<groupId>net.kindleit</groupId>
				<artifactId>maven-gae-plugin</artifactId>
				<version>${gaePluginVersion}</version>
			</plugin>

			<!--
				Upload application to the appspot automatically, during
				release:perform
			-->
			<plugin>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<goals>gae:deploy</goals>
				</configuration>
			</plugin>

			<!-- Java compiler version -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<!-- Specify hard-coded project properties here -->
	<properties>

	  <!-- Sets the project's default encoding.
	       http://docs.codehaus.org/display/MAVENUSER/POM+Element+for+Source+File+Encoding -->
  	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!--
			This is just for "eclipse:eclipse" goal to always attempt downloading
			sources
		-->
		<downloadSources>true</downloadSources>

		<!--
			Specify AppEngine version for your project. It should match SDK
			version pointed to by ${gae.home} property (Typically, one used by
			your Eclipse plug-in)
		-->
		<gae.version>${gaeVersion}</gae.version>

		<!--
			Upload to http://test.latest.<applicationName>.appspot.com by default
		-->
		<gae.application.version>test</gae.application.version>
	</properties>

	<profiles>
		<!--
			We can configure our integration server to activate this profile and
			perform gae:deploy, thus uploading latest snapshot to the
			http://1.latest.<applicationName>.appspot.com automatically
		-->
		<profile>
			<id>integration-build</id>
			<properties>
				<gae.application.version>stage</gae.application.version>
			</properties>
		</profile>

		<!--
			This profile will activate automatically during release and upload
			application to the http://2.latest.<applicationName>.appspot.com (We
			might want to set the 2nd version as our applications Default version
			to be accessible at http://<applicationName>.appspot.com)
		-->
		<profile>
			<id>release-build</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>

			<properties>
				<!--
					During release, set application version in appengine-web.xml to 2
				-->
				<gae.application.version>release</gae.application.version>
			</properties>
		</profile>
	</profiles>

</project><?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>net.kindleit</groupId>
    <artifactId>maven-gae-parent</artifactId>
    <version>0.9.7-SNAPSHOT</version>
    <relativePath>..</relativePath>
  </parent>

	<artifactId>gae-archetype-jsp</artifactId>
	<packaging>maven-archetype</packaging>

	<name>Archetype - GAE-JSP</name>
	<description>Archetype for creating maven-gae projects that uses jsp for the view</description>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <includes><include>**/archetype-metadata.xml</include></includes>
      </resource>
    </resources>
  </build>

</project>
#set($dollar = '$')
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!-- The Basics -->
  <groupId>${groupId}</groupId>
  <artifactId>${artifactId}</artifactId>
  <version>${version}</version>
  <packaging>war</packaging>

  <name>${gaeApplicationName}</name>

	<dependencies>

    <!-- Google App Engine meta-package -->
    <dependency>
      <groupId>net.kindleit</groupId>
      <artifactId>gae-runtime</artifactId>
      <version>${gae.version}</version>
      <type>pom</type>
    </dependency>

		<dependency>
			<groupId>org.datanucleus</groupId>
            <artifactId>datanucleus-core</artifactId>
            <version>${dollar}{datanucleus.version}</version>
            <scope>runtime</scope>
        </dependency>

		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>jta</artifactId>
			<version>1.1</version>
		</dependency>

		<!--
			J2EE Servlet API. We need it to compile IndexServlet class. You can
			probably remove it, if you don't explicitly use Servlets
		-->
		<dependency>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-servlet_2.5_spec</artifactId>
			<version>1.2</version>
			<scope>provided</scope>
		</dependency>

		<!--
			Make use of JSP tags. Remove, if you don't use JSPs
		-->
		<dependency>
			<artifactId>standard</artifactId>
			<groupId>taglibs</groupId>
			<version>1.1.2</version>
			<type>jar</type>
			<scope>runtime</scope>
		</dependency>

		<!-- These dependencies are here just for enabling logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.1</version>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>0.9.24</version>
		</dependency>

		<!-- Test scope -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.5</version>
			<scope>test</scope>
		</dependency>

		<!--
			GAE libraries for local testing as described here:
			http://code.google.com/appengine/docs/java/howto/unittesting.html
		-->
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-labs</artifactId>
			<version>${dollar}{gae.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-stubs</artifactId>
			<version>${dollar}{gae.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-testing</artifactId>
			<version>${dollar}{gae.version}</version>
			<scope>test</scope>
		</dependency>

        <dependency>
            <groupId>javax.jdo</groupId>
            <artifactId>jdo2-api</artifactId>
            <version>2.3-eb</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.transaction</groupId>
                    <artifactId>transaction-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
	</dependencies>

	<build>
		<plugins>
			<!--
				This plug-in "enhances" your domain model objects (i.e. makes them
				persistent for datanucleus)
			-->
			<plugin>
				<groupId>org.datanucleus</groupId>
				<artifactId>maven-datanucleus-plugin</artifactId>
				<version>1.1.4</version>
				<configuration>
					<!--
						Make sure this path contains your persistent classes!
					-->
					<mappingIncludes>**/model/*.class</mappingIncludes>
					<verbose>true</verbose>
					<enhancerName>ASM</enhancerName>
					<api>JDO</api>
				</configuration>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>enhance</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.datanucleus</groupId>
						<artifactId>datanucleus-core</artifactId>
						<version>${dollar}{datanucleus.version}</version>
						<exclusions>
							<exclusion>
								<groupId>javax.transaction</groupId>
								<artifactId>transaction-api</artifactId>
							</exclusion>
						</exclusions>
					</dependency>
					<dependency>
						<groupId>org.datanucleus</groupId>
						<artifactId>datanucleus-rdbms</artifactId>
						<version>${dollar}{datanucleus.version}</version>
					</dependency>
					<dependency>
						<groupId>org.datanucleus</groupId>
						<artifactId>datanucleus-enhancer</artifactId>
						<version>1.1.4</version>
					</dependency>
					<dependency>
						<groupId>javax.jdo</groupId>
						<artifactId>jdo2-api</artifactId>
						<version>2.3-ec</version>
						<scope>runtime</scope>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1-beta-1</version>
				<configuration>
					<webResources>
						<resource>
							<directory>src/main/webapp</directory>
							<filtering>true</filtering>
							<includes>
								<include>**/appengine-web.xml</include>
							</includes>
						</resource>
					</webResources>
				</configuration>
			</plugin>

			<!--
				The actual maven-gae-plugin. Type "mvn gae:run" to run project, "mvn
				gae:deploy" to upload to GAE.
			-->
			<plugin>
				<groupId>net.kindleit</groupId>
				<artifactId>maven-gae-plugin</artifactId>
				<version>${gaePluginVersion}</version>
			</plugin>

			<!--
				Upload application to the appspot automatically, during
				release:perform
			-->
			<plugin>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<goals>gae:deploy</goals>
				</configuration>
			</plugin>

			<!-- Java compiler version -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<!-- Specify hard-coded project properties here -->
	<properties>

	  <!-- Sets the project's default encoding.
         http://docs.codehaus.org/display/MAVENUSER/POM+Element+for+Source+File+Encoding -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!--
			This is just for "eclipse:eclipse" goal to always attempt downloading
			sources
		-->
		<downloadSources>true</downloadSources>

		<!--
			Specify AppEngine version for your project. It should match SDK
			version pointed to by ${gae.home} property (Typically, one used by
			your Eclipse plug-in)
		-->
		<gae.version>${gaeVersion}</gae.version>

		<!--
			Upload to http://test.latest.<applicationName>.appspot.com by default
		-->
		<gae.application.version>test</gae.application.version>

        <datanucleus.version>1.1.5</datanucleus.version>
	</properties>

	<profiles>
		<!--
			We can configure our integration server to activate this profile and
			perform gae:deploy, thus uploading latest snapshot to the
			http://1.latest.<applicationName>.appspot.com automatically
		-->
		<profile>
			<id>integration-build</id>
			<properties>
				<gae.application.version>stage</gae.application.version>
			</properties>
		</profile>

		<!--
			This profile will activate automatically during release and upload
			application to the http://2.latest.<applicationName>.appspot.com (We
			might want to set the 2nd version as our applications Default version
			to be accessible at http://<applicationName>.appspot.com)
		-->
		<profile>
			<id>release-build</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>

			<properties>
				<!--
					During release, set application version in appengine-web.xml to 2
				-->
				<gae.application.version>release</gae.application.version>
			</properties>
		</profile>
	</profiles>

</project><?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
    <groupId>net.kindleit</groupId>
    <artifactId>maven-gae-parent</artifactId>
    <version>0.9.7-SNAPSHOT</version>
    <relativePath>..</relativePath>
  </parent>

	<artifactId>gae-archetype-objectify-jsp</artifactId>
	<packaging>maven-archetype</packaging>

	<name>Archetype - GAE-JSP</name>
	<description>Archetype for creating maven-gae projects that uses jsp for the view and Objectify for the ORM.</description>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <includes><include>**/archetype-metadata.xml</include></includes>
      </resource>
    </resources>
  </build>

</project>

#set($dollar = '$')
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <!-- The Basics -->
    <groupId>${groupId}</groupId>
    <artifactId>${artifactId}</artifactId>
    <version>${version}</version>

    <packaging>war</packaging>

    <name>${gaeApplicationName}</name>

    <repositories>
        <repository>
            <id>objectify-appengine</id>
            <name>Objectify Maven Repository</name>
            <url>http://objectify-appengine.googlecode.com/svn/maven</url>
        </repository>
    </repositories>

    <dependencies>
        <!--
        jars from GAE's "lib/user" must be added as compile-time dependencies,
        as described here in "Copying JARs" section:
        http://code.google.com/appengine/docs/java/tools/ant.html
        -->

        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>persistence-api</artifactId>
            <version>1.0</version>
        </dependency>

        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-1.0-sdk</artifactId>
            <version>${gae.version}</version>
        </dependency>

        <!--
        J2EE Servlet API. We need it to compile IndexServlet class.
        You can probably remove it, if you don't explicitly use Servlets.
        -->
        <dependency>
            <groupId>org.apache.geronimo.specs</groupId>
            <artifactId>geronimo-servlet_2.5_spec</artifactId>
            <version>1.2</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.googlecode.objectify</groupId>
            <artifactId>objectify</artifactId>
            <version>2.2.2</version>
        </dependency>

        <!--
        Make use of JSP tags. Remove, if you don't use JSPs.
        -->
        <dependency>
            <artifactId>standard</artifactId>
            <groupId>taglibs</groupId>
            <version>1.1.2</version>
            <type>jar</type>
            <scope>runtime</scope>
        </dependency>

        <!--
        These dependencies are here just for enabling logging.
        -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.6.0</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>0.9.22</version>
        </dependency>

        <!-- Test scope -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.5</version>
            <scope>test</scope>
        </dependency>

        <!--
        GAE libraries for local testing as described here:
        http://code.google.com/appengine/docs/java/howto/unittesting.html
        -->
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-labs</artifactId>
            <version>${gae.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-stubs</artifactId>
            <version>${gae.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-testing</artifactId>
            <version>${gae.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <extensions>
            <extension>
                <groupId>org.apache.maven.archetype</groupId>
                <artifactId>archetype-packaging</artifactId>
                <version>2.0-alpha-5</version>
            </extension>
        </extensions>

        <plugins>
            <plugin>
                <artifactId>maven-archetype-plugin</artifactId>
                <version>2.0-alpha-4</version>
                <extensions>true</extensions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1-beta-1</version>
                <configuration>
                    <webResources>
                        <resource>
                            <directory>src/main/webapp</directory>
                            <filtering>true</filtering>
                            <includes>
                                <include>**/appengine-web.xml</include>
                            </includes>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>

            <!--
            The actual maven-gae-plugin. Type "mvn gae:run" to run project,
            "mvn gae:deploy" to upload to GAE.
            -->
            <plugin>
                <groupId>net.kindleit</groupId>
                <artifactId>maven-gae-plugin</artifactId>
				        <version>${gaePluginVersion}</version>
            </plugin>

            <!--
            Upload application to the appspot automatically, during
            release:perform.
            -->
            <plugin>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <goals>gae:deploy</goals>
                </configuration>
            </plugin>

            <!--
            Java compiler version
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.0</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!--
    Specify hard-coded project properties here.
    -->
    <properties>

        <!-- Sets the project's default encoding.
         http://docs.codehaus.org/display/MAVENUSER/POM+Element+for+Source+File+Encoding -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!--
        This is just for "eclipse:eclipse" goal to always attempt downloading
        sources.
        -->
        <downloadSources>true</downloadSources>

        <!--
        Specify AppEngine version for your project. It should match
        SDK version pointed to by ${gae.home} property (Typically, one used by your
        Eclipse plug-in).
        -->
        <gae.version>1.6.5</gae.version>

        <!--
        Upload to http://test.latest.<applicationName>.appspot.com by
        default.
        -->
        <gae.application.version>test</gae.application.version>
    </properties>

    <profiles>
        <!--
        We can configure our integration server to activate this profile
        and perform gae:deploy, thus uploading latest snapshot to the
        http://1.latest.<applicationName>.appspot.com automatically.
        -->
        <profile>
            <id>integration-build</id>
            <properties>
                <gae.application.version>stage</gae.application.version>
            </properties>
        </profile>

        <!--
        This profile will activate automatically during release and
        upload application to the http://2.latest.<applicationName>.appspot.com (We
        might want to set the 2nd version as our applications Default version to
        be accessible at http://<applicationName>.appspot.com).
        -->
        <profile>
            <id>release-build</id>
            <activation>
                <property>
                    <name>performRelease</name>
                    <value>true</value>
                </property>
            </activation>

            <properties>
                <!--
                During release, set application version in appengine-web.xml
                to 2.
                -->
                <gae.application.version>release</gae.application.version>
            </properties>
        </profile>
    </profiles>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>net.kindleit</groupId>
    <artifactId>maven-gae-parent</artifactId>
    <version>0.9.7-SNAPSHOT</version>
    <relativePath>..</relativePath>
  </parent>

  <artifactId>gae-archetype-spring</artifactId>
  <packaging>maven-archetype</packaging>

  <name>Archetype - Spring</name>
  <description>Archetype for creating maven-gae projects based on Spring framework</description>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <includes><include>**/archetype-metadata.xml</include></includes>
      </resource>
    </resources>
  </build>

</project>

#set($dollar = '$')
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!-- The Basics -->
  <groupId>${groupId}</groupId>
  <artifactId>${artifactId}</artifactId>
  <version>${version}</version>
  <packaging>war</packaging>

  <name>${gaeApplicationName}</name>

  <properties>
    <java.version>1.6</java.version>
    <spring.version>3.1.0.RELEASE</spring.version>
    <cglib.version>2.2.2</cglib.version>

    <!-- Sets the project's default encoding. http://docs.codehaus.org/display/MAVENUSER/POM+Element+for+Source+File+Encoding -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- Specify AppEngine version for your project. It should match SDK version pointed to by ${dollar}{gae.home} property 
      (Typically, one used by your Eclipse plug-in) -->
    <gae.version>${gaeVersion}</gae.version>

    <!-- Upload to http://test.latest.<applicationName>.appspot.com by default -->
    <gae.application.version>test</gae.application.version>
    <!-- port defaults to 8080 -->
    <gae.port>8080</gae.port>
  </properties>

  <profiles>
    <!-- We can configure our integration server to activate this profile and perform gae:deploy, thus uploading latest snapshot 
      to the http://1.latest.<applicationName>.appspot.com automatically -->
    <profile>
      <id>integration-build</id>
      <properties>
        <gae.application.version>stage</gae.application.version>
      </properties>
    </profile>

    <!-- This profile will activate automatically during release and upload application to the http://2.latest.<applicationName>.appspot.com 
      (We might want to set the 2nd version as our applications Default version to be accessible at http://<applicationName>.appspot.com) -->
    <profile>
      <id>release-build</id>
      <activation>
        <property>
          <name>performRelease</name>
          <value>true</value>
        </property>
      </activation>

      <properties>
        <!-- During release, set application version in appengine-web.xml to 2 -->
        <gae.application.version>release</gae.application.version>
      </properties>
    </profile>
  </profiles>

  <build>
    <plugins>
      <!-- The actual maven-gae-plugin. Type "mvn gae:run" to run project, "mvn gae:update" to upload to GAE. -->
      <plugin>
        <groupId>net.kindleit</groupId>
        <artifactId>maven-gae-plugin</artifactId>
        <version>${gaePluginVersion}</version>
        <configuration>
          <sdkDir>${dollar}{gae.home}</sdkDir>
        </configuration>
      </plugin>

      <!-- Upload application to the appspot automatically, during release:perform -->
      <plugin>
        <artifactId>maven-release-plugin</artifactId>
        <configuration>
          <goals>gae:deploy</goals>
        </configuration>
      </plugin>

      <!-- Java compiler version -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.0.2</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
        </configuration>
      </plugin>

    </plugins>
  </build>

  <dependencies>
    <!-- Spring core & mvc -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-orm</artifactId>
      <version>${spring.version}</version>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${spring.version}</version>
      <type>jar</type>
      <scope>test</scope>
    </dependency>

    <!-- CGLib for @Configuration -->
    <dependency>
      <groupId>cglib</groupId>
      <artifactId>cglib-nodep</artifactId>
      <version>${cglib.version}</version>
      <scope>runtime</scope>
    </dependency>


    <!-- Servlet Spec -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.4</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet.jsp</groupId>
      <artifactId>jsp-api</artifactId>
      <version>2.1</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.6.1</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>0.9.24</version>
    </dependency>

    <!-- GAE libraries for local testing as described here: http://code.google.com/appengine/docs/java/howto/unittesting.html -->
    <dependency>
      <groupId>com.google.appengine</groupId>
      <artifactId>appengine-api-labs</artifactId>
      <version>${dollar}{gae.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.google.appengine</groupId>
      <artifactId>appengine-api-stubs</artifactId>
      <version>${dollar}{gae.version}</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <repositories>
    <repository>
      <id>springsource-milestones</id>
      <name>SpringSource Milestones Proxy</name>
      <url>https://oss.sonatype.org/content/repositories/springsource-milestones</url>
    </repository>
  </repositories>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>net.kindleit</groupId>
    <artifactId>maven-gae-parent</artifactId>
    <version>0.9.7-SNAPSHOT</version>
    <relativePath>..</relativePath>
  </parent>

  <artifactId>gae-archetype-wicket</artifactId>
  <packaging>maven-archetype</packaging>

  <name>Archetype - GAE-Wicket</name>
  <description>Archetype for creating maven-gae projects based on apache wicket framework</description>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <includes><include>**/archetype-metadata.xml</include></includes>
      </resource>
    </resources>
  </build>

</project>
#set($dollar = '$')
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!-- The Basics -->
  <groupId>${groupId}</groupId>
  <artifactId>${artifactId}</artifactId>
  <version>${version}</version>
  <packaging>war</packaging>

  <name>${gaeApplicationName}</name>

  <properties>
    <!-- Sets the project's default encoding.
         http://docs.codehaus.org/display/MAVENUSER/POM+Element+for+Source+File+Encoding -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!--
      Specify AppEngine version for your project. It should match SDK version pointed to
      by ${dollar}{gae.home} property (Typically, one used by your Eclipse plug-in)
    -->
    <gae.version>${gaeVersion}</gae.version>

    <!-- Upload to http://test.latest.<applicationName>.appspot.com by default -->
    <gae.application.version>test</gae.application.version>
    <!-- port defaults to 8080 -->
    <gae.port>8080</gae.port>
  </properties>

  <profiles>
    <!--
      We can configure our integration server to activate this profile and
      perform gae:deploy, thus uploading latest snapshot to the
      http://1.latest.<applicationName>.appspot.com automatically
    -->
    <profile>
      <id>integration-build</id>
      <properties>
        <gae.application.version>stage</gae.application.version>
      </properties>
    </profile>

    <!--
      This profile will activate automatically during release and upload
      application to the http://2.latest.<applicationName>.appspot.com (We
      might want to set the 2nd version as our applications Default version
      to be accessible at http://<applicationName>.appspot.com)
    -->
    <profile>
      <id>release-build</id>
      <activation>
        <property>
          <name>performRelease</name>
          <value>true</value>
        </property>
      </activation>

      <properties>
        <!--
          During release, set application version in appengine-web.xml to 2
        -->
        <gae.application.version>release</gae.application.version>
      </properties>
    </profile>
  </profiles>

  <build>
    <plugins>
      <!--
        The actual maven-gae-plugin. Type "mvn gae:run" to run project, "mvn gae:update"
        to upload to GAE.
      -->
      <plugin>
        <groupId>net.kindleit</groupId>
        <artifactId>maven-gae-plugin</artifactId>
        <version>${gaePluginVersion}</version>
        <configuration>
          <sdkDir>${dollar}{gae.home}</sdkDir>
        </configuration>
      </plugin>

      <!--
        Upload application to the appspot automatically, during release:perform
      -->
      <plugin>
        <artifactId>maven-release-plugin</artifactId>
        <configuration>
          <goals>gae:deploy</goals>
        </configuration>
      </plugin>

      <!-- Java compiler version -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.0</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>org.apache.wicket</groupId>
      <artifactId>wicket</artifactId>
      <version>1.4.10</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.6.1</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>0.9.24</version>
    </dependency>

    <!--
      GAE libraries for local testing as described here:
      http://code.google.com/appengine/docs/java/howto/unittesting.html
    -->
    <dependency>
      <groupId>com.google.appengine</groupId>
      <artifactId>appengine-api-labs</artifactId>
      <version>${dollar}{gae.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.google.appengine</groupId>
      <artifactId>appengine-api-stubs</artifactId>
      <version>${dollar}{gae.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.google.appengine</groupId>
      <artifactId>appengine-local-runtime</artifactId>
      <version>${dollar}{gae.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <artifactId>maven-gae-parent</artifactId>
    <groupId>net.kindleit</groupId>
    <version>0.9.6</version>
    <relativePath>..</relativePath>
  </parent>

  <artifactId>gae-runtime</artifactId>
  <version>1.8.6</version>
  <packaging>pom</packaging>

  <name>Google App Engine Runtime Dependencies</name>
  <description>Agregate POM used to simplify Google App Engine dependency retrieval</description>

  <dependencies>

    <!-- Google App Engine API -->
    <dependency>
      <groupId>com.google.appengine</groupId>
      <artifactId>appengine-api-1.0-sdk</artifactId>
      <version>1.8.6</version>
    </dependency>

    <!-- Google App Engine Runtime Dependencies -->
    <dependency>
      <groupId>org.apache.geronimo.specs</groupId>
      <artifactId>geronimo-jta_1.1_spec</artifactId>
      <version>1.1.1</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.geronimo.specs</groupId>
      <artifactId>geronimo-jpa_3.0_spec</artifactId>
      <version>1.1.1</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>javax.jdo</groupId>
      <artifactId>jdo2-api</artifactId>
      <version>2.3-eb</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.datanucleus</groupId>
      <artifactId>datanucleus-core</artifactId>
      <version>1.1.5</version>
    </dependency>

    <dependency>
      <groupId>com.google.appengine.orm</groupId>
      <artifactId>datanucleus-appengine</artifactId>
      <version>1.0.10</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.datanucleus</groupId>
      <artifactId>datanucleus-jpa</artifactId>
      <version>1.1.5</version>
      <scope>runtime</scope>
    </dependency>

    <!-- App Engine Runtime Dependencies-->
    <dependency>
      <groupId>com.google.appengine</groupId>
      <artifactId>appengine-tools-sdk</artifactId>
      <version>1.8.6</version>
    </dependency>

  </dependencies>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>net.kindleit</groupId>
    <artifactId>maven-gae-parent</artifactId>
    <version>0.9.7-SNAPSHOT</version>
    <relativePath>..</relativePath>
  </parent>

  <artifactId>maven-gae-plugin</artifactId>
  <packaging>maven-plugin</packaging>

  <name>Maven GAE Plugin</name>
  <description>Maven plugin for the Google App Engine</description>

	<build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
	</build>

  <dependencies>
    <dependency>
      <groupId>net.kindleit</groupId>
      <artifactId>gae-runtime</artifactId>
      <version>1.6.1</version>
      <type>pom</type>
    </dependency>

    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-archiver</artifactId>
      <version>2.1.2</version>
      <exclusions>
        <exclusion>
          <groupId>org.codehaus.plexus</groupId>
          <artifactId>plexus-container-default</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.codehaus.plexus</groupId>
          <artifactId>plexus-component-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <version>[1.5.1,4.0)</version>
    </dependency>

    <dependency>
      <groupId>javax.transaction</groupId>
      <artifactId>jta</artifactId>
      <version>1.1</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.ant</groupId>
      <artifactId>ant</artifactId>
      <version>${ant.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.ant</groupId>
      <artifactId>ant-launcher</artifactId>
      <version>${ant.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-project</artifactId>
      <version>${maven.plugin.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <version>${maven.plugin.version}</version>
    </dependency>

    <!-- TODO there are no tests yet
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    -->
  </dependencies>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-changelog-plugin</artifactId>
        <version>2.2</version>
        <reportSets>
          <reportSet>
            <id>dual-report</id>
            <configuration>
              <type>range</type>
              <range>30</range>
            </configuration>
            <reports>
              <report>changelog</report>
              <report>dev-activity</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>net.kindleit</groupId>
  <artifactId>maven-gae-parent</artifactId>
  <version>0.9.7-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Maven GAE Parent POM</name>
  <description>Parent POM for the Maven - Google App Engine Integration artifacts.</description>
  <inceptionYear>2009</inceptionYear>
  <url>http://www.kindleit.net/maven_gae_plugin/</url>

  <licenses>
    <license>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <name>Apache 2.0</name>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <parent>
    <groupId>org.sonatype.oss</groupId>
    <artifactId>oss-parent</artifactId>
    <version>7</version>
  </parent>

  <distributionManagement>
    <site>
      <id>com.kindleit.site</id>
      <name>Kindled Project Documentation Sites</name>
      <url>dav:https://sites.kitsd.com/maven-gae-plugin</url>
    </site>
  </distributionManagement>

  <organization>
    <name>KindleIT</name>
    <url>http://www.kitsd.com</url>
  </organization>

  <developers>
    <developer>
      <id>kryptt</id>
      <name>Rodolfo Hansen</name>
      <email>kryptt@gmail.com</email>
    </developer>
    <developer>
      <id>tleese22</id>
      <name>Taylor Leese</name>
      <email>tleese22@gmail.com</email>
    </developer>
    <developer>
      <id>mangrar</id>
      <name>Manuel Grau</name>
      <email>mangrar@gmail.com</email>
    </developer>
    <developer>
      <id>androns</id>
      <name>Andris Rauda</name>
      <email>androns@gmail.com</email>
    </developer>
  </developers>

  <mailingLists>
    <mailingList>
      <name>maven-gae-plugin</name>
      <subscribe>maven-gae-plugin-subscribe@googlegroups.com</subscribe>
      <unsubscribe>maven-gae-plugin+unsubscribe@googlegroups.com</unsubscribe>
      <post>maven-gae-plugin@googlegroups.com</post>
      <archive>http://groups.google.com/group/maven-gae-plugin</archive>
    </mailingList>
  </mailingLists>

  <issueManagement>
    <system>Github</system>
    <url>http://github.com/maven-gae-plugin/maven-gae-plugin/issues</url>
  </issueManagement>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <maven.plugin.version>2.2.1</maven.plugin.version>
    <github.global.server>github</github.global.server>
    <junit.version>3.8.2</junit.version>
    <gae.version>1.7.7</gae.version>
    <ant.version>1.7.1</ant.version>
    <gae.base>
      ${settings.localRepository}/com/google/appengine/appengine-java-sdk/${gae.version}
    </gae.base>
    <gae.home>
       ${gae.base}/appengine-java-sdk-${gae.version}
    </gae.home>
  </properties>

  <profiles>
    <profile>
      <id>release-signing</id>
      <activation>
        <property>
          <name>performRelease</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>enable-runtime</id>
      <activation>
        <property>
          <name>enable-runtime</name>
          <value>true</value>
        </property>
      </activation>
      <modules>
        <module>gae-runtime</module>
      </modules>
    </profile>
    <profile>
      <id>enable-modules</id>
      <activation>
        <activeByDefault>true</activeByDefault>
        <property>
          <name>enable-modules</name>
          <value>true</value>
        </property>
      </activation>
      <modules>
        <module>maven-gae-plugin</module>
        <module>gae-archetype-jsp</module>
        <module>gae-archetype-jsf</module>
        <module>gae-archetype-gwt</module>
        <module>gae-archetype-spring</module>
        <module>gae-archetype-wicket</module>
        <module>gae-archetype-objectify-jsp</module>
      </modules>
    </profile>
  </profiles>

  <scm>
    <connection>scm:git:git@github.com:maven-gae-plugin/maven-gae-plugin.git</connection>
    <developerConnection>scm:git:git@github.com:maven-gae-plugin/maven-gae-plugin.git</developerConnection>
    <url>http://github.com/maven-gae-plugin/maven-gae-plugin</url>
  </scm>

  <repositories>
    <repository>
      <id>maven2-repository.dev.java.net</id>
      <name>Java.net Repository for Maven</name>
      <url>http://download.java.net/maven/2/</url>
      <releases><enabled>true</enabled></releases>
      <snapshots><enabled>true</enabled></snapshots>
    </repository>
  </repositories>

  <build>
    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-webdav-jackrabbit</artifactId>
        <version>2.2</version>
      </extension>
      <extension>
        <groupId>org.apache.maven.archetype</groupId>
        <artifactId>archetype-packaging</artifactId>
        <version>2.2</version>
      </extension>
      <extension>
        <groupId>org.jvnet.wagon-svn</groupId>
        <artifactId>wagon-svn</artifactId>
        <version>1.12</version>
      </extension>
    </extensions>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
          <showDeprecation>true</showDeprecation>
          <showWarnings>true</showWarnings>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <configuration>
          <mavenExecutorId>forked-path</mavenExecutorId>
          <releaseProfiles>release</releaseProfiles>
          <goals>deploy</goals>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-archetype-plugin</artifactId>
        <version>2.2</version>
        <extensions>true</extensions>
      </plugin>
      <plugin>
        <groupId>com.github.github</groupId>
	<artifactId>site-maven-plugin</artifactId>
	<version>0.6</version>
	<configuration>
	  <message>Creating site for ${project.version}</message>
	</configuration>
	<executions>
          <execution>
            <goals>
              <goal>site</goal>
            </goals>
            <phase>site</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-plugin-plugin</artifactId>
        <version>2.9</version>
      </plugin>
    </plugins>
  </reporting>

</project>
