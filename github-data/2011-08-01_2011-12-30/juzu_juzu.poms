<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (C) 2011 eXo Platform SAS.
  ~
  ~ This is free software; you can redistribute it and/or modify it
  ~ under the terms of the GNU Lesser General Public License as
  ~ published by the Free Software Foundation; either version 2.1 of
  ~ the License, or (at your option) any later version.
  ~
  ~ This software is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  ~ Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public
  ~ License along with this software; if not, write to the Free
  ~ Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
  ~ 02110-1301 USA, or see the FSF site: http://www.fsf.org.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <groupId>org.juzu</groupId>
    <artifactId>juzu-parent</artifactId>
    <version>1.0.0-beta1-SNAPSHOT</version>
  </parent>
  
  <modelVersion>4.0.0</modelVersion>

  <artifactId>juzu-archetype</artifactId>
  <packaging>jar</packaging>

  <name>Juzu Maven Archetype</name>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <configuration>
          <escapeString>\</escapeString>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
    <?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>\${groupId}</groupId>
  <artifactId>\${artifactId}</artifactId>
  <version>\${version}</version>
  <packaging>war</packaging>

  <name>Juzu Application</name>

  <properties>
    <maven.compiler.target>1.6</maven.compiler.target>
    <maven.compiler.source>1.6</maven.compiler.source>
  </properties>

  <dependencies>

    <!-- Application dependencies-->
    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-core</artifactId>
      <version>${pom.version}</version>
    </dependency>
    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-plugins-servlet</artifactId>
      <version>${pom.version}</version>
    </dependency>

#if( \${juzuServer} == "gatein")
    <!-- Groovy is shipped with GateIn -->
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-all</artifactId>
      <version>${groovy.version}</version>
      <scope>provided</scope>
    </dependency>
#end

    <!-- Servlet 3.x API -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>${servlet.version}</version>
      <scope>provided</scope>
    </dependency>

#if( \${juzuInject} == "guice" && \${juzuServer} == "servlet")
    <!-- Dependencies for Guice in a Servlet Container -->
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <version>${inject.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
      <version>${guice.version}</version>
    </dependency>
#elseif( \${juzuInject} == "spring" && \${juzuServer} == "servlet")
    <!-- Dependencies for Spring in a Servlet Container -->
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <version>${inject.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${spring.version}</version>
    </dependency>
#elseif( \${juzuInject} == "cdi" && \${juzuServer} == "servlet")
    <!-- Dependencies for CDI in a Servlet Container -->
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <version>${inject.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jboss.weld.servlet</groupId>
      <artifactId>weld-servlet</artifactId>
      <version>${weld.version}</version>
    </dependency>
#elseif( \${juzuInject} == "guice" && \${juzuServer} == "ee")
    <!-- Dependencies for Guice in an EE server -->
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <version>${inject.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
      <version>${guice.version}</version>
    </dependency>
#elseif( \${juzuInject} == "spring" && \${juzuServer} == "ee")
    <!-- Dependencies for Spring in an EE server -->
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <version>${inject.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${spring.version}</version>
    </dependency>
#elseif( \${juzuInject} == "cdi" && \${juzuServer} == "ee")
    <!-- Dependencies for CDI in an EE server -->
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <version>${inject.version}</version>
      <scope>provided</scope>
    </dependency>
#elseif( \${juzuInject} == "guice" && \${juzuServer} == "gatein")
    <!-- Dependencies for Guice in GateIn portal -->
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <version>${inject.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
      <version>${guice.version}</version>
      <scope>provided</scope>
    </dependency>
#elseif( \${juzuInject} == "spring" && \${juzuServer} == "gatein")
    <!-- Dependencies for Spring in GateIn portal -->
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <version>${inject.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${spring.version}</version>
    </dependency>
#elseif( \${juzuInject} == "cdi" && \${juzuServer} == "gatein")
    <!-- Dependencies for CDI in GateIn portal -->
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <version>${inject.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.enterprise</groupId>
      <artifactId>cdi-api</artifactId>
      <version>${cdi-api.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.javassist</groupId>
      <artifactId>javassist</artifactId>
      <version>${javassist.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.weld</groupId>
      <artifactId>weld-core</artifactId>
      <version>${weld.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jboss.weld.servlet</groupId>
      <artifactId>weld-servlet-core</artifactId>
      <version>${weld.version}</version>
    </dependency>
#end

    <!-- Junit for testing -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-depchain-arquillian</artifactId>
      <version>${pom.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-depchain-arquillian-tomcat7</artifactId>
      <version>${pom.version}</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <finalName>\${artifactId}</finalName>

    <pluginManagement>
      <plugins>

#if( \${juzuServer} == "servlet")
        <!--
          | Test your application with:
          | >mvn tomcat7:run-war
          -->
        <plugin>
          <groupId>org.apache.tomcat.maven</groupId>
          <artifactId>tomcat7-maven-plugin</artifactId>
          <version>2.1</version>
        </plugin>
#elseif( \${juzuServer} == "ee")
        <!--
          | Test your application with:
          | >mvn jboss-as:run
          -->
        <plugin>
          <groupId>org.jboss.as.plugins</groupId>
          <artifactId>jboss-as-maven-plugin</artifactId>
          <version>7.4.Final</version>
          <executions>
            <execution>
              <id>default-run</id>
              <configuration>
                <version>7.1.0.Final</version>
              </configuration>
            </execution>
          </executions>
        </plugin>
#end

      </plugins>
    </pluginManagement>

  </build>

#if( \${juzuServer} == "servlet")
  <!-- Activate this profile for using Juzu live mode -->
  <profiles>
    <profile>
      <id>live</id>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.tomcat.maven</groupId>
              <artifactId>tomcat7-maven-plugin</artifactId>
              <configuration>
                <systemProperties>
                  <juzu.run_mode>live</juzu.run_mode>
                </systemProperties>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
  </profiles>
#end

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

  <packaging>war</packaging>

  <!--

  Building application :

  > mvn package # By default for Guice 3.0 and Servlet Container
  > mvn package -Dtarget=spring # For Spring and Servlet Container
  > mvn package -Dtarget=cdi # For CDI and Servlet Container
  > mvn package -Dtarget=ee-guice # For Guice 3.0 and Java EE
  > mvn package -Dtarget=ee-spring # For Spring and Java EE
  > mvn package -Dtarget=ee-cdi # For CDI and Java EE

  Testing the application, use the dedicated plugin for running Tomcat or JBoss with the target option above :

  > mvn tomcat7:run-war
  > mvn -Dtarget=spring tomcat7:run-war
  > mvn -Dtarget=cdi tomcat7:run-war
  > mvn -Dtarget=ee-guice jboss-as:run
  > mvn -Dtarget=ee-spring jboss-as:run
  > mvn -Dtarget=ee-cdi jboss-as:run

  Open your browser at http://localhost:8080/juzu-booking

  -->

  <parent>
    <groupId>org.juzu</groupId>
    <artifactId>juzu-parent</artifactId>
    <version>1.0.0-beta1-SNAPSHOT</version>
  </parent>

  <artifactId>juzu-booking</artifactId>
  <version>1.0.0-beta1-SNAPSHOT</version>

  <name>Juzu Booking</name>
  <description>The infamous booking application</description>

  <dependencies>

    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-plugins-servlet</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-plugins-validation</artifactId>
    </dependency>
    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-plugins-webjars</artifactId>
    </dependency>
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>jquery</artifactId>
      <version>1.7.2</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-depchain-arquillian</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-depchain-arquillian-tomcat7</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>javax.portlet</groupId>
      <artifactId>portlet-api</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>juzu-booking</finalName>
    <plugins>

      <!-- tag::gmaven-plugin[] -->
      <!-- Precompile the template class in maven (this is optional) -->
      <plugin>
        <groupId>org.codehaus.gmaven</groupId>
        <artifactId>gmaven-plugin</artifactId>
        <version>1.5</version>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <sources>
                <fileset>
                  <directory>${project.build.outputDirectory}</directory>
                  <includes>
                    <include>**/*.groovy</include>
                  </includes>
                </fileset>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- end::gmaven-plugin[] -->

    </plugins>

    <pluginManagement>
      <plugins>
      </plugins>
    </pluginManagement>
  </build>

  <!-- Generates an executable jar with Tomcat -->
  <profiles>

    <profile>
      <id>guice</id>
      <activation>
        <property>
          <name>!target</name>
        </property>
      </activation>
      <!-- tag::guice[] -->
      <dependencies>
        <dependency>
          <groupId>org.juzu</groupId>
          <artifactId>juzu-core</artifactId>
        </dependency>
        <dependency>
          <groupId>javax.inject</groupId>
          <artifactId>javax.inject</artifactId>
        </dependency>
        <dependency>
          <groupId>com.google.inject</groupId>
          <artifactId>guice</artifactId>
        </dependency>
      </dependencies>
      <!-- end::guice[] -->
    </profile>

    <profile>
      <id>spring</id>
      <activation>
        <property>
          <name>target</name>
          <value>spring</value>
        </property>
      </activation>
      <!-- tag::spring[] -->
      <dependencies>
        <dependency>
          <groupId>org.juzu</groupId>
          <artifactId>juzu-core</artifactId>
        </dependency>
        <dependency>
          <groupId>javax.inject</groupId>
          <artifactId>javax.inject</artifactId>
        </dependency>
        <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-web</artifactId>
        </dependency>
      </dependencies>
      <!-- end::spring[] -->
    </profile>

    <profile>
      <id>cdi</id>
      <activation>
        <property>
          <name>target</name>
          <value>cdi</value>
        </property>
      </activation>
      <properties>
        <maven.war.webxml>src/main/web-cdi.xml</maven.war.webxml>
      </properties>
      <!-- tag::cdi[] -->
      <dependencies>
        <dependency>
          <groupId>org.juzu</groupId>
          <artifactId>juzu-core</artifactId>
        </dependency>
        <dependency>
          <groupId>javax.inject</groupId>
          <artifactId>javax.inject</artifactId>
        </dependency>
        <dependency>
          <groupId>org.jboss.weld.servlet</groupId>
          <artifactId>weld-servlet</artifactId>
        </dependency>
      </dependencies>
      <!-- end::cdi[] -->
    </profile>

    <profile>
      <id>ee-guice</id>
      <activation>
        <property>
          <name>target</name>
          <value>ee-guice</value>
        </property>
      </activation>
      <!-- tag::ee-guice[] -->
      <dependencies>
        <dependency>
          <groupId>org.juzu</groupId>
          <artifactId>juzu-core</artifactId>
        </dependency>
        <dependency>
          <groupId>javax.inject</groupId>
          <artifactId>javax.inject</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>com.google.inject</groupId>
          <artifactId>guice</artifactId>
        </dependency>
      </dependencies>
      <!-- end::ee-guice[] -->
    </profile>

    <profile>
      <id>ee-spring</id>
      <activation>
        <property>
          <name>target</name>
          <value>ee-spring</value>
        </property>
      </activation>
      <!-- tag::ee-spring[] -->
      <dependencies>
        <dependency>
          <groupId>org.juzu</groupId>
          <artifactId>juzu-core</artifactId>
        </dependency>
        <dependency>
          <groupId>javax.inject</groupId>
          <artifactId>javax.inject</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-web</artifactId>
        </dependency>
      </dependencies>
      <!-- end::ee-spring[] -->
    </profile>

    <profile>
      <id>ee-cdi</id>
      <activation>
        <property>
          <name>target</name>
          <value>ee-cdi</value>
        </property>
      </activation>
      <!-- tag::ee-cdi[] -->
      <dependencies>
        <dependency>
          <groupId>org.juzu</groupId>
          <artifactId>juzu-core</artifactId>
        </dependency>
        <dependency>
          <groupId>javax.inject</groupId>
          <artifactId>javax.inject</artifactId>
          <scope>provided</scope>
        </dependency>
      </dependencies>
      <!-- end::ee-cdi[] -->
    </profile>

    <profile>
      <id>gatein-guice</id>
      <activation>
        <property>
          <name>target</name>
          <value>gatein-guice</value>
        </property>
      </activation>
      <!-- tag::gatein-guice[] -->
      <dependencies>
        <dependency>
          <groupId>org.juzu</groupId>
          <artifactId>juzu-core</artifactId>
        </dependency>
        <dependency>
          <groupId>org.codehaus.groovy</groupId>
          <artifactId>groovy-all</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>javax.inject</groupId>
          <artifactId>javax.inject</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>com.google.inject</groupId>
          <artifactId>guice</artifactId>
          <scope>provided</scope>
        </dependency>
      </dependencies>
      <!-- end::gatein-guice[] -->
    </profile>

    <profile>
      <id>gatein-spring</id>
      <activation>
        <property>
          <name>target</name>
          <value>gatein-spring</value>
        </property>
      </activation>
      <!-- tag::gatein-spring[] -->
      <dependencies>
        <dependency>
          <groupId>org.juzu</groupId>
          <artifactId>juzu-core</artifactId>
        </dependency>
        <dependency>
          <groupId>org.codehaus.groovy</groupId>
          <artifactId>groovy-all</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>javax.inject</groupId>
          <artifactId>javax.inject</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-web</artifactId>
        </dependency>
      </dependencies>
      <!-- end::gatein-spring[] -->
    </profile>

    <profile>
      <id>gatein-cdi</id>
      <activation>
        <property>
          <name>target</name>
          <value>gatein-cdi</value>
        </property>
      </activation>
      <properties>
        <maven.war.webxml>src/main/web-cdi.xml</maven.war.webxml>
      </properties>
      <!-- tag::gatein-cdi[] -->
      <dependencies>
        <dependency>
          <groupId>org.juzu</groupId>
          <artifactId>juzu-core</artifactId>
        </dependency>
        <dependency>
          <groupId>org.codehaus.groovy</groupId>
          <artifactId>groovy-all</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>javax.inject</groupId>
          <artifactId>javax.inject</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>javax.enterprise</groupId>
          <artifactId>cdi-api</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.javassist</groupId>
          <artifactId>javassist</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss.weld</groupId>
          <artifactId>weld-core</artifactId>
        </dependency>
        <dependency>
          <groupId>org.jboss.weld.servlet</groupId>
          <artifactId>weld-servlet-core</artifactId>
        </dependency>
      </dependencies>
      <!-- end::gatein-cdi[] -->
    </profile>
  </profiles>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.juzu</groupId>
    <artifactId>juzu-parent</artifactId>
    <version>1.0.0-beta1-SNAPSHOT</version>
  </parent>

  <artifactId>juzu-core</artifactId>
  <version>1.0.0-beta1-SNAPSHOT</version>

  <name>Juzu Core</name>
  <description>Where all the magic happens</description>

  <dependencies>

    <!-- Compile dependencies -->

    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-all</artifactId>
      <scope>compile</scope>
    </dependency>

    <!-- Dependencies we don't want to leak -->

    <dependency>
      <groupId>javax.portlet</groupId>
      <artifactId>portlet-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.weld</groupId>
      <artifactId>weld-core</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- Test dependencies -->

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

		<dependency>
      <groupId>org.eclipse.jdt.core.compiler</groupId>
      <artifactId>ecj</artifactId>
      <scope>test</scope>
		</dependency>

    <dependency>
      <groupId>org.jboss.arquillian.container</groupId>
      <artifactId>arquillian-container-spi</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.junit</groupId>
      <artifactId>arquillian-junit-container</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.shrinkwrap</groupId>
      <artifactId>shrinkwrap-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.shrinkwrap</groupId>
      <artifactId>shrinkwrap-impl-base</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.shrinkwrap.resolver</groupId>
      <artifactId>shrinkwrap-resolver-api-maven</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.shrinkwrap.resolver</groupId>
      <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.arquillian.extension</groupId>
      <artifactId>arquillian-drone-impl</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.extension</groupId>
      <artifactId>arquillian-drone-selenium</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.extension</groupId>
      <artifactId>arquillian-drone-webdriver</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-java</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-htmlunit-driver</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.opera</groupId>
      <artifactId>operadriver</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.extension</groupId>
      <artifactId>arquillian-phantom-driver</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-ext</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.cal10n</groupId>
      <artifactId>cal10n-api</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- -->
    <dependency>
      <groupId>net.sourceforge.jregex</groupId>
      <artifactId>jregex</artifactId>
      <version>1.2_01</version>
      <scope>test</scope>
    </dependency>

    <!-- -->
    <dependency>
      <groupId>com.google.code.javaparser</groupId>
      <artifactId>javaparser</artifactId>
      <version>1.0.8</version>
      <scope>test</scope>
    </dependency>

    <!-- -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.weld.servlet</groupId>
      <artifactId>weld-servlet </artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Arquillian container -->
    <dependency>
      <groupId>org.jboss.arquillian.container</groupId>
      <artifactId>arquillian-tomcat-embedded-7</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-jasper</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-logging-juli</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- GateIn embedded portlet container -->
    <dependency>
      <groupId>org.gatein.pc</groupId>
      <artifactId>pc-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.gatein.pc</groupId>
      <artifactId>pc-portlet</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.gatein.pc</groupId>
      <artifactId>pc-embed</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>net.sourceforge.htmlunit</groupId>
      <artifactId>htmlunit</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>

    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <configuration>
            <compilerArgument>-proc:none</compilerArgument>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-javadoc-plugin</artifactId>
          <configuration>
            <excludePackageNames>juzu.impl.*</excludePackageNames>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>javacc-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>javacc</id>
            <goals>
              <goal>javacc</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <goals>
             <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!--
        | Below is configuration for making test pass with eclipse compiler : eclipse compiler
        | will search for .java source in the java.class.path so we contribute the resources
        | to the classpath but directly instead of copying the resources to ${build.testOutputDirectory}/test-classes.
        | This allow the JavaCompilerProvider#ECJ to remove
       -->
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <executions>
          <execution>
            <id>default-test</id>
            <configuration>
<!--
              <argLine>-agentpath:/Users/julien/java/jprofiler7/bin/macos/libjprofilerti.jnilib=port=15000</argLine>
-->
              <additionalClasspathElements>
                <additionalClasspathElement>${basedir}/src/test/resources</additionalClasspathElement>
              </additionalClasspathElements>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>default-testResources</id>
            <phase>prepare-package</phase>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>
    
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

  <packaging>jar</packaging>

  <parent>
    <groupId>org.juzu</groupId>
    <artifactId>juzu-depchain</artifactId>
    <version>1.0.0-beta1-SNAPSHOT</version>
  </parent>

  <artifactId>juzu-depchain-arquillian-tomcat7</artifactId>
  <version>1.0.0-beta1-SNAPSHOT</version>

  <name>Juzu Arquillian Tomcat7 Depchain</name>
  <description>The Juzu Depchain for Arquillian testing with Tomcat7</description>

  <properties>
    <!-- No target/classes. Jacoco cannot be launched here -->
    <jacoco.skip>true</jacoco.skip>
  </properties>

  <dependencies>

    <!-- Arquillian Tomcat 7 -->
    <dependency>
      <groupId>org.jboss.arquillian.container</groupId>
      <artifactId>arquillian-tomcat-embedded-7</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-jasper</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-logging-juli</artifactId>
    </dependency>
  </dependencies>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

  <packaging>jar</packaging>

  <parent>
    <groupId>org.juzu</groupId>
    <artifactId>juzu-depchain</artifactId>
    <version>1.0.0-beta1-SNAPSHOT</version>
  </parent>

  <artifactId>juzu-depchain-arquillian</artifactId>
  <version>1.0.0-beta1-SNAPSHOT</version>

  <name>Juzu Arquillian Depchain</name>
  <description>The Juzu Depchain for Arquillian testing</description>

  <dependencies>

    <!-- Shrinkwrap/Arquillian -->
    <dependency>
      <groupId>org.jboss.shrinkwrap</groupId>
      <artifactId>shrinkwrap-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.shrinkwrap</groupId>
      <artifactId>shrinkwrap-impl-base</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.shrinkwrap.resolver</groupId>
      <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.container</groupId>
      <artifactId>arquillian-container-spi</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.junit</groupId>
      <artifactId>arquillian-junit-container</artifactId>
    </dependency>

    <!-- Arquillian webdriver -->
    <dependency>
      <groupId>org.jboss.arquillian.extension</groupId>
      <artifactId>arquillian-drone-impl</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.extension</groupId>
      <artifactId>arquillian-drone-webdriver</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.extension</groupId>
      <artifactId>arquillian-drone-selenium</artifactId>
    </dependency>
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-java</artifactId>
    </dependency>
    <dependency>
      <groupId>com.opera</groupId>
      <artifactId>operadriver</artifactId>
    </dependency>
    <dependency>
      <groupId>net.sourceforge.htmlunit</groupId>
      <artifactId>htmlunit</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.extension</groupId>
      <artifactId>arquillian-phantom-driver</artifactId>
    </dependency>
    <dependency>
      <groupId>com.github.detro.ghostdriver</groupId>
      <artifactId>phantomjsdriver</artifactId>
    </dependency>

    <!-- GateIn embedded portlet container -->
    <dependency>
      <groupId>org.gatein.pc</groupId>
      <artifactId>pc-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.gatein.pc</groupId>
      <artifactId>pc-portlet</artifactId>
    </dependency>
    <dependency>
      <groupId>org.gatein.pc</groupId>
      <artifactId>pc-embed</artifactId>
    </dependency>

  </dependencies>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.juzu</groupId>
    <artifactId>juzu-parent</artifactId>
    <version>1.0.0-beta1-SNAPSHOT</version>
  </parent>

  <artifactId>juzu-depchain</artifactId>
  <version>1.0.0-beta1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Juzu Depchains</name>
  <description>The Juzu Depchains</description>

  <modules>
    <module>arquillian</module>
    <module>arquillian-tomcat7</module>
  </modules>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.juzu</groupId>
    <artifactId>juzu-parent</artifactId>
    <version>1.0.0-beta1-SNAPSHOT</version>
  </parent>

  <artifactId>juzu-distrib</artifactId>
  <version>1.0.0-beta1-SNAPSHOT</version>

  <name>Juzu Distribution</name>
  <description>Packaging and distribution</description>

  <properties>
    <!-- No target/classes. Jacoco cannot be launched here -->
    <jacoco.skip>true</jacoco.skip>
  </properties>

  <dependencies>

    <!-- Tutorial -->
    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-doc-tutorial-examples</artifactId>
      <classifier>sources</classifier>
    </dependency>
    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-doc-tutorial-examples</artifactId>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-doc-tutorial-guide</artifactId>
      <classifier>html</classifier>
      <type>zip</type>
    </dependency>

    <!-- Reference -->
    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-doc-reference-api</artifactId>
      <classifier>javadoc</classifier>
    </dependency>
    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-doc-reference-guide</artifactId>
      <classifier>html</classifier>
      <type>zip</type>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>booking-gatein</id>
            <goals>
              <goal>single</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <appendAssemblyId>false</appendAssemblyId>
              <attach>true</attach>
              <descriptors>
                <descriptor>src/main/assembly/packaging.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.juzu</groupId>
    <artifactId>juzu-doc-extension-parent</artifactId>
    <version>1.0.0-beta1-SNAPSHOT</version>
  </parent>

  <artifactId>juzu-doc-extension-guide</artifactId>
  <version>1.0.0-beta1-SNAPSHOT</version>

  <name>Juzu Extension Guide</name>
  <description>The extension guide</description>

  <dependencies>
    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-core</artifactId>
      <classifier>sources</classifier>
      <version>1.0.0-beta1-SNAPSHOT</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/sources</outputDirectory>
              <artifactItems>
                <artifactItem>
                  <groupId>org.juzu</groupId>
                  <artifactId>juzu-core</artifactId>
                  <classifier>sources</classifier>
                  <version>${project.version}</version>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-foo</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/sources</outputDirectory>
              <artifactItems>
                <artifactItem>
                  <groupId>org.juzu</groupId>
                  <artifactId>juzu-booking</artifactId>
                  <type>war</type>
                  <version>${project.version}</version>
                  <includes>META-INF/maven/org.juzu/juzu-booking/pom.xml,META-INF/context.xml</includes>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-asciidoc</id>
          </execution>
          <execution>
            <id>copy-stylesheets</id>
          </execution>
          <execution>
            <id>copy-images</id>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.asciidoctor</groupId>
        <artifactId>asciidoctor-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-html</id>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>assemble-html</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/main/assembly/html.xml</descriptor>
              </descriptors>
              <attach>true</attach>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.juzu</groupId>
    <artifactId>juzu-doc-parent</artifactId>
    <version>1.0.0-beta1-SNAPSHOT</version>
  </parent>

  <artifactId>juzu-doc-extension-parent</artifactId>
  <version>1.0.0-beta1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Juzu Extension Aggregator</name>
  <description>The extension aggregator</description>

  <modules>
    <module>guide</module>
  </modules>

  <profiles>
    <profile>
      <id>noguide</id>
      <activation>
        <property>
          <name>!noguide</name>
        </property>
      </activation>
      <modules>
        <module>guide</module>
      </modules>
    </profile>
  </profiles>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.juzu</groupId>
    <artifactId>juzu-parent</artifactId>
    <version>1.0.0-beta1-SNAPSHOT</version>
  </parent>

  <artifactId>juzu-doc-parent</artifactId>
  <version>1.0.0-beta1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Juzu Documentation Aggregator</name>
  <description>The documentation aggregator</description>

  <modules>
    <module>tutorial</module>
    <module>reference</module>
    <module>extension</module>
  </modules>

  <build>
    <pluginManagement>
      <plugins>
        <!-- Asciidoc section -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <executions>
            <execution>
              <id>copy-asciidoc</id>
              <phase>generate-resources</phase>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <configuration>
                <resources>
                  <resource>
                    <directory>src/main/asciidoc</directory>
                  </resource>
                </resources>
                <outputDirectory>target/asciidoc</outputDirectory>
              </configuration>
            </execution>
            <execution>
              <id>copy-stylesheets</id>
              <phase>generate-resources</phase>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <configuration>
                <resources>
                  <resource>
                    <directory>src/main/resources</directory>
                  </resource>
                </resources>
                <outputDirectory>target/docs/html</outputDirectory>
              </configuration>
            </execution>
            <execution>
              <id>copy-images</id>
              <phase>generate-resources</phase>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <configuration>
                <resources>
                  <resource>
                    <directory>src/main/asciidoc/images</directory>
                  </resource>
                </resources>
                <outputDirectory>target/docs/html/images</outputDirectory>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.asciidoctor</groupId>
          <artifactId>asciidoctor-maven-plugin</artifactId>
          <version>0.1.3.1</version>
          <executions>
            <execution>
              <id>generate-html</id>
              <phase>prepare-package</phase>
              <goals>
                <goal>process-asciidoc</goal>
              </goals>
              <configuration>
                <!-- asciidoctor -d book -o target/book.html -a copycss -a toc2 -a sectanchors \
                     -a source-highlighter=coderay -a stylesheet=foundation-lime.css -a crash-version=${project.version} \
                     target/asciidoc/book.asciidoc -->
                <sourceDirectory>${project.build.directory}/asciidoc</sourceDirectory>
                <sourceDocumentName>${project.build.directory}/asciidoc/book.asciidoc</sourceDocumentName>
                <outputDirectory>target/docs/html</outputDirectory>
                <backend>html</backend>
                <doctype>book</doctype>
                <attributes>
                  <toc2>1</toc2>
                  <stylesheet>rocket-panda.css</stylesheet>
                  <source-highlighter>coderay</source-highlighter>
                  <juzu-version>${project.version}</juzu-version>
                  <spring-version>${spring.version}</spring-version>
                  <servlet-version>${servlet.version}</servlet-version>
                  <inject-version>${inject.version}</inject-version>
                  <sectanchors>1</sectanchors>
                  <icons>font</icons>
                  <sourcesdir>${project.build.directory}/sources</sourcesdir>
                </attributes>
              </configuration>
            </execution>
          </executions>
          <dependencies>
            <dependency>
              <groupId>org.asciidoctor</groupId>
              <artifactId>asciidoctor-java-integration</artifactId>
              <version>0.1.3</version>
              <scope>compile</scope>
              <exclusions>
                <exclusion>
                  <artifactId>erubis</artifactId>
                  <groupId>rubygems</groupId>
                </exclusion>
                <exclusion>
                  <artifactId>tilt</artifactId>
                  <groupId>rubygems</groupId>
                </exclusion>
                <exclusion>
                  <artifactId>asciidoctor</artifactId>
                  <groupId>rubygems</groupId>
                </exclusion>
                <exclusion>
                  <artifactId>slim</artifactId>
                  <groupId>rubygems</groupId>
                </exclusion>
                <exclusion>
                  <artifactId>haml</artifactId>
                  <groupId>rubygems</groupId>
                </exclusion>
                <exclusion>
                  <artifactId>coderay</artifactId>
                  <groupId>rubygems</groupId>
                </exclusion>
              </exclusions>
            </dependency>
          </dependencies>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.juzu</groupId>
    <artifactId>juzu-doc-reference-parent</artifactId>
    <version>1.0.0-beta1-SNAPSHOT</version>
  </parent>

  <artifactId>juzu-doc-reference-api</artifactId>
  <version>1.0.0-beta1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>Juzu API documentation</name>
  <description>The API documentation</description>

  <properties>
    <!-- No target/classes. Jacoco cannot be launched here -->
    <jacoco.skip>true</jacoco.skip>
  </properties>

  <dependencies>
    <dependency>
      <groupId>javax.portlet</groupId>
      <artifactId>portlet-api</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
    </dependency>
    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-core</artifactId>
      <classifier>sources</classifier>
    </dependency>
    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-plugins-portlet</artifactId>
      <classifier>sources</classifier>
    </dependency>
    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-plugins-less</artifactId>
      <classifier>sources</classifier>
    </dependency>
  </dependencies>

  <build>
    <plugins>

      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <includeGroupIds>org.juzu</includeGroupIds>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>jar</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <show>public</show>
              <quiet>true</quiet>
              <maxmemory>512M</maxmemory>
              <sourcepath>${project.build.directory}/dependency</sourcepath>
              <excludePackageNames>juzu.impl:juzu.plugin.portlet.impl:juzu.plugin.less4j.impl</excludePackageNames>
              <links>
                <link>http://atinject.googlecode.com/svn/trunk/javadoc/</link>
                <link>http://docs.oracle.com/javaee/6/api/</link>
                <link>http://www.bluesunrise.com/portlet-api/</link>
              </links>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.juzu</groupId>
    <artifactId>juzu-doc-reference-parent</artifactId>
    <version>1.0.0-beta1-SNAPSHOT</version>
  </parent>

  <artifactId>juzu-doc-reference-guide</artifactId>
  <version>1.0.0-beta1-SNAPSHOT</version>

  <name>Juzu Reference Guide</name>
  <description>The reference guide</description>

  <dependencies>
    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-core</artifactId>
      <classifier>sources</classifier>
      <version>1.0.0-beta1-SNAPSHOT</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/sources</outputDirectory>
              <artifactItems>
                <artifactItem>
                  <groupId>org.juzu</groupId>
                  <artifactId>juzu-core</artifactId>
                  <classifier>sources</classifier>
                  <version>${project.version}</version>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-foo</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/sources</outputDirectory>
              <artifactItems>
                <artifactItem>
                  <groupId>org.juzu</groupId>
                  <artifactId>juzu-booking</artifactId>
                  <type>war</type>
                  <version>${project.version}</version>
                  <includes>META-INF/maven/org.juzu/juzu-booking/pom.xml,META-INF/context.xml</includes>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-asciidoc</id>
          </execution>
          <execution>
            <id>copy-stylesheets</id>
          </execution>
          <execution>
            <id>copy-images</id>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.asciidoctor</groupId>
        <artifactId>asciidoctor-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-html</id>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>assemble-html</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/main/assembly/html.xml</descriptor>
              </descriptors>
              <attach>true</attach>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.juzu</groupId>
    <artifactId>juzu-doc-parent</artifactId>
    <version>1.0.0-beta1-SNAPSHOT</version>
  </parent>

  <artifactId>juzu-doc-reference-parent</artifactId>
  <version>1.0.0-beta1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Juzu Reference Aggregator</name>
  <description>The reference aggregator</description>

  <modules>
    <module>api</module>
  </modules>

  <profiles>
    <profile>
      <id>noguide</id>
      <activation>
        <property>
          <name>!noguide</name>
        </property>
      </activation>
      <modules>
        <module>api</module>
        <module>guide</module>
      </modules>
    </profile>
  </profiles>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.juzu</groupId>
    <artifactId>juzu-doc-tutorial-parent</artifactId>
    <version>1.0.0-beta1-SNAPSHOT</version>
  </parent>

  <artifactId>juzu-doc-tutorial-examples</artifactId>
  <version>1.0.0-beta1-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>Juzu Tutorial Examples</name>
  <description>Various tutorial examples</description>

  <dependencies>

    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.enterprise</groupId>
      <artifactId>cdi-api</artifactId>
      <version>1.0-SP4</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.portlet</groupId>
      <artifactId>portlet-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-plugins-less4j</artifactId>
    </dependency>
    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-plugins-servlet</artifactId>
    </dependency>
    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-plugins-portlet</artifactId>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-depchain-arquillian</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-depchain-arquillian-tomcat7</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>juzu-doc-tutorial-examples</finalName>
  </build>

  <profiles>

    <profile>
      <id>guice</id>
      <activation>
        <property>
          <name>!target</name>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.juzu</groupId>
          <artifactId>juzu-core</artifactId>
        </dependency>
        <dependency>
          <groupId>javax.inject</groupId>
          <artifactId>javax.inject</artifactId>
        </dependency>
        <dependency>
          <groupId>javax.portlet</groupId>
          <artifactId>portlet-api</artifactId>
        </dependency>
        <dependency>
          <groupId>com.google.inject</groupId>
          <artifactId>guice</artifactId>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>spring</id>
      <activation>
        <property>
          <name>target</name>
          <value>spring</value>
        </property>
      </activation>
      <properties>
        <maven.war.webxml>src/main/web-spring.xml</maven.war.webxml>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.juzu</groupId>
          <artifactId>juzu-core</artifactId>
        </dependency>
        <dependency>
          <groupId>javax.inject</groupId>
          <artifactId>javax.inject</artifactId>
        </dependency>
        <dependency>
          <groupId>javax.portlet</groupId>
          <artifactId>portlet-api</artifactId>
        </dependency>
        <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-web</artifactId>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>weld</id>
      <activation>
        <property>
          <name>target</name>
          <value>weld</value>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.juzu</groupId>
          <artifactId>juzu-core</artifactId>
        </dependency>
        <dependency>
          <groupId>javax.inject</groupId>
          <artifactId>javax.inject</artifactId>
        </dependency>
        <dependency>
          <groupId>javax.enterprise</groupId>
          <artifactId>cdi-api</artifactId>
          <version>1.0-SP4</version>
        </dependency>
        <dependency>
          <groupId>javax.portlet</groupId>
          <artifactId>portlet-api</artifactId>
        </dependency>
        <dependency>
          <groupId>org.jboss.weld</groupId>
          <artifactId>weld-core</artifactId>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>ee-guice</id>
      <activation>
        <property>
          <name>target</name>
          <value>ee-guice</value>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.juzu</groupId>
          <artifactId>juzu-core</artifactId>
        </dependency>
        <dependency>
          <groupId>javax.inject</groupId>
          <artifactId>javax.inject</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>javax.portlet</groupId>
          <artifactId>portlet-api</artifactId>
        </dependency>
        <dependency>
          <groupId>com.google.inject</groupId>
          <artifactId>guice</artifactId>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>ee-spring</id>
      <activation>
        <property>
          <name>target</name>
          <value>ee-spring</value>
        </property>
      </activation>
      <properties>
        <maven.war.webxml>src/main/web-spring.xml</maven.war.webxml>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.juzu</groupId>
          <artifactId>juzu-core</artifactId>
        </dependency>
        <dependency>
          <groupId>javax.inject</groupId>
          <artifactId>javax.inject</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>javax.portlet</groupId>
          <artifactId>portlet-api</artifactId>
        </dependency>
        <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-web</artifactId>
        </dependency>
      </dependencies>
    </profile>
  </profiles>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.juzu</groupId>
    <artifactId>juzu-doc-tutorial-parent</artifactId>
    <version>1.0.0-beta1-SNAPSHOT</version>
  </parent>

  <artifactId>juzu-doc-tutorial-guide</artifactId>
  <version>1.0.0-beta1-SNAPSHOT</version>

  <name>Juzu Tutorial Guide</name>
  <description>The tutorial guide</description>

  <dependencies>
    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-doc-tutorial-examples</artifactId>
      <classifier>sources</classifier>
    </dependency>
    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-doc-tutorial-examples</artifactId>
      <classifier>test-sources</classifier>
    </dependency>
    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-doc-tutorial-examples</artifactId>
      <type>war</type>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/sources</outputDirectory>
              <artifactItems>
                <artifactItem>
                  <groupId>org.juzu</groupId>
                  <artifactId>juzu-doc-tutorial-examples</artifactId>
                  <classifier>sources</classifier>
                  <version>${project.version}</version>
                </artifactItem>
                <artifactItem>
                  <groupId>org.juzu</groupId>
                  <artifactId>juzu-doc-tutorial-examples</artifactId>
                  <classifier>test-sources</classifier>
                  <version>${project.version}</version>
                </artifactItem>
                <artifactItem>
                  <groupId>org.juzu</groupId>
                  <artifactId>juzu-doc-tutorial-examples</artifactId>
                  <type>war</type>
                  <version>${project.version}</version>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-asciidoc</id>
          </execution>
          <execution>
            <id>copy-stylesheets</id>
          </execution>
          <execution>
            <id>copy-images</id>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.asciidoctor</groupId>
        <artifactId>asciidoctor-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-html</id>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>assemble-html</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/main/assembly/html.xml</descriptor>
              </descriptors>
              <attach>true</attach>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
   </build>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.juzu</groupId>
    <artifactId>juzu-doc-parent</artifactId>
    <version>1.0.0-beta1-SNAPSHOT</version>
  </parent>

  <artifactId>juzu-doc-tutorial-parent</artifactId>
  <version>1.0.0-beta1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Juzu Tutorial Aggregator</name>
  <description>The tutorial aggregator</description>

  <modules>
    <module>examples</module>
  </modules>

  <profiles>
    <profile>
      <id>noguide</id>
      <activation>
        <property>
          <name>!noguide</name>
        </property>
      </activation>
      <modules>
        <module>examples</module>
        <module>guide</module>
      </modules>
    </profile>
  </profiles>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <packaging>jar</packaging>

  <parent>
    <groupId>org.juzu</groupId>
    <artifactId>juzu-plugins-parent</artifactId>
    <version>1.0.0-beta1-SNAPSHOT</version>
  </parent>

  <artifactId>juzu-plugins-jackson</artifactId>
  <version>1.0.0-beta1-SNAPSHOT</version>

  <name>Jackson Plugin</name>
  <description>The Jackson plugin</description>

  <dependencies>

    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>2.3.2</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.3.2</version>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.portlet</groupId>
      <artifactId>portlet-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- -->
    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-depchain-arquillian</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-depchain-arquillian-tomcat7</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <packaging>jar</packaging>

  <parent>
    <groupId>org.juzu</groupId>
    <artifactId>juzu-plugins-parent</artifactId>
    <version>1.0.0-beta1-SNAPSHOT</version>
  </parent>

  <artifactId>juzu-plugins-less</artifactId>
  <version>1.0.0-beta1-SNAPSHOT</version>

  <name>Juzu Less Plugin</name>
  <description>The Less plugin</description>

  <dependencies>

    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mozilla</groupId>
      <artifactId>rhino</artifactId>
      <version>1.7R3</version>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <compilerArgument>-proc:none</compilerArgument>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <packaging>jar</packaging>

  <parent>
    <groupId>org.juzu</groupId>
    <artifactId>juzu-plugins-parent</artifactId>
    <version>1.0.0-beta1-SNAPSHOT</version>
  </parent>

  <artifactId>juzu-plugins-less4j</artifactId>
  <version>1.0.0-beta1-SNAPSHOT</version>

  <name>Juzu Less4j Plugin</name>
  <description>The Less4j plugin</description>

  <dependencies>

    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.github.sommeri</groupId>
      <artifactId>less4j</artifactId>
      <version>1.4.0</version>
    </dependency>

    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-plugins-webjars</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>bootstrap</artifactId>
      <version>3.1.1</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <compilerArgument>-proc:none</compilerArgument>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.juzu</groupId>
    <artifactId>juzu-parent</artifactId>
    <version>1.0.0-beta1-SNAPSHOT</version>
  </parent>

  <artifactId>juzu-plugins-parent</artifactId>
  <version>1.0.0-beta1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Juzu Plugins Aggregator</name>
  <description>The plugins aggregator</description>

  <dependencies>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-core</artifactId>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.weld</groupId>
      <artifactId>weld-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.glassfish.web</groupId>
      <artifactId>el-impl</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-ext</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.cal10n</groupId>
      <artifactId>cal10n-api</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <modules>
    <module>servlet</module>
    <module>portlet</module>
    <module>less</module>
    <module>less4j</module>
		<module>upload</module>
		<module>webjars</module>
		<module>jackson</module>
		<module>validation</module>
  </modules>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <packaging>jar</packaging>

  <parent>
    <groupId>org.juzu</groupId>
    <artifactId>juzu-plugins-parent</artifactId>
    <version>1.0.0-beta1-SNAPSHOT</version>
  </parent>

  <artifactId>juzu-plugins-portlet</artifactId>
  <version>1.0.0-beta1-SNAPSHOT</version>

  <name>Juzu Portlet Plugin</name>
  <description>The Portlet plugin</description>

  <dependencies>

    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-core</artifactId>
    </dependency>

    <dependency>
      <groupId>javax.portlet</groupId>
      <artifactId>portlet-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- -->
    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-depchain-arquillian</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-depchain-arquillian-tomcat7</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <compilerArgument>-proc:none</compilerArgument>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <packaging>jar</packaging>

  <parent>
    <groupId>org.juzu</groupId>
    <artifactId>juzu-plugins-parent</artifactId>
    <version>1.0.0-beta1-SNAPSHOT</version>
  </parent>

  <artifactId>juzu-plugins-servlet</artifactId>
  <version>1.0.0-beta1-SNAPSHOT</version>

  <name>Juzu Servlet Plugin</name>
  <description>The Servlet plugin</description>

  <dependencies>

    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-core</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- -->
    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-depchain-arquillian</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-depchain-arquillian-tomcat7</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <compilerArgument>-proc:none</compilerArgument>
        </configuration>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <executions>
          <execution>
            <id>default-test</id>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <classesDirectory>${project.build.directory}/foo</classesDirectory>
              <additionalClasspathElements>
                <additionalClasspathElement>${project.build.directory}/juzu-plugins-servlet-${project.version}.jar</additionalClasspathElement>
              </additionalClasspathElements>
            </configuration>
            <phase>integration-test</phase>
          </execution>
        </executions>
      </plugin>
      </plugins>
    </pluginManagement>
  </build>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <packaging>jar</packaging>

  <parent>
    <groupId>org.juzu</groupId>
    <artifactId>juzu-plugins-parent</artifactId>
    <version>1.0.0-beta1-SNAPSHOT</version>
  </parent>

  <artifactId>juzu-plugins-upload</artifactId>
  <version>1.0.0-beta1-SNAPSHOT</version>

  <name>Juzu File Upload Plugin</name>
  <description>The File Upload plugin</description>

  <dependencies>

    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-core</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>1.2.2</version>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.portlet</groupId>
      <artifactId>portlet-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- -->
    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-depchain-arquillian</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-depchain-arquillian-tomcat7</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <packaging>jar</packaging>

  <parent>
    <groupId>org.juzu</groupId>
    <artifactId>juzu-plugins-parent</artifactId>
    <version>1.0.0-beta1-SNAPSHOT</version>
  </parent>

  <artifactId>juzu-plugins-validation</artifactId>
  <version>1.0.0-beta1-SNAPSHOT</version>

  <name>Juzu Validation Plugin</name>
  <description>The Validation plugin</description>

  <dependencies>

    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
      <version>5.1.0.Final</version>
    </dependency>

    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-depchain-arquillian</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-depchain-arquillian-tomcat7</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.github.detro.ghostdriver</groupId>
      <artifactId>phantomjsdriver</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

<!--
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <compilerArgument>-proc:none</compilerArgument>
        </configuration>
      </plugin>
    </plugins>
  </build>
-->

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <packaging>jar</packaging>

  <parent>
    <groupId>org.juzu</groupId>
    <artifactId>juzu-plugins-parent</artifactId>
    <version>1.0.0-beta1-SNAPSHOT</version>
  </parent>

  <artifactId>juzu-plugins-webjars</artifactId>
  <version>1.0.0-beta1-SNAPSHOT</version>

  <name>Juzu Webjars Plugin</name>
  <description>The Webjars plugin</description>

  <dependencies>

    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-core</artifactId>
    </dependency>

    <dependency>
	  <groupId>org.webjars</groupId>
	  <artifactId>webjars-locator</artifactId>
	</dependency>

	<dependency>
	  <groupId>org.webjars</groupId>
	  <artifactId>jquery</artifactId>
	  <version>1.10.2</version>
	  <scope>test</scope>
	</dependency>
	<dependency>
	  <groupId>org.webjars</groupId>
	  <artifactId>angular-ui-bootstrap</artifactId>
	  <version>0.7.0-1</version>
	  <scope>test</scope>
	</dependency>
	<dependency>
	  <groupId>org.webjars</groupId>
	  <artifactId>bootswatch</artifactId>
	  <version>3.0.0</version>
	  <scope>test</scope>
	</dependency>

  <dependency>
    <groupId>org.juzu</groupId>
    <artifactId>juzu-depchain-arquillian</artifactId>
    <scope>test</scope>
  </dependency>
  <dependency>
    <groupId>org.juzu</groupId>
    <artifactId>juzu-depchain-arquillian-tomcat7</artifactId>
    <scope>test</scope>
  </dependency>
  <dependency>
    <groupId>com.github.detro.ghostdriver</groupId>
    <artifactId>phantomjsdriver</artifactId>
    <scope>test</scope>
  </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <compilerArgument>-proc:none</compilerArgument>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

  <groupId>org.juzu</groupId>
  <artifactId>juzu-parent</artifactId>
  <version>1.0.0-beta1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Juzu Web Framework</name>
  <description>The Juzu Web Framework</description>
  <url>http://github.com/juzu/juzu</url>

  <organization>
    <name>eXo Platform SAS</name>
    <url>http://www.exoplatform.com</url>
  </organization>
  <licenses>
    <license>
      <name>LGPL, version 2.1</name>
      <url>http://www.opensource.org/licenses/lgpl-license.php</url>
    </license>
  </licenses>

  <prerequisites>
    <!-- It is impossible to build with an older maven version due to plugins used -->
    <maven>2.2.1</maven>
  </prerequisites>

  <properties>

    <!-- Encoding -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- Dependencies -->
    <cdi-api.version>1.0-SP4</cdi-api.version>
    <inject.version>1</inject.version>
    <javassist.version>3.14.0-GA</javassist.version>
    <weld.version>1.1.8.Final</weld.version>
    <spring.version>3.2.4.RELEASE</spring.version>
    <guice.version>3.0</guice.version>
    <groovy.version>1.7.6</groovy.version>
    <servlet.version>3.0.1</servlet.version>
    <junit.version>4.10</junit.version>

    <!-- Test settings -->
    <juzu.test.compiler>javac</juzu.test.compiler>

    <!-- maven-compiler-plugin -->
    <maven.compiler.target>1.6</maven.compiler.target>
    <maven.compiler.source>1.6</maven.compiler.source>

    <!--  maven-javadoc-plugin -->
    <detectOfflineLinks>false</detectOfflineLinks>
    <!-- too slow : http://jira.codehaus.org/browse/MJAVADOC-268 -->
    <quiet>true</quiet>

    <!-- maven-war-plugin -->
    <useCache>true</useCache>
    <!-- Additional properties to activate the compression of already compressed archives - time expensive -->
    <maven.war.recompressZippedFiles>false</maven.war.recompressZippedFiles>

    <!-- maven-assembly-plugin -->
    <!-- Additional properties to activate the compression of already compressed archives - time expensive -->
    <maven.assembly.recompressZippedFiles>false</maven.assembly.recompressZippedFiles>

    <!-- Sonar/Reporting settings -->
    <sonar.java.target>${maven.compiler.target}</sonar.java.target>
    <sonar.java.source>${maven.compiler.source}</sonar.java.source>
    <!-- Sonar/Jacoco integration. Note that these properties need to be defined outside the "coverage" profile
         because we want to be to able to execute mvn sonar:sonar without passing a profile -->
    <!-- Tells Sonar to use jacoco for coverage results -->
    <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
    <!-- Jacoco version to use -->
    <jacoco.version>0.6.3.201306030806</jacoco.version>
    <!-- The Sonar Jacoco Listener for JUnit to extract coverage details per test -->
    <sonar-jacoco-listeners.version>1.4</sonar-jacoco-listeners.version>
    <!-- Don't let Sonar execute tests. We will ask it to Maven -->
    <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
    <!-- The system property jacoco.outputDir needs to be override on the command line
         with an absolute path if you want to merge results from all modules.
         Example in a Jenkisn build where ${WORKSPACE} is defined and your project in the root directory of the workspace :
            mvn clean install -Prun-its,coverage -Djacoco.outputDir=${WORKSPACE}/target
         Note that unfortunately using the following does not work because of
         http://jira.codehaus.org/browse/SONAR-3427:
            <jacoco.outputDir>${session.executionRootDirectory}/target/</jacoco.outputDir>
    -->
    <jacoco.outputDir>${project.build.directory}</jacoco.outputDir>
    <!-- Jacoco output file for UTs -->
    <jacoco.out.ut.file>jacoco-ut.exec</jacoco.out.ut.file>
    <!-- Tells Sonar where the Jacoco coverage result file is located for Unit Tests -->
    <sonar.jacoco.reportPath>${jacoco.outputDir}/${jacoco.out.ut.file}</sonar.jacoco.reportPath>

    <!-- No failures when no web XML is present -->
    <failOnMissingWebXml>false</failOnMissingWebXml>

  </properties>

  <developers>
    <developer>
      <id>julien.viet</id>
      <name>Julien Viet</name>
      <email>julien.viet@exoplatform.com</email>
      <roles>
        <role>Owner</role>
      </roles>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:git://github.com/juzu/juzu.git</connection>
    <developerConnection>scm:git:ssh://git@github.com/juzu/juzu.git</developerConnection>
    <url>https://github.com/juzu/juzu</url>
    <tag>HEAD</tag>
  </scm>

  <distributionManagement>
    <repository>
      <id>repository.exoplatform.org</id>
      <url>http://repository.exoplatform.org/service/local/staging/deploy/maven2/</url>
    </repository>
    <snapshotRepository>
      <id>repository.exoplatform.org</id>
      <url>http://repository.exoplatform.org/content/repositories/juzu-snapshots/</url>
    </snapshotRepository>
  </distributionManagement>

  <dependencyManagement>
    <dependencies>

      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-core</artifactId>
        <version>1.0.0-beta1-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-core</artifactId>
        <classifier>sources</classifier>
        <version>1.0.0-beta1-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-core</artifactId>
        <type>test-jar</type>
        <version>1.0.0-beta1-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-core</artifactId>
        <classifier>javadoc</classifier>
        <version>1.0.0-beta1-SNAPSHOT</version>
      </dependency>

      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-archetype</artifactId>
        <version>1.0.0-beta1-SNAPSHOT</version>
      </dependency>

      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-depchain-arquillian</artifactId>
        <version>1.0.0-beta1-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-depchain-arquillian-tomcat7</artifactId>
        <version>1.0.0-beta1-SNAPSHOT</version>
      </dependency>

      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-booking</artifactId>
        <version>1.0.0-beta1-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-booking</artifactId>
        <classifier>sources</classifier>
        <version>1.0.0-beta1-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-booking</artifactId>
        <classifier>gatein</classifier>
        <type>war</type>
        <version>1.0.0-beta1-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-booking</artifactId>
        <type>war</type>
        <classifier>liferay</classifier>
        <version>1.0.0-beta1-SNAPSHOT</version>
      </dependency>

      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-plugins-less</artifactId>
        <version>1.0.0-beta1-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-plugins-less</artifactId>
        <classifier>sources</classifier>
        <version>1.0.0-beta1-SNAPSHOT</version>
      </dependency>

      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-plugins-validation</artifactId>
        <version>1.0.0-beta1-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-plugins-validation</artifactId>
        <classifier>sources</classifier>
        <version>1.0.0-beta1-SNAPSHOT</version>
      </dependency>

      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-plugins-less4j</artifactId>
        <version>1.0.0-beta1-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-plugins-less4j</artifactId>
        <classifier>sources</classifier>
        <version>1.0.0-beta1-SNAPSHOT</version>
      </dependency>

      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-plugins-servlet</artifactId>
        <version>1.0.0-beta1-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-plugins-servlet</artifactId>
        <classifier>sources</classifier>
        <version>1.0.0-beta1-SNAPSHOT</version>
      </dependency>

      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-plugins-portlet</artifactId>
        <version>1.0.0-beta1-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-plugins-portlet</artifactId>
        <classifier>sources</classifier>
        <version>1.0.0-beta1-SNAPSHOT</version>
      </dependency>

      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-plugins-webjars</artifactId>
        <version>1.0.0-beta1-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-plugins-webjars</artifactId>
        <classifier>sources</classifier>
        <version>1.0.0-beta1-SNAPSHOT</version>
      </dependency>

      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-templating-mustache</artifactId>
        <version>1.0.0-beta1-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-templating-mustache</artifactId>
        <classifier>sources</classifier>
        <version>1.0.0-beta1-SNAPSHOT</version>
      </dependency>

      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-doc-tutorial-examples</artifactId>
        <version>1.0.0-beta1-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-doc-tutorial-examples</artifactId>
        <version>1.0.0-beta1-SNAPSHOT</version>
        <classifier>sources</classifier>
      </dependency>
      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-doc-tutorial-examples</artifactId>
        <version>1.0.0-beta1-SNAPSHOT</version>
        <type>test-jar</type>
      </dependency>
      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-doc-tutorial-examples</artifactId>
        <version>1.0.0-beta1-SNAPSHOT</version>
        <classifier>test-sources</classifier>
      </dependency>
      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-doc-tutorial-examples</artifactId>
        <type>war</type>
        <version>1.0.0-beta1-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-doc-tutorial-guide</artifactId>
        <classifier>html</classifier>
        <type>zip</type>
        <version>1.0.0-beta1-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-doc-tutorial-guide</artifactId>
        <type>pdf</type>
        <version>1.0.0-beta1-SNAPSHOT</version>
      </dependency>

      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-doc-reference-guide</artifactId>
        <classifier>html</classifier>
        <type>zip</type>
        <version>1.0.0-beta1-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-doc-reference-api</artifactId>
        <classifier>javadoc</classifier>
        <version>1.0.0-beta1-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-doc-reference-guide</artifactId>
        <type>pdf</type>
        <version>1.0.0-beta1-SNAPSHOT</version>
      </dependency>

      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-doc-extension-guide</artifactId>
        <classifier>html</classifier>
        <type>zip</type>
        <version>1.0.0-beta1-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-doc-extension-api</artifactId>
        <classifier>javadoc</classifier>
        <version>1.0.0-beta1-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-doc-extension-guide</artifactId>
        <type>pdf</type>
        <version>1.0.0-beta1-SNAPSHOT</version>
      </dependency>

      <dependency>
        <groupId>javax.inject</groupId>
        <artifactId>javax.inject</artifactId>
        <version>${inject.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.enterprise</groupId>
        <artifactId>cdi-api</artifactId>
        <version>${cdi-api.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.portlet</groupId>
        <artifactId>portlet-api</artifactId>
        <version>2.0</version>
        <exclusions>
          <exclusion>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <version>${servlet.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.ccpp</groupId>
        <artifactId>ccpp</artifactId>
        <version>1.0</version>
      </dependency>
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>jstl</artifactId>
        <version>1.1.2</version>
      </dependency>
      <dependency>
        <groupId>taglibs</groupId>
        <artifactId>standard</artifactId>
        <version>1.1.2</version>
      </dependency>
    <dependency>
      <groupId>aopalliance</groupId>
      <artifactId>aopalliance</artifactId>
      <version>1.0</version>
    </dependency>

      <dependency>
        <groupId>org.codehaus.groovy</groupId>
        <artifactId>groovy-all</artifactId>
        <version>${groovy.version}</version>
      </dependency>

      <dependency>
        <groupId>org.eclipse.jdt.core.compiler</groupId>
        <artifactId>ecj</artifactId>
        <version>3.7</version>
      </dependency>

      <dependency>
        <groupId>com.github.spullara.mustache.java</groupId>
        <artifactId>compiler</artifactId>
        <version>0.8.0</version>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>12.0</version>
        <exclusions>
          <exclusion>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.jboss.weld</groupId>
        <artifactId>weld-core</artifactId>
        <version>${weld.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.web</groupId>
        <artifactId>el-impl</artifactId>
        <version>2.1.2-b04</version>
      </dependency>
      <dependency>
        <groupId>org.javassist</groupId>
        <artifactId>javassist</artifactId>
        <version>3.14.0-GA</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.weld.servlet</groupId>
        <artifactId>weld-servlet</artifactId>
        <version>${weld.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.weld.servlet</groupId>
        <artifactId>weld-servlet-core</artifactId>
        <version>${weld.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-core</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-beans</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-web</artifactId>
        <version>${spring.version}</version>
        <exclusions>
          <exclusion>
            <groupId>aopalliance</groupId>
            <artifactId>aopalliance</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-webmvc</artifactId>
        <version>${spring.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-logging</groupId>
        <artifactId>commons-logging</artifactId>
        <version>1.1.1</version>
      </dependency>

      <dependency>
        <groupId>com.google.inject</groupId>
        <artifactId>guice</artifactId>
        <version>${guice.version}</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>1.5.10</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-ext</artifactId>
        <version>1.5.10</version>
        <exclusions>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-simple</artifactId>
        <version>1.5.10</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.cal10n</groupId>
        <artifactId>cal10n-api</artifactId>
        <version>0.7.2</version>
      </dependency>

      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
      </dependency>
      <dependency>
        <groupId>net.sourceforge.htmlunit</groupId>
        <artifactId>htmlunit</artifactId>
        <version>2.13</version>
      </dependency>

      <!-- GateIn embedded portlet container -->
      <dependency>
        <groupId>org.gatein.pc</groupId>
        <artifactId>pc-api</artifactId>
        <version>2.4.1.CR01</version>
      </dependency>
      <dependency>
        <groupId>org.gatein.pc</groupId>
        <artifactId>pc-portlet</artifactId>
        <version>2.4.1.CR01</version>
      </dependency>
      <dependency>
        <groupId>org.gatein.pc</groupId>
        <artifactId>pc-embed</artifactId>
        <version>2.4.1.CR01</version>
      </dependency>

      <!-- Arquillian/Shrinkwrap stack -->
      <dependency>
        <groupId>org.jboss.arquillian.container</groupId>
        <artifactId>arquillian-container-spi</artifactId>
        <version>1.1.2.Final</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.arquillian.junit</groupId>
        <artifactId>arquillian-junit-container</artifactId>
        <version>1.1.2.Final</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.shrinkwrap</groupId>
        <artifactId>shrinkwrap-api</artifactId>
        <version>1.1.2</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.shrinkwrap</groupId>
        <artifactId>shrinkwrap-impl-base</artifactId>
        <version>1.1.2</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.shrinkwrap.resolver</groupId>
        <artifactId>shrinkwrap-resolver-api-maven</artifactId>
        <version>2.1.0-alpha-1</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.shrinkwrap.resolver</groupId>
        <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
        <version>2.1.0-alpha-1</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.arquillian.extension</groupId>
        <artifactId>arquillian-drone-impl</artifactId>
        <version>1.2.1.Final</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.arquillian.extension</groupId>
        <artifactId>arquillian-drone-selenium</artifactId>
        <version>1.2.1.Final</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.arquillian.extension</groupId>
        <artifactId>arquillian-drone-webdriver</artifactId>
        <version>1.2.1.Final</version>
      </dependency>
      <dependency>
        <groupId>org.seleniumhq.selenium</groupId>
        <artifactId>selenium-java</artifactId>
        <version>2.37.1</version>
      </dependency>
      <dependency>
        <groupId>org.seleniumhq.selenium</groupId>
        <artifactId>selenium-server</artifactId>
        <version>2.37.1</version>
        <exclusions>
          <exclusion>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>servlet-api-2.5</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.seleniumhq.selenium</groupId>
        <artifactId>selenium-htmlunit-driver</artifactId>
        <version>2.37.1</version>
      </dependency>
      <dependency>
        <groupId>com.opera</groupId>
        <artifactId>operadriver</artifactId>
        <version>1.5</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.arquillian.extension</groupId>
        <artifactId>arquillian-phantom-driver</artifactId>
        <version>1.1.0.Final</version>
      </dependency>
      <dependency>
        <groupId>com.github.detro.ghostdriver</groupId>
        <artifactId>phantomjsdriver</artifactId>
        <version>1.0.4</version>
        <exclusions>
          <exclusion>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-remote-driver</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <!-- Arquillian tomcat container -->
      <dependency>
        <groupId>org.jboss.arquillian.container</groupId>
        <artifactId>arquillian-tomcat-embedded-7</artifactId>
        <version>1.0.0.CR5</version>
        <exclusions>
          <exclusion>
            <groupId>org.jboss.arquillian.container</groupId>
            <artifactId>arquillian-container-spi</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.jboss.arquillian.container</groupId>
            <artifactId>arquillian-container-test-spi</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.jboss.arquillian.protocol</groupId>
            <artifactId>arquillian-protocol-servlet</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.jboss.arquillian.testenricher</groupId>
            <artifactId>arquillian-testenricher-cdi</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.jboss.arquillian.testenricher</groupId>
            <artifactId>arquillian-testenricher-resource</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.jboss.arquillian.testenricher</groupId>
            <artifactId>arquillian-testenricher-initialcontext</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
        <artifactId>tomcat-embed-core</artifactId>
        <version>7.0.20</version>
      </dependency>
      <dependency>
        <groupId>org.apache.tomcat.embed</groupId>
        <artifactId>tomcat-embed-jasper</artifactId>
        <version>7.0.20</version>
      </dependency>
      <dependency>
        <groupId>org.apache.tomcat.embed</groupId>
        <artifactId>tomcat-embed-logging-juli</artifactId>
        <version>7.0.20</version>
      </dependency>
      <dependency>
        <groupId>javax.servlet.jsp</groupId>
        <artifactId>jsp-api</artifactId>
        <version>2.2</version>
      </dependency>

			<dependency>
				<groupId>org.webjars</groupId>
				<artifactId>webjars-locator</artifactId>
				<version>0.4</version>
			</dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <id>compile-attach-sources</id>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
            <phase>compile</phase>
          </execution>
          <execution>
            <id>test-attach-sources</id>
            <goals>
              <goal>test-jar-no-fork</goal>
            </goals>
            <phase>test</phase>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>reserve-network-port</id>
            <goals>
              <goal>reserve-network-port</goal>
            </goals>
            <phase>process-resources</phase>
            <configuration>
              <portNames>
                <portName>tomcat.http.port</portName>
              </portNames>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>

    <pluginManagement>
      <!-- mvn versions:display-plugin-updates -->
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>2.2.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>2.4</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>2.1</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>javacc-maven-plugin</artifactId>
          <version>2.6</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>2.9.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>2.4</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>2.5</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.7</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.4</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.4</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.6</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.8</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>1.8</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.16</version>
          <configuration>
          <systemPropertyVariables>
            <targetDir>${project.build.directory}</targetDir>
            <juzu.test.compiler>${juzu.test.compiler}</juzu.test.compiler>
            <juzu.test.resources.path>${basedir}/src/test/resources</juzu.test.resources.path>
            <juzu.test.workspace.path>${project.build.directory}/workspace</juzu.test.workspace.path>
            <tomcat.http.port>${tomcat.http.port}</tomcat.http.port>
          </systemPropertyVariables>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.5</version>
          <configuration>
            <!-- Avoid issues with signature plugin -->
            <mavenExecutorId>forked-path</mavenExecutorId>

            <!-- Rest of config -->
            <useReleaseProfile>false</useReleaseProfile>
            <pushChanges>false</pushChanges>
            <autoVersionSubmodules>true</autoVersionSubmodules>
            <arguments>-Psign-artifacts,juzu-release</arguments>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>1.4</version>
        </plugin>

        <plugin>
          <groupId>org.apache.tomcat.maven</groupId>
          <artifactId>tomcat7-maven-plugin</artifactId>
          <version>2.1</version>
        </plugin>

        <plugin>
          <groupId>org.jboss.as.plugins</groupId>
          <artifactId>jboss-as-maven-plugin</artifactId>
          <version>7.4.Final</version>
          <executions>
            <execution>
              <id>default-run</id>
              <configuration>
                <version>7.1.0.Final</version>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>1.1</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <modules>
    <module>core</module>
    <module>depchain</module>
    <!--<module>vertx</module>-->
    <module>templating</module>
    <module>plugins</module>
    <module>archetype</module>
    <module>booking</module>
    <module>doc</module>
    <module>distrib</module>
  </modules>

  <profiles>
    <profile>
      <id>sign-artifacts</id>
      <build>
        <plugins>
          <!-- We want to sign the artifact, the POM, and all attached artifacts -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>ecj</id>
      <properties>
        <juzu.test.compiler>ecj</juzu.test.compiler>
      </properties>
    </profile>

    <!--
    This profile executes tests coverage for UTs and ITs with Jacoco.
    -->
    <profile>
      <id>coverage</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <argLine>${jacoco.agent.ut.arg}</argLine>
              <!-- Specific to generate mapping between tests and covered code -->
              <properties>
                <property>
                  <name>listener</name>
                  <value>org.sonar.java.jacoco.JUnitListener</value>
                </property>
              </properties>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco.version}</version>
            <executions>
              <!-- Prepares a variable, jacoco.agent.ut.arg, that contains the info to be passed to the JVM hosting the code
                   being tested. -->
              <execution>
                <id>prepare-ut-agent</id>
                <phase>process-test-classes</phase>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
                <configuration>
                  <destFile>${sonar.jacoco.reportPath}</destFile>
                  <propertyName>jacoco.agent.ut.arg</propertyName>
                  <append>true</append>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <dependencies>
        <dependency>
          <groupId>org.codehaus.sonar-plugins.java</groupId>
          <artifactId>sonar-jacoco-listeners</artifactId>
          <version>${sonar-jacoco-listeners.version}</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>

    <!--
    This profile must be added to coverage profile to generate HTML reports.
    -->
    <profile>
      <id>coverage-report</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <argLine>${jacoco.agent.ut.arg}</argLine>
              <!-- Specific to generate mapping between tests and covered code -->
              <properties>
                <property>
                  <name>listener</name>
                  <value>org.sonar.java.jacoco.JUnitListener</value>
                </property>
              </properties>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco.version}</version>
            <executions>
              <!-- Prepares a variable, jacoco.agent.ut.arg, that contains the info to be passed to the JVM hosting the code
                   being tested. -->
              <execution>
                <id>prepare-ut-agent</id>
                <phase>process-test-classes</phase>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
                <configuration>
                  <destFile>${sonar.jacoco.reportPath}</destFile>
                  <propertyName>jacoco.agent.ut.arg</propertyName>
                  <append>true</append>
                </configuration>
              </execution>
              <!-- Generates jacoco reports for UTs -->
              <execution>
                <id>generate-jacoco-report</id>
                <phase>verify</phase>
                <goals>
                  <goal>report</goal>
                </goals>
                <configuration>
                  <dataFile>${sonar.jacoco.reportPath}</dataFile>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <dependencies>
        <dependency>
          <groupId>org.codehaus.sonar-plugins.java</groupId>
          <artifactId>sonar-jacoco-listeners</artifactId>
          <version>${sonar-jacoco-listeners.version}</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>

    <!-- This profile is activated when the project is released. -->
    <profile>
      <id>juzu-release</id>
      <properties>
        <!-- Additional properties to activate the compression of already compressed archives - time expensive -->
        <maven.assembly.recompressZippedFiles>true</maven.assembly.recompressZippedFiles>
        <maven.war.recompressZippedFiles>true</maven.war.recompressZippedFiles>
      </properties>
      <build>
        <plugins>
          <!-- Release with Java 7 -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>enforce-java</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireJavaVersion>
                      <message>You must release with Java 7!</message>
                      <version>[1.7,1.8)</version>
                    </requireJavaVersion>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

  <packaging>jar</packaging>

  <parent>
    <groupId>org.juzu</groupId>
    <artifactId>juzu-templating-parent</artifactId>
    <version>1.0.0-beta1-SNAPSHOT</version>
  </parent>

  <artifactId>juzu-templating-mustache</artifactId>
  <version>1.0.0-beta1-SNAPSHOT</version>

  <name>Juzu Mustache templating engine</name>
  <description>The Mustache templating engine</description>

  <dependencies>

    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.github.spullara.mustache.java</groupId>
      <artifactId>compiler</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>

    <dependency>
      <groupId>javax.portlet</groupId>
      <artifactId>portlet-api</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <compilerArgument>-proc:none</compilerArgument>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.juzu</groupId>
    <artifactId>juzu-parent</artifactId>
    <version>1.0.0-beta1-SNAPSHOT</version>
  </parent>

  <artifactId>juzu-templating-parent</artifactId>
  <version>1.0.0-beta1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Juzu Templating Aggregator</name>
  <description>The templating aggregator</description>

  <modules>
    <module>mustache</module>
  </modules>

  <dependencies>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-core</artifactId>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.weld</groupId>
      <artifactId>weld-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.glassfish.web</groupId>
      <artifactId>el-impl</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-ext</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.cal10n</groupId>
      <artifactId>cal10n-api</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

</project>
