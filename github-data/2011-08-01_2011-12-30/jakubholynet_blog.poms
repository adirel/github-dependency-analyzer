<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>code-java5</groupId>
    <artifactId>code-java5</artifactId>
    <version>1.0-SNAPSHOT</version>

    
</project><?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>enum-vs-jdks</groupId>
    <artifactId>enum-vs-jdks</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>code-java5</module>
        <module>test-java6</module>
    </modules>


</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>test-java6</groupId>
    <artifactId>test-java6</artifactId>
    <version>1.0-SNAPSHOT</version>

    <dependencies>
        <dependency>
            <groupId>code-java5</groupId>
            <artifactId>code-java5</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>net.jakubholy.blog</groupId>
  <artifactId>generic-pojo-mappers</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>generic-pojo-mappers</name>
  <url>https://github.com/jakubholynet/blog</url>

    <properties>
        <jersey.version>1.11</jersey.version> <!-- First to use Jackson 1.9[.2], required by mongo-jackson-mapper -->
        <mongo-jackson-mapper.version>1.3</mongo-jackson-mapper.version> <!-- Req. Jackson 1.9.2, same as Jersey -->
        <mongo-java-driver.version>2.7.2</mongo-java-driver.version> <!-- Compatible w/ mongo-jackson-mapper 1.3-1.4.1 -->
        <jetty.version>8.0.0.M2</jetty.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <compileSource>1.6</compileSource>
        <compileTarget>1.6</compileTarget>
  </properties>

  <dependencies>
    <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-server</artifactId>
            <version>${jersey.version}</version>
        </dependency>

        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-servlet</artifactId>
            <version>${jersey.version}</version>
        </dependency>

        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-client</artifactId>
            <version>${jersey.version}</version>
        </dependency>

        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-json</artifactId>
            <version>${jersey.version}</version>
        </dependency>

        <dependency>
            <groupId>com.sun.jersey.jersey-test-framework</groupId>
            <artifactId>jersey-test-framework-grizzly</artifactId>
            <version>${jersey.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>jsr250-api</artifactId>
            <version>1.0</version>
        </dependency-->

        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
            <version>${jetty.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-webapp</artifactId>
            <version>${jetty.version}</version>
        </dependency>

        <dependency>
            <groupId>org.mongodb</groupId>
            <artifactId>mongo-java-driver</artifactId>
            <version>${mongo-java-driver.version}</version>
        </dependency>

        <dependency>
            <groupId>net.vz.mongodb.jackson</groupId>
            <artifactId>mongo-jackson-mapper</artifactId>
            <version>${mongo-jackson-mapper.version}</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit-dep</artifactId>
            <version>4.10</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.easytesting</groupId>
            <artifactId>fest-assert</artifactId>
            <version>1.4</version>
            <scope>test</scope>
        </dependency>

  </dependencies>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>net.jakubholy.blog</groupId>
    <artifactId>jboss-custom-login</artifactId>
    <packaging>war</packaging>
    <version>0.0.1-SNAPSHOT</version>
    <name>jboss-custom-login Maven Webapp</name>
    <url>http://maven.apache.org</url>
    <dependencies>
        <dependency>
            <groupId>jboss</groupId>
            <artifactId>jbosssx</artifactId>
            <version>3.2.3</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jboss</groupId>
            <artifactId>jboss-jaas</artifactId>
            <version>3.2.3</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>
    <build>
        <finalName>jboss-custom-login</finalName>
    </build>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>net.jakubholy.example</groupId>
    <artifactId>splitting-integration-tests</artifactId>
    <version>1.0-SNAPSHOT</version>
    
    <description>
    	Example parent POM that configures Failsafe to run all tests ending in *IT and generates code coverage for them
    	using JaCoCo.
    	Run the pahse 'verify' with the profile 'sonar' to generate code coverage. 
    	Run the phase 'site' after that  to generate HTML report of the code coverage.
    </description>

    <packaging>pom</packaging>
    
    <modules>
    	<!-- add your modules here ... -->
    </modules>

    <build>
        <pluginManagement>
            <plugins>
                <!-- For executing & reporting ntegration tests -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>2.11</version>
					<executions>
						<execution>
							<id>integration-test</id>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			    <plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>0.5.4.201111111111</version>
				</plugin>
            </plugins>
        </pluginManagement>
        <plugins>
			<!-- Run integration tests (*IT) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<configuration>
					<reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
					<argLine>${jacoco.agent.argLine}</argLine>
				</configuration>
			</plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
        	<id>sonar</id>
        	<!-- Enable coverage computation via JaCoCo for Sonar's needs -->
        	<build>
        		<plugins>
					<!--
						Compute integration test coverage for Sonar
						Note: REQUIRES MAVEN 3 - throws InstantiationException: java.util.List otherwise
						Beware: Sonar doesn't run the verify phase; you should always 'mvn clean install' before running sonar
					-->
				    <plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<configuration>
							<propertyName>jacoco.agent.argLine</propertyName> <!-- default: argLine -->
							<includes>
								<include>my/root/package/**</include>
							</includes>
							<destFile>${project.build.directory}/jacoco-integration.exec</destFile> <!-- agent -->
							<dataFile>${project.build.directory}/jacoco-integration.exec</dataFile> <!-- report -->
						</configuration>
						<executions>
							<execution>
								<id>agent</id>
								<goals><goal>prepare-agent</goal></goals>
							</execution>
							<execution>
								<!--
								Generate coverage report html in target/site/jacoco/ from target/jacoco.exec
								Exec.: mvn verify site
								-->
								<id>report</id>
								<phase>site</phase>
								<goals><goal>report</goal></goals>
							</execution>
						</executions>
					</plugin>
        		</plugins>
        	</build>
        </profile>
    </profiles>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<!-- 
	JH: Fixed version of spring JPetStore XML to build and run via mvn jetty:run -> localhost:9999/<artifactId>
	Origin: https://src.springframework.org/svn/spring-samples/jpetstore/trunk/ rev. 614, 11/2011
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.springframework.samples</groupId>
	<artifactId>org.springframework.samples.jpetstore</artifactId>
	<name>org.springframework.samples.jpetstore</name>
	<packaging>war</packaging>
	<version>1.0.0-SNAPSHOT</version>
	<properties>
		<spring.version>3.0.0.RELEASE</spring.version>
		<tiles.version>2.2.0</tiles.version>
		<hsqldb.version>1.8.0.7</hsqldb.version>
		<commons-fileupload.version>1.2.1</commons-fileupload.version>
		<struts.version>1.2.9</struts.version>
		<xml-rpc.version>1.1.0</xml-rpc.version>
		<dbcp.version>1.2.2.osgi</dbcp.version>
		<junit.version>4.6</junit.version>
		<commons-io.version>1.3.2</commons-io.version>
		<urlrewrite.version>3.1.0</urlrewrite.version>
		<spring-js.version>2.0.7.RELEASE</spring-js.version>
		<ibatis.version>2.3.4.726</ibatis.version>
		<caucho.version>3.2.1</caucho.version>
		<axis.version>1.4.0</axis.version>
		<wsdl.version>1.6.1</wsdl.version>
		<jstl.version>1.2</jstl.version>
		<aspectj.version>1.6.5</aspectj.version>
		<servlet-api.version>2.5</servlet-api.version>
		<jsp.version>2.1</jsp.version>
	</properties>
	<dependencies>
<!-- JH:Fix runtime failure -->
<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.5.8</version>
</dependency>

		<!-- Compile dependencies -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>${commons-fileupload.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>com.springsource.org.apache.struts</artifactId>
			<version>${struts.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.xml.rpc</groupId>
			<artifactId>com.springsource.javax.xml.rpc</artifactId>
			<version>${xml-rpc.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>com.springsource.org.apache.commons.dbcp</artifactId>
			<version>${dbcp.version}</version>
		</dependency>

		<!-- Needed for fileupload -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
		</dependency>
		<!-- Embedded database -->
		<dependency>
			<groupId>hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>${hsqldb.version}</version>
		</dependency>
		<!-- Composite-view & layout framework -->
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-core</artifactId>
			<version>${tiles.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-jsp</artifactId>
			<version>${tiles.version}</version>
		</dependency>
		<!-- Clean URLs with JSPs -->
		<dependency>
			<groupId>org.tuckey</groupId>
			<artifactId>urlrewritefilter</artifactId>
			<version>${urlrewrite.version}</version>
		</dependency>
		<!-- Spring Framework Project libraries -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
			<exclusions>
				<exclusion>
					<groupId>quartz</groupId>
					<artifactId>quartz</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<!-- Spring JavaScript Project -->
		<dependency>
			<groupId>org.springframework.webflow</groupId>
			<artifactId>spring-js</artifactId>
			<version>${spring-js.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.ibatis</groupId>
			<artifactId>com.springsource.com.ibatis</artifactId>
			<version>${ibatis.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.caucho</groupId>
			<artifactId>com.springsource.com.caucho</artifactId>
			<version>${caucho.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.axis</groupId>
			<artifactId>com.springsource.org.apache.axis</artifactId>
			<version>${axis.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.wsdl</groupId>
			<artifactId>com.springsource.javax.wsdl</artifactId>
			<version>${wsdl.version}</version>
		</dependency>

		<!-- Runtime dependencies -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>${jstl.version}</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${aspectj.version}</version>
		</dependency>
		<!-- Container-provided dependencies-->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>${servlet-api.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>${jsp.version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- Test dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<repositories>
		<repository>
			<id>org.springsource.maven.snapshot</id>
			<name>SpringSource Maven Central-compatible Snapshot Repository</name>
			<url>http://maven.springframework.org/snapshot</url>
			<snapshots>
				<updatePolicy>daily</updatePolicy>
			</snapshots>
		</repository>

		<!--JH:-->
		<repository>
			<id>org.springsource.maven.release</id>
			<name>SpringSource Maven Central-compatible Release Repository</name>
			<url>http://maven.springframework.org/release</url>
		</repository>	
		<!--repository>
			<id>JBoss repository</id>
			<url>http://repository.jboss.com/maven2</url>
		</repository-->
	
		<repository>
			<id>com.springsource.repository.bundles.release</id>
			<name>SpringSource Enterprise Bundle Repository - SpringSource Bundle Releases</name>
			<url>http://repository.springsource.com/maven/bundles/release</url>
		</repository>
		<repository>
			<id>com.springsource.repository.bundles.external</id>
			<name>SpringSource Enterprise Bundle Repository - External Bundle Releases</name>
			<url>http://repository.springsource.com/maven/bundles/external</url>
		</repository>
	</repositories>
	<build>
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.xml</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>
			
                        <plugin>
                            <!--This plugin allows to run the example using
                                        mvn jetty:run
                                Then go to
                                        http://localhost:9999/<project name>
                             -->
                            <groupId>org.mortbay.jetty</groupId>
                            <!-- BEWARE: The plugin has been renamed to jetty-maven-plugin from v7 on -->
                            <artifactId>maven-jetty-plugin</artifactId>
                            <version>6.1.22</version>
                            <configuration>
                                <scanIntervalSeconds>10</scanIntervalSeconds>
                                <connectors>
                                    <connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
                                        <port>9999</port>
                                    </connector>
                                </connectors>
                            </configuration>
                        </plugin>

		</plugins>
	</build>
</project>
