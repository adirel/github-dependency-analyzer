<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.github.jlgrock.javascript-framework</groupId>
		<artifactId>maven-javascript-framework-plugins</artifactId>
		<version>1.18.2-SNAPSHOT</version>
	</parent>
	<artifactId>closure-compiler-maven-plugin</artifactId>
	<packaging>maven-plugin</packaging>
	<name>Closure Compiler Maven Plugin</name>
	<url>https://github.com/jlgrock/JavascriptFramework</url>
	<description>The plugin that will create a debug version and run the Google Closure Compiler on the source code to create a heavily minified file.</description>
		
	<dependencies>
		<!-- Mojo Dependencies -->
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-plugin-api</artifactId>
			<version>${maven-plugin-api.version}</version>
		</dependency>

		<!-- Google minification/compiler -->
		<dependency>
			<groupId>com.google.javascript</groupId>
			<artifactId>closure-compiler</artifactId>
			<version>${closure-compiler.version}</version>
		</dependency>
		

		<!-- Maven Framework Utilities -->
		<dependency>
			<groupId>com.github.jlgrock.javascript-framework</groupId>
			<artifactId>maven-utils</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- Log4j -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>

	</dependencies>
	
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.github.jlgrock.javascript-framework</groupId>
		<artifactId>maven-javascript-framework-plugins</artifactId>
		<version>1.18.2-SNAPSHOT</version>
	</parent>
	<artifactId>closure-testing-library</artifactId>
	<packaging>jar</packaging>
	<name>Closure Testing Library</name>
	<url>https://github.com/jlgrock/JavascriptFramework</url>
	<description>For use with the google closure testing mojos</description>

	<dependencies>
		<!-- Mojo Dependencies -->
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-plugin-api</artifactId>
			<version>${maven-plugin-api.version}</version>
		</dependency>

		<!-- Maven Framework Utilities -->
		<dependency>
			<groupId>com.github.jlgrock.javascript-framework</groupId>
			<artifactId>maven-utils</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- Java Testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit-maven-plugin.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>${selenium.version}</version>
		</dependency>
		
		<!-- Log4j -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>
	</dependencies>

</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.github.jlgrock.javascript-framework</groupId>
		<artifactId>maven-javascript-framework-plugins</artifactId>
		<version>1.18.2-SNAPSHOT</version>
	</parent>
	<artifactId>closure-testing-maven-plugin</artifactId>
	<packaging>maven-plugin</packaging>
	<name>Closure Testing Maven Plugin</name>
	<url>https://github.com/jlgrock/JavascriptFramework</url>
	<description>The plugin that will run the google test suite on your source code.</description>

	<dependencies>
		<!-- Mojo Dependencies -->
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-plugin-api</artifactId>
			<version>${maven-plugin-api.version}</version>
		</dependency>

		<!-- Maven Framework Utilities -->
		<dependency>
			<groupId>com.github.jlgrock.javascript-framework</groupId>
			<artifactId>maven-utils</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.github.jlgrock.javascript-framework</groupId>
			<artifactId>closure-testing-library</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- Java Testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit-maven-plugin.version}</version>
			<scope>test</scope>
		</dependency>

		
		<!-- Log4j -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>
	</dependencies>

</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.github.jlgrock.javascript-framework</groupId>
		<artifactId>maven-javascript-framework-plugins</artifactId>
		<version>1.18.2-SNAPSHOT</version>
	</parent>
	<artifactId>closure-testing-report-maven-plugin</artifactId>
	<packaging>maven-plugin</packaging>
	<name>Closure Testing Report Maven Plugin</name>
	<url>https://github.com/jlgrock/JavascriptFramework</url>
	<description>The plugin that will run the google test suite on your source code.</description>
	<properties>
		<doxia.version>1.1</doxia.version>
	</properties>

	<dependencies>
		<!-- Mojo Dependencies -->
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-plugin-api</artifactId>
			<version>${maven-plugin-api.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-model</artifactId>
			<version>${maven.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.reporting</groupId>
			<artifactId>maven-reporting-api</artifactId>
			<version>${maven-report-plugin-api.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.reporting</groupId>
			<artifactId>maven-reporting-impl</artifactId>
			<version>${maven-report-plugin-impl.version}</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.plexus</groupId>
			<artifactId>plexus-utils</artifactId>
			<version>${plexus.utils.version}</version>
		</dependency>

		<!-- Doxia -->
		<dependency>
			<groupId>org.apache.maven.doxia</groupId>
			<artifactId>doxia-sink-api</artifactId>
			<version>${doxia.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.doxia</groupId>
			<artifactId>doxia-decoration-model</artifactId>
			<version>${doxia.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.doxia</groupId>
			<artifactId>doxia-site-renderer</artifactId>
			<version>${doxia.version}</version>
		</dependency>

		<!-- Maven Framework Utilities -->
		<dependency>
			<groupId>com.github.jlgrock.javascript-framework</groupId>
			<artifactId>maven-utils</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.github.jlgrock.javascript-framework</groupId>
			<artifactId>closure-testing-library</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- Java Testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit-maven-plugin.version}</version>
			<scope>test</scope>
		</dependency>
		
		<!-- Log4j -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>

	</dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.github.jlgrock.javascript-framework</groupId>
		<artifactId>maven-javascript-framework-plugins</artifactId>
		<version>1.18.2-SNAPSHOT</version>
	</parent>
	<artifactId>jsar-maven-plugin</artifactId>
	<packaging>maven-plugin</packaging>

	<dependencies>
		<!-- Mojo Dependencies -->
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-plugin-api</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-jar-plugin</artifactId>
			<version>2.3.1</version>
		</dependency>

		<dependency>
			<groupId>org.codehaus.plexus</groupId>
			<artifactId>plexus-utils</artifactId>
			<version>1.5.9</version>
		</dependency>

		<!-- Maven Framework Utilities -->
		<dependency>
			<groupId>com.github.jlgrock.javascript-framework</groupId>
			<artifactId>maven-utils</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- Java Testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.2</version>
			<scope>test</scope>
		</dependency>

		<!-- Log4j -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>
	</dependencies>

	<issueManagement>
		<system>GitHub Issues</system>
		<url>https://github.com/jlgrock/JavascriptFramework/issues</url>
	</issueManagement>
	<url>https://github.com/jlgrock/JavascriptFramework</url>
	<name>jsar Maven Plugin</name>
	<description>The plugin that creates an archive out of your source and compiled files</description>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources/META-INF/plexus</directory>
				<filtering>true</filtering>
				<targetPath>META-INF/plexus</targetPath>
			</resource>
		</resources>
	</build>
</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.github.jlgrock.javascript-framework</groupId>
		<artifactId>maven-javascript-framework-plugins</artifactId>
		<version>1.18.2-SNAPSHOT</version>
	</parent>
	<artifactId>jsdependency-maven-plugin</artifactId>
	<packaging>maven-plugin</packaging>

	<dependencies>
		<!-- Mojo Dependencies -->
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-plugin-api</artifactId>
			<version>2.0</version>
		</dependency>

		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-project</artifactId>
			<version>2.2.1</version>
		</dependency>

		<!-- Maven Framework Utilities -->
		<dependency>
			<groupId>com.github.jlgrock.javascript-framework</groupId>
			<artifactId>maven-utils</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- Log4j -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>
	</dependencies>

	<issueManagement>
		<system>GitHub Issues</system>
		<url>https://github.com/jlgrock/JavascriptFramework/issues</url>
	</issueManagement>
	<description>The plugin that can reference archives created using the jsar plugin and use them as test dependencies or source code for inclusion in the compiling/minification</description>
	<url>https://github.com/jlgrock/JavascriptFramework</url>
	<name>JS Dependency Plugin</name>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack dojo</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>com.github.jlgrock.javascript</groupId>
									<artifactId>closure-library</artifactId>
									<version>${closure-library.version}</version>
									<type>zip</type>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${project.build.directory}/additionalResources</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<resources>
          <resource>
            <directory>${project.build.directory}/additionalResources</directory>
            <filtering>false</filtering>
            <includes>
              <include>*.zip</include>
            </includes>
          </resource>
        </resources>
	</build>

</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.github.jlgrock.javascript-framework</groupId>
		<artifactId>maven-javascript-framework-plugins</artifactId>
		<version>1.18.2-SNAPSHOT</version>
	</parent>
	<artifactId>jsdocs-maven-plugin</artifactId>
	<packaging>maven-plugin</packaging>
	<name>JavaScript Framework</name>
	<description>A direct port of thethe jsdocs plugin for maven</description>
	<url>https://github.com/jlgrock/JavascriptFramework</url>
	<properties>
		<doxia.version>1.1</doxia.version>
	</properties>

	<dependencies>
		<!-- Mojo Dependencies -->
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-plugin-api</artifactId>
			<version>${maven-plugin-api.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-model</artifactId>
			<version>${maven.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.reporting</groupId>
			<artifactId>maven-reporting-api</artifactId>
			<version>${maven-report-plugin-api.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.reporting</groupId>
			<artifactId>maven-reporting-impl</artifactId>
			<version>${maven-report-plugin-impl.version}</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.plexus</groupId>
			<artifactId>plexus-utils</artifactId>
			<version>${plexus.utils.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.reporting</groupId>
			<artifactId>maven-reporting-api</artifactId>
			<version>3.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-archiver</artifactId>
			<version>2.3</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-artifact</artifactId>
			<version>2.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-artifact-manager</artifactId>
			<version>2.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.shared</groupId>
			<artifactId>maven-common-artifact-filters</artifactId>
			<version>1.3</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.shared</groupId>
			<artifactId>maven-invoker</artifactId>
			<version>2.0.9</version>
		</dependency>

		<!-- Doxia -->
		<dependency>
			<groupId>org.apache.maven.doxia</groupId>
			<artifactId>doxia-sink-api</artifactId>
			<version>${doxia.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.doxia</groupId>
			<artifactId>doxia-decoration-model</artifactId>
			<version>${doxia.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.doxia</groupId>
			<artifactId>doxia-site-renderer</artifactId>
			<version>${doxia.version}</version>
		</dependency>

		<!-- Maven Framework Utilities -->
		<dependency>
			<groupId>com.github.jlgrock.javascript-framework</groupId>
			<artifactId>maven-utils</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- Rhino -->
		<dependency>
			<groupId>rhino</groupId>
			<artifactId>js</artifactId>
			<version>1.7R2</version>
		</dependency>

		<!-- Java Testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit-maven-plugin.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>


	<build>
		<defaultGoal>jsdocs</defaultGoal>
		<plugins>
			<!-- Build Checks -->


			<!-- Site Reporting -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>${maven-site-plugin.version}</version>
				<configuration>
					<reportPlugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-project-info-reports-plugin</artifactId>
							<version>${maven-project-info-reports-plugin.version}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-pmd-plugin</artifactId>
							<version>2.5</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-javadoc-plugin</artifactId>
							<version>${maven-javadoc-plugin.version}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-jxr-plugin</artifactId>
							<version>${maven-jxr-plugin.version}</version>
							<configuration>
								<aggregate>true</aggregate>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-surefire-report-plugin</artifactId>
							<version>${maven-surefire-plugin.version}</version>
						</plugin>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>cobertura-maven-plugin</artifactId>
							<version>${cobertura-maven-plugin.version}</version>
							<configuration>
								<check>
									<haltOnFailure>true</haltOnFailure>
								</check>
								<formats>
									<format>xml</format>
									<format>html</format>
								</formats>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-checkstyle-plugin</artifactId>
							<version>${maven-checkstyle-plugin.version}</version>
							<configuration>
								<failsOnError>false</failsOnError>
							</configuration>
						</plugin>
					</reportPlugins>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<issueManagement>
		<url>https://github.com/jlgrock/JavascriptFramework/issues</url>
		<system>GitHub Issues</system>
	</issueManagement>

	<licenses>
		<license>
			<name>MIT License</name>
			<url>http://www.opensource.org/licenses/mit-license.php</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<scm>
		<url>http://github.com/andygibson/${github.project.name}</url>
		<connection>scm:git:git://github.com/jlgrock/${github.project.name}.git</connection>
		<developerConnection>scm:git:git@github.com:jlgrock/${github.project.name}.git</developerConnection>
	  <tag>HEAD</tag>
  </scm>

	<ciManagement>
		<system>Jenkins</system>
	</ciManagement>

	<distributionManagement>
		<site>
			<id>github-project-site</id>
			<url>gitsite:git@github.com/jlgrock/JavascriptFramework.git</url>
		</site>
	</distributionManagement>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.github.jlgrock.javascript-framework</groupId>
		<artifactId>maven-javascript-framework-plugins</artifactId>
		<version>1.18.2-SNAPSHOT</version>
	</parent>
	<artifactId>jspreprocessor-maven-plugin</artifactId>
	<packaging>maven-plugin</packaging>
	
	
	<dependencies>
		<!-- Maven Framework Utilities -->
		<dependency>
			<groupId>com.github.jlgrock.javascript-framework</groupId>
			<artifactId>maven-utils</artifactId>
			<version>${project.version}</version>
		</dependency>
		
		<!-- Log4j -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>
	</dependencies>
	
	<scm>
		<connection>scm:git:git://github.com/jlgrock/JavascriptFramework/jspreprocessor-maven-plugin</connection>
		<developerConnection>scm:git:git://github.com/jlgrock/JavascriptFramework/jspreprocessor-maven-plugin</developerConnection>
		<url>https://github.com/jlgrock/JavascriptFramework</url>
	  <tag>HEAD</tag>
  </scm>
	<issueManagement>
		<system>GitHub Issues</system>
		<url>https://github.com/jlgrock/JavascriptFramework/issues</url>
	</issueManagement>
	<url>https://github.com/jlgrock/JavascriptFramework</url>
	<description>A framework for running additional preprocessing on files before compiling.</description>
	<name>JS Preprocessor</name>
</project>  <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<groupId>com.github.jlgrock.javascript-framework</groupId>
		<artifactId>maven-javascript-framework-plugins</artifactId>
		<version>1.18.2-SNAPSHOT</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<artifactId>maven-utils</artifactId>
	<properties>
		<log4j.version>1.2.16</log4j.version>
	</properties>

	<dependencies>
		<!-- Mojo Dependencies -->
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-plugin-api</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-project</artifactId>
			<version>2.2.1</version>
		</dependency>

		<!-- Log4j -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>

		<!-- Commons IO -->
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.5</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.3</version>
		</dependency>
	</dependencies>

	<issueManagement>
		<system>GitHub Issues</system>
		<url>https://github.com/jlgrock/JavascriptFramework/issues</url>
	</issueManagement>
	<url>https://github.com/jlgrock/JavascriptFramework</url>
	<name>Maven Utils</name>
	<description>Although this is technically not a plugin, this is a bunch of tools that all of the plugins use. This is very useful for anyone doing maven plugin development.</description>
</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.sonatype.oss</groupId>
		<artifactId>oss-parent</artifactId>
		<version>7</version>
		<relativePath />
	</parent>

	<groupId>com.github.jlgrock.javascript-framework</groupId>
	<artifactId>maven-javascript-framework-plugins</artifactId>
	<version>1.18.2-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>JavaScript Framework</name>
	<description>A compilation of javascript plugins written for the explicit purpose to work well with the Google Closure Compiler and the Google Closure Library</description>
	<url>https://github.com/jlgrock/JavascriptFramework</url>

	<properties>
		<github.project.name>ClosureJavascriptFramework</github.project.name>
		<closure-compiler.version>v20131014</closure-compiler.version>
		<closure-library.version>99cd91</closure-library.version>
		<maven.version>3.0.1</maven.version>
		<maven.project.version>3.0-alpha-2</maven.project.version>
		<maven-checkstyle-plugin.version>2.9</maven-checkstyle-plugin.version>
		<maven-javadoc-plugin.version>2.8</maven-javadoc-plugin.version>
		<maven-jxr-plugin.version>2.3</maven-jxr-plugin.version>
		<maven-surefire-plugin.version>2.10</maven-surefire-plugin.version>
		<maven-pmd-plugin.version>2.5</maven-pmd-plugin.version>
		<maven-plugin-plugin.version>2.9</maven-plugin-plugin.version>
		<maven-project-info-reports-plugin.version>2.3.1</maven-project-info-reports-plugin.version>
		<maven-site-plugin.version>3.0</maven-site-plugin.version>
		<maven-source-plugin.version>2.1.2</maven-source-plugin.version>
		<maven-war-plugin.version>2.1.1</maven-war-plugin.version>
		<cobertura-maven-plugin.version>2.5.1</cobertura-maven-plugin.version>
		<findbugs-maven-plugin.version>2.3.1</findbugs-maven-plugin.version>
		<maven-plugin-api.version>3.0.2</maven-plugin-api.version>
		<maven-report-plugin-api.version>3.0</maven-report-plugin-api.version>
		<maven-report-plugin-impl.version>2.1</maven-report-plugin-impl.version>
		<junit-maven-plugin.version>4.8.2</junit-maven-plugin.version>
		<plexus.utils.version>2.0.1</plexus.utils.version>
		<log4j.version>1.2.16</log4j.version>
		<maven-source-plugin.version>2.1.2</maven-source-plugin.version>
		<maven.scm.version>1.6</maven.scm.version>
		<scm.plugin.version>1.8.1</scm.plugin.version>
		<git.wagon.version>0.3.1</git.wagon.version>
		<spock.version>0.5</spock.version>
		<gmaven.groovy.version>1.3</gmaven.groovy.version>
		<groovy.version>1.7</groovy.version>
		<release.plugin.version>2.4.2</release.plugin.version>
		<groovy.full.version>1.7.5</groovy.full.version>
		<spock.to.groovy.version>0.4-groovy-1.7</spock.to.groovy.version>
		<target.jdk>1.5</target.jdk>
		<selenium.version>2.40.0</selenium.version>
		<junit.version>4.11</junit.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
		</dependency>
	</dependencies>

	<modules>
		<module>maven-utils</module>
		<module>jspreprocessor-maven-plugin</module>
		<module>source-archive-maven-plugin</module>
		<module>source-overlay-maven-plugin</module>
		<module>jsdependency-maven-plugin</module>
		<module>jsar-maven-plugin</module>
		<module>closure-compiler-maven-plugin</module>
		<module>closure-testing-library</module>
		<module>closure-testing-maven-plugin</module>
		<module>closure-testing-report-maven-plugin</module>
		<module>jsdocs-maven-plugin</module>
	</modules>

	<build>
		<!-- used for the transport of artifact between repositories. This requires 
			git to be installed locally. -->
		<extensions>
			<extension>
				<groupId>org.apache.maven.scm</groupId>
				<artifactId>maven-scm-provider-gitexe</artifactId>
				<version>${maven.scm.version}</version>
			</extension>
			<extension>
				<groupId>org.apache.maven.scm</groupId>
				<artifactId>maven-scm-manager-plexus</artifactId>
				<version>${maven.scm.version}</version>
			</extension>
			<extension>
				<groupId>org.kathrynhuxtable.maven.wagon</groupId>
				<artifactId>wagon-gitsite</artifactId>
				<version>${git.wagon.version}</version>
			</extension>
		</extensions>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-scm-plugin</artifactId>
				<version>${scm.plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>${release.plugin.version}</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.scm</groupId>
						<artifactId>maven-scm-api</artifactId>
						<version>${scm.plugin.version}</version>
					</dependency>
					<dependency>
						<groupId>org.apache.maven.scm</groupId>
						<artifactId>maven-scm-provider-gitexe</artifactId>
						<version>${scm.plugin.version}</version>
					</dependency>
				</dependencies>
			</plugin>

			<!-- Check Style: Make sure that it matches basic formatting and usage 
				requirements -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${maven-checkstyle-plugin.version}</version>
				<configuration>
					<configLocation>https://raw.github.com/jlgrock/ClosureJavascriptFramework/master/checkstyle.xml</configLocation>
					<failsOnError>true</failsOnError>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

			<!-- Source Files -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${maven-source-plugin.version}</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Generate Java Doc jar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven-javadoc-plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- To use the plugin goals in your POM or parent POM -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-plugin-plugin</artifactId>
				<version>${maven-plugin-plugin.version}</version>
			</plugin>

			<!-- Site Reporting -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>${maven-site-plugin.version}</version>
				<configuration>
					<reportPlugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-project-info-reports-plugin</artifactId>
							<version>${maven-project-info-reports-plugin.version}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-pmd-plugin</artifactId>
							<version>${maven-pmd-plugin.version}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-javadoc-plugin</artifactId>
							<version>${maven-javadoc-plugin.version}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-jxr-plugin</artifactId>
							<version>${maven-jxr-plugin.version}</version>
							<configuration>
								<aggregate>true</aggregate>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-surefire-report-plugin</artifactId>
							<version>${maven-surefire-plugin.version}</version>
						</plugin>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>cobertura-maven-plugin</artifactId>
							<version>${cobertura-maven-plugin.version}</version>
							<configuration>
								<check>
									<haltOnFailure>false</haltOnFailure>
								</check>
								<formats>
									<format>xml</format>
									<format>html</format>
								</formats>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-checkstyle-plugin</artifactId>
							<version>${maven-checkstyle-plugin.version}</version>
							<configuration>
								<configLocation>https://raw.github.com/jlgrock/ClosureJavascriptFramework/master/checkstyle.xml</configLocation>
								<failsOnError>false</failsOnError>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-plugin-plugin</artifactId>
							<version>${maven-plugin-plugin.version}</version>
						</plugin>
					</reportPlugins>
				</configuration>
			</plugin>
		</plugins>
		<!-- To define the plugin version in your parent POM -->
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-plugin-plugin</artifactId>
					<version>${maven-plugin-plugin.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<issueManagement>
		<url>https://github.com/jlgrock/ClosureJavascriptFramework/issues</url>
		<system>GitHub Issues</system>
	</issueManagement>

	<licenses>
		<license>
			<name>MIT License</name>
			<url>http://www.opensource.org/licenses/mit-license.php</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<profiles>
		<profile>
			<id>release-sign-artifacts</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>codeQuality</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<excludedGroups>integration</excludedGroups>
							<argLine>-XX:MaxPermSize=512M -Xmx512m</argLine>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.mortbay.jetty</groupId>
						<artifactId>jetty-maven-plugin</artifactId>
					</plugin>
					<!-- COBERTURA: Code Coverage Check -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>cobertura-maven-plugin</artifactId>
						<configuration>
							<check>
								<haltOnFailure>false</haltOnFailure>
							</check>
							<formats>
								<format>html</format>
							</formats>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>clean</goal>
									<goal>check</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<!-- FINDBUGS CHECK: Fails build if there are "High" threshold violations -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>findbugs-maven-plugin</artifactId>
						<version>${findbugs-maven-plugin.version}</version>
						<configuration>
							<effort>Max</effort>
							<threshold>High</threshold>
							<xmlOutput>true</xmlOutput>
							<failOnError>true</failOnError>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>check</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<!-- PMD CHECK: Fails build if there are "High" priority violations -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-pmd-plugin</artifactId>
						<version>${maven-pmd-plugin.version}</version>
						<configuration>
							<targetJdk>${target.jdk}</targetJdk>
							<failurePriority>1</failurePriority>
							<failOnViolation>true</failOnViolation>
							<aggregate>true</aggregate>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>check</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.sonar</groupId>
						<artifactId>sonar-maven3-plugin</artifactId>
						<version>2.4.1</version>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<scm>
		<url>http://github.com/jlgrock/${github.project.name}</url>
		<connection>scm:git:git://github.com/jlgrock/${github.project.name}.git</connection>
		<developerConnection>scm:git:git@github.com:jlgrock/${github.project.name}.git</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<ciManagement>
		<system>Jenkins</system>
	</ciManagement>

	<developers>
		<developer>
			<name>Justin Grant</name>
			<roles>
				<role>Project Lead</role>
				<role>CM</role>
			</roles>
			<timezone>-5</timezone>
			<email>jlgrock@hotmail.com</email>
		</developer>
	</developers>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.github.jlgrock.javascript-framework</groupId>
		<artifactId>maven-javascript-framework-plugins</artifactId>
		<version>1.18.2-SNAPSHOT</version>
	</parent>
	<artifactId>source-archive-maven-plugin</artifactId>
	<packaging>maven-plugin</packaging>

	<dependencies>
		<!-- Mojo Dependencies -->
		<dependency>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-assembly-plugin</artifactId>
			<version>2.2.1</version>
		</dependency>

		<!-- Maven Framework Utilities -->
		<dependency>
			<groupId>com.github.jlgrock.javascript-framework</groupId>
			<artifactId>maven-utils</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- Log4j -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>

	</dependencies>

	<url>https://github.com/jlgrock/JavascriptFramework</url>
	<name>Source Archive Maven Plugin</name>
	<description>This is just a shortcut to using the Maven Assembly Plugin. So long as your source code is in the standardized places, you can run the goals provided by this plugin and it will reference the standardized assembly.xml files contained within the plugin and apply them.</description>
</project>  <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.github.jlgrock.javascript-framework</groupId>
		<artifactId>maven-javascript-framework-plugins</artifactId>
		<version>1.11.8-SNAPSHOT</version>
	</parent>
	<artifactId>source-overlay-maven-plugin</artifactId>
	<packaging>maven-plugin</packaging>

	<dependencies>
		<!-- Mojo Dependencies -->
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-plugin-api</artifactId>
			<version>2.0</version>
		</dependency>

		<!-- Maven Framework Utilities -->
		<dependency>
			<groupId>com.github.jlgrock.javascript-framework</groupId>
			<artifactId>maven-utils</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- Java Testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.2</version>
			<scope>test</scope>
		</dependency>
		
		<!-- Log4j -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- Build Checks -->
			
			
			<!-- Site Reporting -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.0-beta-2</version>
				<configuration>
					<reportPlugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-javadoc-plugin</artifactId>
							<version>2.7</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-jxr-plugin</artifactId>
							<version>2.3</version>
							<configuration>
								<aggregate>true</aggregate>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-surefire-report-plugin</artifactId>
							<version>2.10</version>
						</plugin>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>cobertura-maven-plugin</artifactId>
							<version>2.5.1</version>
							<configuration>
								<check>
									<haltOnFailure>false</haltOnFailure>
								</check>
								<formats>
									<format>xml</format>
									<format>html</format>
								</formats>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-checkstyle-plugin</artifactId>
							<version>2.7</version>
						</plugin>
					</reportPlugins>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<issueManagement>
		<system>GitHub Issues</system>
		<url>https://github.com/jlgrock/JavascriptFramework/issues</url>
	</issueManagement>
	<name>Source Overlay Maven Plugin</name>
	<url>https://github.com/jlgrock/JavascriptFramework</url>
	<description>A plugin that is used to overlay an entire source directory over another, replacing any files that are duplicated. This is similar to the War Overlay functionality provided by the Mave War Plugin, with the exception that this will do it for the entire source directory rather than just the webapp directory.</description>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.github.jlgrock.javascript-framework</groupId>
		<artifactId>maven-javascript-framework-plugins</artifactId>
		<version>1.18.2-SNAPSHOT</version>
	</parent>
	<artifactId>source-overlay-maven-plugin</artifactId>
	<packaging>maven-plugin</packaging>

	<dependencies>
		<!-- Mojo Dependencies -->
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-plugin-api</artifactId>
			<version>2.0</version>
		</dependency>

		<!-- Maven Framework Utilities -->
		<dependency>
			<groupId>com.github.jlgrock.javascript-framework</groupId>
			<artifactId>maven-utils</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- Java Testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.2</version>
			<scope>test</scope>
		</dependency>
		
		<!-- Log4j -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- Build Checks -->
			
			
			<!-- Site Reporting -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.0-beta-2</version>
				<configuration>
					<reportPlugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-javadoc-plugin</artifactId>
							<version>2.7</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-jxr-plugin</artifactId>
							<version>2.3</version>
							<configuration>
								<aggregate>true</aggregate>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-surefire-report-plugin</artifactId>
							<version>2.10</version>
						</plugin>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>cobertura-maven-plugin</artifactId>
							<version>2.5.1</version>
							<configuration>
								<check>
									<haltOnFailure>false</haltOnFailure>
								</check>
								<formats>
									<format>xml</format>
									<format>html</format>
								</formats>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-checkstyle-plugin</artifactId>
							<version>2.7</version>
						</plugin>
					</reportPlugins>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<issueManagement>
		<system>GitHub Issues</system>
		<url>https://github.com/jlgrock/JavascriptFramework/issues</url>
	</issueManagement>
	<name>Source Overlay Maven Plugin</name>
	<url>https://github.com/jlgrock/JavascriptFramework</url>
	<description>A plugin that is used to overlay an entire source directory over another, replacing any files that are duplicated. This is similar to the War Overlay functionality provided by the Mave War Plugin, with the exception that this will do it for the entire source directory rather than just the webapp directory.</description>

</project>
