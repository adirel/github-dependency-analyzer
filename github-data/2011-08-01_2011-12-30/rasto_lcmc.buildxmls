<project name="LCMC" basedir="." default="main">
	<property name="src.dir"	value="src"/>
	<property name="java.dir"	value="${src.dir}/main/java"/>
	<property name="resources.dir"	value="${src.dir}/main/resources"/>
	<property name="testjava.dir"	value="${src.dir}/test/java"/>
	<property name="lib.dir"	value="${src.dir}/lib"/>
	<property name="reports.dir"	value="reports"/>
	<property name="build.dir"	value="build"/>
	<property name="classes.dir"	value="${build.dir}/classes"/>
	<property name="jar.dir"	value="${build.dir}/jar"/>
	<property name="signed.dir"	value="${build.dir}/signed"/>
	<property name="buildlib.dir"	value="build-lib"/>
	<property name="build.coverage.dir"	value="build-coverage"/>
	<property name="scripts.dir"	value="scripts"/>
	<property name="spec.file"	value="lcmc.spec"/>
	<property name="doc.dir"	value="doc"/>
	<property name="man.file"	value="lcmc.1"/>
	<property name="rpmbuild.dir"	value="${build.dir}/rpm"/>
	<property name="startup.script"	value="lcmc.startup.script"/>
	<property name="lcmc.desktop.script" value="lcmc.desktop"/>
	<property name="lcmc.applications.script" value="lcmc.applications"/>
	<property name="launch4j.conf" value="launch4j.xml"/>
	<property name="scripts.dir"	value="scripts"/>
	<property name="iss.file"	value="lcmc.iss"/>
	<loadproperties> 
	<file file="${resources.dir}/release.properties"/> 
        </loadproperties> 
	
	<property name="main-class"  value="lcmc.LCMC"/>
	<property name="main-class-applet" value="lcmc.LCMCApplet"/>
	<tstamp/>
	
	<target name="clean">
		<delete dir="${build.dir}/classes/lcmc/"/>
		<delete dir="${build.dir}/classes/plugins/"/>
		<delete dir="${build.dir}/rpm/"/>
		<delete dir="${jar.dir}"/>
		<delete file="${doc.dir}/${man.file}"/>
		<delete file="${scripts.dir}/${iss.file}"/>
		<delete file="${scripts.dir}/${launch4j.conf}"/>
	</target>
	
	<target name="superclean" depends="clean">
		<delete dir="${jar.dir}"/>
		<delete dir="${signed.dir}"/>
		<delete dir="${build.dir}/classes/"/>
		<delete dir="${build.dir}/rpm/"/>
	</target>
	
	<target name="compile">
		<mkdir dir="${classes.dir}"/>
		<copy todir="${classes.dir}">
			<fileset dir="${resources.dir}/"/>
		</copy>
		<tar tarfile="${classes.dir}/lcmc-test.tar"
		     basedir="${classes.dir}/"
		     includes="lcmc-test/**"/>
		
		<!-- verbose="true" -->
		<!-- <compilerarg value="-Xlint:unchecked"/> -->
		<!-- target="jsr14" for java runtime 1.4 -->
		<!-- debug="true" -->
		<!-- fork="true" -->
		<javac 
		 fork="true" 
		 nowarn="true"
		 debug="true"
		 deprecation="false"
		 memoryInitialSize="512m"
		 memoryMaximumSize="512m"
		 srcdir="${lib.dir}" destdir="${classes.dir}"
		 encoding="utf8"
		 source="1.6"
		 target="1.6"
		 includeantruntime="false"
		>
		  <classpath>
		   <pathelement location="/usr/share/java/jai_core.jar"/>
		   <pathelement location="/usr/share/java/j3dcore.jar"/>
		   <pathelement location="/usr/share/java/j3dutils.jar"/>
		   <pathelement location="/usr/share/java/vecmath.jar"/>
		   <pathelement location="/usr/share/java/xalan2.jar"/>
		   <pathelement location="${buildlib.dir}/jai_core.jar"/>
		   <pathelement location="${buildlib.dir}/j3dcore.jar"/>
		   <pathelement location="${buildlib.dir}/j3dutils.jar"/>
		   <pathelement location="${buildlib.dir}/vecmath.jar"/>
		   <pathelement location="/usr/share/java/xml-commons-apis.jar"/>
		   <pathelement location="/usr/share/java/xerces-j2.jar"/>

		  </classpath>
		  <compilerarg value="-Xmaxerrs"/> 
		  <compilerarg value="1000"/> 
		</javac>
		
		<javac 
		 fork="true" 
		 debug="true"
		 deprecation="true"
		 memoryInitialSize="512m"
		 memoryMaximumSize="512m"
		 srcdir="${java.dir}" destdir="${classes.dir}"
		 encoding="utf8"
		 source="1.6"
		 target="1.6"
		 includeantruntime="false"
		>
		  <compilerarg value="-g"/> 
		  <compilerarg value="-Xlint"/> 
		  <compilerarg value="-Xmaxerrs"/> 
		  <compilerarg value="1000"/> 
		</javac>
	</target>

	<target name="compilejunit" depends="compile">
		<javac 
		 fork="true" 
		 debug="true"
		 deprecation="true"
		 memoryInitialSize="512m"
		 memoryMaximumSize="512m"
		 srcdir="${testjava.dir}" destdir="${classes.dir}"
		 encoding="utf8"
		 source="1.6"
		 target="1.6"
		>
		  <classpath>
		   <pathelement location="${buildlib.dir}/jmockit-0.999.15.jar"/>
		   <pathelement location="${buildlib.dir}/junit.jar"/>
		  </classpath>
		  <compilerarg value="-g"/> 
		  <compilerarg value="-Xlint"/> 
		  <compilerarg value="-Xmaxerrs"/> 
		  <compilerarg value="1000"/> 
		</javac>
	</target>

	<target name="error">
		<mkdir dir="${classes.dir}"/>
		<copy todir="${classes.dir}">
			<fileset dir="${resources.dir}/"/>
		</copy>
		<tar tarfile="${classes.dir}/lcmc-test.tar"
		     basedir="${classes.dir}/"
		     includes="lcmc-test/**"/>
		<javac 
		 fork="true" 
		 debug="true"
		 memoryInitialSize="512m"
		 memoryMaximumSize="512m"
		 srcdir="${src.dir}" destdir="${classes.dir}"
		 encoding="utf8"
		 source="1.6"
		 target="1.6"
		>
		  <classpath>
		   <pathelement location="/usr/share/java/jai_core.jar"/>
		   <pathelement location="/usr/share/java/j3dcore.jar"/>
		   <pathelement location="/usr/share/java/j3dutils.jar"/>
		   <pathelement location="/usr/share/java/vecmath.jar"/>
		   <pathelement location="/usr/share/java/xalan2.jar"/>
		   <pathelement location="${buildlib.dir}/jai_core.jar"/>
		   <pathelement location="${buildlib.dir}/j3dcore.jar"/>
		   <pathelement location="${buildlib.dir}/j3dutils.jar"/>
		   <pathelement location="${buildlib.dir}/vecmath.jar"/>
		   <pathelement location="/usr/share/java/xml-commons-apis.jar"/>
		   <pathelement location="/usr/share/java/xerces-j2.jar"/>
		   <pathelement location="${buildlib.dir}/jmockit-0.999.15.jar"/>
		   <pathelement location="${buildlib.dir}/junit.jar"/>
		  </classpath>
		  <compilerarg value="-g"/> 
		  <compilerarg value="-Xmaxerrs"/> 
		  <compilerarg value="1"/> 
		  <compilerarg value="-Xlint:none"/> 
		</javac>
	</target>
	
	<target name="jar" depends="compile">
		<mkdir dir="${jar.dir}"/>
		<jar destfile="${jar.dir}/${ant.project.name}.jar"
		     excludes="plugins/ lcmc-test.tar"
		     basedir="${classes.dir}">
			<manifest>
				<attribute name="Main-Class" value="${main-class}"/>
			</manifest>
		</jar>
	</target>

	<target name="testjar" depends="compile">
		<mkdir dir="${jar.dir}"/>
		<jar destfile="${jar.dir}/${ant.project.name}.jar"
		     excludes="plugins/"
		     basedir="${classes.dir}">
			<manifest>
				<attribute name="Main-Class" value="${main-class}"/>
			</manifest>
		</jar>
	</target>
	
	<target name="runprof" depends="testjar">
		<java fork="true" classname="${main-class}">
			<jvmarg value="-Xdebug"/>
		  <!--  <jvmarg value="-verbose:gc"/>  -->
		  <!--  <jvmarg value="-verbose:class"/> -->
		  <!--  <jvmarg value="-verbose:jni"/> -->
		  <!--  <jvmarg value="-agentlib:hprof=heap=dump,format=b,depth=20"/>  -->
		    <jvmarg value="-agentlib:hprof=heap=all,depth=500"/>
			<jvmarg value="-Xmx64m"/>
			<!-- <jvmarg value="-Xrunhprof"/> -->
		<!--	<jvmarg value="-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n"/> -->
			<classpath>
				<path location="${jar.dir}/${ant.project.name}.jar"/>
			</classpath>
		  <classpath>
		   <pathelement location="/usr/share/java/j3dcore.jar"/>
		   <pathelement location="/usr/share/java/j3dutils.jar"/>
		   <pathelement location="/usr/share/java/vecmath.jar"/>
		   <pathelement location="${buildlib.dir}/jai_core.jar"/>
		  </classpath>
		</java>
	</target>
	
	<target name="runjmp" depends="testjar">
		<java fork="true" classname="${main-class}">
			<jvmarg value="-Xrunjmp"/>
			<classpath>
				<path location="${jar.dir}/${ant.project.name}.jar"/>
			</classpath>
		</java>
	</target>
	
	<target name="run" depends="testjar">
		<java fork="true"
		      classname="${main-class}">
		      	<arg value="--auto"/>
			<arg value="${auto}"/> <!--  ant -Dauto=... -->
			<jvmarg value="-Xmx512m"/>
			<jvmarg value="-Xdebug"/>
			<jvmarg value="-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n"/>
			<classpath>
				<path location="${jar.dir}/${ant.project.name}.jar"/>
			</classpath>
		</java>
	</target>

	<target name="lowmem" depends="testjar">
		<java fork="true"
		      classname="${main-class}">
		      	<arg value="--auto"/>
			<arg value="${auto}"/> <!--  ant -Dauto=... -->
			<jvmarg value="-Xmx64m"/>
			<jvmarg value="-Xdebug"/>
			<jvmarg value="-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n"/>
			<classpath>
				<path location="${jar.dir}/${ant.project.name}.jar"/>
			</classpath>
		</java>
	</target>

	<target name="lowmem40" depends="testjar">
		<java fork="true"
		      classname="${main-class}">
		      	<arg value="--auto"/>
			<arg value="${auto}"/> <!--  ant -Dauto=... -->
			<jvmarg value="-Xmx40m"/>
			<jvmarg value="-Xdebug"/>
			<jvmarg value="-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n"/>
			<classpath>
				<path location="${jar.dir}/${ant.project.name}.jar"/>
			</classpath>
		</java>
	</target>

	<target name="lowmem150" depends="testjar">
		<java fork="true"
		      classname="${main-class}">
		      	<arg value="--auto"/>
			<arg value="${auto}"/> <!--  ant -Dauto=... -->
			<jvmarg value="-Xmx150m"/>
			<jvmarg value="-Xdebug"/>
			<jvmarg value="-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n"/>
			<classpath>
				<path location="${jar.dir}/${ant.project.name}.jar"/>
			</classpath>
		</java>
	</target>

	<target name="lowmem100" depends="testjar">
		<java fork="true"
		      classname="${main-class}">
		      	<arg value="--auto"/>
			<arg value="${auto}"/> <!--  ant -Dauto=... -->
			<jvmarg value="-Xmx100m"/>
			<jvmarg value="-Xdebug"/>
			<jvmarg value="-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n"/>
			<classpath>
				<path location="${jar.dir}/${ant.project.name}.jar"/>
			</classpath>
		</java>
	</target>
	
	<target name="clean-build" depends="clean,jar"/>
	
	<target name="main" depends="clean,run"/>

       <target name="init">
                <property name="project" value="lcmc-${release}" />  
                <property name="tarball.tar" value="LCMC-source-${release}.tar" />  
                <property name="tarball.tar.gz" value="${tarball.tar}.gz" />  
        </target>
        
        <target name="dist" depends="init">
                <copy todir="/tmp/${project}">
                        <fileset dir="."/>
                </copy>
                <tar tarfile="${tarball.tar}"
                     basedir="/tmp/"
                     includes="${project}/src/** ${project}/build.xml ${project}/pom.xml ${project}/README.txt ${project}/debian/** ${project}/LICENSE.txt ${project}/doc/lcmc.1" />
                <gzip zipfile="${tarball.tar.gz}" src="${tarball.tar}" />
                <delete file="${tarball.tar}"/>
                <delete dir="/tmp/${project}"/>
        </target>

	<target name="junit" depends="compilejunit">
		<java fork="true" classname="lcmc.utilities.TestSuite1">
			<jvmarg value="-Xmx1024m"/>
			<jvmarg value="-Xdebug"/>
			<jvmarg value="-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n"/>
			<jvmarg value="-Dtest.interactive=${interactive}"/>
			<jvmarg value="-Dtest.quick=${quick}"/>
			<jvmarg value="-Dtest.connect=${connect}"/>
			<jvmarg value="-Dtest.password=${password}"/>
			<jvmarg value="-Dtest.dsa=${dsa}"/>
			<jvmarg value="-Dtest.rsa=${rsa}"/>
			<jvmarg value="-Dtest.count=${count}"/>
			<jvmarg value="-Dtest.factor=${factor}"/>
			<jvmarg value="-Dtest.cluster=${cluster}"/>
			<classpath>
				<pathelement path="${classes.dir}"/>
				<pathelement location="${buildlib.dir}/jmockit-0.999.15.jar"/>
				<pathelement location="${buildlib.dir}/junit.jar"/>
			</classpath>
		</java>
	</target>

    <target name="runtest" description="Runs junit Tests" depends="compilejunit">
        <junit printsummary='true' haltonerror='true' haltonfailure='true' fork='yes' forkmode='once' > 
            <formatter type='brief' usefile='false'/>
            <classpath>
				<pathelement path="${classes.dir}"/>
            </classpath>
            <batchtest>
                <fileset dir="${testjava.dir}">
                        <include name="**/*Test0.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

	<target name="man">
		<copy tofile="${doc.dir}/${man.file}"
		      file="${doc.dir}/${man.file}.in"
		      overwrite="yes"/>
		<replace file="${doc.dir}/${man.file}"
			 token="@LCMC-DATE@"
			 value="${TODAY}"/>
		<replace file="${doc.dir}/${man.file}"
			 token="@LCMC-VERSION@"
			 value="${release}"/>
	</target>
        <target name="rpm-source" depends="init">
                <copy todir="/tmp/${project}">
                        <fileset dir="."/>
                </copy>
                <tar tarfile="${tarball.tar}"
                     basedir="/tmp/"
                     includes="${project}/${buildlib.dir}/** ${project}/src/** ${project}/build.xml ${project}/pom.xml ${project}/README.txt ${project}/debian/** ${project}/LICENSE.txt ${project}/doc/lcmc.1" />
                <gzip zipfile="${tarball.tar.gz}" src="${tarball.tar}" />
                <delete file="${tarball.tar}"/>
                <delete dir="/tmp/${project}"/>
        </target>
	<target name="rpm" depends="man,rpm-source">
		<copy tofile="${rpmbuild.dir}/SPECS/${spec.file}"
		      file="${scripts.dir}/${spec.file}.in"
		      overwrite="yes"/>
		<move tofile="${rpmbuild.dir}/SOURCES/${tarball.tar.gz}"
		      file="${tarball.tar.gz}"
		      overwrite="yes"/>
		<replace file="${rpmbuild.dir}/SPECS/${spec.file}"
			 token="@LCMC-VERSION@"
			 value="${release}"/>
		<copy tofile="${rpmbuild.dir}/SOURCES/${startup.script}"
		      file="${scripts.dir}/${startup.script}"
		      overwrite="yes"/>
		<copy tofile="${rpmbuild.dir}/SOURCES/${lcmc.desktop.script}"
		      file="${scripts.dir}/${lcmc.desktop.script}"
		      overwrite="yes"/>
		<copy tofile="${rpmbuild.dir}/SOURCES/${lcmc.applications.script}"
		      file="${scripts.dir}/${lcmc.applications.script}"
		      overwrite="yes"/>
		<rpm specFile="lcmc.spec"
			topDir="${rpmbuild.dir}"
			cleanBuildDir="true"
			failOnError="true"/>
		<move todir=".">
		      <fileset dir="${rpmbuild.dir}/RPMS/noarch/"
		      	       includes="**/*.rpm"/>
		</move>
	</target>
	<target name="iss">
		<copy tofile="${scripts.dir}/${iss.file}"
		      file="${scripts.dir}/${iss.file}.in"
		      overwrite="yes"/>
		<replace file="${scripts.dir}/${iss.file}"
			 token="@LCMC-VERSION@"
			 value="${release}"/>
	</target>
	<target name="launch4j">
		<copy tofile="${scripts.dir}/${launch4j.conf}"
		      file="${scripts.dir}/${launch4j.conf}.in"
		      overwrite="yes"/>
		<replace file="${scripts.dir}/${launch4j.conf}"
			 token="@LCMC-VERSION@"
			 value="${release}"/>
	</target>
	<target name="exe" depends="jar,iss,launch4j">
		<taskdef name="launch4j"
			 classname="net.sf.launch4j.ant.Launch4jTask"
			 classpath="misc/launch4j/launch4j.jar"/>
		<launch4j configFile="${scripts.dir}/${launch4j.conf}"/>
	</target>
	<target name="applet" depends="jar">
		<mkdir dir="${jar.dir}"/>
		<jar destfile="${jar.dir}/${ant.project.name}-applet.jar"
		     basedir="${classes.dir}">
			<manifest>
				<attribute name="Main-Class" value="${main-class-applet}"/>
				<attribute name="Permissions" value="all-permissions"/>
			</manifest>
		</jar>
	</target>
</project>
<project name="LCMC" basedir="." default="main">
	<property name="src.dir"	value="../src"/>
	<property name="java.dir"	value="${src.dir}/main/java"/>
	<property name="resources.dir"	value="${src.dir}/main/resources"/>
	<property name="testjava.dir"	value="${src.dir}/test/java"/>
	<property name="lib.dir"	value="${src.dir}/lib"/>
	<property name="reports.dir"	value="reports"/>
	<property name="build.dir"	value="../build"/>
	<property name="classes.dir"	value="${build.dir}/classes"/>
	<property name="jar.dir"	value="${build.dir}/jar"/>
	<property name="signed.dir"	value="${build.dir}/signed"/>
	<property name="buildlib.dir"	value="../build-lib"/>
	<property name="build.coverage.dir"	value="build-coverage"/>
	<property name="doc.dir"	value="../doc"/>
	<property name="man.file"	value="lcmc.1"/>

	<loadproperties> 
	<file file="${resources.dir}/release.properties"/> 
        </loadproperties> 
	
	<property name="main-class"  value="lcmc.LCMC"/>
	<tstamp/>
	<property name="now" value="${DSTAMP}-${TSTAMP}" />
	
	<target name="clean">
		<delete dir="${build.dir}/classes/lcmc/"/>
		<delete dir="${build.dir}/classes/plugins/"/>
		<delete dir="${jar.dir}"/>
	</target>
	
	<target name="compile">
		<mkdir dir="${classes.dir}"/>
		<copy todir="${classes.dir}">
			<fileset dir="${resources.dir}/"/>
		</copy>
		<tar tarfile="${classes.dir}/lcmc-test.tar"
		     basedir="${classes.dir}/"
		     includes="lcmc-test/**"/>
		
		<!-- verbose="true" -->
		<!-- <compilerarg value="-Xlint:unchecked"/> -->
		<!-- target="jsr14" for java runtime 1.4 -->
		<!-- debug="true" -->
		<!-- fork="true" -->
		<javac 
		 fork="true" 
		 nowarn="true"
		 debug="true"
		 deprecation="false"
		 memoryInitialSize="512m"
		 memoryMaximumSize="512m"
		 srcdir="${lib.dir}" destdir="${classes.dir}"
		 encoding="utf8"
		 source="1.6"
		 target="1.6"
		>
		  <classpath>
		   <pathelement location="${buildlib.dir}/jai_core.jar"/>
		   <pathelement location="/usr/share/java/jai_core.jar"/>
		   <pathelement location="/usr/share/java/j3dcore.jar"/>
		   <pathelement location="/usr/share/java/j3dutils.jar"/>
		   <pathelement location="/usr/share/java/vecmath.jar"/>
		  </classpath>
		  <compilerarg value="-Xmaxerrs"/> 
		  <compilerarg value="1000"/> 
		</javac>
		
		<javac 
		 fork="true" 
		 debug="true"
		 deprecation="true"
		 memoryInitialSize="512m"
		 memoryMaximumSize="512m"
		 srcdir="${java.dir}" destdir="${classes.dir}"
		 encoding="utf8"
		 source="1.6"
		 target="1.6"
		>
		  <compilerarg value="-g"/> 
		  <compilerarg value="-Xlint"/> 
		  <compilerarg value="-Xmaxerrs"/> 
		  <compilerarg value="1000"/> 
		</javac>
	</target>

	<target name="man">
		<copy tofile="${doc.dir}/${man.file}"
		      file="${doc.dir}/${man.file}.in"
		      overwrite="yes"/>
		<replace file="${doc.dir}/${man.file}"
			 token="@LCMC-DATE@"
			 value="${TODAY}"/>
		<replace file="${doc.dir}/${man.file}"
			 token="@LCMC-VERSION@"
			 value="${release}"/>
	</target>
	<target name="jar" depends="compile,man">
		<mkdir dir="${jar.dir}"/>
		<jar destfile="${jar.dir}/${ant.project.name}.jar"
		     excludes="plugins/ lcmc-test.tar"
		     basedir="${classes.dir}">
			<manifest>
				<attribute name="Main-Class" value="${main-class}"/>
			</manifest>
		</jar>
	</target>
</project>
 
<!-- Build Script provided by Travell Perkins, tlperkins@dev.java.net with improvements by Mike.Miller@jda.com -->

<project name="Concurrent by Doug Lea" default="help" basedir=".">

<property name="src"      location="src/EDU/oswego/cs/dl/util/concurrent"/>
<property name="src.path" value="${basedir}/src"/>
<property name="docs"     value="${basedir}/docs"/>

<target name="help">
	<echo message="To build concurrent.jar which contains the core library and misc classes: ant dist"/>
	<echo message="To clean the build created files: ant clean"/>
</target>


<target name="clean">
	<delete dir="build"/>
	<delete dir="lib"/>
	<delete dir="src"/>
</target>

<target name="init">
	<mkdir dir="build"/>
	<mkdir dir="lib"/>
	<mkdir dir="${src}"/>
	<mkdir dir="${src}/misc"/>
	<mkdir dir="${docs}"/>
</target>


<target name="setup.packages" depends="init">
	<copy toDir="${src}" flatten="true">
            <fileset dir=".">
                <include name="*.java"/>
            </fileset>
        </copy>
	<copy toDir="${src}/misc" flatten="true">
            <fileset dir="misc">
                <include name="*.java"/>
            </fileset>
        </copy>
</target>

<target name="compile" depends="setup.packages">
        <javac srcdir="src" destdir="build" optimize="true"/>
</target>

<target name="dist" depends="compile">
	<jar jarfile="lib/concurrent.jar">
            <fileset dir="build"/>
        </jar>
</target>


<target name="javadoc" depends="init">
    <delete includeEmptyDirs="true" quiet="true">
        <fileset dir="${src}/docs" />
    </delete>

    <mkdir dir="${docs}" />

    <javadoc maxmemory="256m" packagenames="EDU.oswego.*" sourcepath="${src.path}" destdir="${docs}" defaultexcludes="yes">
    </javadoc>
</target>
</project>
