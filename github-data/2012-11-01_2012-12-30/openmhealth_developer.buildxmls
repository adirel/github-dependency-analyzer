<?xml version="1.0"?>
<project
    name="Open mHealth Reference Implementation"
    basedir="."
    default="dist">

    <!-- Create the properties to be used throughout this build file. -->
    <property name="dist" location="dist" />
    <property name="build" location="build" />
    <property name="doc" location="${dist}/doc"/>
    <property name="lib" location="lib" />
    <property name="src" location="src" />
    <property name="test" location="test"/>
    <property name="web" location="web" />

    <!-- Create the list of necessary libraries for compiling. -->
    <fileset id="dependencies.compile" dir="${lib}">
        <include name="bson4jackson-2.1.0.jar" />
        <include name="c3p0-0.9.2.1.jar" />
        <include name="commons-fileupload-1.3.jar" />
        <include name="commons-io-2.4.jar" />
        <include name="commons-logging-1.1.1.jar" />
        <include name="Concordia-0.4.jar" />
        <include name="hamcrest-core-1.3.jar" />
        <include name="jackson-annotations-2.1.1.jar" />
        <include name="jackson-core-2.1.1.jar" />
        <include name="jackson-databind-2.1.1.jar" />
        <include name="jbcrypt-0.3.jar" />
        <include name="jettison-1.2.jar" />
        <include name="joda-time-2.1.jar" />
        <include name="junit-4.11.jar" />
        <include name="log4j-1.2.17.jar" />
        <include name="mail-1.4.7.jar" />
        <include name="mchange-commons-java-0.2.3.4.jar" />
        <include name="mongojack-2.0.0-RC5.jar" />
        <include name="mongo-java-driver-2.11.2.jar" />
        <include name="org.apache.oltu.oauth2.authzserver-0.31.jar" />
        <include name="org.apache.oltu.oauth2.common-0.31.jar" />
        <include name="org.apache.oltu.oauth2.resourceserver-0.31.jar" />
        <include name="org.apache.oltu.oauth2.resourceserver-filter-0.31.jar" />
        <include name="persistence-api-1.0.2.jar" />
        <include name="servlet-api-3.0.jar" />
        <include name="slf4j-api-1.7.4.jar" />
        <include name="slf4j-log4j12-1.7.4.jar" />
        <include name="spring-aop-3.2.1.RELEASE.jar" />
        <include name="spring-beans-3.2.1.RELEASE.jar" />
        <include name="spring-context-3.2.1.RELEASE.jar" />
        <include name="spring-core-3.2.1.RELEASE.jar" />
        <include name="spring-expression-3.2.1.RELEASE.jar" />
        <include name="spring-instrument-3.2.1.RELEASE.jar" />
        <include name="spring-jdbc-3.2.1.RELEASE.jar" />
        <include name="spring-orm-3.2.1.RELEASE.jar" />
        <include name="spring-test-3.2.1.RELEASE.jar" />
        <include name="spring-tx-3.2.1.RELEASE.jar" />
        <include name="spring-web-3.2.1.RELEASE.jar" />
        <include name="spring-webmvc-3.2.1.RELEASE.jar" />
        <include name="spring-webmvc-portlet-3.2.1.RELEASE.jar" />
    </fileset>
    <path id="classpath.compile">
        <fileset refid="dependencies.compile"/>
    </path>
	
    <!-- Create the list of necessary libraries for testing. -->
    <path id="classpath.test">
        <fileset refid="dependencies.compile"/>
        <pathelement location="${build}/classes"/>
    </path>
    
    <!-- Create the list of necessary libraries for running. -->
    <fileset id="dependencies.run" dir="${lib}">
        <include name="bson4jackson-2.1.0.jar" />
        <include name="c3p0-0.9.2.1.jar" />
        <include name="commons-fileupload-1.3.jar" />
        <include name="commons-io-2.4.jar" />
        <include name="commons-logging-1.1.1.jar" />
        <include name="Concordia-0.4.jar" />
        <include name="jackson-annotations-2.1.1.jar" />
        <include name="jackson-core-2.1.1.jar" />
        <include name="jackson-databind-2.1.1.jar" />
        <include name="jbcrypt-0.3.jar" />
        <include name="jettison-1.2.jar" />
        <include name="joda-time-2.1.jar" />
        <include name="log4j-1.2.17.jar" />
        <include name="mail-1.4.7.jar" />
        <include name="mchange-commons-java-0.2.3.4.jar" />
        <include name="mongojack-2.0.0-RC5.jar" />
        <include name="mongo-java-driver-2.11.2.jar" />
        <include name="mysql-connector-java-5.1.25-bin.jar" />
        <include name="org.apache.oltu.oauth2.authzserver-0.31.jar" />
        <include name="org.apache.oltu.oauth2.common-0.31.jar" />
        <include name="org.apache.oltu.oauth2.resourceserver-0.31.jar" />
        <include name="org.apache.oltu.oauth2.resourceserver-filter-0.31.jar" />
        <include name="persistence-api-1.0.2.jar" />
        <include name="slf4j-api-1.7.4.jar" />
        <include name="slf4j-log4j12-1.7.4.jar" />
        <include name="spring-aop-3.2.1.RELEASE.jar" />
        <include name="spring-beans-3.2.1.RELEASE.jar" />
        <include name="spring-context-3.2.1.RELEASE.jar" />
        <include name="spring-core-3.2.1.RELEASE.jar" />
        <include name="spring-expression-3.2.1.RELEASE.jar" />
        <include name="spring-instrument-3.2.1.RELEASE.jar" />
        <include name="spring-jdbc-3.2.1.RELEASE.jar" />
        <include name="spring-orm-3.2.1.RELEASE.jar" />
        <include name="spring-test-3.2.1.RELEASE.jar" />
        <include name="spring-tx-3.2.1.RELEASE.jar" />
        <include name="spring-web-3.2.1.RELEASE.jar" />
        <include name="spring-webmvc-3.2.1.RELEASE.jar" />
        <include name="spring-webmvc-portlet-3.2.1.RELEASE.jar" />
    </fileset>
    
    <!-- Cleans up all of the temporary files generated during building. -->
    <target name="clean" depends="" description="Cleans the project.">
        <delete dir="${build}" />
        <delete dir="${dist}" />
    </target>
    
    <!-- Target to build the JavaDoc. -->
    <target name="javadoc" description="Creates the documentation.">
        <mkdir dir="${doc}"/>
        <javadoc destdir="${doc}" additionalparam="-quiet">
            <fileset dir="${src}">
                <include name="**/*.java"/>
            </fileset>
            <classpath refid="classpath.compile"/>
        </javadoc>
    </target>

    <!-- Compiles the Java files into their class objects. -->
    <target name="javac" description="Compiles Java files.">
        <mkdir dir="${build}/classes"/>
        <javac 
            destdir="${build}/classes"
            source="1.7"
            target="1.7"
            debug="true"
            optimize="true"
            failonerror="true" 
            encoding="UTF-8"
        	includeantruntime="false">
            
            <src path="${src}"/>
        	<src path="${test}"/>
            <classpath refid="classpath.compile"/>
        </javac>
    </target>
	
    <!-- Target to test the code. -->
    <target
        name="test"
        depends="javac"
        description="Executes the JUnit tests.">

        <junit printsummary="yes" haltonfailure="yes">
            <classpath refid="classpath.test"/>
            <formatter type="plain" usefile="false"/>
            <batchtest>
                <fileset dir="${test}">
                    <include name="**"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

	<!-- Builds the WAR file. -->
    <target name="dist" depends="javac, test" description="Builds the WAR file.">
        <!-- Create the META-INF directory if it doesn't exist. -->
        <mkdir dir="${web}/META-INF" />
    	<!-- Create the directory for the results if they don't exist. -->
        <mkdir dir="${dist}" />
        <war
            webxml="${web}/WEB-INF/web.xml"
            destfile="${dist}/omh.war">
        	
            <classes dir="${build}/classes" />
            <lib refid="dependencies.run" />
            <webinf dir="${web}/WEB-INF" />
            <metainf dir="${web}/META-INF" />
            <zipfileset dir="${web}">
                <exclude name="META-INF/**" />
                <exclude name="WEB-INF/**" />
            </zipfileset>
        </war>
    </target>  
</project>