apply plugin: 'java'
//apply plugin: 'idea'
apply plugin: 'eclipse'
group = 'selenium.webdriver.qa'

/**
 *  This project is the one you should import from, while using the
 *  Eclipse Gradle tooling plugins Import Project wizard, rather than
 *  the root of the main Eclipse project.  This project otherwise
 *  contains no code and does nothing in particular except host
 *  the location of the settings.gradle which defines the flat layout.
 */

task identify {
    println "-----------------------------------"
    println "   _____               _ _          "
    println "  / ____|             | | |         "
    println " | |  __ _ __ __ _  __| | | ___     "
    println " | | |_ | '__/ _` |/ _` | |/ _ \\    "
    println " | |__| | | | (_| | (_| | |  __/    "
    println "  \\_____|_|  \\__,_|\\__,_|_|\\___|    "
    println ""
    println "-----------------------------------"
    println "Using build file '$buildFile.name' in '$buildFile.parentFile.name'."
    println "Build output: " + relativePath(compileJava.destinationDir)
    println "Resources output: " + relativePath(processResources.destinationDir)
    println "-----------------------------------------------"
}
apply plugin: 'java'
//apply plugin: 'idea'
apply plugin: 'eclipse'
group = 'selenium.webdriver.qa'

ext {
    projTitle = 'WebDriver Common Lib'
    projVersion = '1.0'
}

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '2.+'
    compile group: 'org.seleniumhq.selenium', name: 'selenium-server', version: '2.+'
    compile group: 'junit', name: 'junit', version: '4.+'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.+'
    compile group: 'ch.qos.logback', name: 'logback-core', version: '1.0.+'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.0.+'
}

apply plugin: 'java'
//apply plugin: 'idea'
apply plugin: 'eclipse'
group = 'selenium.webdriver.qa'

ext {
    projTitle = 'WebDriver on Google'
    projVersion = '1.0'
    buildDirectory = '$buildDir'
}

repositories {
    mavenCentral()
	  // javacpp and javacv are required by Sikuli
    maven {
        url "http://maven2.javacpp.googlecode.com/git/"
    }
    maven {
        url "http://maven2.javacv.googlecode.com/git/"
    }
}

dependencies {
    compile project(':commonlib')
    compile group: 'org.sikuli', name: 'sikuli-api', version: '1.0.+'
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '2.+'
    compile group: 'commons-io', name: 'commons-io', version: '1.3.+'
    compile group: 'junit', name: 'junit', version: '4.+'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.+'
    compile group: 'net.sf.opencsv', name: 'opencsv', version: '2.+'
}
	
// run tests with -info or -debug option to get logging
tasks.withType(Test) {

    jvmArgs '-Xms128m', '-Xmx1024m', '-XX:MaxPermSize=128m'
    
    testLogging {
        exceptionFormat "full"
        events "started", "passed", "skipped", "failed", "standardOut", "standardError"
        displayGranularity = 0
        showStandardStreams = false
    }    
    beforeTest { descriptor ->
        logger.lifecycle("Running test: " + descriptor)
    }
   
    systemProperties['hubIP'] = '127.0.0.1'
    systemProperties['hubPort'] = '4444'
    systemProperties['testURL'] = 'http://www.google.com/'
    
    // initial browser size and position
    systemProperties['windowXPosition'] = '40'
    systemProperties['windowYPosition'] = '40'
    systemProperties['windowWidth'] = '900'
    systemProperties['windowHeight'] = '600'
    
}

task runAllTestsInFirefox(type: Test) {
    maxParallelForks = 2
    systemProperties['browser'] = 'firefox'
    include '**/GoogleTest*.class'
    reports.junitXml.destination = "$buildDir/test-results/GoogleTestFF"  
    reports.html.destination = "$buildDir/test-results/GoogleTestFF"
}

task runAllTestsInIE(type: Test) {
    maxParallelForks = 1
    systemProperties['browser'] = 'ie'
    include '**/GoogleTest*.class'
    reports.junitXml.destination = "$buildDir/test-results/GoogleTestIE"  
    reports.html.destination = "$buildDir/test-results/GoogleTestIE"
}

task runAllTestsInChrome(type: Test) {
    maxParallelForks = 2
    systemProperties['browser'] = 'chrome'
	systemProperties['webdriver.chrome.driver'] = 'chromedriver.exe'
    include '**/GoogleTest*.class'
    reports.junitXml.destination = "$buildDir/test-results/GoogleTestCH"  
    reports.html.destination = "$buildDir/test-results/GoogleTestCH"
}

task runParameterizedExample(type: Test) {
   include '**/DataProviderTest.class'
   // test output goes to default location
}

	apply plugin: 'java'
//apply plugin: 'idea'
apply plugin: 'eclipse'
group = 'selenium.webdriver.qa'

ext {
    projTitle = 'Test Parallel MultiWindow'
    projVersion = '1.0'
}

repositories {
    mavenCentral()
}

dependencies {
    compile project(':commonlib')
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '2.+'
    compile group: 'commons-collections', name: 'commons-collections', version: '3.+'
    compile group: 'junit', name: 'junit', version: '4.+'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.+'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.+'
}

tasks.withType(Test) {

    jvmArgs '-Xms128m', '-Xmx1024m', '-XX:MaxPermSize=128m'
    maxParallelForks = 4
    testLogging.showStandardStreams = true
    systemProperties['testProtocol'] = 'http'
    systemProperties['testDomain'] = 'djangofan.github.io'
    systemProperties['testPort'] = 80
    systemProperties['testUri'] = '/html-test-site/site'
    systemProperties['hubUrl'] = 'localhost'
    systemProperties['hubPort'] = '4444'
   
}

task runParallelTestsInFirefox(type: Test) {
    description = 'Runs all JUnit test classes in parallel threads.'
    //include '**/TestFrames.class'
    include '**/TestHandleCache*.class'
    reports.junitXml.destination = "$buildDir/test-results/ParallelTestsFF"  
    reports.html.destination = "$buildDir/test-results/ParallelTestsFF"
    
    // System properties passed to tests
    systemProperties['browserType'] = 'firefox'
	
    // initial browser size and position
    systemProperties['windowXPosition'] = '100'
    systemProperties['windowYPosition'] = '40'
    systemProperties['windowWidth'] = '400'
    systemProperties['windowHeight'] = '600'    
}

task runFrameTestInIE(type: Test) {
    description = 'Runs a test of handling iframes.'
    maxParallelForks = 2
    //include '**/TestFrames.class'
    include '**/TestHandleCache*.class'
    reports.junitXml.destination = "$buildDir/test-results/ParallelTestsIE"  
    reports.html.destination = "$buildDir/test-results/ParallelTestsIE"
    
    // System properties passed to tests
    systemProperties['browserType'] = 'ie'
    
    // initial browser size and position
    systemProperties['windowXPosition'] = '100'
    systemProperties['windowYPosition'] = '40'
    systemProperties['windowWidth'] = '900'
    systemProperties['windowHeight'] = '600'    
    
}

