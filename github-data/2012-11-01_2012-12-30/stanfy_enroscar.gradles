dependOnProjects([
    ':beans', ':io',
    ':net', ':stats', ':images',
    ':ui'
])

android {
  // FIXME Hack IDE
//  sourceSets {
//    instrumentTest.setRoot('src/test')
//  }
}

// POM file modifications
uploadArchives {
  repositories {
    mavenDeployer {
      pom.project {
        name 'Enroscar Assist'
        description 'Helper module that gives easy access to standard Android modules and makes it easy to configure all the Enroscar stuff together.'
      }
      pom.whenConfigured {
        it.dependencies = []
      }
    }
  }
}


// POM file modifications
uploadArchives {
  repositories {
    mavenDeployer {
      pom.project {
        name 'Enroscar Beans'
        description 'Simple beans declaration and replacement library used for managing Enroscar components.'
      }
    }
  }
}

android {

  defaultConfig {
    proguardFile 'proguard.txt'
  }

}
buildscript {
  repositories {
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:0.9.+'
    classpath 'com.squareup.gradle:gradle-android-test-plugin:0.9.1-SNAPSHOT'
  }
}

def getPackageName = { "com.stanfy.enroscar.${it.name.replaceAll(/\W/, '').replaceAll(/enroscar/, '')}" }
def projectVersion = "2.0-SNAPSHOT"

task wrapper(type: Wrapper) {
  gradleVersion = '1.9'
}


def checkstyleDir = new File(rootDir, 'config/checkstyle')
def checkstyleConfig = new File(checkstyleDir, 'checkstyle.xml')

def libraryModules = [
    'beans', 'content', 'assist', 'goro', 'images', 'io', 'net', 'stats', 'ui'
    //'sherlock-integration'
].collect { project(":$it") }

configure(libraryModules) {

  version = projectVersion
  group = 'com.stanfy.enroscar'

  apply plugin: 'android-library'
  apply from: file("$rootDir/gradle/tests.gradle")
  apply from: file("$rootDir/gradle/publish.gradle")
  //apply plugin: 'checkstyle'

//  checkstyle {
//    configFile = checkstyleConfig
//    configProperties['basedir'] = project.projectDir
//  }

  archivesBaseName = "enroscar-${project.name}"

  repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
  }

  android {
    compileSdkVersion 19

    buildToolsVersion '19.0.3'

    defaultConfig {
      versionCode 10
      versionName projectVersion
      minSdkVersion 8
      packageName getPackageName(project)
    }

    compileOptions {
      sourceCompatibility JavaVersion.VERSION_1_7
      targetCompatibility JavaVersion.VERSION_1_7
    }

  }

  def testDeps = [
      'com.squareup:fest-android:1.0.+',
      'com.google.mockwebserver:mockwebserver:20130706',
      'org.easytesting:fest-reflect:1.4.1',
      'org.mockito:mockito-all:1.9.5'
  ]

  dependencies {
    // TODO: it should be removed, but current version of 'android-test' plugin does not treat aar dependencies appropriately
    testCompile fileTree(dir: "$buildDir/exploded-bundles", include: "*/classes.jar")
    testCompile fileTree(dir: "$buildDir/exploded-bundles", include: "*/libs/*.jar")


    testDeps.each {
      testCompile it
      androidTestCompile it
    }

    testCompile group: 'org.robolectric', name: 'robolectric', version: '2.3-SNAPSHOT'
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile 'org.easytesting:fest-util:1.2.5'
  }

  project.ext.dependOnProjects = { list ->
    project.dependencies {
      list.each {
        compile project(it)
        testCompile project(path : it, configuration : 'testCompile')
      }
    }
  }

  android {
    if (project.hasProperty('preDex')) {
      dexOptions {
        preDexLibraries = Boolean.valueOf("$project.preDex")
      }
    }
  }

}
buildscript {
  repositories {
    jcenter()
  }

  dependencies {
    classpath 'org.gradle.api.plugins:gradle-nexus-plugin:0.7'
  }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'nexus'

version = '1.0-SNAPSHOT'
group = 'com.stanfy.enroscar'

repositories {
  mavenCentral()
  maven {
    url "file://${System.env['ANDROID_HOME']}/extras/android/m2repository/"
  }
  maven {
    url 'https://oss.sonatype.org/content/repositories/snapshots'
  }
}

dependencies {
  compile project(path: ':content', configuration: 'plain')
  compile 'com.squareup:javawriter:2.4.0'

  testCompile 'junit:junit:4.11'
  testCompile 'org.easytesting:fest-assert-core:2.0M10'
  testCompile 'com.google.testing.compile:compile-testing:0.4'
  testCompile 'com.google.guava:guava:15.0'
  testCompile 'org.truth0:truth:0.13'

  testCompile group: 'org.robolectric', name: 'robolectric', version: '2.3-SNAPSHOT'
  testRuntime files("${System.properties['java.home']}/../lib/tools.jar")
  testRuntime files("${System.env['ANDROID_HOME']}/platforms/android-19/android.jar")
}

tasks.withType(Test) {
  scanForTestClasses = false
  include "**/*Test.class"
}

task debug << {
  configurations.testRuntime.each { println it }
}

def cleanupPom = { pom ->
  pom.dependencies.removeAll { it.groupId == project.group }
}

install.repositories.mavenInstaller.pom.whenConfigured(cleanupPom)
uploadArchives.repositories {
  mavenDeployer {
    pom.whenConfigured(cleanupPom)
  }
}
apply from: file("$rootDir/gradle/jar.gradle")

dependencies {

  compile 'com.android.support:support-v4:19.0.1'

}

// FIXME: IDE hack
//apply from: file("$rootDir/gradle/tests-ide-hack.gradle")

// POM file modifications
uploadArchives {
  repositories {
    mavenDeployer {
      pom.project {
        name 'Enroscar Content'
        description 'Helper classes and extended abstractions for Android loaders, content resolvers, and DB access.'
      }
    }
  }
}
// POM file modifications
uploadArchives {
  repositories {
    mavenDeployer {
      pom.project {
        name 'Enroscar Goro'
        description 'Android service that handles tasks in multiple queues'
      }
    }
  }
}
apply from: file("$rootDir/gradle/jar.gradle")

// FIXME: IDE hack
//apply from: file("$rootDir/gradle/tests-ide-hack.gradle")
buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:0.8.+'
  }
}

apply plugin: 'android'

android {
  compileSdkVersion 19
  buildToolsVersion "19.0.3"

  defaultConfig {
    minSdkVersion 14
    targetSdkVersion 19
    versionCode 2
    versionName "1.0"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }

}

dependencies {
  compile project(':goro')
}
dependOnProjects([':beans', ':io', ':net'])

android {
  defaultConfig {
    testPackageName "com.stanfy.enroscar.images.test"
    testInstrumentationRunner "android.test.InstrumentationTestRunner"
  }
}
android {

  defaultConfig {
    packageName 'com.stanfy.enroscar.integration.sherlock'
  }

}

repositories {
  mavenCentral()
}

dependencies {
  compile project(':enroscar-ui')

  compile "com.android.support:support-v4:18.0.+"
  compile 'com.actionbarsherlock:actionbarsherlock:4.4.0@aar'
}
// POM file modifications
uploadArchives {
  repositories {
    mavenDeployer {
      pom.project {
        name 'Enroscar IO'
        description 'Java buffers pool implementation + some other I/O utilities.'
      }
    }
  }
}

apply from: file("$rootProject.projectDir/gradle/jar.gradle")

task integrationTest(type: GradleBuild) {
  dir = file("java-sample")
  tasks = ["test"]
}
apply plugin: 'java'

repositories {
  mavenCentral()
  mavenLocal()
  maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
}

dependencies {
  compile 'com.stanfy.enroscar:enroscar-io:2.0-SNAPSHOT'

  testCompile 'junit:junit:4.11'
  testCompile 'org.easytesting:fest-assert-core:2.0M10'
}
def depProjects = [
    ':beans', ':io', ':content', ':goro'
].collect { project(it) }

dependencies {

  compile depProjects

  compile 'com.jakewharton:disklrucache:2.0.2'

  compile 'com.squareup.okhttp:okhttp:1.+'
  compile 'com.squareup.retrofit:retrofit:1.+'

  compile 'com.google.code.gson:gson:2.2.4'
  compile('com.stanfy:gson-xml-java:0.1.+') {
    exclude group: 'xmlpull', module: 'xmlpull' // we do not need this on Android
  }

  // xml parser implementation for tests
  testCompile 'net.sf.kxml:kxml2:2.3.0'

  // get test classes from content module
  testCompile project(path: ':content', configuration: 'testCompile')
}

android {

  defaultConfig {
    proguardFile 'proguard.txt'
  }

  // FIXME Hack IDE
//  sourceSets {
//    instrumentTest.setRoot('src/test')
//  }

}

// FIXME Hack IDE
//dependencies {
//  instrumentTestCompile 'junit:junit:4.11', 'org.robolectric:robolectric:2.3-SNAPSHOT'
//}

// POM file modifications
uploadArchives {
  repositories {
    mavenDeployer {
      pom.project {
        name 'Enroscar Net'
        description 'Networking tool for Android based on URLConnection'
      }
    }
  }
}

buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:0.8.+'
  }
}

apply plugin: 'android'

android {
  compileSdkVersion 19

  lintOptions {
    lintConfig file('lint.xml')
  }

  buildToolsVersion '19.0.3'

  defaultConfig {
    minSdkVersion 8
    targetSdkVersion 19
    packageName 'com.stanfy.enroscar.sample'

    versionCode 2
    versionName '2.0'
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }

}

repositories {
  mavenCentral()
  mavenLocal()
}

dependencies {
  compile project(":goro")
  compile 'com.netflix.rxjava:rxjava-android:0.17.0-RC1'
  compile 'com.squareup.retrofit:retrofit:1.4.1'

  provided "com.stanfy.enroscar:async-compiler:1.0-SNAPSHOT"

  compile 'com.squareup.dagger:dagger:1.2.1'
  provided 'com.squareup.dagger:dagger-compiler:1.2.1'

  compile project(":net")
  compile project(":images")
  compile project(":ui")
  compile project(":assist")
}

dependOnProjects([':beans'])

dependencies {
  
  compile fileTree(dir : 'libs', include : '*.jar')
    
}

// POM file modifications
uploadArchives {
  repositories {
    mavenDeployer {
      pom.project {
        name 'Enroscar Stats'
        description 'Statistics manager abstraction for integration with analytics services.'
      }
    }
  }
}
dependOnProjects([':beans', ':net', ':stats', ':images'])

dependencies {
  compile 'com.android.support:support-v4:19.0.1'

  testCompile 'com.google.mockwebserver:mockwebserver:20130403'
}

// POM file modifications
uploadArchives {
  repositories {
    mavenDeployer {
      pom.project {
        name 'Enroscar UI'
        description 'Set of Android widgets integrating with other Enroscar modules.'
      }
    }
  }
}
