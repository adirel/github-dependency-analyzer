<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Copyright (c) 1999-2010 Luca Garulli - LICENSE: Apache 2.0 -->
<project basedir=".">
    <property name="project.src" value="src/main/java"/>
    <property name="project.src2" value="${project.src}"/>
    <property name="project.res" value="src/main/resources"/>
    <property name="project.lib" value="lib"/>
    <property name="project.lib2" value="${project.lib}"/>
    <property name="project.doc" value="doc"/>
    <property name="project.build" value="target/classes"/>
    <property name="project.dist" value="target"/>
    <property name="project.is-debug" value="true"/>
    <property name="project.debug-level" value="lines,vars,source"/>
    <property name="project.target-comp" value="1.6"/>
    <property name="project.source-comp" value="1.6"/>
    <property name="ant.build.javac.source" value="1.6"/>
    <property name="ant.build.javac.target" value="1.6"/>

    <property name="build.sysclasspath" value="ignore"/>

    <path id="project.classpath">
        <filelist dir=".." files="${project.jar-deps}"/>
        <fileset dir="${project.lib}" includes="**/*.jar"/>
        <fileset dir="${project.lib2}" includes="**/*.jar"/>
        <fileset dir=".." includes="**/target/*.jar"/>
    </path>

    <target name="init">
        <echo>-----------------------------------</echo>
        <echo>-> ${ant.project.name}</echo>
        <echo>-----------------------------------</echo>
        <mkdir dir="${project.build}"/>
    </target>

    <target name="clean">
        <delete dir="${project.build}"/>
        <delete dir="${project.dist}"/>
    </target>

    <target name="compile" depends="init">
        <mkdir dir="${project.lib}"/>
        <javac destdir="${project.build}" debug="${project.is-debug}" debuglevel="${project.debug-level}"
               target="${project.target-comp}" source="${project.source-comp}" verbose="false"
               includeAntRuntime="false" encoding="UTF-8">
            <src path="${project.src}"/>
            <src path="${project.src2}"/>
            <classpath refid="project.classpath"/>
        </javac>
        <!--<copydir dest="${web.dir}/${deploy.name}" src="${src.web.dir}">  
            <include name="**/*" />  
        </copydir>  -->

        <copy todir="${project.build}">
            <fileset dir="${project.res}">
                <include name="**/*"/>
            </fileset>
        </copy>
    </target>

    <target name="jar" depends="compile">
        <mkdir dir="${project.dist}"/>
        <delete file="${project.dist}/${project.dist}/${ant.project.name}-${version}.jar"/>
        <jar compress="true" basedir="${project.build}" destfile="${project.dist}/${ant.project.name}-${version}.jar">
            <manifest>
                <attribute name="Implementation-Vendor" value="${vendor}"/>
                <attribute name="Implementation-Title" value="${product}"/>
                <attribute name="Implementation-Version" value="${version}"/>
                <attribute name="Main-Class" value="${project.jar-mainclass}"/>
                <attribute name="Class-Path" value="${project.jar-classpath}"/>
            </manifest>
        </jar>
        <copy todir="${project.dist}">
            <fileset dir="${project.lib}" includes="*.jar" excludes="test*.jar"/>
        </copy>
    </target>

    <target name="install" depends="jar">
        <copy todir="${global.lib}">
            <fileset dir="${project.dist}" includes="*.jar">
                <exclude name="*test*.jar"/>
                <exclude name="*-javadoc.jar"/>
                <exclude name="*-sources.jar"/>
            </fileset>
        </copy>
    </target>

    <target name="install-zip">
        <mkdir dir="${project.dist}"/>
        <delete file="${project.dist}/${ant.project.name}.zip"/>
        <zip destfile="${project.dist}/${ant.project.name}.zip" basedir="." excludes="**.svn/"/>
    </target>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="install" name="orient-ant">
    <!-- Copyright (c) 1999-2011 Luca Garulli - LICENSE: Apache 2.0 -->

    <property environment="env"/>
    <property name="vendor" value="NuvolaBase Ltd"/>
    <property name="product" value="OrientDB"/>
    <property name="version" value="1.7-rc2"/>
    <condition property="community.release" value="${releaseHome}/orientdb-community-${version}"
               else="../releases/orientdb-community-${version}">
        <isset property="releaseHome"/>
    </condition>

    <property name="env.ORIENTDB_HOME" value="${community.release}"/>

    <buildnumber file="build.number"/>

    <macrodef name="delegate">
        <attribute name="target"/>
        <sequential>
            <subant target="@{target}">
                <property name="global.lib" value="../${community.release}/lib"/>
                <property name="version" value="${version}"/>

                <fileset dir="commons" includes="build.xml"/>
                <fileset dir="core" includes="build.xml"/>
                <fileset dir="nativeos" includes="build.xml"/>
                <fileset dir="object" includes="build.xml"/>
                <fileset dir="enterprise" includes="build.xml"/>
                <fileset dir="client" includes="build.xml"/>
                <fileset dir="server" includes="build.xml"/>
                <fileset dir="distributed" includes="build.xml"/>
                <fileset dir="tools" includes="build.xml"/>
                <fileset dir="graphdb" includes="build.xml"/>
                <fileset dir="tests" includes="build.xml"/>
            </subant>

           <echo>   ___   ___  ____    _  </echo>  
           <echo> .'   `.|_  ||_  _|  | | </echo>
           <echo>/  .-.  \ | |_/ /    | | </echo>
           <echo>| |   | | |  __'.    |_| </echo>
           <echo>\  `-'  /_| |  \ \_   _  </echo>
           <echo> `.___.'|____||____| (_) </echo>
    </sequential>

    </macrodef>

    <target name="init">
     <echo>           .                                          </echo>
     <echo>          .`        `                                 </echo>
     <echo>          ,      `:.                                  </echo>
     <echo>         `,`    ,:`                                   </echo>
     <echo>         .,.   :,,                                    </echo>
     <echo>         .,,  ,,,                                     </echo>
     <echo>    .    .,.:::::  ````                                 :::::::::     :::::::::</echo>
     <echo>    ,`   .::,,,,::.,,,,,,`;;                      .:    ::::::::::    :::    :::</echo>
     <echo>    `,.  ::,,,,,,,:.,,.`  `                       .:    :::      :::  :::     :::</echo>
     <echo>     ,,:,:,,,,,,,,::.   `        `         ``     .:    :::      :::  :::     :::</echo>
     <echo>      ,,:.,,,,,,,,,: `::, ,,   ::,::`   : :,::`  ::::   :::      :::  :::    :::</echo>
     <echo>       ,:,,,,,,,,,,::,:   ,,  :.    :   ::    :   .:    :::      :::  :::::::</echo>
     <echo>        :,,,,,,,,,,:,::   ,,  :      :  :     :   .:    :::      :::  :::::::::</echo>
     <echo>  `     :,,,,,,,,,,:,::,  ,, .::::::::  :     :   .:    :::      :::  :::     :::</echo>
     <echo>  `,...,,:,,,,,,,,,: .:,. ,, ,,         :     :   .:    :::      :::  :::     :::</echo>
     <echo>    .,,,,::,,,,,,,:  `: , ,,  :     `   :     :   .:    :::      :::  :::     :::</echo>
     <echo>      ...,::,,,,::.. `:  .,,  :,    :   :     :   .:    :::::::::::   :::     :::</echo>
     <echo>           ,::::,,,. `:   ,,   :::::    :     :   .:    :::::::::     ::::::::::</echo>
     <echo>           ,,:` `,,.                                  </echo>
     <echo>          ,,,    .,`                                  </echo>
     <echo>         ,,.     `,                                          GRAPH DATABASE</echo>
     <echo>       ``        `.                                        COMMUNITY  EDITION</echo>
     <echo>                 ``                                         www.orientdb.org</echo>
     <echo>                 `                                    </echo>

        <mkdir dir="${community.release}"/>
        <mkdir dir="${community.release}/log"/>
        <mkdir dir="${community.release}/databases"/>
    </target>

    <target name="clean" depends="init">
        <delegate target="clean"/>
        <delete dir="${community.release}"/>
    </target>

    <target name="compile" depends="init">
        <delegate target="compile"/>
    </target>


    <target name="javadoc" depends="init">
        <!-- YOU NEED TO INSTALL GRAPH-VIZ TO GENERATE UML DIAGRAMS, OTHERWISE DISABLE IT TO HAVE PLAIN JAVADOCS -->
        <javadoc sourcepath="." packagenames="com.orientechnologies.*,com.tinkerpop.blueprints.*"
                 excludepackagenames="com.orientechnologies.core.storage.*,com.orientechnologies.core.iterator.*,,com.orientechnologies.core.processor.*"
                 destdir="${community.release}/javadoc"
                 public="true"
                 useexternalfile="yes" linksource="yes" author="true" version="true" use="yes" verbose="no"
                 windowtitle="OrientDB Community Edition v${version} Javadocs"
                 header="&lt;center&gt;&lt;a href='http://www.orientdb.org' target='_parent'&gt;OrientDB v${version} Javadocs&lt;/a&gt;"
                 footer="&lt;center&gt;Copyrights 2010-2013 (c) &lt;a href='http://www.orientechnologies.com' target='_parent'&gt;Orient Technologies&lt;/a&gt;. All Rights Reserved. This software is released as Open Source using the &lt;a target='_parent' href='http://www.apache.org/licenses/LICENSE-2.0'&gt;Apache 2.0 license&lt;/a&gt;.&lt;/center&gt;"
                 overview="overview.html"
                 maxmemory="4G">
            <classpath>
                <fileset dir=".">
                    <include name="object/lib/hibernate-jpa-2.0-api-1.0.0.Final.jar"/>
                </fileset>
            </classpath>
            <fileset dir="." defaultexcludes="yes">
                <include name="core/src/main/java/**/*.java"/>
                <include name="object/src/main/java/**/*.java"/>
                <include name="../../os/tinkerpop/blueprints/blueprints-core/src/main/java/**/*.java"/>
                <include name="../../os/tinkerpop/blueprints/blueprints-orient-graph/src/main/java/**/*.java"/>
            </fileset>
            <doclet name="org.umlgraph.doclet.UmlGraphDoc" path="_base/lib/UmlGraph.jar">
                <param name="-hide" value="java.*"/>
                <param name="-collpackages" value="java.util.*"/>
                <param name="-qualify"/>
                <param name="-inferrel"/>
                <param name="-inferdep"/>
                <param name="-postfixpackage"/>
                <param name="-nodefontsize" value="9"/>
                <param name="-nodefontpackagesize" value="7"/>
                <param name="-nodefontabstractname" value="Sans Not-Rotated"/>
                <param name="-nodefontclassabstractname" value="Sans Not-Rotated"/>
                <!--     -->
                <param name="-link" value="http://java.sun.com/j2se/1.5.0/docs/guide/javadoc/doclet/spec"/>
                <param name="-link" value="http://java.sun.com/j2se/1.5/docs/api"/>
            </doclet>
        </javadoc>
    </target>

    <target name="install" depends="init">
        <delegate target="install"/>

        <copy todir="${community.release}/" flatten="true">
            <fileset dir="." includes="*.txt"/>
        </copy>

        <copy todir="${community.release}/bin/" flatten="true" overwrite="true">
            <fileset dir="."
                     includes="tools/script/*.sh tools/script/*.bat server/script/*.sh server/script/*.bat distributed/script/*.sh distributed/script/*.bat graphdb/script/*.sh graphdb/script/*.bat"/>
            <filterset>
                <filter token="VERSION" value="${version}"/>
                <filter token="BUILD" value="${build.number}"/>
            </filterset>
        </copy>
        <chmod perm="u+x" verbose="yes">
            <fileset dir="${community.release}/bin">
                <include name="**/*.sh"/>
            </fileset>
        </chmod>

        <copy todir="${community.release}/www/">
            <fileset dir="server/src/site"/>
        </copy>

        <copy todir="${community.release}/plugins/">
            <fileset dir="server/plugins"/>
        </copy>

        <copy todir="${community.release}/config/" flatten="true" overwrite="true">
            <fileset dir="." includes="tools/config/*"/>
            <fileset dir="." includes="server/config/*"/>
            <fileset dir="." includes="distributed/config/*"/>
            <fileset dir="graphdb/config" includes="*.xml" erroronmissingdir="false"/>
        </copy>

        <copy todir="${community.release}/lib" flatten="true">
            <fileset dir="distributed/lib" includes="*.jar"/>
            <fileset dir="graphdb/lib" includes="*.jar"/>
        </copy>


        <copy todir="${community.release}/benchmarks" flatten="true">
            <fileset dir="." includes="server/benchmarks/*"/>
        </copy>

        <delete dir="${community.release}/databases"/>
        <java fork="true" dir="graphdb" classname="com.orientechnologies.orient.graph.blueprints.TestLoadGraph">
            <classpath>
                <fileset dir="${community.release}/lib" includes="*.jar"/>
            </classpath>
        </java>

        <copy todir="${community.release}/databases/GratefulDeadConcerts" failonerror="false">
            <fileset dir="graphdb/target/databases/GratefulDeadConcerts/" includes="*"/>
        </copy>

        <delete includeEmptyDirs="true">
            <fileset dir="${community.release}/log/" includes="**/*"/>
        </delete>
    </target>

    <target name="installg" depends="install">
    </target>

    <target name="md5" depends="init">
        <checksum algorithm="MD5" fileext=".md5">
            <fileset dir="${community.release}/lib">
                <include name="*.jar"/>
            </fileset>
        </checksum>

        <checksum algorithm="SHA" fileext=".sha1">
            <fileset dir="${community.release}/lib">
                <include name="*.jar"/>
            </fileset>
        </checksum>
    </target>

    <target name="test" depends="install">
        <subant target="test">
            <property name="global.lib" value="../${community.release}/lib"/>
            <property name="orient.path" value="../${community.release}"/>
            <fileset dir="tests" includes="build.xml"/>
        </subant>
    </target>

    <target name="test-local" depends="install">
        <subant target="test-local">
            <property name="global.lib" value="../${community.release}/lib"/>
            <property name="orient.path" value="../${community.release}"/>
            <fileset dir="tests" includes="build.xml"/>
        </subant>
    </target>

    <target name="test-plocal" depends="install">
        <subant target="test-plocal">
            <property name="global.lib" value="../${community.release}/lib"/>
            <property name="orient.path" value="../${community.release}"/>
            <fileset dir="tests" includes="build.xml"/>
        </subant>
    </target>


    <target name="test-remote" depends="install">
        <subant target="test-remote">
            <property name="global.lib" value="../${community.release}/lib"/>
            <property name="orient.path" value="../${community.release}"/>
            <fileset dir="tests" includes="build.xml"/>
        </subant>
    </target>

    <target name="stress-test">
        <subant target="stress-test">
            <property name="global.lib" value="../${community.release}/lib"/>
            <property name="orient.path" value="../${community.release}"/>
            <fileset dir="tests" includes="build.xml"/>
        </subant>
    </target>

    <target name="release" depends="install">
        <mkdir dir="${community.release}"/>
        <delete file="../releases/orientdb-community-${version}.zip"/>
        <zip destfile="../releases/orientdb-community-${version}.zip" basedir="../releases" level="9" update="false"
             includes="orientdb-community-${version}/" excludes="**/*.log.*"/>
        <tar destfile="../releases/orientdb-community-${version}.tar.gz" compression="gzip">
            <tarfileset dir="../releases/orientdb-community-${version}">
                <include name="**"/>
                <exclude name="**/*.sh"/>
            </tarfileset>
            <tarfileset dir="../releases/orientdb-community-${version}" mode="755">
                <include name="**/*.sh"/>
            </tarfileset>
        </tar>
    </target>

</project>
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Copyright (c) 1999-2010 Luca Garulli - LICENSE: Apache 2.0 -->
<project basedir="." default="compile" name="orientdb-client">
	<property name="project.jar-classpath" value="orientdb-enterprise-${version}.jar" />
	<property name="project.jar-deps"      value="commons/target/orient-commons-${version}.jar" />

	<import file="../_base/base-build.xml" />
</project>
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Copyright (c) 1999-2010 Luca Garulli - LICENSE: Apache 2.0 -->
<project basedir="." default="compile" name="orient-commons">
  <property name="project.jar-classpath" value="orient-commons-${version}.jar" />

  <import file="../_base/base-build.xml" />

  <target name="javaCheck" depends="init">
    <echo message="ant.java.version=${ant.java.version}"/>
    <condition property="isNotJava7">
      <not>
        <equals arg1="${ant.java.version}" arg2="1.7"/>
      </not>
    </condition>
  </target>

  <target name="compile" depends="javaCheck">
    <javac destdir="${project.build}" debug="${project.is-debug}" debuglevel="${project.debug-level}" target="${project.target-comp}" source="${project.source-comp}">
      <src path="${project.src}" />
      <classpath refid="project.classpath" />
      <exclude name="com/orientechnologies/common/directmemory/OUnsafeMemoryJava7.java" if="isNotJava7"/>
    </javac>

    <javac destdir="${project.build}" debug="${project.is-debug}" debuglevel="${project.debug-level}" target="${project.target-comp}" source="${project.source-comp}">
      <src path="src/test/java" />
      <classpath refid="project.classpath" />
    </javac>
  </target>
</project>
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Copyright (c) 1999-2010 Luca Garulli - LICENSE: Apache 2.0 -->
<project basedir="." default="compile" name="orientdb-core">
	<property name="project.jar-classpath" value="orient-commons-${version}.jar" />

	<import file="../_base/base-build.xml" />
</project>
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Copyright (c) 1999-2010 Luca Garulli - LICENSE: Apache 2.0 -->
<project basedir="." default="compile" name="orientdb-distributed">
	<property name="project.jar-classpath" value="orientdb-server-${version}.jar" />
	<property name="project.jar-mainclass" value="com.orientechnologies.orient.server.OServerMain" />

  <import file="../_base/base-build.xml" />
</project>
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Copyright (c) 1999-2010 Luca Garulli - LICENSE: Apache 2.0 -->
<project basedir="." default="compile" name="orientdb-enterprise">
	<property name="project.jar-classpath" value="orientdb-core-${version}.jar"/>

	<import file="../_base/base-build.xml" />
</project>
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Copyright (c) 1999-2010 Luca Garulli - LICENSE: Apache 2.0 -->
<project basedir="." default="compile" name="orientdb-graphdb">
	<property name="project.jar-classpath" value="orientdb-server-${version}.jar" />
	<property name="project.jar-mainclass" value="com.orientechnologies.orient.server.OServerMain" />
	<property name="project.src2" value="src/test/java" />
	<property name="project.lib2" value="../tests/lib" />

  	<import file="../_base/base-build.xml" />
</project>
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Copyright (c) 1999-2010 Luca Garulli - LICENSE: Apache 2.0 -->
<project basedir="." default="compile" name="orientdb-nativeos">
    <property name="project.jar-classpath" value="orientdb-core-${version}.jar"/>

    <import file="../_base/base-build.xml"/>
</project>
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Copyright (c) 1999-2010 Luca Garulli - LICENSE: Apache 2.0 -->
<project basedir="." default="compile" name="orientdb-object">
	<property name="project.jar-classpath" value="orientdb-core-${version}.jar" />

	<import file="../_base/base-build.xml" />
</project>
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Copyright (c) 1999-2010 Luca Garulli - LICENSE: Apache 2.0 -->
<project basedir="." default="compile" name="orientdb-server">
	<property name="project.jar-classpath" value="orientdb-client-${version}.jar" />
	<property name="project.jar-mainclass" value="com.orientechnologies.orient.server.OServerMain" />

  <import file="../_base/base-build.xml" />
</project>
<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (c) 1999-2010 Luca Garulli - LICENSE: Apache 2.0 -->
<project basedir="." default="compile" name="orientdb-tests">
    <property name="project.jar-classpath" value="orientdb-client-${version}.jar orientdb-client-${version}.jar"/>
    <property name="project.src" value="src/test/java"/>
    <property name="project.build" value="target/test-classes"/>

    <import file="../_base/base-build.xml"/>

    <taskdef resource="testngtasks" classpath="lib/testng-5.10-jdk15.jar"/>


    <target name="test"
            depends="test-memory, test-local, test-plocal, test-remote">
    </target>

    <target name="test-init">
        <pathconvert property="project.root.dir" targetos="unix">
        <path location="."/>
        </pathconvert>
        <pathconvert property="test.path" targetos="unix">
        <path location="../${orient.path}/databases/demo"/>
        </pathconvert>
        <pathconvert property="project.root.dir" targetos="windows" dirsep="/">
        <path location="."/>
        </pathconvert>
        <pathconvert property="test.path" targetos="windows" dirsep="/">
            <path location="../${orient.path}/databases/demo"/>
        </pathconvert>
        <echo>Normalized paths</echo>
        <echo>project.root.dir=${project.root.dir}</echo>
        <echo>test.path=${test.path}</echo>


        <copy todir="${project.build}">
            <fileset dir="src/test/java">
                <include name="**/*.xml"/>
            </fileset>
        </copy>

        <replace dir="${project.build}/com/orientechnologies/orient/test/database/auto">
            <include name="*-test-db-from-scratch.xml"/>
            <exclude name="paginated-local-test-db-from-scratch.xml"/>

            <replacefilter token="@PATH@" value="${test.path}"/>
            <replacefilter token="@URL@" value="local:${test.path}"/>
            <replacefilter token="@TESTPATH@" value="${project.root.dir}"/>
        </replace>

        <replace dir="${project.build}/com/orientechnologies/orient/test/database/auto">
            <include name="paginated-local-test-db-from-scratch.xml"/>

            <replacefilter token="@PATH@" value="${test.path}"/>
            <replacefilter token="@URL@" value="plocal:${test.path}"/>
            <replacefilter token="@TESTPATH@" value="${project.root.dir}"/>
        </replace>

    </target>

    <target name="test-memory" depends="test-init">
        <echo>EXECUTING TESTS USING MEMORY DATABASE: memory:demo</echo>
        <testng outputDir="target/test-output" haltOnFailure="true" verbose="2">
            <jvmarg value="-Xmx2G"/>
            <classpath>
                <pathelement location="${project.build}"/>
                <fileset dir="${global.lib}">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
            <xmlfileset dir="${project.build}/com/orientechnologies/orient/test/database/auto"
                        includes="memory-test-db-from-scratch.xml"/>
        </testng>
    </target>


    <target name="test-local" depends="test-init">
        <echo>EXECUTING TESTS USING LOCAL DATABASE: local:${orient.path}/databases/demo</echo>
        <testng outputDir="target/test-output" haltOnFailure="true" verbose="2">
            <jvmarg value="-Xmx2G"/>
            <jvmarg value="-Dstorage.lockTimeout=60000"/>
            <classpath>
                <pathelement location="${project.build}"/>
                <fileset dir="${global.lib}">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
            <xmlfileset dir="${project.build}/com/orientechnologies/orient/test/database/auto"
                        includes="local-test-db-from-scratch.xml"/>
        </testng>
    </target>

    <target name="test-plocal" depends="test-init">
        <echo>EXECUTING TESTS USING PAGINATED LOCAL DATABASE: plocal:${orient.path}/databases/demo</echo>
        <testng outputDir="target/test-output" haltOnFailure="true" verbose="2">
            <jvmarg value="-Xmx2G"/>
            <jvmarg value="-Dstorage.lockTimeout=60000"/>
            <jvmarg value="-Dstorage.makeFullCheckpointAfterCreate=false"/>
            <jvmarg value="-Dstorage.makeFullCheckpointAfterClusterCreate=false"/>
            <jvmarg value="-Dstorage.wal.syncOnPageFlush=false"/>
            <jvmarg value="-Dstorage.configuration.syncOnUpdate=false"/>
            <jvmarg value="-Dindex.flushAfterCreate=false"/>

            <classpath>
                <pathelement location="${project.build}"/>
                <fileset dir="${global.lib}">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
            <xmlfileset dir="${project.build}/com/orientechnologies/orient/test/database/auto"
                        includes="paginated-local-test-db-from-scratch.xml"/>
        </testng>
    </target>


    <target name="test-local-lh" depends="test-init">
        <echo>EXECUTING TESTS USING LOCAL DATABASE and LH data cluster: local:${orient.path}/databases/demo</echo>
        <testng outputDir="target/test-output" haltOnFailure="true" verbose="2">
            <jvmarg value="-Xmx2G"/>
            <jvmarg value="-Dfile.cluster.useLHPEPS=true"/>
            <classpath>
                <pathelement location="${project.build}"/>
                <fileset dir="${global.lib}">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
            <xmlfileset dir="${project.build}/com/orientechnologies/orient/test/database/auto"
                        includes="local-test-db-from-scratch.xml"/>
        </testng>
    </target>


    <target name="test-remote" depends="test-init">
        <echo>STARTING REMOTE ORIENTDB SERVER INSTANCE...</echo>
        <exec dir="${orient.path}/bin" executable="cmd" spawn="true" osfamily="windows">
            <env key="JAVA_OPTS"
                 value="-Djava.rmi.server.hostname=localhost -Dcom.sun.management.jmxremote.port=10005 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dstorage.makeFullCheckpointAfterCreate=false -Dstorage.makeFullCheckpointAfterClusterCreate=false -Dstorage.wal.syncOnPageFlush=false -Dstorage.configuration.syncOnUpdate=false -Dindex.flushAfterCreate=false"/>
            <env key="CONFIG_FILE" value="${basedir}/src/test/resources/orientdb-server-config.xml"/>
            <arg value="/c start server.bat"/>
        </exec>

        <exec dir="${orient.path}/bin" executable="sh" spawn="true" osfamily="unix">
            <env key="JAVA_OPTS"
                 value="-Djava.rmi.server.hostname=localhost -Dcom.sun.management.jmxremote.port=10005 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dstorage.makeFullCheckpointAfterCreate=false -Dstorage.makeFullCheckpointAfterClusterCreate=false -Dstorage.wal.syncOnPageFlush=false -Dstorage.configuration.syncOnUpdate=false -Dindex.flushAfterCreate=false"/>
            <env key="CONFIG_FILE" value="${basedir}/src/test/resources/orientdb-server-config.xml"/>
            <arg value="./server.sh"/>
        </exec>

        <echo>WAITING FOR SERVER STARTUP...</echo>
        <sleep seconds="6"/>

        <echo>EXECUTING TESTS USING REMOTE DATABASE: remote:localhost/demo</echo>
        <testng outputDir="target/test-output" haltOnFailure="true">
            <jvmarg value="-Xmx2G"/>
            <jvmarg line="-Djava.rmi.server.hostname=localhost -Dorientdb.config.file=${basedir}/src/test/resources/orientdb-server-config.xml"/>
            <classpath>
                <pathelement location="${project.build}"/>
                <fileset dir="${global.lib}">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
            <xmlfileset dir="${project.build}/com/orientechnologies/orient/test/database/auto"
                        includes="remote-test-db-from-scratch.xml"/>
        </testng>

        <echo>SHUTDOWNING THE SERVER...</echo>
        <exec dir="${orient.path}/bin" executable="cmd" spawn="true" osfamily="windows">
            <env key="CONFIG_FILE" value="${basedir}/src/test/resources/orientdb-server-config.xml"/>
            <arg value="/c shutdown.bat"/>
        </exec>

        <exec dir="${orient.path}/bin" executable="sh" spawn="true" osfamily="unix">
            <env key="CONFIG_FILE" value="${basedir}/src/test/resources/orientdb-server-config.xml"/>
            <arg value="./shutdown.sh"/>
        </exec>
    </target>

    <target name="stress-test">
        <echo>MASSIVE INSERT 1,000,000 FLAT RECORDS</echo>
        <java classname="com.orientechnologies.orient.test.database.speed.LocalCreateFlatSpeedTest" fork="yes">
            <classpath>
                <pathelement location="${project.build}"/>
                <fileset dir="${global.lib}">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
            <sysproperty key="url" value="local:../${orient.path}/databases/demo"/>
            <jvmarg value="-server"/>
        </java>

        <echo>MASSIVE INSERT 1,000,000 DOCUMENT RECORDS</echo>
        <java classname="com.orientechnologies.orient.test.database.speed.LocalCreateDocumentSpeedTest" fork="yes">
            <classpath>
                <pathelement location="${project.build}"/>
                <fileset dir="${global.lib}">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
            <sysproperty key="url" value="local:../${orient.path}/databases/demo"/>
            <jvmarg value="-server"/>
        </java>

        <echo>MASSIVE INSERT 20,000 POJOs</echo>
        <java classname="com.orientechnologies.orient.test.database.speed.LocalCreateObjectSpeedTest" fork="yes">
            <classpath>
                <pathelement location="${project.build}"/>
                <fileset dir="${global.lib}">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
            <sysproperty key="url" value="local:../${orient.path}/databases/demo"/>
            <jvmarg value="-server"/>
        </java>

    </target>

    <target name="reports" depends="test">
        <mkdir dir=""/>
        <junitreport todir="target/test-output">
            <fileset dir="target/test-output">
                <include name="*.xml"/>
            </fileset>
            <report format="noframes" todir="target/test-output"/>
        </junitreport>

    </target>

</project>
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Copyright (c) 1999-2010 Luca Garulli - LICENSE: Apache 2.0 -->
<project basedir="." default="compile" name="orientdb-tools">
	<property name="project.jar-classpath" value="orientdb-client-${version}.jar" />
	<property name="project.jar-mainclass" value="com.orientechnologies.orient.console.OConsoleDatabaseApp" />

	<import file="../_base/base-build.xml" />
</project>
