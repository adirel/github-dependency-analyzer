<?xml version="1.0"?>
<project xmlns:ivy="antlib:org.apache.ivy.ant" name="build-info-extractor-ivy">

    <property name="target.dir" value="target"/>
    <property name="src.dir" value="src/main/java"/>
    <property name="resources.dir" value="src/main/resources"/>
    <property name="lib.dir" value="${target.dir}/lib"/>
    <property name="build.dir" value="${target.dir}/build"/>
    <property name="dist.dir" value="${target.dir}/dist"/>
    <property name="jars.dir" value="${dist.dir}/jars"/>
    <property name="ivy.distrib.dir" value="${dist.dir}"/>
    <property name="ivy.lib.dir" value="${lib.dir}"/>
    <property name="jar.file" value="${build.dir}/${ant.project.name}.jar"/>
    <property name="module.version.target" value="1.0"/>
    <!--<property name="ivy.build.artifacts.dir" value="???"/>-->

    <path id="lib.path.id">
        <fileset dir="${lib.dir}"/>
    </path>

    <path id="run.path.id">
        <path refid="lib.path.id"/>
        <path location="${build.dir}"/>
    </path>

    <target name="ivyConfigure">
        <ivy:configure/>
    </target>

    <target name="resolve" description="--> retreive dependencies with ivy" depends="ivyConfigure, setup">
        <ivy:retrieve/>
    </target>

    <target name="publish" depends="package, ivyConfigure">
        <ivy:resolve/>
        <ivy:publish resolver="publish_artifactory" pubrevision="1.0" overwrite="false"/>
    </target>

    <target name="report" depends="resolve" description="--> generates a report of dependencies">
        <ivy:report todir="${build.dir}"/>
    </target>


    <target name="setup">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${jars.dir}"/>
        <mkdir dir="${lib.dir}"/>
    </target>

    <target name="compile" depends="resolve">
        <javac srcdir="${src.dir}" destdir="${build.dir}" debug="on" classpathref="lib.path.id"/>
    </target>

    <target name="local-version">
        <tstamp>
            <format property="now" pattern="yyyyMMddHHmmss"/>
        </tstamp>
        <property name="ivy.new.revision" value="${module.version.target}-local-${now}"/>
    </target>

    <target name="publish-local" depends="local-version, package"
            description="--> publish this project in the local ivy repository">
        <ivy:publish artifactspattern="${build.dir}/[artifact].[ext]"
                     resolver="local"
                     pubrevision="${ivy.new.revision}"
                     pubdate="${now}"
                     status="integration"
                     forcedeliver="true"
                />
        <echo message="project ${ant.project.name} published locally with version ${ivy.new.revision}"/>
    </target>

    <target name="package" depends="compile" description="--> make a jar file for this project">
        <jar destfile="${jar.file}">
            <fileset dir="${build.dir}"/>
            <fileset dir="${resources.dir}"/>
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Build-Version" value="${version}"/>
            </manifest>
        </jar>
    </target>

    <target name="clean" description="--> clean the project">
        <delete includeemptydirs="true">
            <fileset dir="${basedir}">
                <include name="${target.dir}/**"/>
            </fileset>
        </delete>
    </target>

    <target name="clean-cache" description="--> clean the ivy cache">
        <ivy:cleancache/>
    </target>
</project>
<?xml version="1.0"?>
<project xmlns:ivy="antlib:org.apache.ivy.ant" name="build-info-extractor-ivy-example">

    <property name="target.dir" value="target"/>
    <property name="src.dir" value="src"/>
    <property name="lib.dir" value="${target.dir}/lib"/>
    <property name="build.dir" value="${target.dir}/build"/>
    <property name="dist.dir" value="${target.dir}/dist"/>
    <property name="jars.dir" value="${dist.dir}/jars"/>
    <property name="ivy.distrib.dir" value="${dist.dir}"/>
    <property name="ivy.lib.dir" value="${lib.dir}"/>
    <property name="jar.file" value="${build.dir}/${ant.project.name}.jar"/>
    <property name="module.version.target" value="1.0"/>
    <property name="ivy.cache.dir" value="/home/tomer/.ivy2/cache"/>
    <taskdef name="artifactory_publish" classname="org.jfrog.build.extractor.task.ArtifactoryPublishTask"
             classpath="/work/build-info/trunk/build-info-extractor-ivy/../repository/build-info-extractor-ivy-1.0-local-20100712113755.jar"/>
    <!--<property name="ivy.build.artifacts.dir" value="???"/>-->

    <path id="lib.path.id">
        <fileset dir="${lib.dir}"/>
    </path>

    <path id="run.path.id">
        <path refid="lib.path.id"/>
        <path location="${build.dir}"/>
    </path>

    <target name="ivyConfigure">
        <ivy:configure/>
    </target>

    <target name="resolve" description="--> retreive dependencies with ivy" depends="ivyConfigure, setup">
        <ivy:retrieve/>
    </target>

    <target name="publish" depends="package, ivyConfigure">
        <ivy:resolve/>
        <artifactory_publish artifactspattern="${build.dir}/[artifact].[ext]"
                             resolver="publish_artifactory"
                             status="integration"
                             forcedeliver="true"
                             overwrite="true"
                />
    </target>

    <target name="local-version">
        <tstamp>
            <format property="now" pattern="yyyyMMddHHmmss"/>
        </tstamp>
        <property name="ivy.new.revision" value="${module.version.target}-local-${now}"/>
    </target>

    <target name="publish-local" depends="local-version, package"
            description="--> publish this project in the local ivy repository">
        <ivy:publish artifactspattern="${build.dir}/[artifact].[ext]"
                     resolver="local"
                     pubrevision="${ivy.new.revision}"
                     pubdate="${now}"
                     status="integration"
                     forcedeliver="true"
                />
        <echo message="project ${ant.project.name} published locally with version ${version}"/>
    </target>

    <target name="report" depends="resolve" description="--> generates a report of dependencies">
        <ivy:report todir="${build.dir}"/>
    </target>


    <target name="setup">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${jars.dir}"/>
    </target>

    <target name="compile" depends="resolve">
        <javac srcdir="${src.dir}" destdir="${build.dir}" classpathref="lib.path.id"/>
    </target>

    <target name="package" depends="compile">
        <jar destfile="${jar.file}"/>
    </target>

    <target name="clean" description="--> clean the project">
        <delete includeemptydirs="true">
            <fileset dir="${basedir}">
                <include name="${target.dir}/**"/>
            </fileset>
        </delete>
    </target>


    <target name="clean-cache" description="--> clean the ivy cache">
        <ivy:cleancache/>
    </target>
</project>
<!--
   Licensed to the Apache Software Foundation (ASF) under one
   or more contributor license agreements.  See the NOTICE file
   distributed with this work for additional information
   regarding copyright ownership.  The ASF licenses this file
   to you under the Apache License, Version 2.0 (the
   "License"); you may not use this file except in compliance
   with the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied.  See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<project name="all" xmlns:ivy="antlib:org.apache.ivy.ant">

    <property name="ivy.jar.dir" value="${user.home}/.ivy2/jars"/>
    <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar"/>

    <property name="build.dir" value="build"/>
    <property name="src.dir" value="src"/>
    <property name="ivy.cache.dir" value="/home/tomer/.ivy2/cache"/>

    <!--<taskdef name="artifactory_publish" classname="org.jfrog.build.extractor.task.ArtifactoryPublishTask"
    classpath="/work/build-info/trunk/build-info-extractor-ivy/../repository/build-info-extractor-ivy-1.0-local-20100629085540.jar"/>-->


    <!-- =================================
    target: load-ivy
      this target is not necessary if you put ivy.jar in your ant lib directory
      if you already have ivy 1.4 in your ant lib, you can simply remove this
      target
   ================================= -->
    <!--
    <target name="load-ivy">
    -->
    <!-- try to load ivy here from home ivy dir, in case the user has not already dropped
it into ant's lib dir (note that the latter copy will always take precedence).
We will not fail as long as ivy home lib dir exists (it may be empty) and
ivy is in at least one of ant's lib dir or the ivy home lib dir. -->
    <!--    <path id="ivy.lib.path">
            <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
        </path>
        <taskdef resource="org/apache/ivy/ant/antlib.xml"
                 url="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
    </target>-->

    <!--<target name="buildlist" depends="load-ivy">-->
    <target name="buildlist">
        <ivy:buildlist reference="build-path">
            <fileset dir="multi1" includes="**/build.xml"/>
            <fileset dir="multi2" includes="**/build.xml"/>
            <fileset dir="multi3" includes="**/build.xml"/>
        </ivy:buildlist>
    </target>

    <target name="publish-all" depends="buildlist"
            description="compile, jar and publish all projects in the right order">
        <subant target="publish-local" buildpathref="build-path"/>
    </target>

    <target name="build-all" depends="buildlist"
            description="compile, jar">
        <subant target="jar" buildpathref="build-path"/>
    </target>

    <target name="clean-all" depends="buildlist" description="clean all projects">
        <subant target="clean" buildpathref="build-path"/>
    </target>

    <!--<target name="clean" depends="clean-all, load-ivy"-->
    <target name="clean" depends="clean-all"
            description="clean tutorial: delete repository, ivy cache, and all projects">
        <delete dir="repository"/>
        <ivy:cleancache/>
    </target>


</project>
<project name="multi1" default="compile">
    <import file="../common.xml"/>
</project><project name="multi2" default="compile">
    <import file="../common.xml"/>
</project><project name="multi3" default="compile">
    <import file="../common.xml"/>
</project>