<?xml version="1.0" encoding="UTF-8"?>
<project name="MoparClassic" default="build" xmlns:ivy="antlib:org.apache.ivy.ant" basedir=".">
	<property name="src" location="src" />
	<property name="bin" location="bin" />
	<property name="lib_managed" location="lib_managed" />
	<property name="lib" location="lib" />
	<property name="doc" location="doc" />
	<property name="jar" value="moparclassic.jar" />
	<property name="main-class" value="org.moparscape.msc.gs.Server" />
	<property name="scala-version" value="2.10.2" />
	<property name="ivy.lib.dir" value="lib_managed" />

	<fileset id="libraries" dir="${lib}">
		<include name="*.jar" />
	</fileset>

	<fileset id="libraries_managed" dir="${lib_managed}">
		<include name="*.jar" />
	</fileset>

	<fileset id="production-classes" dir="${bin}">
		<include name="**/*.class" />
	</fileset>

	<path id="binary-path">
		<pathelement path="${bin}" />
	</path>

	<path id="library-managed-path">
		<fileset refid="libraries_managed" />
	</path>

	<path id="library-path">
		<fileset refid="libraries" />
		<fileset refid="libraries_managed" />
	</path>

	<path id="master-path">
		<path refid="binary-path" />
		<path refid="library-path" />
	</path>

	<target name="init">
		<mkdir dir="${bin}" />
		<mkdir dir="${doc}" />
		<mkdir dir="${lib}" />
		<mkdir dir="${lib_managed}" />
	</target>

	<target name="resolve" depends="init">
		<ivy:retrieve sync="true" />

		<pathconvert property="manifest-classpath" pathsep=" ">
			<path refid="library-managed-path" />
			<mapper>
				<chainedmapper>
					<flattenmapper />
					<globmapper from="*.jar" to="${lib_managed}/*.jar" />
				</chainedmapper>
			</mapper>
		</pathconvert>

		<manifestclasspath property="jar-classpath" jarfile="${jar}">
			<classpath refid="library-managed-path" />
		</manifestclasspath>
	</target>

	<target name="build" depends="resolve">
		<taskdef resource="scala/tools/ant/antlib.xml" classpathref="library-path">
			<classpath>
				<pathelement location="${lib}/scala-compiler-${scala-version}.jar" />
				<pathelement location="${lib}/scala-library-${scala-version}.jar" />
			</classpath>
		</taskdef>
		<scalac destdir="${bin}" classpathref="library-path" deprecation="yes">
			<src path="${src}" />
		</scalac>
		<javac destdir="${bin}" includeantruntime="false">
			<src path="${src}" />
			<classpath refid="library-path" />
		</javac>
	</target>

	<target name="clean">
		<delete dir="${bin}" />
		<delete dir="${doc}" />
		<delete file="${jar}" />
	</target>

	<target name="run" depends="build">
		<java classpathref="master-path" fork="true" classname="${main-class}" />
	</target>

	<target name="doc" depends="build">
		<scaladoc srcdir="${src}" destdir="${doc}" deprecation="yes" unchecked="yes" doctitle="MoparClassic Documentation" classpathref="master-path">
			<include name="**/*.scala" />
		</scaladoc>
	</target>

	<target name="run-jar" depends="jar">
		<java fork="true" jar="${jar}" />
	</target>

	<target name="jar" depends="build">
		<jar destfile="${jar}">
			<zipgroupfileset refid="libraries" />
			<fileset refid="production-classes" />
			<manifest>
				<attribute name="Main-Class" value="${main-class}" />
				<attribute name="Class-Path" value=". ${jar-classpath}" />
			</manifest>
		</jar>
	</target>
</project>
<project name="LoginServer" default="build" xmlns:ivy="antlib:org.apache.ivy.ant" basedir=".">

	<property name="src" location="src" />
	<property name="build" location="build" />
	<property name="jar" location="ls.jar" />
	<property name="scala-version" value="2.10.2" />
	<property name="lib_managed" location="lib_managed" />
	<property name="lib" location="lib" />
	<property name="ivy.lib.dir" value="lib_managed" />
	<property name="main-class" value="org.moparscape.msc.ls.Server" />

	<fileset id="libraries" dir="${lib}">
		<include name="*.jar" />
	</fileset>

	<fileset id="libraries_managed" dir="${lib_managed}">
		<include name="*.jar" />
	</fileset>

	<fileset id="production-classes" dir="${bin}">
		<include name="**/*.class" />
	</fileset>

	<path id="binary-path">
		<pathelement path="${bin}" />
	</path>

	<path id="library-managed-path">
		<fileset refid="libraries_managed" />
	</path>

	<path id="library-path">
		<fileset refid="libraries" />
		<fileset refid="libraries_managed" />
	</path>

	<target name="clean">
		<delete file="${jar}" />
		<delete dir="${build}" />
	</target>

	<target name="resolve">
		<ivy:retrieve sync="true" />

		<pathconvert property="manifest-classpath" pathsep=" ">
			<path refid="library-managed-path" />
			<mapper>
				<chainedmapper>
					<flattenmapper />
					<globmapper from="*.jar" to="${lib_managed}/*.jar" />
				</chainedmapper>
			</mapper>
		</pathconvert>

		<manifestclasspath property="jar-classpath" jarfile="${jar}">
			<classpath refid="library-managed-path" />
		</manifestclasspath>
	</target>

	<target name="build">
		<mkdir dir="${lib_managed}" />
		<taskdef resource="scala/tools/ant/antlib.xml" classpathref="library-path">
			<classpath>
				<pathelement location="${lib}/scala-compiler-${scala-version}.jar" />
				<pathelement location="${lib}/scala-library-${scala-version}.jar" />
			</classpath>
		</taskdef>
		<mkdir dir="${build}" />

		<scalac destdir="${build}" classpathref="library-path" deprecation="yes">
			<src path="${src}" />
		</scalac>

		<javac srcdir="${src}" destdir="${build}" debug="on" includeantruntime="false">
			<classpath refid="library-path" />
		</javac>
	</target>

	<target name="jar" depends="build">
		<jar basedir="${build}" destfile="${jar}" />
	</target>


	<target name="run" depends="jar">
		<java classname="org.moparscape.msc.ls.Server" fork="true">
			<classpath>
				<pathelement location="${lib}/mina.jar" />
				<pathelement location="${lib}/slf4j.jar" />
				<pathelement location="${lib}/gson-2.2.1.jar" />
				<pathelement location="${lib}/mysql-connector.jar" />
				<pathelement location="${jar}" />
				<pathelement path="${java.class.path}/" />
			</classpath>
		</java>
	</target>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project name="Drop Report Handler" default="build" basedir="../../../">
	<property name="name" value="DropReportHandler" />
	<property name="package" value="DataService" />
	<property name="base" location="Modules/${package}/${name}" />
	<property name="src" location="${base}/src" />
	<property name="bin" location="${base}/bin" />
	<property name="jar" value="${base}/${name}.jar" />

	<fileset id="mopar" dir="GameServer">
		<include name="moparclassic.jar" />
	</fileset>

	<fileset id="production-classes" dir="${bin}">
		<include name="**/*.class" />
	</fileset>

	<path id="binary-path">
		<pathelement path="${bin}" />
	</path>

	<path id="library-path">
		<fileset refid="mopar" />
	</path>

	<path id="master-path">
		<path refid="binary-path" />
		<path refid="library-path" />
	</path>

	<target name="init">
		<mkdir dir="${bin}" />
	</target>

	<target name="build" depends="init">
		<javac destdir="${bin}" includeantruntime="false">
			<src path="${src}" />
			<classpath refid="library-path" />
		</javac>
		<jar destfile="${jar}">
			<fileset refid="production-classes" />
		</jar>
	</target>

	<target name="clean">
		<delete dir="${bin}" />
		<delete file="${jar}" />
	</target>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project name="MySQL Common" default="build" basedir="../../../">
	<property name="name" value="MySQLCommon" />
	<property name="package" value="DataService" />
	<property name="base" location="Modules/${package}/${name}" />
	<property name="src" location="${base}/src" />
	<property name="bin" location="${base}/bin" />
	<property name="jar" value="${base}/${name}.jar" />

	<fileset id="mopar" dir="GameServer">
		<include name="moparclassic.jar" />
	</fileset>

	<fileset id="production-classes" dir="${bin}">
		<include name="**/*.class" />
	</fileset>

	<path id="binary-path">
		<pathelement path="${bin}" />
	</path>

	<path id="library-path">
		<fileset refid="mopar" />
	</path>

	<path id="master-path">
		<path refid="binary-path" />
		<path refid="library-path" />
	</path>

	<target name="init">
		<mkdir dir="${bin}" />
	</target>

	<target name="build" depends="init">
		<javac destdir="${bin}" includeantruntime="false">
			<src path="${src}" />
			<classpath refid="library-path" />
		</javac>
		<jar destfile="${jar}">
			<fileset refid="production-classes" />
		</jar>
		<delete dir="${bin}"/>
	</target>

	<target name="clean">
		<delete dir="${bin}" />
		<delete file="${jar}" />
	</target>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project name="MySQL Data Service" default="build" basedir="../../../">
	<property name="name" value="MySQLDataService" />
	<property name="package" value="DataService" />
	<property name="base" location="Modules/${package}/${name}" />
	<property name="src" location="${base}/src" />
	<property name="bin" location="${base}/bin" />
	<property name="common-lib" location="${base}/../MySQLCommon" />
	<property name="jar" value="${base}/${name}.jar" />

	<fileset id="mopar" dir="GameServer">
		<include name="moparclassic.jar" />
	</fileset>

	<fileset id="common-libraries" dir="${common-lib}">
		<include name="*.jar" />
	</fileset>

	<fileset id="production-classes" dir="${bin}">
		<include name="**/*.class" />
	</fileset>

	<path id="binary-path">
		<pathelement path="${bin}" />
	</path>

	<path id="library-path">
		<fileset refid="common-libraries" />
		<fileset refid="mopar" />
	</path>

	<path id="master-path">
		<path refid="binary-path" />
		<path refid="library-path" />
	</path>

	<target name="init">
		<mkdir dir="${bin}" />
	</target>

	<target name="build" depends="init">
		<javac destdir="${bin}" includeantruntime="false">
			<src path="${src}" />
			<classpath refid="library-path" />
		</javac>
		<jar destfile="${jar}">
			<fileset refid="production-classes" />
		</jar>
		<delete dir="${bin}"/>
	</target>

	<target name="clean">
		<delete dir="${bin}" />
		<delete file="${jar}" />
	</target>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project name="MySQL Report Handler" default="build" basedir="../../../">
	<property name="name" value="MySQLReportHandler" />
	<property name="package" value="DataService" />
	<property name="base" location="Modules/${package}/${name}" />
	<property name="src" location="${base}/src" />
	<property name="bin" location="${base}/bin" />
	<property name="common-lib" location="${base}/../MySQLCommon" />
	<property name="jar" value="${base}/${name}.jar" />

	<fileset id="mopar" dir="GameServer">
		<include name="moparclassic.jar" />
	</fileset>
	
	<fileset id="common-libraries" dir="${common-lib}">
		<include name="*.jar" />
	</fileset>

	<fileset id="production-classes" dir="${bin}">
		<include name="**/*.class" />
	</fileset>

	<path id="binary-path">
		<pathelement path="${bin}" />
	</path>

	<path id="library-path">
		<fileset refid="common-libraries" />
		<fileset refid="mopar" />
	</path>

	<path id="master-path">
		<path refid="binary-path" />
		<path refid="library-path" />
	</path>

	<target name="init">
		<mkdir dir="${bin}" />
	</target>

	<target name="build" depends="init">
		<javac destdir="${bin}" includeantruntime="false">
			<src path="${src}" />
			<classpath refid="library-path" />
		</javac>
		<jar destfile="${jar}">
			<fileset refid="production-classes" />
		</jar>
		<delete dir="${bin}"/>
	</target>

	<target name="clean">
		<delete dir="${bin}" />
		<delete file="${jar}" />
	</target>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project name="NIO Data Service" default="build" basedir="../../../">
	<property name="name" value="NIODataService" />
	<property name="package" value="DataService" />
	<property name="base" location="Modules/${package}/${name}" />
	<property name="src" location="${base}/src" />
	<property name="bin" location="${base}/bin" />
	<property name="jar" value="${base}/${name}.jar" />

	<fileset id="mopar" dir="GameServer">
		<include name="moparclassic.jar" />
	</fileset>
	
	<fileset id="production-classes" dir="${bin}">
		<include name="**/*.class" />
	</fileset>

	<path id="binary-path">
		<pathelement path="${bin}" />
	</path>

	<path id="library-path">
		<fileset refid="mopar" />
	</path>

	<path id="master-path">
		<path refid="binary-path" />
		<path refid="library-path" />
	</path>

	<target name="init">
		<mkdir dir="${bin}" />
	</target>

	<target name="build" depends="init">
		<javac destdir="${bin}" includeantruntime="false">
			<src path="${src}" />
			<classpath refid="library-path" />
		</javac>
		<jar destfile="${jar}">
			<fileset refid="production-classes" />
		</jar>
		<delete dir="${bin}"/>
	</target>

	<target name="clean">
		<delete dir="${bin}" />
		<delete file="${jar}" />
	</target>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project name="Json" default="build" basedir="../../../">
	<property name="base" location="Modules/DataStore/Json" />
	<property name="src" location="${base}/src" />
	<property name="bin" location="${base}/bin" />
	<property name="lib" location="${base}/lib" />
	<property name="common-lib" location="${base}/../lib" />
	<property name="jar" value="${base}/Json.jar" />

	<fileset id="mopar" dir="GameServer">
		<include name="moparclassic.jar" />
	</fileset>

	<fileset id="libraries" dir="${lib}">
		<include name="*.jar" />
	</fileset>

	<fileset id="common-libraries" dir="${common-lib}">
		<include name="*.jar" />
	</fileset>

	<fileset id="datastore-core" dir="${base}/../">
		<include name="DataStoreCore.jar" />
	</fileset>

	<fileset id="production-classes" dir="${bin}">
		<include name="**/*.class" />
	</fileset>

	<path id="binary-path">
		<pathelement path="${bin}" />
	</path>

	<path id="library-path">
		<fileset refid="common-libraries" />
		<fileset refid="libraries" />
		<fileset refid="mopar" />
		<fileset refid="datastore-core" />
	</path>

	<path id="master-path">
		<path refid="binary-path" />
		<path refid="library-path" />
	</path>

	<target name="init">
		<mkdir dir="${bin}" />
		<mkdir dir="${lib}" />
	</target>

	<target name="build" depends="init">
		<javac destdir="${bin}" includeantruntime="false">
			<src path="${src}" />
			<classpath refid="library-path" />
		</javac>
		<jar destfile="${jar}">
			<zipgroupfileset refid="libraries" />
			<fileset refid="production-classes" />
		</jar>
	</target>

	<target name="clean">
		<delete dir="${bin}" />
		<delete file="${jar}" />
	</target>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project name="XML Using XStream" default="build" basedir="../../../">
	<property name="base" location="Modules/DataStore/XMLUsingXStream" />
	<property name="src" location="${base}/src" />
	<property name="bin" location="${base}/bin" />
	<property name="lib" location="${base}/lib" />
	<property name="common-lib" location="${base}/../lib" />
	<property name="jar" value="${base}/XMLUsingXStream.jar" />

	<fileset id="mopar" dir="GameServer">
		<include name="moparclassic.jar" />
	</fileset>

	<fileset id="libraries" dir="${lib}">
		<include name="*.jar" />
	</fileset>

	<fileset id="common-libraries" dir="${common-lib}">
		<include name="*.jar" />
	</fileset>

	<fileset id="datastore-core" dir="${base}/../">
		<include name="DataStoreCore.jar" />
	</fileset>

	<fileset id="production-classes" dir="${bin}">
		<include name="**/*.class" />
	</fileset>

	<path id="binary-path">
		<pathelement path="${bin}" />
	</path>

	<path id="library-path">
		<fileset refid="common-libraries" />
		<fileset refid="libraries" />
		<fileset refid="mopar" />
		<fileset refid="datastore-core" />
	</path>

	<path id="master-path">
		<path refid="binary-path" />
		<path refid="library-path" />
	</path>

	<target name="init">
		<mkdir dir="${bin}" />
		<mkdir dir="${lib}" />
	</target>

	<target name="build" depends="init">
		<javac destdir="${bin}" includeantruntime="false">
			<src path="${src}" />
			<classpath refid="library-path" />
		</javac>
		<jar destfile="${jar}">
			<zipgroupfileset refid="libraries" />
			<fileset refid="production-classes" />
		</jar>
	</target>

	<target name="clean">
		<delete dir="${bin}" />
		<delete file="${jar}" />
	</target>
</project>
