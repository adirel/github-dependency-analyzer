<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.enunciate</groupId>
    <artifactId>enunciate-parent</artifactId>
    <version>1.29-SNAPSHOT</version>
  </parent>

  <artifactId>enunciate-amf-rt</artifactId>
  <name>Enunciate - AMF Runtime</name>
  <description>The Enunciate AMF Runtime libraries support the AMF endpoints on the server.</description>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core-rt</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jdom</groupId>
      <artifactId>jdom</artifactId>
    </dependency>

    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>

      <scope>provided</scope>      
    </dependency>

    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-server</artifactId>

      <!--the JAXRS provider is optional-->
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>com.adobe.blazeds</groupId>
      <artifactId>blazeds-common</artifactId>
      <version>3.2.0.3978</version>
    </dependency>

    <dependency>
      <groupId>com.adobe.blazeds</groupId>
      <artifactId>blazeds-core</artifactId>
      <version>3.2.0.3978</version>
    </dependency>

    <dependency>
      <groupId>com.adobe.blazeds</groupId>
      <artifactId>blazeds-remoting</artifactId>
      <version>3.2.0.3978</version>
    </dependency>

  </dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.enunciate</groupId>
    <artifactId>enunciate-parent</artifactId>
    <version>1.29-SNAPSHOT</version>
  </parent>

  <artifactId>enunciate-amf</artifactId>
  <name>Enunciate - AMF Module</name>
  <description>The Enunciate AMF module generates the artifacts needed for mounting AMF endpoints.</description>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-amf-rt</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core</artifactId>
      <version>${project.version}</version>
      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>
  </dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.codehaus.enunciate</groupId>
  <artifactId>enunciate-build-support</artifactId>
  <version>1.0-SNAPSHOT</version>
  <name>Enunciate - Build Support</name>
  <description>The Enunciate Build support is simply a collection of tools that Enunciate uses to build itself.</description>
  <packaging>pom</packaging>

  <build>
    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-webdav</artifactId>
        <version>1.0-beta-2</version>
      </extension>
    </extensions>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>attach-artifact</goal>
            </goals>
            <configuration>
              <artifacts>
                <artifact>
                  <file>module.docs.fmt</file>
                  <type>fmt</type>
                  <classifier>module-template</classifier>
                </artifact>
              </artifacts>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <distributionManagement>
    <repository>
      <id>codehaus.org</id>
      <name>Enunciate Central Repository</name>
      <url>dav:https://dav.codehaus.org/repository/enunciate/</url>
    </repository>
    <snapshotRepository>
      <id>codehaus.org</id>
      <name>Enunciate Central Development Repository</name>
      <url>dav:https://dav.codehaus.org/snapshots.repository/enunciate/</url>
    </snapshotRepository>
  </distributionManagement>

  <dependencies>
  </dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.enunciate</groupId>
    <artifactId>enunciate-parent</artifactId>
    <version>1.29-SNAPSHOT</version>
  </parent>

  <artifactId>enunciate-c</artifactId>
  <name>Enunciate - C Module</name>
  <description>The Enunciate C module generates the C client code for accessing the Enunciate services.</description>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>require.gcc.or.skip</id>
            <phase>validate</phase>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireProperty>
                  <property>gcc.executable</property>
                  <message>In order to build the C module, you must have gcc installed along with libxml.
Define a profile in your settings.xml file that defines the path to your 'gcc'
executable in the property 'gcc.executable'. Also set a property named 'libxml.config.executable' that
specifies the executable that exposes your libxml compiler flags and library includes.
If you just want to skip the C tests, set the value of the property 'gcc.executable' to be 'true'.
(And don't ask any questions about why that works. Maven mess.)</message>
                </requireProperty>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!--
        we need to generate some C client-side classes for testing purposes.
        we'll use the Enunciate ant task to do it.
        -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>enunciate</id>
            <phase>generate-test-resources</phase>
            <configuration>
              <tasks>
                <path id="enunciate.classpath">
                  <path refid="maven.test.classpath" />
                  <pathelement location="${java.home}/../lib/tools.jar" />
                </path>

                <taskdef name="enunciate" classname="org.codehaus.enunciate.main.EnunciateTask">
                  <classpath refid="enunciate.classpath" />
                </taskdef>

                <mkdir dir="${project.build.directory}/enunciate/gen" />
                <mkdir dir="${project.build.directory}/enunciate/compile" />
                <mkdir dir="${project.build.directory}/ctests"/>

                <enunciate target="compile" basedir="${basedir}/src/test/schema"
                           generateDir="${project.build.directory}/enunciate/gen"
                           compileDir="${project.build.directory}/enunciate/compile"
                           configFile="${project.basedir}/enunciate.xml">
                  <include name="**/*.java" />
                  <classpath refid="enunciate.classpath" />
                </enunciate>

                <copy todir="${project.build.directory}/enunciate/gen/c" file="${project.build.testSourceDirectory}/../c/processxml.c"/>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <id>compile-c</id>
            <phase>test-compile</phase>
            <configuration>
              <tasks>
                <property name="gcc.executable" value="${gcc.executable}"/>
                <property name="libxml.config.executable" value="${libxml.config.executable}"/>
                <property name="project.build.directory" value="${project.build.directory}"/>
                <ant antfile="${basedir}/gcc-compile.xml">
                  <target name="gcc"/>
                </ant>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <systemProperties>
            <property>
              <name>skip.c.tests</name>
              <value>${gcc.executable}</value>
            </property>
            <property>
              <name>processxml.exe</name>
              <value>${project.build.directory}/enunciate/gen/c/processxml</value>
            </property>
            <property>
              <name>xml.tempdir</name>
              <value>${project.build.directory}/ctests</value>
            </property>
          </systemProperties>
        </configuration>
      </plugin>
      <plugin>
        <!--now we need to add the generated sources we're testing to the test classpath-->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-test-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${basedir}/src/test/schema</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core</artifactId>
      <version>${project.version}</version>

      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>

      <!--for testing the xmladapters only-->
      <scope>test</scope>
    </dependency>

  </dependencies>


</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.enunciate</groupId>
    <artifactId>enunciate-parent</artifactId>
    <version>1.29-SNAPSHOT</version>
  </parent>

  <artifactId>enunciate-core-annotations</artifactId>
  <name>Enunciate - Core Annotations</name>
  <description>Enunciate core annotations.</description>

  <dependencies>
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>jsr250-api</artifactId>
    </dependency>
  </dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.enunciate</groupId>
    <artifactId>enunciate-parent</artifactId>
    <version>1.29-SNAPSHOT</version>
  </parent>

  <artifactId>enunciate-core-rt</artifactId>
  <name>Enunciate - Core Runtime Support</name>
  <description>Enunciate core classes that are needed at runtime.</description>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core-annotations</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>javax.ws.rs</groupId>
      <artifactId>jsr311-api</artifactId>
    </dependency>

    <dependency>
      <groupId>asm</groupId>
      <artifactId>asm</artifactId>
      <version>3.3.1</version>

      <!--some bytecode manipulation was added, but it's not being used yet.-->
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>

      <!--just for the wsdl filter-->
      <optional>true</optional>
    </dependency>
  </dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.enunciate</groupId>
    <artifactId>enunciate-parent</artifactId>
    <version>1.29-SNAPSHOT</version>
  </parent>

  <artifactId>enunciate-core</artifactId>
  <name>Enunciate - Core Build-time Support</name>
  <description>Enunciate core classes that are needed at Enunciate build-time.</description>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <!--<debugForkedProcess>true</debugForkedProcess>-->
          <systemProperties>
            <property>
              <name>in.apt.src.test.dir</name>
              <value>${basedir}/src/main/samples/contract</value>
            </property>
          </systemProperties>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <id>create-test-jar</id>
            <phase>package</phase>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-contract-samples</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${basedir}/src/main/samples/contract</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core-rt</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.ant</groupId>
      <artifactId>ant</artifactId>
      <version>1.7.0</version>

      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>org.freemarker</groupId>
      <artifactId>freemarker</artifactId>
      <version>2.3.19</version>
    </dependency>

    <dependency>
      <groupId>net.sf.apt-jelly</groupId>
      <artifactId>apt-jelly-freemarker</artifactId>
      <version>2.15</version>
    </dependency>

    <dependency>
      <groupId>commons-digester</groupId>
      <artifactId>commons-digester</artifactId>
      <version>2.1</version>
    </dependency>

    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
    </dependency>

  </dependencies>

  <profiles>
    <profile>
      <id>default-tools.jar</id>
      <activation>
        <file>
          <exists>${java.home}/../lib/tools.jar</exists>
        </file>
      </activation>
      <dependencies>
        <dependency>
          <!--depending modules: core-->
          <groupId>com.sun</groupId>
          <artifactId>tools</artifactId>
          <version>local</version>

          <scope>system</scope>
          <systemPath>${java.home}/../lib/tools.jar</systemPath>
        </dependency>
      </dependencies>
    </profile>
  </profiles>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.enunciate</groupId>
    <artifactId>enunciate-parent</artifactId>
    <version>1.29-SNAPSHOT</version>
  </parent>

  <artifactId>enunciate-csharp</artifactId>
  <name>Enunciate - C# Module</name>
  <description>The Enunciate C# module generates the C# client code for accessing the Enunciate services.</description>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>require.gmcs.or.skip</id>
            <phase>validate</phase>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireProperty>
                  <property>gmcs.executable</property>
                  <message>In order to build the C# module, you must have Mono installed.
First install Mono for your platform. (See http://mono-project.com/Start and note there's a Windows version of Mono, too.)
Then, define a profile in your settings.xml file that defines the path to your 'gmcs' executable in the property 'gmcs.executable'.
If you just want to skip the C# tests, set the value of the property 'gmcs.executable' to be 'true'. (And don't ask any questions about why that works. Maven mess.)</message>
                </requireProperty>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!--
        we need to generate some C# client-side classes for testing purposes.
        we'll use the Enunciate ant task to do it.
        -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>enunciate</id>
            <phase>generate-test-resources</phase>
            <configuration>
              <tasks>
                <path id="enunciate.classpath">
                  <path refid="maven.test.classpath" />
                  <pathelement location="${java.home}/../lib/tools.jar" />
                </path>

                <taskdef name="enunciate" classname="org.codehaus.enunciate.main.EnunciateTask">
                  <classpath refid="enunciate.classpath" />
                </taskdef>

                <mkdir dir="${project.build.directory}/enunciate/gen" />
                <mkdir dir="${project.build.directory}/enunciate/compile" />
                <mkdir dir="${project.build.directory}/enunciate/compile/csharp" />
                <mkdir dir="${project.build.directory}/xmltests"/>

                <enunciate target="compile" basedir="${basedir}/src/test/schema"
                           generateDir="${project.build.directory}/enunciate/gen"
                           compileDir="${project.build.directory}/enunciate/compile">
                  <include name="**/*.java" />
                  <classpath refid="enunciate.classpath" />
                </enunciate>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.1.1</version>
        <executions>
          <execution>
            <id>compile-cs</id>
            <phase>test-compile</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <!--compile the C# tests using the csc executable. -->
              <executable>${gmcs.executable}</executable>
              <skip>${gmcs.executable}</skip>
              <arguments>
                <argument>/out:${project.build.directory}/enunciate/compile/csharp/processxml.exe</argument>
                <argument>/r:System.Web.Services</argument>
                <argument>${project.build.directory}/enunciate/gen/csharp/enunciate.cs</argument>
                <argument>${project.build.testSourceDirectory}/../cs/ProcessXml.cs</argument>
              </arguments>
              <workingDirectory>${project.build.directory}</workingDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <systemProperties>
            <property>
              <name>skip.csharp.tests</name>
              <value>${gmcs.executable}</value>
            </property>
            <property>
              <name>processxml.exe</name>
              <value>${project.build.directory}/enunciate/compile/csharp/processxml.exe</value>
            </property>
            <property>
              <name>xml.tempdir</name>
              <value>${project.build.directory}/xmltests</value>
            </property>
          </systemProperties>
        </configuration>
      </plugin>
      <plugin>
        <!--now we need to add the generated sources we're testing to the test classpath-->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-test-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${basedir}/src/test/schema</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core</artifactId>
      <version>${project.version}</version>

      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>

      <!--for testing the xmladapters only-->
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.sun.xml.bind</groupId>
      <artifactId>jaxb-impl</artifactId>

      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>javax.mail</groupId>
      <artifactId>mail</artifactId>

      <scope>test</scope>
    </dependency>
  </dependencies>


</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.enunciate</groupId>
    <artifactId>enunciate-parent</artifactId>
    <version>1.29-SNAPSHOT</version>
  </parent>

  <artifactId>enunciate-cxf-rt</artifactId>
  <name>Enunciate - CXF Runtime</name>
  <description>The Enunciate CXF runtime libraries support the CXF-backed SOAP endpoints.</description>

  <properties>
    <cxf.version>2.6.0</cxf.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-spring-app-rt</artifactId>
      <version>${project.version}</version>
      <exclusions>
        <exclusion>
          <!--disable the jaxws-rt dependencies, since those are the default-->
          <groupId>${project.groupId}</groupId>
          <artifactId>enunciate-spring-jaxws-rt</artifactId>
        </exclusion>
        <exclusion>
          <!--disable the jaxws-rt dependencies, since those are the default-->
          <groupId>${project.groupId}</groupId>
          <artifactId>enunciate-jaxws-ri-rt</artifactId>
        </exclusion>
        <exclusion>
          <!--disable the jersey dependencies, since those are the default-->
          <groupId>${project.groupId}</groupId>
          <artifactId>enunciate-jersey-rt</artifactId>
        </exclusion>
        <exclusion>
          <!--disable the jersey dependencies, since those are the default-->
          <groupId>com.sun.jersey.contribs</groupId>
          <artifactId>jersey-spring</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
    </dependency>

    <dependency>
      <groupId>javax.mail</groupId>
      <artifactId>mail</artifactId>
    </dependency>

    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-jaxrs</artifactId>
    </dependency>

    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-xc</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-core</artifactId>
      <version>${cxf.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-frontend-jaxws</artifactId>
      <version>${cxf.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-frontend-jaxrs</artifactId>
      <version>${cxf.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-transports-http</artifactId>
      <version>${cxf.version}</version>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>

      <scope>provided</scope>
    </dependency>
  </dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.enunciate</groupId>
    <artifactId>enunciate-parent</artifactId>
    <version>1.29-SNAPSHOT</version>
  </parent>

  <artifactId>enunciate-cxf</artifactId>
  <name>Enunciate - CXF Module</name>
  <description>The Enunciate CXF module provides support for CXF on the server-side.</description>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-cxf-rt</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <!--the CXF module depends on the spring app-->
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-spring-app</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core</artifactId>
      <version>${project.version}</version>

      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>

  </dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.enunciate</groupId>
    <artifactId>enunciate-parent</artifactId>
    <version>1.29-SNAPSHOT</version>
  </parent>

  <artifactId>enunciate-docs</artifactId>
  <name>Enunciate - Docs Module</name>
  <description>The Enunciate docs module generates the Web service interface documentation.</description>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <!--<debugForkedProcess>true</debugForkedProcess>-->
          <systemProperties>
            <property>
              <name>in.apt.src.test.dir</name>
              <value>${basedir}/src/main/samples/docs</value>
            </property>
          </systemProperties>
        </configuration>
      </plugin>
      <plugin>
        <!--
        we need to zip up the default documentation base, so we'll use ant to do it.
        -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <!--the docs module uses a default base.-->
            <phase>process-classes</phase>
            <configuration>
              <tasks>
                <mkdir dir="${project.build.outputDirectory}" />

                <zip destfile="${project.build.outputDirectory}/docs.base.zip" basedir="${basedir}/template">
                  <exclude name="*.html" />
                </zip>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-contract-samples</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${basedir}/src/main/samples/docs</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core</artifactId>
      <version>${project.version}</version>

      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>

    <!--used for generating example json for documentation-->
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-mapper-asl</artifactId>
    </dependency>

    <!--used for generating example xml for documentation-->
    <dependency>
      <groupId>org.jdom</groupId>
      <artifactId>jdom</artifactId>
    </dependency>

  </dependencies>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.enunciate</groupId>
    <artifactId>enunciate-parent</artifactId>
    <version>1.29-SNAPSHOT</version>
  </parent>

  <groupId>org.codehaus.enunciate.archetypes</groupId>
  <artifactId>enunciate-simple-archetype</artifactId>
  <packaging>maven-archetype</packaging>
  <name>Enunciate - Simple Archetype</name>

  <build>
    <extensions>
      <extension>
        <groupId>org.apache.maven.archetype</groupId>
        <artifactId>archetype-packaging</artifactId>
        <version>2.0</version>
      </extension>
    </extensions>
    <plugins>
      <plugin>
        <artifactId>maven-archetype-plugin</artifactId>
        <version>2.0</version>
        <extensions>true</extensions>
      </plugin>
    </plugins>
  </build>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>${groupId}</groupId>
  <artifactId>${artifactId}</artifactId>
  <packaging>war</packaging>
  <version>${version}</version>
  <name>maven project name</name>
  <url>http://enunciate.codehaus.org</url>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.enunciate</groupId>
        <artifactId>maven-enunciate-plugin</artifactId>
        <version>1.29-SNAPSHOT</version>
        <configuration>
          <configFile>src/conf/enunciate.xml</configFile>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>assemble</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
        <version>1.1.2</version>
        <configuration>
          <configuration>
            <deployables>
              <deployable>
                <properties>
                  <context>${project.artifactId}</context>
                </properties>
              </deployable>
            </deployables>
          </configuration>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>org.codehaus.enunciate</groupId>
      <artifactId>enunciate-rt</artifactId>
      <version>1.29-SNAPSHOT</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.7</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.enunciate</groupId>
    <artifactId>enunciate-parent</artifactId>
    <version>1.29-SNAPSHOT</version>
  </parent>

  <artifactId>enunciate-gwt-rt</artifactId>
  <name>Enunciate - GWT Runtime</name>
  <description>The Enunciate GWT Runtime libraries support the GWT endpoints on the server-side.</description>

  <dependencies>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core-rt</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-servlet</artifactId>
      <version>1.5.2</version>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>

      <scope>provided</scope>
    </dependency>

  </dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.enunciate</groupId>
    <artifactId>enunciate-parent</artifactId>
    <version>1.29-SNAPSHOT</version>
  </parent>

  <artifactId>enunciate-gwt</artifactId>
  <name>Enunciate - GWT Module</name>
  <description>The Enunciate GWT module generates the artifacts to support the GWT application.</description>

  <dependencies>
    
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-gwt-rt</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core</artifactId>
      <version>${project.version}</version>

      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>

  </dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>net.java.ws.addressbook</groupId>
  <artifactId>addressbook</artifactId>
  <packaging>war</packaging>
  <version>1.29-SNAPSHOT</version>
  <name>Enunciate - Address Book Example</name>

  <properties>
    <enunciate.version>${project.version}</enunciate.version>
  </properties>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.enunciate</groupId>
        <artifactId>maven-enunciate-plugin</artifactId>
        <version>${enunciate.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>assemble</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.codehaus.enunciate</groupId>
            <artifactId>enunciate-amf</artifactId>
            <version>${enunciate.version}</version>
          </dependency>
          <dependency>
            <groupId>org.codehaus.enunciate</groupId>
            <artifactId>enunciate-gwt</artifactId>
            <version>${enunciate.version}</version>
          </dependency>
        </dependencies>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>gwt-maven-plugin</artifactId>
        <version>2.1.0</version>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.5</version>
        <executions>
          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/main/flex</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>maven-jetty-plugin</artifactId>
        <version>6.1.26</version>
      </plugin>

      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
        <version>1.1.2</version>
        <configuration>
          <skip>${skipTests}</skip>
          <container>
            <containerId>tomcat6x</containerId>
            <zipUrlInstaller>
              <url>http://archive.apache.org/dist/tomcat/tomcat-6/v6.0.16/bin/apache-tomcat-6.0.16.zip</url>
              <extractDir>${basedir}/cargo-installs</extractDir>
            </zipUrlInstaller>
            <append>false</append>
          </container>
          <deployables>
            <deployable>
              <properties>
                <context>addressbook</context>
              </properties>
            </deployable>
          </deployables>
          <configuration>
            <properties>
              <!--<cargo.jvmargs>-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005</cargo.jvmargs>-->
            </properties>
            <home>${project.build.directory}/tomcat5x</home>
          </configuration>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.sonatype.flexmojos</groupId>
        <artifactId>flexmojos-maven-plugin</artifactId>
        <version>3.8</version>
        <executions>
          <execution>
            <goals>
              <goal>compile-swf</goal>
            </goals>
            <configuration>
              <output>${project.build.directory}/${project.build.finalName}/bytype.swf</output>
              <sourceFile>net/java/apps/addressbook/bytype.mxml</sourceFile>
              <services>${project.build.directory}/${project.build.finalName}/WEB-INF/flex/services-config.xml</services>
              <contextRoot>/${project.artifactId}</contextRoot>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>

      <plugin>
        <!--skip deploy (this is just a test module)-->
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <repositories>
    <repository>
      <id>sonatype-flexmojos</id>
      <url>http://repository.sonatype.org/content/groups/flexgroup</url>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>sonatype-flexmojos-plugins</id>
      <url>http://repository.sonatype.org/content/groups/flexgroup</url>
    </pluginRepository>
  </pluginRepositories>

  <dependencies>
    <dependency>
      <groupId>org.codehaus.enunciate</groupId>
      <artifactId>enunciate-rt</artifactId>
      <version>${enunciate.version}</version>
    </dependency>

    <dependency>
      <groupId>org.codehaus.enunciate</groupId>
      <artifactId>enunciate-amf-rt</artifactId>
      <version>${enunciate.version}</version>
    </dependency>
    
    <dependency>
      <groupId>org.codehaus.enunciate</groupId>
      <artifactId>enunciate-gwt-rt</artifactId>
      <version>${enunciate.version}</version>
    </dependency>

    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-user</artifactId>
      <version>2.1.0</version>
    </dependency>

    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-servlet</artifactId>
      <version>2.1.0</version>
    </dependency>

    <dependency>
       <groupId>com.adobe.flex.framework</groupId>
       <artifactId>flex-framework</artifactId>
       <version>3.2.0.3958</version>
       <type>pom</type>
     </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.codehaus.enunciate</groupId>
  <artifactId>enunciate-integration-contract-first</artifactId>
  <version>1.29-SNAPSHOT</version>
  <name>Enunciate - Contract-First Example (EPCIS)</name>
  <description>An example of how to use Enunciate for contract-first development.</description>
  <packaging>war</packaging>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>require.gcc.or.skip</id>
            <phase>validate</phase>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireProperty>
                  <property>gcc.executable</property>
                  <message>In order to run the contract-first integration testse, you must have gcc installed along with libxml and gnustep.
Define a profile in your settings.xml file that defines the path to your 'gcc'
executable in the property 'gcc.executable'. Also set a property named 'libxml.config.executable' that
specifies the executable that exposes your libxml compiler flags and library includes.
Also set a property named 'gnustep.config.executable' that specifies the executable that exposes your gnustep compiler flags and library includes.
If you just want to skip the Objective C tests, set the value of the property 'gcc.executable' to be 'true'.
(And don't ask any questions about why that works. Maven mess.)</message>
                </requireProperty>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <!--as part of the tests, we're going to make sure the c and obj-c code compiles.-->
            <id>compile-obj-c</id>
            <phase>test-compile</phase>
            <configuration>
              <tasks>
                <property name="gcc.executable" value="${gcc.executable}"/>
                <property name="libxml.config.executable" value="${libxml.config.executable}"/>
                <property name="gnustep.config.executable" value="${gnustep.config.executable}"/>
                <property name="project.build.directory" value="${project.build.directory}"/>
                <property name="project.artifactId" value="${project.artifactId}"/>

                <ant antfile="${basedir}/gcc-compile.xml">
                  <target name="gcc"/>
                </ant>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>jaxws-maven-plugin</artifactId>
        <version>1.12</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>wsimport</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <wsdlDirectory>src/main/contract</wsdlDirectory>
          <!--turn off wsimport compilation-->
          <destDir></destDir>
          <sourceDestDir>${project.build.directory}/generated-sources</sourceDestDir>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>javax.xml.ws</groupId>
            <artifactId>jaxws-api</artifactId>
            <version>2.1-1</version>
            <exclusions>
              <exclusion>
                <groupId>activation</groupId>
                <artifactId>activation</artifactId>
              </exclusion>
              <exclusion>
                <groupId>javax.jws</groupId>
                <artifactId>jsr181</artifactId>
              </exclusion>
            </exclusions>
          </dependency>
          <dependency>
            <!--this dependency doesn't have anything to do with xfire.  It's just xfire's build of the jsr181 annotations.-->
            <groupId>xfire</groupId>
            <artifactId>xfire-jsr181-api</artifactId>
            <version>1.0-M1</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <!--now we need to add the generated sources we're testing to the test classpath-->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.5</version>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-sources</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.enunciate</groupId>
        <artifactId>maven-enunciate-plugin</artifactId>
        <version>${project.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>assemble</goal>
            </goals>
            <configuration>
              <addJavaClientSourcesToTestClasspath>true</addJavaClientSourcesToTestClasspath>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.codehaus.enunciate</groupId>
            <artifactId>enunciate-amf</artifactId>
            <version>${project.version}</version>
          </dependency>
          <dependency>
            <groupId>org.codehaus.enunciate</groupId>
            <artifactId>enunciate-gwt</artifactId>
            <version>${project.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <!-- skip unit test run, tests to be executed during integration-test -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
        <executions>
          <execution>
            <id>surefire-it</id>
            <phase>integration-test</phase>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <skip>false</skip>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
        <executions>
          <execution>
            <id>start-container</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
            <configuration>
              <wait>false</wait>
            </configuration>
          </execution>
          <execution>
            <id>stop-container</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <skip>${skipTests}</skip>
          <container>
            <containerId>tomcat5x</containerId>
            <zipUrlInstaller>
              <url>http://archive.apache.org/dist/tomcat/tomcat-5/v5.5.26/bin/apache-tomcat-5.5.26.zip</url>
              <extractDir>${basedir}/cargo-installs</extractDir>
            </zipUrlInstaller>
            <append>false</append>
          </container>
          <deployables>
            <deployable>
              <properties>
                <context>enunciate-integration-contract-first</context>
              </properties>
            </deployable>
          </deployables>
          <configuration>
            <properties>
              <!--<cargo.jvmargs>-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005</cargo.jvmargs>-->
            </properties>
            <home>${project.build.directory}/tomcat5x</home>
          </configuration>
        </configuration>
      </plugin>
      <plugin>
        <!--skip deploy (this is just a test module)-->
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>org.codehaus.enunciate</groupId>
      <artifactId>enunciate-rt</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.codehaus.enunciate</groupId>
      <artifactId>enunciate-amf-rt</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.3</version>

      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>

      <scope>test</scope>
    </dependency>
  </dependencies>

  <distributionManagement>

    <repository>
      <id>codehaus.org</id>
      <name>Enunciate Central Repository</name>
      <url>dav:https://dav.codehaus.org/repository/enunciate/</url>
    </repository>

    <snapshotRepository>
      <id>codehaus.org</id>
      <name>Enunciate Central Development Repository</name>
      <url>dav:https://dav.codehaus.org/snapshots.repository/enunciate/</url>
    </snapshotRepository>

  </distributionManagement>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.codehaus.enunciate</groupId>
  <artifactId>enunciate-integration-cxf-rest</artifactId>
  <version>1.29-SNAPSHOT</version>
  <name>Enunciate - CXF/REST Integration Tests</name>
  <description>Integration tests for Enunciate, testing the CXF + REST combo.</description>
  <packaging>war</packaging>

  <build>
    <resources>
      <resource>
        <directory>${basedir}/src/main/resources</directory>
      </resource>
      <resource>
        <directory>${basedir}/src/main/samples/full</directory>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>
      <plugin>
        <!--now we need to add the generated sources we're testing to the test classpath-->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.5</version>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${basedir}/src/main/samples/full</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.enunciate</groupId>
        <artifactId>maven-enunciate-cxf-plugin</artifactId>
        <version>${project.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>assemble</goal>
            </goals>
            <configuration>
              <addJavaClientSourcesToTestClasspath>true</addJavaClientSourcesToTestClasspath>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <!--There's a weird bug in Maven that I haven't been able to track down
          in that if I don't add the rest module here, then the next project
          will fail because it won't find the rest module.-->
          <dependency>
            <groupId>org.codehaus.enunciate</groupId>
            <artifactId>enunciate-amf</artifactId>
            <version>${project.version}</version>
          </dependency>
          <dependency>
            <groupId>org.codehaus.enunciate</groupId>
            <artifactId>enunciate-gwt</artifactId>
            <version>${project.version}</version>
          </dependency>
        </dependencies>
      </plugin>

      <!-- skip unit test run, tests to be executed during integration-test -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
        <executions>
          <execution>
            <id>surefire-it</id>
            <phase>integration-test</phase>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <skip>false</skip>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
        <executions>
          <execution>
            <id>start-container</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
            <configuration>
              <cargo.jvmargs>-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005</cargo.jvmargs>
              <wait>false</wait>
            </configuration>
          </execution>
          <execution>
            <id>stop-container</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <skip>${skipTests}</skip>
          <container>
            <containerId>tomcat5x</containerId>
            <zipUrlInstaller>
              <url>http://archive.apache.org/dist/tomcat/tomcat-5/v5.5.26/bin/apache-tomcat-5.5.26.zip</url>
              <extractDir>${basedir}/cargo-installs</extractDir>
            </zipUrlInstaller>
            <append>false</append>
          </container>
          <deployables>
            <deployable>
              <properties>
                <context>full</context>
              </properties>
            </deployable>
          </deployables>
          <configuration>
            <home>${project.build.directory}/tomcat5x</home>
          </configuration>
        </configuration>
      </plugin>
      <plugin>
        <!--skip deploy (this is just a test module)-->
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>org.codehaus.enunciate</groupId>
      <artifactId>enunciate-cxf-rt</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>cglib</groupId>
      <artifactId>cglib-nodep</artifactId>
      <version>2.1_3</version>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.3</version>

      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>1.4</version>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>1.3.2</version>
    </dependency>

    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>1.2.1</version>
    </dependency>

    <dependency>
      <groupId>httpunit</groupId>
      <artifactId>httpunit</artifactId>
      <version>1.6.2</version>

      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>

      <scope>test</scope>
    </dependency>

  </dependencies>

  <distributionManagement>

    <repository>
      <id>codehaus.org</id>
      <name>Enunciate Central Repository</name>
      <url>dav:https://dav.codehaus.org/repository/enunciate/</url>
    </repository>

    <snapshotRepository>
      <id>codehaus.org</id>
      <name>Enunciate Central Development Repository</name>
      <url>dav:https://dav.codehaus.org/snapshots.repository/enunciate/</url>
    </snapshotRepository>

  </distributionManagement>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.codehaus.enunciate</groupId>
  <artifactId>enunciate-integration-jaxws-ri-rest-spring</artifactId>
  <version>1.29-SNAPSHOT</version>
  <name>Enunciate - JAXWS-RI/REST Integration Tests + Spring</name>
  <description>Integration tests for Enunciate, testing the JAXWS-RI + REST combo, with Spring backing.</description>
  <packaging>war</packaging>

  <build>
    <resources>
      <resource>
        <directory>${basedir}/src/main/resources</directory>
      </resource>
      <resource>
        <directory>${basedir}/src/main/samples/full</directory>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>
      <plugin>
        <!--now we need to add the generated sources we're testing to the test classpath-->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.5</version>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${basedir}/src/main/samples/full</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>require.gmcs.or.skip</id>
            <phase>validate</phase>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireProperty>
                  <property>gmcs.executable</property>
                  <message>In order to run the jaxws-ri integration tests, you must have Mono installed.
First install Mono for your platform. (See http://mono-project.com/Start and note there's a Windows version of Mono, too.)
Then, define a profile in your settings.xml file that defines the path to your 'gmcs' executable in the property 'gmcs.executable'.
If you just want to run the Java tests without running the C# tests, set the value of the property 'gmcs.executable' to be 'true'.</message>
                </requireProperty>
              </rules>
            </configuration>
          </execution>
          <execution>
            <id>require.gcc.or.skip</id>
            <phase>validate</phase>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireProperty>
                  <property>gcc.executable</property>
                  <message>In order to run the jaxws-ri integration testse, you must have gcc installed along with libxml and gnustep.
Define a profile in your settings.xml file that defines the path to your 'gcc'
executable in the property 'gcc.executable'. Also set a property named 'libxml.config.executable' that
specifies the executable that exposes your libxml compiler flags and library includes.
Also set a property named 'gnustep.config.executable' that specifies the executable that exposes your gnustep compiler flags and library includes.
If you just want to skip the Objective C tests, set the value of the property 'gcc.executable' to be 'true'.
(And don't ask any questions about why that works. Maven mess.)</message>
                </requireProperty>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.enunciate</groupId>
        <artifactId>maven-enunciate-spring-plugin</artifactId>
        <version>${project.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>assemble</goal>
            </goals>
            <configuration>
              <addJavaClientSourcesToTestClasspath>true</addJavaClientSourcesToTestClasspath>
              <exports>
                <csharp.assembly>${project.build.directory}/cstests/full.dll</csharp.assembly>
              </exports>
              <springEnabled>true</springEnabled>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.codehaus.enunciate</groupId>
            <artifactId>enunciate-amf</artifactId>
            <version>${project.version}</version>
          </dependency>
          <dependency>
            <groupId>org.codehaus.enunciate</groupId>
            <artifactId>enunciate-gwt</artifactId>
            <version>${project.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.1.1</version>
        <executions>
          <execution>
            <id>compile-cs</id>
            <phase>test-compile</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <!--compile the nunit tests-->
              <executable>${gmcs.executable}</executable>
              <skip>${gmcs.executable}</skip>
              <arguments>
                <argument>${project.build.testSourceDirectory}/../cs/TestCSharpClient.cs</argument>
                <argument>/out:${project.build.directory}/cstests/fulltests.exe</argument>
                <argument>/target:exe</argument>
                <argument>/r:System.Web.Services</argument>
                <argument>/r:${project.build.directory}/cstests/full.dll</argument>
              </arguments>
              <workingDirectory>${project.build.directory}</workingDirectory>
            </configuration>
          </execution>
          <execution>
            <id>nunit</id>
            <phase>integration-test</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <!--compile the nunit tests-->
              <executable>mono</executable>
              <skip>${gmcs.executable}</skip>
              <arguments>
                <argument>${project.build.directory}/cstests/fulltests.exe</argument>
              </arguments>
              <workingDirectory>${project.build.directory}</workingDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <!--as part of the tests, we're going to make sure the c and obj-c code compiles.-->
            <id>compile-obj-c</id>
            <phase>test-compile</phase>
            <configuration>
              <tasks>
                <property name="gcc.executable" value="${gcc.executable}"/>
                <property name="libxml.config.executable" value="${libxml.config.executable}"/>
                <property name="gnustep.config.executable" value="${gnustep.config.executable}"/>
                <property name="project.build.directory" value="${project.build.directory}"/>

                <ant antfile="${basedir}/gcc-compile.xml">
                  <target name="gcc"/>
                </ant>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- skip unit test run, tests to be executed during integration-test -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
        <executions>
          <execution>
            <id>surefire-it</id>
            <phase>integration-test</phase>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <skip>${skipTests}</skip>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
        <executions>
          <execution>
            <id>start-container</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
            <configuration>
              <wait>false</wait>
            </configuration>
          </execution>
          <execution>
            <id>stop-container</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <skip>${skipTests}</skip>
          <container>
            <containerId>tomcat5x</containerId>
            <zipUrlInstaller>
              <url>http://archive.apache.org/dist/tomcat/tomcat-5/v5.5.26/bin/apache-tomcat-5.5.26.zip</url>
              <extractDir>${basedir}/cargo-installs</extractDir>
            </zipUrlInstaller>
            <append>false</append>
          </container>
          <deployables>
            <deployable>
              <properties>
                <context>full</context>
              </properties>
            </deployable>
          </deployables>
          <configuration>
            <properties>
               <!--<cargo.jvmargs>-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005</cargo.jvmargs>-->
            </properties>
            <home>${project.build.directory}/tomcat5x</home>
          </configuration>
        </configuration>
      </plugin>
      <plugin>
        <!--skip deploy (this is just a test module)-->
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>org.codehaus.enunciate</groupId>
      <artifactId>enunciate-spring-app-rt</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.codehaus.enunciate</groupId>
      <artifactId>enunciate-amf-rt</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.3</version>

      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>1.4</version>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>1.3.2</version>
    </dependency>

    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>1.2.1</version>
    </dependency>

    <dependency>
      <groupId>httpunit</groupId>
      <artifactId>httpunit</artifactId>
      <version>1.6.2</version>

      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>

      <scope>test</scope>
    </dependency>
  </dependencies>

  <distributionManagement>

    <repository>
      <id>codehaus.org</id>
      <name>Enunciate Central Repository</name>
      <url>dav:https://dav.codehaus.org/repository/enunciate/</url>
    </repository>

    <snapshotRepository>
      <id>codehaus.org</id>
      <name>Enunciate Central Development Repository</name>
      <url>dav:https://dav.codehaus.org/snapshots.repository/enunciate/</url>
    </snapshotRepository>

  </distributionManagement>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.codehaus.enunciate</groupId>
  <artifactId>enunciate-integration-jaxws-ri-rest</artifactId>
  <version>1.29-SNAPSHOT</version>
  <name>Enunciate - JAXWS-RI/REST Integration Tests</name>
  <description>Integration tests for Enunciate, testing the JAXWS-RI + REST combo.</description>
  <packaging>war</packaging>

  <properties>
    <enunciate.version>${project.version}</enunciate.version>
  </properties>

  <build>
    <resources>
      <resource>
        <directory>${basedir}/src/main/resources</directory>
      </resource>
      <resource>
        <directory>${basedir}/src/main/samples/full</directory>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>
      <plugin>
        <!--now we need to add the generated sources we're testing to the test classpath-->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.5</version>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${basedir}/src/main/samples/full</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>require.gmcs.or.skip</id>
            <phase>validate</phase>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireProperty>
                  <property>gmcs.executable</property>
                  <message>In order to run the jaxws-ri integration tests, you must have Mono installed.
                    First install Mono for your platform. (See http://mono-project.com/Start and note there's a Windows version of Mono, too.)
                    Then, define a profile in your settings.xml file that defines the path to your 'gmcs' executable in the property 'gmcs.executable'.
                    If you just want to run the Java tests without running the C# tests, set the value of the property 'gmcs.executable' to be 'true'.
                  </message>
                </requireProperty>
              </rules>
            </configuration>
          </execution>
          <execution>
            <id>require.gcc.or.skip</id>
            <phase>validate</phase>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireProperty>
                  <property>gcc.executable</property>
                  <message>In order to run the jaxws-ri integration testse, you must have gcc installed along with libxml and gnustep.
                    Define a profile in your settings.xml file that defines the path to your 'gcc'
                    executable in the property 'gcc.executable'. Also set a property named 'libxml.config.executable' that
                    specifies the executable that exposes your libxml compiler flags and library includes.
                    Also set a property named 'gnustep.config.executable' that specifies the executable that exposes your gnustep compiler flags and library
                    includes.
                    If you just want to skip the Objective C tests, set the value of the property 'gcc.executable' to be 'true'.
                    (And don't ask any questions about why that works. Maven mess.)
                  </message>
                </requireProperty>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.enunciate</groupId>
        <artifactId>maven-enunciate-plugin</artifactId>
        <version>${enunciate.version}</version>
        <executions>
          <execution>
            <id>assemble</id>
            <goals>
              <goal>assemble</goal>
            </goals>
            <configuration>
              <addJavaClientSourcesToTestClasspath>true</addJavaClientSourcesToTestClasspath>
              <exports>
                <csharp.assembly>${project.build.directory}/cstests/full.dll</csharp.assembly>
              </exports>
            </configuration>
          </execution>
          <execution>
            <id>install-and-deploy</id>
            <goals>
              <goal>install-artifact</goal>
              <goal>deploy-artifact</goal>
            </goals>
            <configuration>
              <enunciateArtifactId>jaxws.client.library</enunciateArtifactId>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.codehaus.enunciate</groupId>
            <artifactId>enunciate-amf</artifactId>
            <version>${enunciate.version}</version>
          </dependency>
          <dependency>
            <groupId>org.codehaus.enunciate</groupId>
            <artifactId>enunciate-gwt</artifactId>
            <version>${enunciate.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>2.1</version>
        <configuration>
          <!--for testing out the release plugin-->
          <tagBase>https://svn.codehaus.org/enunciate/tags/</tagBase>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.1.1</version>
        <executions>
          <execution>
            <id>compile-cs</id>
            <phase>test-compile</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <!--compile the nunit tests-->
              <executable>${gmcs.executable}</executable>
              <skip>${gmcs.executable}</skip>
              <arguments>
                <argument>${project.build.testSourceDirectory}/../cs/TestCSharpClient.cs</argument>
                <argument>/out:${project.build.directory}/cstests/fulltests.exe</argument>
                <argument>/target:exe</argument>
                <argument>/r:System.Web.Services</argument>
                <argument>/r:${project.build.directory}/cstests/full.dll</argument>
              </arguments>
              <workingDirectory>${project.build.directory}</workingDirectory>
            </configuration>
          </execution>
          <execution>
            <id>nunit</id>
            <phase>integration-test</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <!--compile the nunit tests-->
              <executable>mono</executable>
              <skip>${gmcs.executable}</skip>
              <arguments>
                <argument>${project.build.directory}/cstests/fulltests.exe</argument>
              </arguments>
              <workingDirectory>${project.build.directory}</workingDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <!--as part of the tests, we're going to make sure the c and obj-c code compiles.-->
            <id>compile-obj-c</id>
            <phase>test-compile</phase>
            <configuration>
              <tasks>
                <property name="gcc.executable" value="${gcc.executable}"/>
                <property name="libxml.config.executable" value="${libxml.config.executable}"/>
                <property name="gnustep.config.executable" value="${gnustep.config.executable}"/>
                <property name="project.build.directory" value="${project.build.directory}"/>

                <ant antfile="${basedir}/gcc-compile.xml">
                  <target name="gcc"/>
                </ant>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- skip unit test run, tests to be executed during integration-test -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
        <executions>
          <execution>
            <id>surefire-it</id>
            <phase>integration-test</phase>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <skip>${skipTests}</skip>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
        <executions>
          <execution>
            <id>start-container</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
            <configuration>
              <wait>false</wait>
            </configuration>
          </execution>
          <execution>
            <id>stop-container</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <skip>${skipTests}</skip>
          <container>
            <containerId>tomcat5x</containerId>
            <zipUrlInstaller>
              <url>http://archive.apache.org/dist/tomcat/tomcat-5/v5.5.26/bin/apache-tomcat-5.5.26.zip</url>
              <extractDir>${basedir}/cargo-installs</extractDir>
            </zipUrlInstaller>
            <append>false</append>
          </container>
          <deployables>
            <deployable>
              <properties>
                <context>full</context>
              </properties>
            </deployable>
          </deployables>
          <configuration>
            <properties>
              <!--<cargo.jvmargs>-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005</cargo.jvmargs>-->
            </properties>
            <home>${project.build.directory}/tomcat5x</home>
          </configuration>
        </configuration>
      </plugin>
    </plugins>
    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-webdav-jackrabbit</artifactId>
        <version>2.4</version>
      </extension>
    </extensions>
  </build>

  <dependencies>
    <dependency>
      <groupId>org.codehaus.enunciate</groupId>
      <artifactId>enunciate-rt</artifactId>
      <version>${enunciate.version}</version>
    </dependency>

    <dependency>
      <groupId>org.codehaus.enunciate</groupId>
      <artifactId>enunciate-core</artifactId>
      <version>${enunciate.version}</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.codehaus.enunciate</groupId>
      <artifactId>enunciate-amf-rt</artifactId>
      <version>${enunciate.version}</version>
    </dependency>

    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-jaxrs</artifactId>
      <version>1.9.3</version>
    </dependency>

    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-xc</artifactId>
      <version>1.9.3</version>
    </dependency>

    <dependency>
      <groupId>com.sun.jersey.contribs</groupId>
      <artifactId>jersey-multipart</artifactId>
      <version>1.11</version>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.3</version>

      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>1.4</version>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>1.3.2</version>
    </dependency>

    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>1.2.1</version>
    </dependency>

    <dependency>
      <groupId>httpunit</groupId>
      <artifactId>httpunit</artifactId>
      <version>1.6.2</version>

      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>

      <scope>test</scope>
    </dependency>
  </dependencies>

  <distributionManagement>

    <repository>
      <id>codehaus.org</id>
      <name>Enunciate Central Repository</name>
      <url>dav:https://dav.codehaus.org/repository/enunciate/</url>
    </repository>

    <snapshotRepository>
      <id>codehaus.org</id>
      <name>Enunciate Central Development Repository</name>
      <url>dav:https://dav.codehaus.org/snapshots.repository/enunciate/</url>
    </snapshotRepository>

  </distributionManagement>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.codehaus.enunciate</groupId>
  <artifactId>enunciate-integration-jboss</artifactId>
  <version>1.29-SNAPSHOT</version>
  <name>Enunciate - JBoss Integration Tests</name>
  <description>Integration tests for Enunciate, testing the JBoss deployment.</description>
  <packaging>war</packaging>

  <properties>
    <resteasy.version>2.2.1.GA</resteasy.version>
    <jackson.version>1.9.3</jackson.version>
  </properties>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.enunciate</groupId>
        <artifactId>maven-enunciate-jboss-plugin</artifactId>
        <version>${project.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>assemble</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- skip unit test run, tests to be executed during integration-test -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
        <executions>
          <execution>
            <id>surefire-it</id>
            <phase>integration-test</phase>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <skip>false</skip>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
        <executions>
          <execution>
            <id>start-container</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
            <configuration>
              <wait>false</wait>
            </configuration>
          </execution>
          <execution>
            <id>stop-container</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <skip>${skipTests}</skip>
          <container>
            <containerId>jboss6x</containerId>
            <zipUrlInstaller>
              <url>http://sourceforge.net/projects/jboss/files/JBoss/JBoss-6.0.0.Final/jboss-as-distribution-6.0.0.Final.zip</url>
              <extractDir>${basedir}/cargo-installs</extractDir>
            </zipUrlInstaller>
            <append>false</append>
          </container>
          <deployables>
            <deployable>
              <properties>
                <context>storage</context>
              </properties>
            </deployable>
          </deployables>
          <configuration>
            <properties>
              <!--<cargo.jvmargs>-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005</cargo.jvmargs>-->
            </properties>
            <home>${project.build.directory}/jboss6x</home>
          </configuration>
        </configuration>
      </plugin>
      <plugin>
        <!--skip deploy (this is just a test module)-->
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-jboss-rt</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-jaxrs</artifactId>
      <version>${jackson.version}</version>
    </dependency>

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jaxrs</artifactId>
      <version>${resteasy.version}</version>
    </dependency>

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jaxb-provider</artifactId>
      <version>${resteasy.version}</version>
      <exclusions>
        <exclusion>
          <groupId>com.sun.xml.bind</groupId>
          <artifactId>jaxb-impl</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.sun.xml.stream</groupId>
          <artifactId>sjsxp</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jackson-provider</artifactId>
      <version>${resteasy.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-amf-rt</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.3</version>

      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>1.4</version>
    </dependency>

    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-client</artifactId>
      <version>1.11</version>

      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>

      <scope>test</scope>
    </dependency>
  </dependencies>

  <distributionManagement>

    <repository>
      <id>codehaus.org</id>
      <name>Enunciate Central Repository</name>
      <url>dav:https://dav.codehaus.org/repository/enunciate/</url>
    </repository>

    <snapshotRepository>
      <id>codehaus.org</id>
      <name>Enunciate Central Development Repository</name>
      <url>dav:https://dav.codehaus.org/snapshots.repository/enunciate/</url>
    </snapshotRepository>

  </distributionManagement>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.codehaus.enunciate</groupId>
  <artifactId>enunciate-integration-jboss-rest</artifactId>
  <version>1.29-SNAPSHOT</version>
  <name>Enunciate - JBoss-WS/REST Integration Tests</name>
  <description>Integration tests for Enunciate, testing the JBoss WS + REST combo.</description>
  <packaging>war</packaging>

  <properties>
    <resteasy.version>2.2.1.GA</resteasy.version>
    <jackson.version>1.9.3</jackson.version>
  </properties>

  <build>
    <resources>
      <resource>
        <directory>${basedir}/src/main/resources</directory>
      </resource>
      <resource>
        <directory>${basedir}/src/main/samples/full</directory>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>
      <plugin>
        <!--now we need to add the generated sources we're testing to the test classpath-->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.5</version>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${basedir}/src/main/samples/full</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.enunciate</groupId>
        <artifactId>maven-enunciate-jboss-plugin</artifactId>
        <version>${project.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>assemble</goal>
            </goals>
            <configuration>
              <addJavaClientSourcesToTestClasspath>true</addJavaClientSourcesToTestClasspath>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- skip unit test run, tests to be executed during integration-test -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
        <executions>
          <execution>
            <id>surefire-it</id>
            <phase>integration-test</phase>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <skip>false</skip>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
        <executions>
          <execution>
            <id>start-container</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
            <configuration>
              <wait>false</wait>
            </configuration>
          </execution>
          <execution>
            <id>stop-container</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <skip>${skipTests}</skip>
          <container>
            <containerId>jboss6x</containerId>
            <zipUrlInstaller>
              <url>http://sourceforge.net/projects/jboss/files/JBoss/JBoss-6.0.0.Final/jboss-as-distribution-6.0.0.Final.zip</url>
              <extractDir>${basedir}/cargo-installs</extractDir>
            </zipUrlInstaller>
            <append>false</append>
          </container>
          <deployables>
            <deployable>
              <properties>
                <context>full</context>
              </properties>
            </deployable>
          </deployables>
          <configuration>
            <properties>
              <!--<cargo.jvmargs>-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005</cargo.jvmargs>-->
            </properties>
            <home>${project.build.directory}/jboss6x</home>
          </configuration>
        </configuration>
      </plugin>
      <plugin>
        <!--skip deploy (this is just a test module)-->
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>org.codehaus.enunciate</groupId>
      <artifactId>enunciate-jboss-rt</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-jaxrs</artifactId>
      <version>${jackson.version}</version>
    </dependency>

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jaxrs</artifactId>
      <version>${resteasy.version}</version>
    </dependency>

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jaxb-provider</artifactId>
      <version>${resteasy.version}</version>
      <exclusions>
        <exclusion>
          <groupId>com.sun.xml.bind</groupId>
          <artifactId>jaxb-impl</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.sun.xml.stream</groupId>
          <artifactId>sjsxp</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jackson-provider</artifactId>
      <version>${resteasy.version}</version>
    </dependency>

    <dependency>
      <groupId>cglib</groupId>
      <artifactId>cglib-nodep</artifactId>
      <version>2.1_3</version>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.3</version>

      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>1.4</version>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>1.3.2</version>
    </dependency>

    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>1.2.1</version>
    </dependency>

    <dependency>
      <groupId>javax.mail</groupId>
      <artifactId>mail</artifactId>
      <version>1.4.1</version>

      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>httpunit</groupId>
      <artifactId>httpunit</artifactId>
      <version>1.6.2</version>

      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>

      <scope>test</scope>
    </dependency>

  </dependencies>

  <distributionManagement>

    <repository>
      <id>codehaus.org</id>
      <name>Enunciate Central Repository</name>
      <url>dav:https://dav.codehaus.org/repository/enunciate/</url>
    </repository>

    <snapshotRepository>
      <id>codehaus.org</id>
      <name>Enunciate Central Development Repository</name>
      <url>dav:https://dav.codehaus.org/snapshots.repository/enunciate/</url>
    </snapshotRepository>

  </distributionManagement>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.codehaus.enunciate</groupId>
  <artifactId>enunciate-integration-jersey-storage-spring</artifactId>
  <version>1.29-SNAPSHOT</version>
  <name>Enunciate - Jersey/Spring Integration Tests</name>
  <description>Integration tests for Enunciate, testing the Jersey deployment with Spring enabled.</description>
  <packaging>war</packaging>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.enunciate</groupId>
        <artifactId>maven-enunciate-spring-plugin</artifactId>
        <version>${project.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>assemble</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.codehaus.enunciate</groupId>
            <artifactId>enunciate-amf</artifactId>
            <version>${project.version}</version>
          </dependency>
          <dependency>
            <groupId>org.codehaus.enunciate</groupId>
            <artifactId>enunciate-gwt</artifactId>
            <version>${project.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <!-- skip unit test run, tests to be executed during integration-test -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
        <executions>
          <execution>
            <id>surefire-it</id>
            <phase>integration-test</phase>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <skip>false</skip>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
        <executions>
          <execution>
            <id>start-container</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
            <configuration>
              <cargo.jvmargs>-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005</cargo.jvmargs>
              <wait>false</wait>
            </configuration>
          </execution>
          <execution>
            <id>stop-container</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <skip>${skipTests}</skip>
          <container>
            <containerId>tomcat5x</containerId>
            <zipUrlInstaller>
              <url>http://archive.apache.org/dist/tomcat/tomcat-5/v5.5.26/bin/apache-tomcat-5.5.26.zip</url>
              <extractDir>${basedir}/cargo-installs</extractDir>
            </zipUrlInstaller>
            <append>false</append>
          </container>
          <deployables>
            <deployable>
              <properties>
                <context>storage</context>
              </properties>
            </deployable>
          </deployables>
          <configuration>
            <home>${project.build.directory}/tomcat5x</home>
          </configuration>
        </configuration>
      </plugin>
      <plugin>
        <!--skip deploy (this is just a test module)-->
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>cglib</groupId>
      <artifactId>cglib-nodep</artifactId>
      <version>2.1_3</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-spring-app-rt</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-amf-rt</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.3</version>

      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>1.4</version>
    </dependency>

    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-client</artifactId>
      <version>1.11</version>

      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>

      <scope>test</scope>
    </dependency>
  </dependencies>

  <distributionManagement>

    <repository>
      <id>codehaus.org</id>
      <name>Enunciate Central Repository</name>
      <url>dav:https://dav.codehaus.org/repository/enunciate/</url>
    </repository>

    <snapshotRepository>
      <id>codehaus.org</id>
      <name>Enunciate Central Development Repository</name>
      <url>dav:https://dav.codehaus.org/snapshots.repository/enunciate/</url>
    </snapshotRepository>

  </distributionManagement>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.codehaus.enunciate</groupId>
  <artifactId>enunciate-integration-jersey-storage</artifactId>
  <version>1.29-SNAPSHOT</version>
  <name>Enunciate - Jersey Integration Tests</name>
  <description>Integration tests for Enunciate, testing the Jersey deployment.</description>
  <packaging>war</packaging>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.enunciate</groupId>
        <artifactId>maven-enunciate-plugin</artifactId>
        <version>${project.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>assemble</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.codehaus.enunciate</groupId>
            <artifactId>enunciate-amf</artifactId>
            <version>${project.version}</version>
          </dependency>
          <dependency>
            <groupId>org.codehaus.enunciate</groupId>
            <artifactId>enunciate-gwt</artifactId>
            <version>${project.version}</version>
          </dependency>
          <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>enunciate-swagger</artifactId>
            <version>${project.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <!-- skip unit test run, tests to be executed during integration-test -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
        <executions>
          <execution>
            <id>surefire-it</id>
            <phase>integration-test</phase>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <skip>false</skip>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
        <executions>
          <execution>
            <id>start-container</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
            <configuration>
              <wait>false</wait>
            </configuration>
          </execution>
          <execution>
            <id>stop-container</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <skip>${skipTests}</skip>
          <container>
            <containerId>tomcat5x</containerId>
            <zipUrlInstaller>
              <url>http://archive.apache.org/dist/tomcat/tomcat-5/v5.5.26/bin/apache-tomcat-5.5.26.zip</url>
              <extractDir>${basedir}/cargo-installs</extractDir>
            </zipUrlInstaller>
            <append>false</append>
          </container>
          <deployables>
            <deployable>
              <properties>
                <context>storage</context>
              </properties>
            </deployable>
          </deployables>
          <configuration>
            <properties>
              <!--<cargo.jvmargs>-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005</cargo.jvmargs>-->
            </properties>
            <home>${project.build.directory}/tomcat5x</home>
          </configuration>
        </configuration>
      </plugin>
      <plugin>
        <!--skip deploy (this is just a test module)-->
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>cglib</groupId>
      <artifactId>cglib-nodep</artifactId>
      <version>2.1_3</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-rt</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-amf-rt</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.3</version>

      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>1.4</version>
    </dependency>

    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-client</artifactId>
      <version>1.11</version>

      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>

      <scope>test</scope>
    </dependency>
  </dependencies>

  <distributionManagement>

    <repository>
      <id>codehaus.org</id>
      <name>Enunciate Central Repository</name>
      <url>dav:https://dav.codehaus.org/repository/enunciate/</url>
    </repository>

    <snapshotRepository>
      <id>codehaus.org</id>
      <name>Enunciate Central Development Repository</name>
      <url>dav:https://dav.codehaus.org/snapshots.repository/enunciate/</url>
    </snapshotRepository>

  </distributionManagement>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.codehaus.enunciate.samples.petclinic</groupId>
  <artifactId>petclinic</artifactId>
  <packaging>war</packaging>
  <version>1.29-SNAPSHOT</version>
  <name>Enunciate - Petclinic Example</name>

  <properties>
    <enunciate.version>${project.version}</enunciate.version>
    <spring3.version>3.0.2.RELEASE</spring3.version>
    <spring3.security.version>3.0.2.RELEASE</spring3.security.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-aop</artifactId>
        <version>${spring3.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-beans</artifactId>
        <version>${spring3.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>${spring3.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-core</artifactId>
        <version>${spring3.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-web</artifactId>
        <version>${spring3.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-webmvc</artifactId>
        <version>${spring3.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.enunciate</groupId>
        <artifactId>maven-enunciate-spring-plugin</artifactId>
        <version>${enunciate.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>assemble</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <!--include amf...-->
          <dependency>
            <groupId>org.codehaus.enunciate</groupId>
            <artifactId>enunciate-amf</artifactId>
            <version>${enunciate.version}</version>
          </dependency>
          <!--...and gwt...-->
          <dependency>
            <groupId>org.codehaus.enunciate</groupId>
            <artifactId>enunciate-gwt</artifactId>
            <version>${enunciate.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>gwt-maven-plugin</artifactId>
        <version>2.1.0</version>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.5</version>
        <executions>
          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/main/flex</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.sonatype.flexmojos</groupId>
        <artifactId>flexmojos-maven-plugin</artifactId>
        <version>4.2-beta</version>
        <executions>
          <execution>
            <goals>
              <goal>compile-swf</goal>
            </goals>
            <configuration>
              <output>${project.build.directory}/${project.build.finalName}/vets.swf</output>
              <sourceFile>org/codehaus/enunciate/samples/petclinic/flex/vets.mxml</sourceFile>
              <services>${project.build.directory}/${project.build.finalName}/WEB-INF/flex/services-config.xml</services>
              <contextRoot>/${project.artifactId}</contextRoot>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>maven-jetty-plugin</artifactId>
        <version>6.1.26</version>
      </plugin>
      <plugin>
        <!--skip deploy (this is just a test module)-->
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <repositories>
    <repository>
      <id>sonatype-flexmojos</id>
      <url>http://repository.sonatype.org/content/groups/flexgroup</url>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>sonatype-flexmojos-plugins</id>
      <url>http://repository.sonatype.org/content/groups/flexgroup</url>
    </pluginRepository>
  </pluginRepositories>

  <dependencies>
    <dependency>
      <groupId>org.codehaus.enunciate</groupId>
      <artifactId>enunciate-spring3-app-rt</artifactId>
      <version>${enunciate.version}</version>
    </dependency>

    <dependency>
      <groupId>org.codehaus.enunciate</groupId>
      <artifactId>enunciate-gwt-rt</artifactId>
      <version>${enunciate.version}</version>
    </dependency>

    <dependency>
      <groupId>org.codehaus.enunciate</groupId>
      <artifactId>enunciate-amf-rt</artifactId>
      <version>${enunciate.version}</version>
    </dependency>

    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-user</artifactId>
      <version>2.1.0</version>
    </dependency>

    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-servlet</artifactId>
      <version>2.1.0</version>
    </dependency>

    <dependency>
      <!--depending modules: spring-app-rt-->
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
      <version>${spring3.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aop</artifactId>
      <version>${spring3.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-asm</artifactId>
      <version>${spring3.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-core</artifactId>
      <version>${spring3.security.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-config</artifactId>
      <version>${spring3.security.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-web</artifactId>
      <version>${spring3.security.version}</version>
    </dependency>

    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjrt</artifactId>
      <version>1.5.4</version>
    </dependency>

    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>1.2.1</version>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>1.3.2</version>
    </dependency>

    <dependency>
       <groupId>com.adobe.flex.framework</groupId>
       <artifactId>flex-framework</artifactId>
       <version>4.5.1.21328</version>
       <type>pom</type>
     </dependency>

  </dependencies>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.codehaus.enunciate</groupId>
  <artifactId>enunciate-integration-tests</artifactId>
  <packaging>pom</packaging>
  <version>1.29-SNAPSHOT</version>
  <name>Enunciate - Integration Tests</name>

  <modules>

    <module>cxf-rest</module>
    <module>jaxws-ri-rest</module>
    <module>jaxws-ri-rest-spring</module>
    <module>jboss-ws-rest</module>
    <module>contract-first</module>
    <module>jersey-storage</module>
    <module>jersey-storage-spring</module>
    <module>jboss-storage</module>
    <module>addressbook</module>
    <module>petclinic</module>

  </modules>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.cargo</groupId>
          <artifactId>cargo-maven2-plugin</artifactId>
          <version>1.4.2</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-webdav-jackrabbit</artifactId>
        <version>2.4</version>
      </extension>
    </extensions>
  </build>

  <distributionManagement>

    <repository>
      <id>codehaus.org</id>
      <name>Enunciate Central Repository</name>
      <url>dav:https://dav.codehaus.org/repository/enunciate/</url>
    </repository>

    <snapshotRepository>
      <id>codehaus.org</id>
      <name>Enunciate Central Development Repository</name>
      <url>dav:https://dav.codehaus.org/snapshots.repository/enunciate/</url>
    </snapshotRepository>

  </distributionManagement>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.enunciate</groupId>
    <artifactId>enunciate-parent</artifactId>
    <version>1.29-SNAPSHOT</version>
  </parent>

  <artifactId>enunciate-java-client</artifactId>
  <name>Enunciate - Java Client Module</name>
  <description>The Enunciate Java Client module generates the client-side artifacts for invoking a web service endpoint via Java.</description>

  <build>
    <testResources>
      <testResource>
        <directory>${basedir}/src/test/resources</directory>
      </testResource>
      <testResource>
        <directory>${project.build.directory}/enunciate/gen/java-client</directory>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <!--<debugForkedProcess>true</debugForkedProcess>-->
          <systemProperties>
            <property>
              <name>in.apt.src.test.dir</name>
              <value>${basedir}/src/main/samples/java-client</value>
            </property>
          </systemProperties>
        </configuration>
      </plugin>
      <plugin>
        <!--
        we need to generate some java client-side classes for testing purposes.
        we'll use the Enunciate ant task to do it.
        -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>enunciate</id>
            <phase>generate-test-resources</phase>
            <configuration>
              <tasks>
                <path id="enunciate.classpath">
                  <path refid="maven.test.classpath" />
                  <pathelement location="${java.home}/../lib/tools.jar" />
                </path>

                <taskdef name="enunciate" classname="org.codehaus.enunciate.main.EnunciateTask">
                  <classpath refid="enunciate.classpath" />
                </taskdef>

                <mkdir dir="${project.build.directory}/enunciate/gen" />
                <mkdir dir="${project.build.directory}/enunciate/compile" />

                <enunciate target="generate" basedir="${basedir}/src/main/samples/schema" configFile="${basedir}/src/main/samples/schema/enunciate.xml" generateDir="${project.build.directory}/enunciate/gen">
                  <include name="**/*.java" />
                  <classpath refid="enunciate.classpath" />
                </enunciate>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!--now we need to add the generated sources we're testing to the test classpath-->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-test-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${basedir}/src/main/samples/schema</source>
                <source>${project.build.directory}/enunciate/gen/java-client</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-xml</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core</artifactId>
      <version>${project.version}</version>

      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>

      <!--for testing the xmladapters only-->
      <scope>test</scope>
    </dependency>

    <dependency>
      <!--depending modules: jersey-rt-->
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-jaxrs</artifactId>

      <scope>test</scope>
    </dependency>

    <dependency>
      <!--depending modules: jersey-rt-->
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-xc</artifactId>

      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-server</artifactId>

      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>javax.mail</groupId>
      <artifactId>mail</artifactId>

      <scope>test</scope>
    </dependency>
  </dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.enunciate</groupId>
    <artifactId>enunciate-parent</artifactId>
    <version>1.29-SNAPSHOT</version>
  </parent>

  <artifactId>enunciate-jaxws-ri-rt</artifactId>
  <name>Enunciate - JAX-WS RI Runtime</name>
  <description>The JAX-WS RI runtime is a reference to all JAX-WS RI dependencies. There are no significant classes; just a reference to the runtime dependencies.</description>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core-rt</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>com.sun.xml.ws</groupId>
      <artifactId>jaxws-rt</artifactId>
      <!-- note that if you change to jaxws rt version greater than 2.2, it won't work on Java 6 without "endorsing" it. See this nastiness: http://www.coderanch.com/t/516313/Web-Services/java/NoSuchMethodError -->
      <version>2.1.7</version>
      <exclusions>
        <exclusion>
          <groupId>activation</groupId>
          <artifactId>activation</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

  </dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.enunciate</groupId>
    <artifactId>enunciate-parent</artifactId>
    <version>1.29-SNAPSHOT</version>
  </parent>

  <artifactId>enunciate-jaxws-ri</artifactId>
  <name>Enunciate - JAX-WS Reference Implementation Module</name>
  <description>The Enunciate JAX-WS Reference Implementation module provides support for JAX-WS RI on the server-side.</description>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core</artifactId>
      <version>${project.version}</version>

      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>

  </dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.enunciate</groupId>
    <artifactId>enunciate-parent</artifactId>
    <version>1.29-SNAPSHOT</version>
  </parent>

  <artifactId>enunciate-jaxws-support</artifactId>
  <name>Enunciate - JAX-WS Support Module</name>
  <description>The Enunciate JAX-WS support module generates the JAX-WS wrapper classes for the Enunciated project.</description>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <!--<debugForkedProcess>true</debugForkedProcess>-->
          <systemProperties>
            <property>
              <name>in.apt.src.test.dir</name>
              <value>${basedir}/src/main/samples/jaxws</value>
            </property>
          </systemProperties>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core</artifactId>
      <version>${project.version}</version>

      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>
  </dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.enunciate</groupId>
    <artifactId>enunciate-parent</artifactId>
    <version>1.29-SNAPSHOT</version>
  </parent>

  <artifactId>enunciate-jboss-rt</artifactId>
  <name>Enunciate - JBoss Runtime</name>

  <properties>
    <resteasy.version>2.2.1.GA</resteasy.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core-rt</artifactId>
      <version>${project.version}</version>
      <exclusions>
        <exclusion>
          <!--we're going to exclude jsr311-api because resteasy has its own dep on it-->
          <groupId>javax.ws.rs</groupId>
          <artifactId>jsr311-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-rt</artifactId>
      <version>${project.version}</version>
      <exclusions>
        <exclusion>
          <!--jboss comes with its own packaging of jaxb-->
          <groupId>javax.xml.bind</groupId>
          <artifactId>jaxb-api</artifactId>
        </exclusion>
        <exclusion>
          <!--disable the jersey dependencies, since those are the default-->
          <groupId>${project.groupId}</groupId>
          <artifactId>enunciate-jersey-rt</artifactId>
        </exclusion>
        <exclusion>
          <groupId>${project.groupId}</groupId>
          <artifactId>enunciate-jaxws-ri-rt</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-jaxrs</artifactId>
    </dependency>

    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-xc</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jaxrs</artifactId>
      <version>${resteasy.version}</version>

      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jaxb-provider</artifactId>
      <version>${resteasy.version}</version>
      <exclusions>
        <exclusion>
          <groupId>com.sun.xml.bind</groupId>
          <artifactId>jaxb-impl</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.sun.xml.stream</groupId>
          <artifactId>sjsxp</artifactId>
        </exclusion>
      </exclusions>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jackson-provider</artifactId>
      <version>${resteasy.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      
      <scope>provided</scope>
    </dependency>

  </dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.enunciate</groupId>
    <artifactId>enunciate-parent</artifactId>
    <version>1.29-SNAPSHOT</version>
  </parent>

  <artifactId>enunciate-jboss</artifactId>
  <name>Enunciate - JBoss Module</name>
  <description>The Enunciate JBoss module provides support for JBoss stack on the server-side.</description>

  <properties>
    <resteasy.version>2.2.1.GA</resteasy.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-jboss-rt</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jaxrs</artifactId>
      <version>${resteasy.version}</version>
    </dependency>

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jaxb-provider</artifactId>
      <version>${resteasy.version}</version>
      <exclusions>
        <exclusion>
          <groupId>com.sun.xml.bind</groupId>
          <artifactId>jaxb-impl</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.sun.xml.stream</groupId>
          <artifactId>sjsxp</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jackson-provider</artifactId>
      <version>${resteasy.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core</artifactId>
      <version>${project.version}</version>

      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>

  </dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.enunciate</groupId>
    <artifactId>enunciate-parent</artifactId>
    <version>1.29-SNAPSHOT</version>
  </parent>

  <artifactId>enunciate-jersey-rt</artifactId>
  <name>Enunciate - Jersey Runtime</name>
  <description>The Enunciate Jersey runtime contains the libraries to support a Jersey-based REST project.</description>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core-rt</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>cglib</groupId>
      <artifactId>cglib-nodep</artifactId>

      <!-- use cglib if your resource methods are -->
      <!-- not all defined by interfaces. -->
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-jaxrs</artifactId>
    </dependency>

    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-xc</artifactId>
    </dependency>

    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-server</artifactId>
    </dependency>

    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-servlet</artifactId>
      <version>${jersey.version}</version>
    </dependency>

    <dependency>
      <groupId>javax.mail</groupId>
      <artifactId>mail</artifactId>
    </dependency>

    <!--
        we explicitly depend on jaxb-impl (even for JDK6) in order to implement
        the namespace prefix mapper, which doesn't work with the JDK 6 implementation.
    -->
    <dependency>
      <groupId>com.sun.xml.bind</groupId>
      <artifactId>jaxb-impl</artifactId>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>

      <scope>provided</scope>
    </dependency>

    <!--spring dependency (optional)-->
    <dependency>
      <groupId>com.sun.jersey.contribs</groupId>
      <artifactId>jersey-spring</artifactId>
      <version>${jersey.version}</version>

      <optional>true</optional>
    </dependency>

  </dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.enunciate</groupId>
    <artifactId>enunciate-parent</artifactId>
    <version>1.29-SNAPSHOT</version>
  </parent>

  <artifactId>enunciate-jersey</artifactId>
  <name>Enunciate - Jersey Module</name>
  <description>The Enunciate Jersey module generates the Jersey support for the Enunciated project.</description>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-jersey-rt</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core</artifactId>
      <version>${project.version}</version>

      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>
  </dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.enunciate</groupId>
    <artifactId>enunciate-parent</artifactId>
    <version>1.29-SNAPSHOT</version>
  </parent>

  <artifactId>maven-enunciate-cxf-plugin</artifactId>
  <packaging>maven-plugin</packaging>
  <name>Enunciate - CXF Maven Plugin</name>
  <description>Maven 2 plugin for invoking Enunciate with Spring/CXF enhancements.</description>

  <build>
    <plugins>
      <plugin>
        <groupId>org.ops4j</groupId>
        <artifactId>maven-inherit-plugin</artifactId>
        <version>1.1</version>
        <executions>
          <execution>
            <goals>
              <goal>inherit</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>maven-enunciate-plugin</artifactId>
      <type>maven-plugin</type>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-cxf</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <version>2.0.1</version>
    </dependency>

    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-project</artifactId>
      <version>2.0</version>
    </dependency>

    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <version>2.0</version>
    </dependency>

    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-filtering</artifactId>
      <version>1.0-beta-2</version>
    </dependency>
    
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <version>1.5.6</version>
    </dependency>

  </dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.enunciate</groupId>
    <artifactId>enunciate-parent</artifactId>
    <version>1.29-SNAPSHOT</version>
  </parent>

  <artifactId>maven-enunciate-jboss-plugin</artifactId>
  <packaging>maven-plugin</packaging>
  <name>Enunciate - JBoss Maven Plugin</name>
  <description>Maven 2 plugin for invoking Enunciate with JBoss enhancements.</description>

  <build>
    <plugins>
      <plugin>
        <groupId>org.ops4j</groupId>
        <artifactId>maven-inherit-plugin</artifactId>
        <version>1.1</version>
        <executions>
          <execution>
            <goals>
              <goal>inherit</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>maven-enunciate-plugin</artifactId>
      <type>maven-plugin</type>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-jboss</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <version>2.0.1</version>
    </dependency>

    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-project</artifactId>
      <version>2.0</version>
    </dependency>

    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <version>2.0</version>
    </dependency>

    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-filtering</artifactId>
      <version>1.0-beta-2</version>
    </dependency>
    
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <version>1.5.6</version>
    </dependency>

  </dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.enunciate</groupId>
    <artifactId>enunciate-parent</artifactId>
    <version>1.29-SNAPSHOT</version>
  </parent>

  <artifactId>maven-enunciate-plugin</artifactId>
  <packaging>maven-plugin</packaging>
  <name>Enunciate - Maven Plugin</name>
  <description>Maven 2 plugin for invoking Enunciate.</description>

  <build>
    <plugins>
      <plugin>
        <groupId>org.ops4j</groupId>
        <artifactId>maven-inherit-plugin</artifactId>
        <version>1.1</version>
        <executions>
          <execution>
            <goals>
              <goal>inherit</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>maven-enunciate-slim-plugin</artifactId>
      <type>maven-plugin</type>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.maven.enforcer</groupId>
      <artifactId>enforcer-api</artifactId>
      <version>1.0</version>

      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <version>2.0.1</version>
    </dependency>

    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-project</artifactId>
      <version>2.0</version>
    </dependency>

    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <version>3.0.3</version>
    </dependency>

    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-filtering</artifactId>
      <version>1.0</version>
    </dependency>

    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <version>3.0</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-top</artifactId>
      <version>${project.version}</version>
    </dependency>
  </dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.enunciate</groupId>
    <artifactId>enunciate-parent</artifactId>
    <version>1.29-SNAPSHOT</version>
  </parent>

  <artifactId>maven-enunciate-slim-plugin</artifactId>
  <packaging>maven-plugin</packaging>
  <name>Enunciate - Slim Maven Plugin</name>
  <description>Slim Maven 2 plugin for invoking Enunciate.</description>

  <build>
    <plugins>
      <plugin>
        <groupId>org.ops4j</groupId>
        <artifactId>maven-inherit-plugin</artifactId>
        <version>1.1</version>
        <executions>
          <execution>
            <goals>
              <goal>inherit</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <contributors>
    <contributor>
      <name>Marvin Froeder</name>
      <email>velo.br@gmail.com</email>
      <roles>
        <role>ENUNCIATE-460</role>
      </roles>
    </contributor>
  </contributors>

  <dependencies>
    <dependency>
      <groupId>org.apache.maven.enforcer</groupId>
      <artifactId>enforcer-api</artifactId>
      <version>1.0</version>

      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-install-plugin</artifactId>
      <type>maven-plugin</type>
      <version>2.3.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-deploy-plugin</artifactId>
      <type>maven-plugin</type>
      <version>2.7</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <version>2.0.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-project</artifactId>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-filtering</artifactId>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core</artifactId>
      <version>${project.version}</version>
      <scope>compile</scope>
    </dependency>
  </dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.enunciate</groupId>
    <artifactId>enunciate-parent</artifactId>
    <version>1.29-SNAPSHOT</version>
  </parent>

  <artifactId>maven-enunciate-spring-plugin</artifactId>
  <packaging>maven-plugin</packaging>
  <name>Enunciate - Spring Maven Plugin</name>
  <description>Maven 2 plugin for invoking Enunciate with Spring enhancements.</description>

  <build>
    <plugins>
      <plugin>
        <groupId>org.ops4j</groupId>
        <artifactId>maven-inherit-plugin</artifactId>
        <version>1.1</version>
        <executions>
          <execution>
            <goals>
              <goal>inherit</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>maven-enunciate-plugin</artifactId>
      <type>maven-plugin</type>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-spring-app</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <version>2.0.1</version>
    </dependency>

    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-project</artifactId>
      <version>2.0</version>
    </dependency>

    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <version>2.0</version>
    </dependency>

    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-filtering</artifactId>
      <version>1.0-beta-2</version>
    </dependency>
    
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <version>1.5.6</version>
    </dependency>

  </dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.enunciate</groupId>
    <artifactId>enunciate-parent</artifactId>
    <version>1.29-SNAPSHOT</version>
  </parent>

  <artifactId>enunciate-obj-c</artifactId>
  <name>Enunciate - Objective C Module</name>
  <description>The Enunciate Objective C module generates the Objective C client code for accessing the Enunciate services.</description>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>require.gcc.or.skip</id>
            <phase>validate</phase>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireProperty>
                  <property>gcc.executable</property>
                  <message>In order to build the Objective C module, you must have gcc installed along with libxml and gnustep.
Define a profile in your settings.xml file that defines the path to your 'gcc'
executable in the property 'gcc.executable'. Also set a property named 'libxml.config.executable' that
specifies the executable that exposes your libxml compiler flags and library includes.
Also set a property named 'gnustep.config.executable' that specifies the executable that exposes your gnustep compiler flags and library includes.
If you just want to skip the Objective C tests, set the value of the property 'gcc.executable' to be 'true'.
(And don't ask any questions about why that works. Maven mess.)</message>
                </requireProperty>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!--
        we need to generate some objective C client-side classes for testing purposes.
        we'll use the Enunciate ant task to do it.
        -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>enunciate</id>
            <phase>generate-test-resources</phase>
            <configuration>
              <tasks>
                <path id="enunciate.classpath">
                  <path refid="maven.test.classpath" />
                  <pathelement location="${java.home}/../lib/tools.jar" />
                </path>

                <taskdef name="enunciate" classname="org.codehaus.enunciate.main.EnunciateTask">
                  <classpath refid="enunciate.classpath" />
                </taskdef>

                <mkdir dir="${project.build.directory}/enunciate/gen" />
                <mkdir dir="${project.build.directory}/enunciate/compile" />
                <mkdir dir="${project.build.directory}/ctests"/>

                <enunciate target="compile" basedir="${basedir}/src/test/schema"
                           generateDir="${project.build.directory}/enunciate/gen"
                           compileDir="${project.build.directory}/enunciate/compile"
                           configFile="${project.basedir}/enunciate.xml">
                  <include name="**/*.java" />
                  <classpath refid="enunciate.classpath" />
                </enunciate>

                <copy todir="${project.build.directory}/enunciate/gen/obj-c" file="${project.build.testSourceDirectory}/../obj-c/processxml.m"/>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <id>compile-obj-c</id>
            <phase>test-compile</phase>
            <configuration>
              <tasks>
                <property name="gcc.executable" value="${gcc.executable}"/>
                <property name="libxml.config.executable" value="${libxml.config.executable}"/>
                <property name="gnustep.config.executable" value="${gnustep.config.executable}"/>
                <property name="project.build.directory" value="${project.build.directory}"/>
                
                <ant antfile="${basedir}/gcc-compile.xml">
                  <target name="gcc"/>
                </ant>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.1.1</version>
        <executions>
          <execution>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <!--compile the C tests using the gcc executable. -->
              <executable>${gcc.executable}</executable>
              <skip>${gcc.executable}</skip>
              <arguments>
                <argument>-Wall</argument>
                <argument>-Wno-unused-variable</argument>
                <argument>-Wno-unused-function</argument>
                <argument>-Werror</argument>
                <argument>${gcc.libxml.cflags}</argument>
                <argument>-I${project.build.directory}/enunciate/gen/obj-c</argument>
                <argument>${gcc.libxml.libs}</argument>
                <argument>-o</argument>
                <argument>${project.build.directory}/enunciate/gen/obj-c/processxml</argument>
                <argument>${project.build.directory}/enunciate/gen/obj-c/processxml.m</argument>
              </arguments>
              <workingDirectory>${project.build.directory}</workingDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <systemProperties>
            <property>
              <name>skip.objc.tests</name>
              <value>${gcc.executable}</value>
            </property>
            <property>
              <name>processxml.exe</name>
              <value>${project.build.directory}/enunciate/gen/obj-c/processxml</value>
            </property>
            <property>
              <name>xml.tempdir</name>
              <value>${project.build.directory}/ctests</value>
            </property>
          </systemProperties>
        </configuration>
      </plugin>
      <plugin>
        <!--now we need to add the generated sources we're testing to the test classpath-->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-test-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${basedir}/src/test/schema</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core</artifactId>
      <version>${project.version}</version>

      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>

      <!--for testing the xmladapters only-->
      <scope>test</scope>
    </dependency>

  </dependencies>


</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.enunciate</groupId>
    <artifactId>enunciate-parent</artifactId>
    <version>1.29-SNAPSHOT</version>
  </parent>

  <artifactId>enunciate-php</artifactId>
  <name>Enunciate - PHP Module</name>
  <description>The Enunciate PHP module generates the PHP client code for accessing the Enunciate services.</description>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>require.php.or.skip</id>
            <phase>validate</phase>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireProperty>
                  <property>php.executable</property>
                  <message>In order to build the PHP module, you must have PHP installed.
Then, define a profile in your settings.xml file that defines the path to your 'php' executable in the property 'php.executable'.
If you just want to skip the PHP tests, set the value of the property 'php.executable' to be 'true'. (And don't ask any questions about why that works. Maven mess.)</message>
                </requireProperty>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!--
        we need to generate some PHP client-side classes for testing purposes.
        we'll use the Enunciate ant task to do it.
        -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>enunciate</id>
            <phase>generate-test-resources</phase>
            <configuration>
              <tasks>
                <path id="enunciate.classpath">
                  <path refid="maven.test.classpath" />
                  <pathelement location="${java.home}/../lib/tools.jar" />
                </path>

                <taskdef name="enunciate" classname="org.codehaus.enunciate.main.EnunciateTask">
                  <classpath refid="enunciate.classpath" />
                </taskdef>

                <mkdir dir="${project.build.directory}/enunciate/gen" />
                <mkdir dir="${project.build.directory}/enunciate/compile" />
                <mkdir dir="${project.build.directory}/jsontests"/>

                <enunciate target="compile" basedir="${basedir}/src/test/schema"
                           generateDir="${project.build.directory}/enunciate/gen"
                           compileDir="${project.build.directory}/enunciate/compile"
                           configFile="${project.basedir}/enunciate.xml">
                  <include name="**/*.java" />
                  <classpath refid="enunciate.classpath" />
                </enunciate>

                <copy todir="${project.build.directory}/enunciate/gen/php" file="${project.build.testSourceDirectory}/../php/processjson.php"/>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <systemProperties>
            <property>
              <name>skip.php.tests</name>
              <value>${php.executable}</value>
            </property>
            <property>
              <name>php.execuable</name>
              <value>${php.executable}</value>
            </property>
            <property>
              <name>processjson.php</name>
              <value>${project.build.directory}/enunciate/gen/php/processjson.php</value>
            </property>
            <property>
              <name>json.tempdir</name>
              <value>${project.build.directory}/jsontests</value>
            </property>
          </systemProperties>
        </configuration>
      </plugin>
      <plugin>
        <!--now we need to add the generated sources we're testing to the test classpath-->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-test-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${basedir}/src/test/schema</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core</artifactId>
      <version>${project.version}</version>

      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>

      <!--for testing the xmladapters only-->
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-jaxrs</artifactId>

      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-xc</artifactId>

      <scope>test</scope>
    </dependency>

  </dependencies>


</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.codehaus.enunciate</groupId>
  <artifactId>enunciate-parent</artifactId>
  <packaging>pom</packaging>
  <version>1.29-SNAPSHOT</version>
  <name>Enunciate - Parent</name>

  <modules>
    <module>core-annotations</module>
    <module>core-rt</module>
    <module>core</module>

    <module>maven-enunciate-slim-plugin</module>

    <module>xml</module>
    <module>jaxws-support</module>
    <module>jaxws-ri-rt</module>
    <module>jaxws-ri</module>
    <module>jersey-rt</module>
    <module>jersey</module>
    <module>java-client</module>
    <module>c</module>
    <module>obj-c</module>
    <module>csharp</module>
    <module>ruby</module>
    <module>php</module>
    <module>swagger</module>
    <module>docs</module>
    <module>amf-rt</module>
    <module>amf</module>
    <module>gwt-rt</module>
    <module>gwt</module>

    <module>top-rt</module>
    <module>top</module>

    <module>spring-jaxws-rt</module>
    <module>spring-app-rt</module>
    <module>spring3-app-rt</module>
    <module>spring-app</module>

    <module>cxf-rt</module>
    <module>cxf</module>

    <module>jboss-rt</module>
    <module>jboss</module>

    <module>maven-enunciate-plugin</module>
    <module>maven-enunciate-spring-plugin</module>
    <module>maven-enunciate-cxf-plugin</module>
    <module>maven-enunciate-jboss-plugin</module>

    <module>enunciate-simple-archetype</module>
    <module>integration-tests</module>
  </modules>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.15</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.8</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.4</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-idea-plugin</artifactId>
        <version>2.3-atlassian-10</version>
        <configuration>
          <downloadSources>true</downloadSources>
          <exclude>cargo-installs,target/tomcat5x,target/war</exclude>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <version>2.7</version>
        <configuration>
          <downloadJavadocs>true</downloadJavadocs>
          <downloadSources>true</downloadSources>
          <useProjectReferences>false</useProjectReferences>
          <classpathContainers>
            <classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5</classpathContainer>
          </classpathContainers>
          <additionalConfig>
            <file>
              <name>.settings/org.eclipse.core.resources.prefs</name>
              <content>
                <![CDATA[eclipse.preferences.version=1${line.separator}encoding/<project>=${project.build.sourceEncoding}${line.separator}]]>
              </content>
            </file>
          </additionalConfig>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>2.2.1</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>2.4.1</version>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>animal-sniffer-maven-plugin</artifactId>
        <version>1.7</version>
        <configuration>
          <signature>
            <groupId>org.codehaus.mojo.signature</groupId>
            <artifactId>java16</artifactId>
            <version>1.0</version>
          </signature>
        </configuration>
        <executions>
          <execution>
            <id>enforce-java-6</id>
            <phase>test</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>1.2</version>
        <executions>
          <execution>
            <id>require.mono.for.deploy</id>
            <phase>deploy</phase>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireProperty>
                  <property>gmcs.executable</property>
                  <message>In order to deploy Enunciate, you must have Mono installed.
                    First install Mono for your platform. (See http://mono-project.com/Start and note there's a Windows version of Mono, too.)
                    Then, define a profile in your settings.xml file that defines the path to your 'gmcs' executable in the property 'gmcs.executable'.
                  </message>
                </requireProperty>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>1.8</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-webdav-jackrabbit</artifactId>
        <version>2.4</version>
      </extension>
    </extensions>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>2.15</version>
      </plugin>
    </plugins>
  </reporting>

  <scm>
	  <connection>scm:git:git@github.com:stoicflame/enunciate.git</connection>
	  <url>scm:git:git@github.com:stoicflame/enunciate.git</url>
	  <developerConnection>scm:git:git@github.com:stoicflame/enunciate.git</developerConnection>
  </scm>

  <dependencies>
    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymock</artifactId>
      <version>2.2</version>

      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>

      <scope>test</scope>
    </dependency>
  </dependencies>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <jersey.version>1.11</jersey.version>
    <jackson.version>1.9.3</jackson.version>
    <donations.url>https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;hosted_button_id=HXSXBXUT63RCG</donations.url>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>cglib</groupId>
        <artifactId>cglib-nodep</artifactId>
        <version>2.2.2</version>
      </dependency>

      <dependency>
        <groupId>com.sun.jersey</groupId>
        <artifactId>jersey-server</artifactId>
        <version>${jersey.version}</version>
      </dependency>

      <dependency>
        <groupId>com.sun.xml.bind</groupId>
        <artifactId>jaxb-impl</artifactId>
        <version>2.2.3</version>
        <exclusions>
          <!--exclude jaxb-api because it ships with the jdk-->
          <exclusion>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>commons-logging</groupId>
        <artifactId>commons-logging</artifactId>
        <version>1.1.1</version>
      </dependency>

      <dependency>
        <groupId>javax.annotation</groupId>
        <artifactId>jsr250-api</artifactId>
        <version>1.0</version>
      </dependency>

      <dependency>
        <groupId>javax.mail</groupId>
        <artifactId>mail</artifactId>
        <version>1.4.4</version>
      </dependency>

      <dependency>
        <groupId>javax.ws.rs</groupId>
        <artifactId>jsr311-api</artifactId>
        <version>1.1.1</version>
      </dependency>

      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>servlet-api</artifactId>
        <version>2.3</version>
      </dependency>

      <dependency>
        <groupId>org.jdom</groupId>
        <artifactId>jdom</artifactId>
        <version>1.1.2</version>
        <exclusions>
          <exclusion>
            <groupId>jaxen</groupId>
            <artifactId>jaxen</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>joda-time</groupId>
        <artifactId>joda-time</artifactId>
        <version>1.6.2</version>
      </dependency>

      <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>1.2.16</version>
      </dependency>

      <dependency>
        <groupId>org.codehaus.jackson</groupId>
        <artifactId>jackson-mapper-asl</artifactId>
        <version>${jackson.version}</version>
      </dependency>

      <dependency>
        <groupId>org.codehaus.jackson</groupId>
        <artifactId>jackson-jaxrs</artifactId>
        <version>${jackson.version}</version>
      </dependency>

      <dependency>
        <groupId>org.codehaus.jackson</groupId>
        <artifactId>jackson-xc</artifactId>
        <version>${jackson.version}</version>
      </dependency>

    </dependencies>

  </dependencyManagement>

  <pluginRepositories>
    <pluginRepository>
      <id>atlassian</id>
      <url>https://maven.atlassian.com/repository/public</url>
    </pluginRepository>
  </pluginRepositories>

  <distributionManagement>

    <repository>
      <id>codehaus.org</id>
      <name>Enunciate Central Repository</name>
      <url>dav:https://dav.codehaus.org/repository/enunciate/</url>
    </repository>

    <snapshotRepository>
      <id>codehaus.org</id>
      <name>Enunciate Central Development Repository</name>
      <url>dav:https://dav.codehaus.org/snapshots.repository/enunciate/</url>
    </snapshotRepository>

  </distributionManagement>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.enunciate</groupId>
    <artifactId>enunciate-parent</artifactId>
    <version>1.29-SNAPSHOT</version>
  </parent>

  <artifactId>enunciate-ruby</artifactId>
  <name>Enunciate - Ruby Module</name>
  <description>The Enunciate Ruby module generates the Ruby client code for accessing the Enunciate services.</description>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>require.ruby.or.skip</id>
            <phase>validate</phase>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireProperty>
                  <property>ruby.executable</property>
                  <message>In order to build the Ruby module, you must have Ruby installed.
Then, define a profile in your settings.xml file that defines the path to your 'ruby' executable in the property 'ruby.executable'.
If you just want to skip the Ruby tests, set the value of the property 'ruby.executable' to be 'true'. (And don't ask any questions about why that works. Maven mess.)</message>
                </requireProperty>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!--
        we need to generate some Ruby client-side classes for testing purposes.
        we'll use the Enunciate ant task to do it.
        -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>enunciate</id>
            <phase>generate-test-resources</phase>
            <configuration>
              <tasks>
                <path id="enunciate.classpath">
                  <path refid="maven.test.classpath" />
                  <pathelement location="${java.home}/../lib/tools.jar" />
                </path>

                <taskdef name="enunciate" classname="org.codehaus.enunciate.main.EnunciateTask">
                  <classpath refid="enunciate.classpath" />
                </taskdef>

                <mkdir dir="${project.build.directory}/enunciate/gen" />
                <mkdir dir="${project.build.directory}/enunciate/compile" />
                <mkdir dir="${project.build.directory}/jsontests"/>

                <enunciate target="compile" basedir="${basedir}/src/test/schema"
                           generateDir="${project.build.directory}/enunciate/gen"
                           compileDir="${project.build.directory}/enunciate/compile"
                           configFile="${project.basedir}/enunciate.xml">
                  <include name="**/*.java" />
                  <classpath refid="enunciate.classpath" />
                </enunciate>

                <copy todir="${project.build.directory}/enunciate/gen/ruby" file="${project.build.testSourceDirectory}/../ruby/processjson.rb"/>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <systemProperties>
            <property>
              <name>skip.ruby.tests</name>
              <value>${ruby.executable}</value>
            </property>
            <property>
              <name>ruby.execuable</name>
              <value>${ruby.executable}</value>
            </property>
            <property>
              <name>processjson.rb</name>
              <value>${project.build.directory}/enunciate/gen/ruby/processjson.rb</value>
            </property>
            <property>
              <name>json.tempdir</name>
              <value>${project.build.directory}/jsontests</value>
            </property>
          </systemProperties>
        </configuration>
      </plugin>
      <plugin>
        <!--now we need to add the generated sources we're testing to the test classpath-->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-test-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${basedir}/src/test/schema</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core</artifactId>
      <version>${project.version}</version>

      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>

      <!--for testing the xmladapters only-->
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-jaxrs</artifactId>

      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-xc</artifactId>

      <scope>test</scope>
    </dependency>

  </dependencies>


</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.enunciate</groupId>
    <artifactId>enunciate-parent</artifactId>
    <version>1.29-SNAPSHOT</version>
  </parent>

  <properties>
    <spring2.version>2.5.4</spring2.version>
  </properties>

  <artifactId>enunciate-spring-app-rt</artifactId>
  <name>Enunciate - Spring Application Runtime</name>
  <description>The Enunciate Spring Application Runtime Library supports the Enunciate-generated spring application that handles the Web service API.</description>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-aop</artifactId>
        <version>${spring2.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-beans</artifactId>
        <version>${spring2.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>${spring2.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-core</artifactId>
        <version>${spring2.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-web</artifactId>
        <version>${spring2.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-webmvc</artifactId>
        <version>${spring2.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <!--the core enunciate runtime dependencies (without spring)-->
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-rt</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <!--the jaxws-ri-spring integration dependencies-->
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-spring-jaxws-rt</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>

      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aop</artifactId>
      <version>${spring2.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <version>${spring2.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring2.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${spring2.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${spring2.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${spring2.version}</version>
    </dependency>

    <dependency>
      <groupId>com.sun.jersey.contribs</groupId>
      <artifactId>jersey-spring</artifactId>
      <version>${jersey.version}</version>
    </dependency>

  </dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.enunciate</groupId>
    <artifactId>enunciate-parent</artifactId>
    <version>1.29-SNAPSHOT</version>
  </parent>

  <artifactId>enunciate-spring-app</artifactId>
  <name>Enunciate - Spring App Module</name>
  <description>The Enunciate Spring App module builds and assembles the spring app in the form of a war.</description>

  <dependencies>
    <dependency>
      <!--for some spring-based path matching for the include/exclude jar mechanism-->
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core</artifactId>
      <version>${project.version}</version>

      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>

  </dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.enunciate</groupId>
    <artifactId>enunciate-parent</artifactId>
    <version>1.29-SNAPSHOT</version>
  </parent>

  <artifactId>enunciate-spring-jaxws-rt</artifactId>
  <name>Enunciate - JAX-WS RI Runtime Spring Support</name>
  <description>The Enunciate JAX-WS Reference Implementation runtime libraries support the Spring-based JAX-WS RI-backed SOAP endpoints.</description>

  <dependencies>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core-rt</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-jaxws-ri-rt</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
    </dependency>

    <dependency>
      <!-- cglib because the JAX-WS RI invokes the implementation
          methods on the potentially-advised endpoints -->
      <groupId>cglib</groupId>
      <artifactId>cglib-nodep</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>2.5.4</version>

      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>2.5.4</version>

      <scope>provided</scope>
    </dependency>

    <dependency>
      <!--depending modules: spring-jaxws-rt-->
      <groupId>org.jvnet.jax-ws-commons.spring</groupId>
      <artifactId>jaxws-spring</artifactId>
      <version>1.8</version>

      <!--sigh. maybe someday someone will release a cleaned-up pom for jaxws-spring-->
      <exclusions>
        <exclusion>
          <!--we'll use enunciate's version of jaxws-rt-->
          <groupId>com.sun.xml.ws</groupId>
          <artifactId>jaxws-rt</artifactId>
        </exclusion>

        <exclusion>
          <!--we'll use enunciate's version of activation-->
          <groupId>activation</groupId>
          <artifactId>activation</artifactId>
        </exclusion>

        <exclusion>
          <!--this should be optional-->
          <groupId>javax.servlet</groupId>
          <artifactId>servlet-api</artifactId>
        </exclusion>

        <exclusion>
          <!--we'll use enunciate's version of spring-->
          <groupId>org.springframework</groupId>
          <artifactId>spring</artifactId>
        </exclusion>

        <exclusion>
          <!--we'll use enunciate's version of spring-->
          <groupId>org.springframework</groupId>
          <artifactId>spring-core</artifactId>
        </exclusion>

        <exclusion>
          <!--we'll use enunciate's version of spring-->
          <groupId>org.springframework</groupId>
          <artifactId>spring-context</artifactId>
        </exclusion>

        <exclusion>
          <!--we'll use enunciate's version of jsr181-->
          <groupId>javax.jws</groupId>
          <artifactId>jsr181-api</artifactId>
        </exclusion>

        <exclusion>
          <!--we'll use enunciate's version of jaxb-->
          <groupId>com.sun.xml.bind</groupId>
          <artifactId>jaxb-impl</artifactId>
        </exclusion>

        <exclusion>
          <!--we'll use enunciate's version of activation-->
          <groupId>javax.activation</groupId>
          <artifactId>activation</artifactId>
        </exclusion>

        <exclusion>
          <!--we'll use enunciate's version of stax-->
          <groupId>javax.xml.stream</groupId>
          <artifactId>stax-api</artifactId>
        </exclusion>

        <exclusion>
          <!--we'll use enunciate's version of staxex-->
          <groupId>org.jvnet.staxex</groupId>
          <artifactId>stax-ex</artifactId>
        </exclusion>

        <exclusion>
          <!--we'll use enunciate's version of streambuffer-->
          <groupId>com.sun.xml.stream.buffer</groupId>
          <artifactId>streambuffer</artifactId>
        </exclusion>

        <exclusion>
          <!--we'll use enunciate's version of sjsxp -->
          <groupId>com.sun.xml.stream</groupId>
          <artifactId>sjsxp</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.enunciate</groupId>
    <artifactId>enunciate-parent</artifactId>
    <version>1.29-SNAPSHOT</version>
  </parent>

  <artifactId>enunciate-spring3-app-rt</artifactId>
  <name>Enunciate - Spring 3 Application Runtime</name>
  <description>The Enunciate Spring 3 Application Runtime Library supports the Enunciate-generated spring application that handles the Web service API.</description>

  <properties>
    <spring3.version>3.0.2.RELEASE</spring3.version>
    <spring3.security.version>3.0.2.RELEASE</spring3.security.version>
    <spring.security.oauth.version>3.16.SS3</spring.security.oauth.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-aop</artifactId>
        <version>${spring3.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-beans</artifactId>
        <version>${spring3.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>${spring3.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-core</artifactId>
        <version>${spring3.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-web</artifactId>
        <version>${spring3.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-webmvc</artifactId>
        <version>${spring3.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <!--the core enunciate runtime dependencies (without spring)-->
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-rt</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <!--the jaxws-ri-spring integration dependencies-->
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-spring-jaxws-rt</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>

      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aop</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
    </dependency>

    <dependency>
      <groupId>com.sun.jersey.contribs</groupId>
      <artifactId>jersey-spring</artifactId>
      <version>${jersey.version}</version>
    </dependency>

  </dependencies>

</project>
<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>net.java.ws.bookstore</groupId>
  <artifactId>bookstore</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>bookstore</name>
  <description>A Bookstore Rest Service, persisting with Hibernate.</description>

  <properties>
    <hibernate.version>3.3.0.ga</hibernate.version>
    <spring.version>2.5.6</spring.version>
  </properties>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.enunciate</groupId>
        <artifactId>maven-enunciate-plugin</artifactId>
        <version>1.29-SNAPSHOT</version>
        <executions>
          <execution>
            <goals>
              <goal>assemble</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>maven-jetty-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <!-- Logging dependencies -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.5.0</version>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.14</version>
    </dependency>

    <!-- Database dependencies -->
    <dependency>
      <groupId>hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <version>1.8.0.7</version>
    </dependency>
    <dependency>
      <groupId>c3p0</groupId>
      <artifactId>c3p0</artifactId>
      <version>0.9.1.2</version>
    </dependency>

    <!-- Hibernate dependencies -->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-annotations</artifactId>
      <version>${hibernate.version}</version>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-commons-annotations</artifactId>
      <version>${hibernate.version}</version>
    </dependency>
    <!--
      We need to pull this in to get round asm problems with Hibernate
      and Jersey.
    -->
    <dependency>
      <groupId>cglib</groupId>
      <artifactId>cglib-nodep</artifactId>
      <version>2.1_3</version>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate</artifactId>
      <version>3.2.5.ga</version>
      <!--
        It is well documented that asm does not play well with Hibernate
        and Jersey, we need to exclude some artifacts with hibernate.
      -->
      <exclusions>
        <exclusion>
          <groupId>asm</groupId>
          <artifactId>asm</artifactId>
        </exclusion>
        <exclusion>
          <groupId>asm</groupId>
          <artifactId>asm-attrs</artifactId>
        </exclusion>
        <exclusion>
          <groupId>cglib</groupId>
          <artifactId>cglib</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Spring dependencies -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <!-- Enunciate dependency -->
    <dependency>
      <groupId>org.codehaus.enunciate</groupId>
      <artifactId>enunciate-spring-app-rt</artifactId>
      <version>1.29-SNAPSHOT</version>
    </dependency>

    <!--Testing dependencies -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.4</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <repositories>
    <repository>
      <id>repo1.maven.org</id>
      <url>http://repo1.maven.org/maven2</url>
      <releases>
        <enabled>false</enabled>
      </releases>
    </repository>
  </repositories>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.ifyouwannabecool.api</groupId>
  <artifactId>wannabecool</artifactId>
  <packaging>war</packaging>
  <version>1.0</version>
  <name>ifyouwannabecool</name>
  <url>http://www.ifyouwannabecool.com</url>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.enunciate</groupId>
        <artifactId>maven-enunciate-plugin</artifactId>
        <version>1.29-SNAPSHOT</version>

        <configuration>
          <configFile>src/main/java/enunciate.xml</configFile>
          <exports>
            <jaxws.client.library.binaries>wannabecool-client.jar</jaxws.client.library.binaries>
          </exports>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>assemble</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>org.codehaus.enunciate</groupId>
      <artifactId>enunciate-rt</artifactId>
      <version>1.29-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.enunciate</groupId>
    <artifactId>enunciate-parent</artifactId>
    <version>1.29-SNAPSHOT</version>
  </parent>

  <artifactId>enunciate-swagger</artifactId>
  <name>Enunciate - Swagger Module</name>
  <description>The Enunciate Swagger module generates Swagger documentation.</description>

  <build>
    <plugins>
      <plugin>
        <!--
        we need to zip up the default documentation base, so we'll use ant to do it.
        -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <!--the docs module uses a default base.-->
            <phase>process-classes</phase>
            <configuration>
              <tasks>
                <mkdir dir="${project.build.outputDirectory}" />

                <zip destfile="${project.build.outputDirectory}/swagger-ui.zip" basedir="${basedir}/swagger-ui"/>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core</artifactId>
      <version>${project.version}</version>
    </dependency>

    <!--used for generating example json for documentation-->
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-mapper-asl</artifactId>
    </dependency>
  </dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.enunciate</groupId>
    <artifactId>enunciate-parent</artifactId>
    <version>1.29-SNAPSHOT</version>
  </parent>

  <artifactId>enunciate-rt</artifactId>
  <name>Enunciate - Basic Runtime</name>
  <description>The Enunciate basic runtime a reference to all basic Enunciate runtime libraries. This does not include runtime libraries for any "optional" modules.</description>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core-rt</artifactId>
      <version>${project.version}</version>
    </dependency>

    <!--default REST runtime: Jersey-->
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-jersey-rt</artifactId>
      <version>${project.version}</version>
    </dependency>

    <!--default JAX-WS runtime: JAX-WS RI-->
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-jaxws-ri-rt</artifactId>
      <version>${project.version}</version>
    </dependency>

    <!-- ********************* -->
    <!-- OPTIONAL DEPENDENCIES -->
    <!-- ********************* -->

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-gwt-rt</artifactId>
      <version>${project.version}</version>

      <!--optional because gwt isn't enabled by default-->
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-amf-rt</artifactId>
      <version>${project.version}</version>

      <!--optional because amf isn't enabled by default-->
      <optional>true</optional>
    </dependency>

  </dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.enunciate</groupId>
    <artifactId>enunciate-parent</artifactId>
    <version>1.29-SNAPSHOT</version>
  </parent>

  <artifactId>enunciate-top</artifactId>
  <name>Enunciate - Top</name>
  <description>The Enunciate top is simply a top-level project descriptor that references all known enunciate modules.</description>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-jaxws-support</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-jaxws-ri</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-docs</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-jersey</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-xml</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-java-client</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-c</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-obj-c</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-csharp</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-ruby</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-php</artifactId>
      <version>${project.version}</version>
    </dependency>

  </dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.enunciate</groupId>
    <artifactId>enunciate-parent</artifactId>
    <version>1.29-SNAPSHOT</version>
  </parent>

  <artifactId>enunciate-xml</artifactId>
  <name>Enunciate - XML Module</name>
  <description>The Enunciate XML module generates the XML artifacts (schema, WSDL) for the Enunciated project.</description>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <!--<debugForkedProcess>true</debugForkedProcess>-->
          <systemProperties>
            <property>
              <name>in.apt.src.test.dir</name>
              <value>${basedir}/src/main/samples/xml</value>
            </property>
            <property>
              <name>enunciate.sample.src.dir</name>
              <value>${basedir}/src/main/samples</value>
            </property>
          </systemProperties>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>enunciate-core</artifactId>
      <version>${project.version}</version>
      
      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.sun.xsom</groupId>
      <artifactId>xsom</artifactId>
      <version>20110809</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>wsdl4j</groupId>
      <artifactId>wsdl4j</artifactId>
      <version>1.6.2</version>

      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>relaxngDatatype</groupId>
      <artifactId>relaxngDatatype</artifactId>
      <version>20020414</version>

      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>

      <scope>test</scope>
    </dependency>
  </dependencies>

</project>
