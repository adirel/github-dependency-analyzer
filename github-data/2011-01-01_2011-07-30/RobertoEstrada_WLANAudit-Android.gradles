apply plugin: 'android-library'

android {
    compileSdkVersion 19
    buildToolsVersion '19'

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aild.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
    }
}buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:0.6.+'
    }
}

apply plugin: 'android-library'
dependencies {
	compile 'com.android.support:support-v4:19.0.+'
    compile 'com.nineoldandroids:library:2.4.0'
}

android {
    compileSdkVersion 19
    buildToolsVersion "19"
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aild.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
    }
}
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.6.+'
    }
}
apply plugin: 'android-library'

dependencies {
    compile 'com.actionbarsherlock:actionbarsherlock:4.4.0@aar'
    compile 'com.android.support:support-v4:19.0.+' 
}

android {
    compileSdkVersion "Google Inc.:Google APIs:19"
    buildToolsVersion "19"

    defaultConfig {
        minSdkVersion 7
        targetSdkVersion 19
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        instrumentTest.setRoot('tests')
    }
}
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.6.+'
    }
}
apply plugin: 'android'

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.google.android.gms:play-services:3.2.65'
    compile 'com.actionbarsherlock:actionbarsherlock:4.4.0@aar'
    compile 'com.android.support:support-v4:19.0.+'
    compile project(':Vendor:SlidingMenu:library')
    compile project(':Vendor:ShowcaseView:library')
    compile project(':Vendor:NumberPicker:lib')
    compile files('libs/guice-3.0-no_aop.jar')
    compile files('libs/javax.inject.jar')
    compile files('libs/roboguice-2.0.jar')
    compile files('libs/jsr305-1.3.9.jar')
    compile files('libs/orman-20120316.jar')
    compile files('libs/GoogleAdMobAdsSdk-6.4.1.jar')
}

android {
    compileSdkVersion 19
    buildToolsVersion "19"

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 19
        testPackageName "es.glasspixel.wlanaudit.test"
        testInstrumentationRunner "android.test.InstrumentationTestRunner"
    }

    signingConfigs {
        release {
            storeFile file(".")
            storePassword " "
            keyAlias " "
            keyPassword " "
        }
    }

    buildTypes {
        release {
            runProguard true
            proguardFile getDefaultProguardFile('proguard-android-optimize.txt')
            proguardFile 'proguard-project.txt'
            signingConfig signingConfigs.release
        }
    }
}

task askForPasswords << {
    // Must create String because System.readPassword() returns char[]
    // (and assigning that below fails silently)
    def storePath = new String(System.console().readLine("\nKeystore Path: "))
    def storePw = new String(System.console().readPassword("Keystore password: "))
    def keyAlias = new String(System.console().readLine("Key Alias: "))
    def keyPw  = new String(System.console().readPassword("Key password: "))

    android.signingConfigs.release.storeFile = file(storePath)
    android.signingConfigs.release.storePassword = storePw
    android.signingConfigs.release.keyAlias = keyAlias
    android.signingConfigs.release.keyPassword = keyPw
}

tasks.whenTaskAdded { theTask -> 
    if (theTask.name.equals("packageRelease")) {
        theTask.dependsOn "askForPasswords"
    }
}
buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:0.6.+'
    }
}

allprojects {
    repositories {
        mavenCentral()
    }
}