<?xml version="1.0"?>
<!--
 Copyright 2007 Sun Microsystems, Inc.  All Rights Reserved.
 DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.

 This code is free software; you can redistribute it and/or modify it
 under the terms of the GNU General Public License version 2 only, as
 published by the Free Software Foundation.  Sun designates this
 particular file as subject to the "Classpath" exception as provided
 by Sun in the LICENSE file that accompanied this code.

 This code is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 version 2 for more details (a copy is included in the LICENSE file that
 accompanied this code).

 You should have received a copy of the GNU General Public License version
 2 along with this work; if not, write to the Free Software Foundation,
 Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.

 Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 CA 95054 USA or visit www.sun.com if you need additional information or
 have any questions.
-->

<!--
 This is the main build file for the complete jaxp workspace.
 -->

<project name="jaxp" default="all" basedir=".">

    <!-- Convenient shorthands for standard locations within the workspace. -->
    <property file="build.properties"/>
    <property name="topdir" value=".."/>
    <property name="build.dir" location="${topdir}/build"/>
    <property name="build.classes.dir" location="${build.dir}/classes"/>
    <property name="build.gensrc.dir" location="${build.dir}/gensrc"/>
    <property name="build.toolclasses.dir" location="${build.dir}/toolclasses"/>
    <property name="dist.dir" location="${topdir}/dist"/>
    <property name="dist.lib.dir" location="${dist.dir}/lib"/>
    <property name="make.dir" location="${topdir}/make"/>
    <property name="make.tools.dir" location="${make.dir}/tools"/>
    <property name="src.dir" location="${topdir}/src"/>
    <property name="src.classes.dir" location="${src.dir}/share/classes"/>
    <property environment="env"/>

    <target name="build" depends="banner, build-classes, build-tools">
	<mkdir dir="${dist.lib.dir}"/>
	<jar file="${dist.lib.dir}/classes.jar" basedir="${build.classes.dir}"/>
	<zip file="${dist.lib.dir}/src.zip" basedir="${src.classes.dir}"/>
    </target>

    <!-- Debug information -->
    <target name="sanity"
        description="display settings of configuration values">
	<echo level="info">ant.home = ${ant.home}</echo>
	<echo level="info">java.home = ${env.JAVA_HOME}</echo>
	<echo level="info">bootstrap.dir = ${bootstrap.dir}</echo>
    </target>

    <target name="build-tools" depends="-defs-pstrip">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.classes.dir}"/>
	    <pstrip srcdir="${src.classes.dir}"
                    destdir="${build.classes.dir}"
		    includes="**/*.properties"/>
    </target>

    <target name="-defs-pstrip">
      <mkdir dir="${build.toolclasses.dir}"/>
      <javac srcdir="${make.tools.dir}/StripProperties"
		destdir="${build.toolclasses.dir}/"
		classpath="${ant.home}/lib/ant.jar"/>
      <taskdef name="pstrip"
		 classname="StripPropertiesTask"
		 classpath="${build.toolclasses.dir}/"/>
    </target>

    <target name="build-classes" depends="sanity">
      <mkdir dir="${build.dir}"/>
      <mkdir dir="${build.classes.dir}"/>
      <javac fork="true"
             srcdir="${src.classes.dir}"
             destdir="${build.classes.dir}"
             memoryInitialSize="${javac.memoryInitialSize}"
             memoryMaximumSize="${javac.memoryMaximumSize}"
             target="${javac.target}">
         <compilerarg value="-J-Xbootclasspath/p:${bootstrap.dir}/lib/javac.jar"/>
         <compilerarg line="${javac.version.opt}"/>
      </javac>
    </target>

    <target name="clean" description="Delete all generated files">
	<delete dir="${build.dir}"/>
	<delete dir="${dist.dir}"/>
    </target>

    <target name="banner">
      <echo>+---------------------------------------+</echo>
      <echo>+    Building JAXP Component            +</echo>
      <echo>+---------------------------------------+</echo>
    </target>

</project>
<?xml version="1.0"?>
<!--
 Copyright 2007 Sun Microsystems, Inc.  All Rights Reserved.
 DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.

 This code is free software; you can redistribute it and/or modify it
 under the terms of the GNU General Public License version 2 only, as
 published by the Free Software Foundation.  Sun designates this
 particular file as subject to the "Classpath" exception as provided
 by Sun in the LICENSE file that accompanied this code.

 This code is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 version 2 for more details (a copy is included in the LICENSE file that
 accompanied this code).

 You should have received a copy of the GNU General Public License version
 2 along with this work; if not, write to the Free Software Foundation,
 Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.

 Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 CA 95054 USA or visit www.sun.com if you need additional information or
 have any questions.
-->

<!--
 This is the main build file for the jaxws workspace.
 -->

<project name="jaxws" default="all" basedir=".">

    <!-- Convenient shorthands for standard locations within the workspace. -->
    <property file="build.properties"/>
    <property name="topdir" value=".."/>
    <property name="build.dir" location="${topdir}/build"/>
    <property name="build.classes.dir" location="${build.dir}/classes"/>
    <property name="build.gensrc.dir" location="${build.dir}/gensrc"/>
    <property name="build.toolclasses.dir" location="${build.dir}/toolclasses"/>
    <property name="dist.dir" location="${topdir}/dist"/>
    <property name="dist.lib.dir" location="${dist.dir}/lib"/>
    <property name="make.dir" location="${topdir}/make"/>
    <property name="make.tools.dir" location="${make.dir}/tools"/>
    <property name="src.dir" location="${topdir}/src"/>
    <property name="src.classes.dir" location="${src.dir}/share/classes"/>
    <property environment="env"/>

    <target name="build" depends="banner, build-classes, build-tools, build-binaries">
	<mkdir dir="${dist.lib.dir}"/>
	<jar file="${dist.lib.dir}/classes.jar" basedir="${build.classes.dir}"/>
	<zip file="${dist.lib.dir}/src.zip" basedir="${src.classes.dir}"/>
    </target>

    <!-- Debug information -->
    <target name="sanity"
        description="display settings of configuration values">
        <echo level="info">ant.home = ${ant.home}</echo>
        <echo level="info">java.home = ${env.JAVA_HOME}</echo>
        <echo level="info">bootstrap.dir = ${bootstrap.dir}</echo>
    </target>

    <target name="build-tools" depends="-defs-pstrip">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.classes.dir}"/>
	    <pstrip srcdir="${src.classes.dir}"
                    destdir="${build.classes.dir}"
		    includes="**/*.properties"/>
    </target>

    <target name="build-binaries">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.classes.dir}"/>
            <copy todir="${build.classes.dir}">
                 <fileset dir="${src.classes.dir}"
                     includes="**/*.xsd, **/*.default"
                     excludes="**/*.java, **/*.package.html, **/*.properties"/>
            </copy>
        <mkdir dir="${build.classes.dir}/META-INF/services"/>
            <copy todir="${build.classes.dir}/META-INF/services"
                  file="${src.classes.dir}/com/sun/tools/etc/META-INF/services/com.sun.mirror.apt.AnnotationProcessorFactory"/>
            <copy todir="${build.classes.dir}/META-INF/services"
                  file="${src.classes.dir}/com/sun/tools/etc/META-INF/services/com.sun.tools.internal.xjc.Plugin"/>
 	    <!-- copy jaxb sources files required for jaxb tool time -->	
           <mkdir dir="${build.classes.dir}/com/sun/tools/internal/xjc/runtime"/>
            <copy todir="${build.classes.dir}/com/sun/tools/internal/xjc/runtime">
                 <fileset dir="${src.classes.dir}/com/sun/tools/internal/xjc/runtime"
                     includes="**/*.java"
                     excludes="**/*.package.html"/>
            </copy>
    </target>

    <target name="-defs-pstrip">
      <mkdir dir="${build.toolclasses.dir}"/>
      <javac srcdir="${make.tools.dir}/StripProperties"
		destdir="${build.toolclasses.dir}/"
		classpath="${ant.home}/lib/ant.jar"/>
      <taskdef name="pstrip"
		 classname="StripPropertiesTask"
		 classpath="${build.toolclasses.dir}/"/>
    </target>

    <target name="build-classes" depends="sanity">
      <mkdir dir="${build.dir}"/>
      <mkdir dir="${build.classes.dir}"/>
      <javac fork="true"
             srcdir="${src.classes.dir}"
             destdir="${build.classes.dir}"
             memoryInitialSize="${javac.memoryInitialSize}"
             memoryMaximumSize="${javac.memoryMaximumSize}"
             target="${javac.target}"
             excludes="com/sun/tools/internal/txw2/**">
         <compilerarg value="-J-Xbootclasspath/p:${bootstrap.dir}/lib/javac.jar"/>
         <compilerarg line="${javac.version.opt}"/>
         <compilerarg line="${javac.no.jdk.warnings}"/>
      </javac>
    </target>

    <target name="clean" description="Delete all generated files">
	<delete dir="${build.dir}"/>
	<delete dir="${dist.dir}"/>
    </target>

    <target name="banner">
      <echo>+---------------------------------------+</echo>
      <echo>+    Building JAX-WS Component          +</echo>
      <echo>+---------------------------------------+</echo>
    </target>

</project>
<!--
 Copyright 2007 Sun Microsystems, Inc.  All Rights Reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions
 are met:

   - Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.

   - Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.

   - Neither the name of Sun Microsystems nor the names of its
     contributors may be used to endorse or promote products derived
     from this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<project name="awt2d" default="build" basedir=".">
    <description>
        JDK: AWT &amp; Java2D Ant build file
    </description>

    <import file="../common/shared.xml"/>

    <target name="-build-make" depends="-make.init,-build-make-unix,-build-make-windows" if="use.make"/>

    <target name="-build-make-unix" depends="-make.init" if="osfamily.unix">
        <make-run target="all" dir="${make.dir}/java/awt"/>
        <make-run target="all" dir="${make.dir}/sun/dcpr"/>
        <make-run target="all" dir="${make.dir}/sun/image"/>
        <make-run target="all" dir="${make.dir}/sun/awt"/>
        <make-run target="all" dir="${make.dir}/sun/splashscreen"/>
        <make-run target="all" dir="${make.dir}/sun/xawt"/>
        <make-run target="all" dir="${make.dir}/sun/motif12"/>
        <make-run target="all" dir="${make.dir}/sun/motif21"/>
        <make-run target="all" dir="${make.dir}/sun/headless"/>
        <make-run target="all" dir="${make.dir}/sun/font"/>
        <make-run target="all" dir="${make.dir}/sun/jpeg"/>
        <make-run target="all" dir="${make.dir}/sun/cmm"/>
        <make-run target="all" dir="${make.dir}/sun/jawt"/>
        <make-run target="all" dir="${make.dir}/sun/text"/>
        <make-run target="all" dir="${make.dir}/com/sun/image"/>
    </target>

    <target name="-build-make-windows" depends="-make.init" if="os.windows">
        <make-run target="all" dir="${make.dir}/java/awt"/>
        <make-run target="all" dir="${make.dir}/sun/dcpr"/>
        <make-run target="all" dir="${make.dir}/sun/awt"/>
        <make-run target="all" dir="${make.dir}/sun/splashscreen"/>
        <make-run target="all" dir="${make.dir}/sun/font"/>
        <make-run target="all" dir="${make.dir}/sun/jpeg"/>
        <make-run target="all" dir="${make.dir}/sun/cmm"/>
        <make-run target="all" dir="${make.dir}/sun/jawt"/>
        <make-run target="all" dir="${make.dir}/sun/text"/>
        <make-run target="all" dir="${make.dir}/com/sun/image"/>
    </target>

    <target name="-clean-make" depends="-make.init,-clean-docs-tests" if="use.make">
        <make-run target="clean" dir="${make.dir}/java/awt"/>
        <make-run target="clean" dir="${make.dir}/sun/dcpr"/>
        <make-run target="clean" dir="${make.dir}/sun/image"/>
        <make-run target="clean" dir="${make.dir}/sun/awt"/>
        <make-run target="clean" dir="${make.dir}/sun/splashscreen"/>
        <make-run target="clean" dir="${make.dir}/sun/xawt"/>
        <make-run target="clean" dir="${make.dir}/sun/motif12"/>
        <make-run target="clean" dir="${make.dir}/sun/motif21"/>
        <make-run target="clean" dir="${make.dir}/sun/font"/>
        <make-run target="clean" dir="${make.dir}/sun/jpeg"/>
        <make-run target="clean" dir="${make.dir}/sun/cmm"/>
        <make-run target="clean" dir="${make.dir}/sun/jawt"/>
        <make-run target="clean" dir="${make.dir}/sun/text"/>
        <make-run target="clean" dir="${make.dir}/com/sun/image"/>
        <make-run target="clean" dir="${make.dir}/mkdemo/jfc"/>
        <delete file="${build.dir}/tmp/sun/sun.awt.X11/xawt/.gen_icons"/>
    </target>
    
    <target name="run" depends="-make.init">
        <make-run target="all" dir="${make.dir}/mkdemo/jfc"/>
        <property name="jvm.args" value=""/>
        <java jar="${build.dir}/demo/jfc/Font2DTest/Font2DTest.jar"
            fork="true"
            classpath="${classes.dir}:${bootstrap.jdk}/jre/lib/rt.jar">
            <jvmarg line="${jvm.args}"/>
        </java>
     </target>


</project>
<!--
 Copyright 2007 Sun Microsystems, Inc.  All Rights Reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions
 are met:

   - Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.

   - Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.

   - Neither the name of Sun Microsystems nor the names of its
     contributors may be used to endorse or promote products derived
     from this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<project name="jarzip" default="build" basedir=".">

    <import file="../common/shared.xml"/>

    <target name="-build-make" depends="-make.init" if="use.make">
        <make-run target="all" dir="${make.dir}/java/zip"/>
        <make-run target="all" dir="${make.dir}/java/jar"/>
        <make-run target="all" dir="${make.dir}/sun/jar"/>
    </target>

    <target name="-clean-make" depends="-make.init,-clean-docs-tests" if="use.make">
        <make-run target="clean" dir="${make.dir}/java/zip"/>
        <make-run target="clean" dir="${make.dir}/java/jar"/>
        <make-run target="clean" dir="${make.dir}/sun/jar"/>
    </target>

</project>
<!--
 Copyright 2007 Sun Microsystems, Inc.  All Rights Reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions
 are met:

   - Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.

   - Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.

   - Neither the name of Sun Microsystems nor the names of its
     contributors may be used to endorse or promote products derived
     from this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<project name="jconsole" default="build" basedir=".">
    
    <import file="../common/shared.xml"/>
    
    <target name="-pre-compile">
        <copy
            file="${root}/src/share/classes/sun/tools/jconsole/Version-template.java"
            tofile="${gensrc.dir}/sun/tools/jconsole/Version.java"/>
        <replace
            file="${gensrc.dir}/sun/tools/jconsole/Version.java"
            token="@@jconsole_version@@"
            value="${jconsole.version}"/>
    </target>
    
    <target name="-post-compile">
        <mkdir dir="${dist.dir}/lib"/>
        <jar destfile="${dist.dir}/lib/jconsole.jar"
             manifest="${classes.dir}/sun/tools/jconsole/manifest">
            <fileset dir="${classes.dir}">
                <include name="sun/tools/jconsole/**/*.class"/>
                <include name="com/sun/tools/jconsole/**/*.class"/>
                <include name="sun/tools/jconsole/resources/*.gif"/>
                <include name="sun/tools/jconsole/resources/*.png"/>
            </fileset>
        </jar>
        <copy file="${dist.dir}/lib/jconsole.jar" todir="${build.dir}/lib"/>
    </target>
    
    <target name="run" depends="-init,build">
        <property name="jvm.args" value=""/>
        <java classname="sun.tools.jconsole.JConsole"
              fork="true"
              classpath="${classes.dir}:${bootstrap.jdk}/lib/tools.jar">
            <jvmarg line="${jvm.args}"/>
        </java>
    </target>
    
    <target name="clean" depends="-init,shared.clean">
        <delete file="${dist.dir}/lib/jconsole.jar"/>
    </target>
    
</project>
<!--
 Copyright 2007 Sun Microsystems, Inc.  All Rights Reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions
 are met:

   - Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.

   - Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.

   - Neither the name of Sun Microsystems nor the names of its
     contributors may be used to endorse or promote products derived
     from this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<project name="jdk" default="build" basedir=".">
    <description>
        jdk ant build file
    </description>

    <import file="../common/shared.xml"/>

    <target name="-build-make" depends="-make.init" if="use.make">
        <make-run target="all" dir="${make.dir}"/>
    </target>

    <target name="-clean-make" depends="-make.init" if="use.make">
        <make-run target="clean" dir="${make.dir}"/>
    </target>

</project>
<!--
 Copyright 2007 Sun Microsystems, Inc.  All Rights Reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions
 are met:

   - Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.

   - Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.

   - Neither the name of Sun Microsystems nor the names of its
     contributors may be used to endorse or promote products derived
     from this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<project name="jmx" default="build" basedir=".">

     <import file="../common/shared.xml"/>

    <target name="-pre-init">
        <!-- Set the values for build date and time -->
        <tstamp>
	    <format property="BUILD_DATE"        pattern="yyyy.MM.dd_HH:mm:ss_z" />
	    <format property="BUILD_DATE_SIMPLE" pattern="dd_MMM_yyyy" />
        </tstamp>

        <!-- These properties are set here instead of in the build.properties file, -->
        <!-- because they depend on the values of BUILD_DATE and BUILD_DATE_SIMPLE  -->
        <!-- At this time, ./build.properties has not been loaded yet. -->
        <property name="project.build.name" value="openjdk-bXX"/>
	<property name="project.build.fulltag" 
                  value="${ant.project.name}-${project.build.name}-${BUILD_DATE}" />

        <!-- unchecked warnings will be fixed in JMX 2.0 as part of the work
             being done on JSR 255 new features                              -->
        <property name="javac.options" 
                  value="-Xlint -Xlint:-unchecked -Xlint:-deprecation"/>
    </target>


    <target name="-pre-compile" depends="-init">
	<!-- Dir to keep generated stub source -->
        <mkdir dir="${gensrc.dir}" />
    </target>
    

    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- Call rmic-jmx subtargets -->

    <target name="-rmic-jmx" depends="-init,-rmic-jmx-jrmp,-rmic-jmx-iiop"
	    description="Calls -init,-rmic-jmx-jrmp,-rmic-jmx-iiop" 
    />


    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- Generate RMI JRMP stub class files for remote objects -->
    <!-- Generated java files are kept in a separate directory -->

    <target name="-rmic-jmx-jrmp" depends="-init"
            description="Generate RMI JRMP stub class files for remote objects. Keep generated java files in separate dir." >

	<!-- Dir to keep generated stub source -->
        <mkdir dir="${gensrc.dir}" />

        <rmic 	base="${classes.dir}/javax/management"
		sourcebase="${gensrc.dir}"
		includeAntRuntime="no"
		includeJavaRuntime="no"
		stubversion="1.2"
		>
	    <include name="javax/management/remote/rmi/RMIConnectionImpl.class" />
	    <include name="javax/management/remote/rmi/RMIServerImpl.class" />
	</rmic>

    </target>


    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- Generate RMI IIOP stub class files for remote objects -->

    <target name="-rmic-jmx-iiop" depends="-init,-check-jmx-iiop-uptodate" unless="jmx-iiop-uptodate"
            description="Generate RMI IIOP stub class files for remote objects. Do not keep generated java files." >
 
	<rmic 	base="${classes.dir}"
		includeAntRuntime="no"
		includeJavaRuntime="no"
		stubversion="1.2"
		iiop="yes"
		>
	    <include name="javax/management/remote/rmi/RMIConnectionImpl.class" />
	    <include name="javax/management/remote/rmi/RMIServerImpl.class" />
	</rmic>

    </target>


    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- Check if jmx rmic generated IIOP stub and tie class files are up to date -->

    <target name="-check-jmx-iiop-uptodate" depends="-init">

	<uptodate property="jmx-iiop-uptodate" 
		   srcfile="${classes.dir}/javax/management/remote/rmi/RMIConnectionImpl.class"
		targetfile="${classes.dir}/org/omg/stub/javax/management/remote/rmi/_RMIConnectionImpl_Tie.class"
	/>
	<uptodate property="jmx-iiop-uptodate" 
		   srcfile="${classes.dir}/javax/management/remote/rmi/RMIServerImpl.class"
		targetfile="${classes.dir}/org/omg/stub/javax/management/remote/rmi/_RMIServerImpl_Tie.class"
	/>

	<echo message="jmx-iiop-uptodate=${jmx-iiop-uptodate}" />

    </target>

    <target name="-post-compile" depends="-init,-rmic-jmx"
            description="Jar JMX class files (including RMI stubs)" >
       <mkdir dir="${dist.dir}/lib"/>
       <jar jarfile="${dist.dir}/lib/${jar.jmx.name}" 
	    update="true"
	    index="false"
	    duplicate="fail">
	    <fileset dir="${classes.dir}" excludes="**/*.java"/>
	    <manifest >
		<attribute name="Built-By"                 value="${user.name}" />
		<section name="common">
		    <attribute name="Sealed"                 value="${jar.jmx.sealed}" />
		    <attribute name="Specification-Title"    value="${jar.jmx.spec.title}" />
		    <attribute name="Specification-Version"  value="${jar.jmx.spec.version}" />
		    <attribute name="Specification-Vendor"   value="${jar.jmx.spec.vendor}" />
		    <attribute name="Implementation-Title"   value="${jar.jmx.impl.title}" />
		    <attribute name="Implementation-Version" value="${project.build.fulltag}" /> 
		    <attribute name="Implementation-Vendor"  value="${jar.jmx.impl.vendor}" />
		</section>
	    </manifest>
       </jar>
    </target>

    <target name="clean" depends="-init,shared.clean">
        <delete file="${dist.dir}/lib/${jar.jmx.name}"/>
    </target>
</project>
<!--
 Copyright 2007 Sun Microsystems, Inc.  All Rights Reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions
 are met:

   - Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.

   - Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.

   - Neither the name of Sun Microsystems nor the names of its
     contributors may be used to endorse or promote products derived
     from this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<project name="swing" default="build" basedir=".">
    
    <import file="../common/shared.xml"/>
   
    <target name="-pre-init" depends="-check-swing.windows" if="swing.windows">
        <property name="excludes" value="com/sun/java/swing/plaf/gtk/"/>
    </target>

    <target name="-check-swing.windows">
        <condition property="swing.windows">
            <os family="windows"/>
        </condition>
    </target>

     <target name="-post-compile">
        <mkdir dir="${dist.dir}/lib"/>
        <jar destfile="${dist.dir}/lib/swing.jar">
            <fileset dir="${classes.dir}">
                <include name="javax/swing/**/*.class"/>
                <include name="com/sun/swing/**/*.class"/>
                <include name="com/sun/java/swing/**/*.class"/>
                <include name="sun/swing/**/*.class"/>
            </fileset>
            <fileset dir="${share.src.dir}">
                <include name="javax/swing/**/*.bdtd"/>
                <include name="javax/swing/**/*.css"/>
                <include name="javax/swing/**/*.dtd"/>
                <include name="javax/swing/**/*.gif"/>
                <include name="javax/swing/**/*.html"/>
                <include name="javax/swing/**/*.jpg"/>
                <include name="javax/swing/**/*.png"/>
                <include name="javax/swing/**/*.txt"/>
                <include name="javax/swing/**/*.wav"/>

                <include name="com/sun/swing/**/*.properties"/>

                <include name="com/sun/java/swing/**/*.gif"/>
                <include name="com/sun/java/swing/**/*.png"/>
                <include name="com/sun/java/swing/**/*.properties"/>
                <include name="com/sun/java/swing/**/*.xml"/>
            </fileset>
        </jar>
    </target>
    
    <target name="-demo-init" depends="-demo-init.unix,-demo-init.windows">
        <property name="swing.demo.src" value="${root}/src/share/demo/jfc/SampleTree"/>
        <property name="swing.demo.classes" value="${build.dir}/demo/jfc/SampleTree"/>
    </target>

    <target name="-demo-init.unix" if="osfamily.unix">
        <property name="demo.bootclasspath"
            value="-Xbootclasspath/p:${dist.dir}/lib/swing.jar:${classes.dir}"/>
    </target>

    <target name="-demo-init.windows" if="os.windows">
        <property name="demo.bootclasspath"
            value="-Xbootclasspath/p:${dist.dir}/lib/swing.jar;${classes.dir}"/>
    </target>

    <target name="run" depends="-init,-demo-init">
        <mkdir dir="${swing.demo.classes}"/>
        <property name="jvm.args" value=""/>
        <javac srcdir="${swing.demo.src}" destdir="${swing.demo.classes}"
            fork="true" failonerror="true"
            classpath="${dist.dir}/lib/swing.jar:${classes.dir}"
            debug="${javac.debug}" debuglevel="${javac.debuglevel}">
            <compilerarg line="${javac.options}"/>
        </javac>
        <copy todir="${swing.demo.classes}">
            <fileset dir="${swing.demo.src}" includes="resources/**/*.gif"/>
        </copy>
        <java classname="SampleTree" classpath="${swing.demo.classes}"
            fork="true" failonerror="true"
            jvm="${bootstrap.jdk}/bin/java">
            <jvmarg line="${demo.bootclasspath}"/>
            <jvmarg line="${jvm.args}"/>
        </java>
    </target>

    <target name="clean" depends="-init,-demo-init,shared.clean">
        <delete file="${dist.dir}/lib/swing.jar"/>
        <delete dir="${swing.demo.classes}"/>
    </target>
    
</project>
<!--
 Copyright 2007 Sun Microsystems, Inc.  All Rights Reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions
 are met:

   - Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.

   - Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.

   - Neither the name of Sun Microsystems nor the names of its
     contributors may be used to endorse or promote products derived
     from this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<project name="world" default="build" basedir=".">

    <import file="../common/shared.xml"/>

    <target name="-build-make" depends="-make.init" if="use.make">
        <make-run target="dev" dir="${root}/../control/make" opts="SKIP_COMPARE_IMAGES=true"/>
    </target>

    <target name="-clean-make" depends="-make.init" if="use.make">
        <make-run target="clean" dir="${root}/../control/make"/>
    </target>

</project>
<?xml version="1.0" encoding="UTF-8"?>

<!--
 Copyright 2005 Sun Microsystems, Inc.  All Rights Reserved.
 DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.

 This code is free software; you can redistribute it and/or modify it
 under the terms of the GNU General Public License version 2 only, as
 published by the Free Software Foundation.  Sun designates this
 particular file as subject to the "Classpath" exception as provided
 by Sun in the LICENSE file that accompanied this code.

 This code is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 version 2 for more details (a copy is included in the LICENSE file that
 accompanied this code).

 You should have received a copy of the GNU General Public License version
 2 along with this work; if not, write to the Free Software Foundation,
 Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.

 Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 CA 95054 USA or visit www.sun.com if you need additional information or
 have any questions.
-->

<!-- 

 The Original Code is HAT. The Initial Developer of the
 Original Code is Bill Foote, with contributions from others
 at JavaSoft/Sun.

-->

<!-- This is an Ant project file to build Heap Analysis Tool (HAT).
     For more information on Ant, please see http://ant.apache.org/ 

     To build jhat.jar, run ant in current directory. jhat.jar is
     built in ./build directory.
-->

<project name="Java Heap Analysis Tool" default="all" basedir=".">

  <!-- Property Definitions -->

  <property name="app.name" value="jhat"/>
  <property name="src.dir"  value="."/>
  <property name="build.dir"  value="build"/>
  <property name="classes.dir"  value="${build.dir}/classes"/>
  <property name="dist.jar" value="${app.name}.jar"/>

  <target name="prepare">
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${classes.dir}"/>
  </target>

  <target name="clean">
     <delete dir="${build.dir}"/>
  </target>

  <target name="compile" depends="prepare" description="Compiles the sources">
    <javac srcdir="${src.dir}" destdir="${classes.dir}"
           debug="on" deprecation="on">
    </javac>

  </target>

  <target name="deploy" depends="compile" description="Creates a deployment bundle">
    <delete file="${build.dir}/${dist.jar}" />
    <mkdir dir="${classes.dir}/com/sun/tools/hat/resources" />
    <copy todir="${classes.dir}/com/sun/tools/hat/resources">
      <fileset dir="${src.dir}/resources" includes="*" />
    </copy>

    <jar jarfile="${build.dir}/${dist.jar}"
         manifest="${src.dir}/MANIFEST.mf" basedir="${classes.dir}"/>
  </target>

  <target name="all" depends="deploy" description="Builds sources and deployment jar"/>

</project>
<?xml version="1.0"?>

<!--
 Copyright 2005-2006 Sun Microsystems, Inc.  All Rights Reserved.
 DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.

 This code is free software; you can redistribute it and/or modify it
 under the terms of the GNU General Public License version 2 only, as
 published by the Free Software Foundation.  Sun designates this
 particular file as subject to the "Classpath" exception as provided
 by Sun in the LICENSE file that accompanied this code.

 This code is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 version 2 for more details (a copy is included in the LICENSE file that
 accompanied this code).

 You should have received a copy of the GNU General Public License version
 2 along with this work; if not, write to the Free Software Foundation,
 Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.

 Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 CA 95054 USA or visit www.sun.com if you need additional information or
 have any questions.
-->


<!-- README - HOW TO USE THIS BUILD FILE
     . You need Ant 1.5 or higher available in your path
     . You need a build of Java SE 6 available in your path, or JAVA_HOME set to such a build
     . cd to the directory containing this build.xml file
     . Launch the build by typing: ant
     . Please also read the important comment on basedir definition below.
 -->

<project name="JMX API Version 1.4 - Java SE 6 implementation" 
	 default="jar" 
	 basedir="../../../../.." 
	 >

    <!-- IMPORTANT: BASEDIR DEFINITION  
         This file is assumed to be in: 
         <src_bundle_dir>/j2se/src/share/classes/javax/management 
         Thus the basedir for this project is defined above as: 
         basedir="../../../../.."  
         in order to be the parent dir of src subdir.
	 Result of the build will be placed in ${basedir}/build_jmx 
	 as defined by ${dir.build} property below.
     -->

    <description>
	Copyright 2006 Sun Microsystems, Inc.  All rights reserved. Use is subject to license terms.

        Description: JMX API Version 1.4 - Source Code from Java SE 6
    </description>


    <!-- build properties -->

    <property name="dir.src"
	      location="${basedir}/src/share/classes" />

    <property name="dir.build"
	      location="${basedir}/build_jmx" />

    <property name="dir.build.lib"
	      location="${dir.build}/lib" />

    <property name="dir.build.classes"
	      location="${dir.build}/classes" />

    <property name="dir.build.cache"
	      location="${dir.build}/cache" />

    <property name="flag.debug"
	      value="on" />

    <property name="flag.debug.level"
	      value="lines,source" />

    <property name="flag.optimize"
	      value="on" />

    <property name="flag.javac.source"
	      value="1.6" />

    <property name="flag.deprecation"
	      value="off" />

    <!-- ANT: when compiling, ignore the classpath in effect when Ant is run
	      and therefore use only the classpath specified in the javac tasks -->
    <property name="build.sysclasspath"
	      value="ignore" />



    <!-- Concatenated classpaths: one classpath for each build purpose -->

    <path id="classpath.tobuild.jmx">
	<!-- EMPTY, NO DEPENDENCY! -->
    </path>



    <!-- Convert path objects to string properties for display -->

    <property name="property.classpath.tobuild.jmx"	refid="classpath.tobuild.jmx" />




    <!-- ********************* -->
    <!-- *** BUILD TARGETS *** -->
    <!-- ********************* -->


    <!-- ~~~~~~~~~~~~~~~~~~~~ -->
    <!-- Initialize the build -->

    <target name="init" >

        <!-- Set the values for build date and time -->
        <tstamp>
	    <format property="BUILD_DATE"        pattern="yyyy.MM.dd_HH:mm:ss_z" />
        </tstamp>

        <!-- Create the build directory -->
        <mkdir dir="${dir.build}" />

        <!-- Log the values of all properties to file -->
        <echoproperties destfile="${dir.build}/properties.log" />

        <!-- Display the values of most important properties -->
	<echo />
	<echo>See the contents of ${dir.build}/properties.log for all defined properties.</echo>
	<echo />
        <echo message="MAIN JVM DEFAULT SYSTEM PROPERTIES: " />
        <echo message="   java.runtime.version        = ${java.runtime.version}" />
        <echo message="   java.home                   = ${java.home}" />
        <echo message="   os.arch                     = ${os.arch}" />
        <echo message="   os.name                     = ${os.name}" />
        <echo message="   os.version                  = ${os.version}" />
        <echo message="   user.name                   = ${user.name}" />
	<echo />
        <echo message="ANT BUILT-IN PROPERTIES: " />
        <echo message="   basedir                     = ${basedir}" />
        <echo message="   ant.file                    = ${ant.file}" />
        <echo message="   ant.version                 = ${ant.version}" />
        <echo message="   ant.project.name            = ${ant.project.name}" />
        <echo message="   ant.java.version            = ${ant.java.version}" />
	<echo />
        <echo message="MAIN ANT BUILD-SET PROPERTIES: " />
        <echo message="   dir.src                     = ${dir.src}" />
        <echo message="   dir.build                   = ${dir.build}" />
        <echo message="   classpath.tobuild.jmx       = ${property.classpath.tobuild.jmx}" />
        <echo message="   flag.debug                  = ${flag.debug}" />
        <echo message="   flag.debug.level            = ${flag.debug.level}" />
        <echo message="   flag.optimize               = ${flag.optimize}" />
        <echo message="   flag.javac.source           = ${flag.javac.source}" />
        <echo message="   flag.deprecation            = ${flag.deprecation}" />
        <echo message="   BUILD_DATE                  = ${BUILD_DATE}" />

    </target>
    


    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- Call classes subtargets and rmic stubs generation -->

    <target name="classes" depends="init,classes-javac,classes-rmic" 
	    description="Call classes subtargets and rmic stubs generation" 
    />


    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- Build JMX java files                  -->

    <target name="classes-javac" depends="init"
	    description="Build JMX java files" >

        <mkdir dir="${dir.build.classes}" />

	<javac 	srcdir="${dir.src}"
		destdir="${dir.build.classes}" 
		source="${flag.javac.source}"
		debug="${flag.debug}"
		debuglevel="${flag.debug.level}"
		optimize="${flag.optimize}"
		includeAntRuntime="no"
		includeJavaRuntime="no"	
	        >
	    <include name="javax/management/**"/>
	    <include name="com/sun/jmx/**"/>
	</javac>

    </target>


    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- Generate RMI JRMP and IIOP stub class files for remote objects -->

    <target name="classes-rmic" depends="init,classes-javac"
            description="Generate RMI JRMP and IIOP stub class files for remote objects" >


	<!-- JRMP Stubs -->

        <rmic 	base="${dir.build.classes}"
		classname="javax.management.remote.rmi.RMIConnectionImpl"
		includeAntRuntime="no"
		includeJavaRuntime="no"
		stubversion="1.2"
		>
	</rmic>

	<rmic	base="${dir.build.classes}"
		classname="javax.management.remote.rmi.RMIServerImpl"
		includeAntRuntime="no"
		includeJavaRuntime="no"
		stubversion="1.2"
		>
        </rmic>


	<!-- IIOP Stubs -->

	<rmic 	base="${dir.build.classes}"
		classname="javax.management.remote.rmi.RMIConnectionImpl"
		includeAntRuntime="no"
		includeJavaRuntime="no"
		iiop="yes"
		>
	</rmic>

	<rmic	base="${dir.build.classes}"
		classname="javax.management.remote.rmi.RMIServerImpl"
		includeAntRuntime="no"
		includeJavaRuntime="no"
		iiop="yes"
		>
        </rmic>

    </target>


    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- Jar all JMX  classes                 -->

    <target name="jar" depends="init,classes"
            description="Jar all JMX classes" >

       <mkdir dir="${dir.build.lib}" />

       <jar jarfile="${dir.build.lib}/jmx.jar" 
	    update="true"
	    >

	    <fileset dir="${dir.build.classes}"
		includes="**/*.class"
	    />

	    <manifest >
		    <attribute name="Build-JDK"              value="${java.runtime.version}" />
		    <attribute name="Build-Platform"         value="${os.arch} ${os.name} ${os.version}" />
		    <attribute name="Build-User"             value="${user.name}" />
		<section name="common">
		    <attribute name="Sealed"                 value="true" />
		    <attribute name="Specification-Title"    value="JMX(TM) API" />
		    <attribute name="Specification-Version"  value="1.4" />
		    <attribute name="Specification-Vendor"   value="Sun Microsystems, Inc." />
		    <attribute name="Implementation-Title"   value="JMX(TM) API, Java SE 6 implementation" />
		    <attribute name="Implementation-Version" value="${BUILD_DATE} rebuild of Mustang JMX sources" /> 
		    <attribute name="Implementation-Vendor"  value="Source bundle from Sun Microsystems, Inc. - Customer rebuilt" />
		</section>
	    </manifest>
       </jar>

    </target>



    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- Delete only all class files in build/classes directory hierarchy -->

    <target name="clean-classes"
            description="Delete only all *.class files in build_jmx/classes dir" >
        <delete>
           <fileset dir="${dir.build.classes}" includes="**/*.class" />
        </delete>
    </target>


    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- Delete build directory and all its contents -->

    <target name="clean-all" 
            description="Delete build directory and all its contents" >
        <delete dir="${dir.build}" />
    </target>               
        
  
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- Clean all and build everything -->

    <target name="all" depends="clean-all,jar" 
	    description="Clean all and build everything" />


</project>

<!--
 Copyright 2005-2006 Sun Microsystems, Inc.  All Rights Reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions
 are met:

   - Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.

   - Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.

   - Neither the name of Sun Microsystems nor the names of its
     contributors may be used to endorse or promote products derived
     from this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<project name="J2DBench" default="dist" basedir=".">
    <description>
        simple example build file
    </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>
  <property name="resources"  location="resources"/>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac debug="false" source="1.2" target="1.2" srcdir="${src}" destdir="${build}"/>
  </target>

  <target name="run" depends="dist" 
    description="run J2DBench" >
    <java jar="${dist}/J2DBench.jar"
       fork="true"
    >
    </java>
  </target>

  <target name="analyze" depends="dist" 
    description="run J2DAnalyzer" >
    <java jar="${dist}/J2DAnalyzer.jar"
       fork="true"
    >
    </java>
  </target>

  <target name="resources" depends="init"
        description="copy resources into build dir" >
    <!-- Copy the resource files from ${resources} into ${build}/ -->
    <mkdir dir="${dist}"/>
    <mkdir dir="${build}/j2dbench/tests/text/textdata"/>
    <copy todir="${build}/j2dbench/tests/text/textdata">
      <fileset dir="${resources}/textdata" />
    </copy>
    <mkdir dir="${build}/j2dbench/tests/iio/images"/>
    <copy todir="${build}/j2dbench/tests/iio/images">
      <fileset dir="${resources}/images" />
    </copy>
  </target>

  <target name="dist" depends="compile, resources"
        description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}"/>

    <!-- Put everything in ${build} into the J2DBench.jar file -->
    <jar jarfile="${dist}/J2DBench.jar" basedir="${build}" 
        excludes="j2dbench/report/**" >
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
	<attribute name="Main-Class" value="j2dbench.J2DBench"/>
      </manifest>
    </jar>
    <jar jarfile="${dist}/J2DAnalyzer.jar" basedir="${build}" 
        includes="j2dbench/report/**" >
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
	<attribute name="Main-Class" value="j2dbench.report.J2DAnalyzer"/>
      </manifest>
    </jar>
  </target>

  <target name="clean"
        description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
</project>
<?xml version="1.0" encoding="UTF-8"?>

<!--
 Copyright 2006 Sun Microsystems, Inc.  All Rights Reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions
 are met:

   - Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.

   - Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.

   - Neither the name of Sun Microsystems nor the names of its
     contributors may be used to endorse or promote products derived
     from this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<project name="FileChooserDemo" basedir="." default="jar">

    <import file="nbproject/jdk.xml"/>
    
    <target name="-prop-init">
        <property file="user.build.properties"/>
        <property file="build.properties"/>
    </target>

    <target name="-init" depends="-prop-init,-jdk-init"/>

    <target name="compile" depends="-init" description="Compile main sources.">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${classes.dir}" debug="${debug}" deprecation="${deprecation}">
            <classpath path="${cp}"/>
        </javac>
        <copy todir="${classes.dir}">
            <fileset dir="${src.dir}"/>
        </copy>
    </target>

    <target name="jar" depends="compile" description="Build JAR file for main sources.">
        <jar jarfile="${jar}" compress="true">
            <manifest>
                <attribute name="Main-Class" value="${main.class}"/>
            </manifest>
            <fileset dir="${classes.dir}"/>
        </jar>
    </target>

    <target name="run" depends="compile" description="Run application.">
        <fail unless="main.class">Must set property 'main.class' (e.g. in build.properties)</fail>
        <java classname="${main.class}" fork="true" failonerror="true">
            <classpath path="${run.cp}"/>
        </java>
    </target>

    <target name="javadoc" depends="-init" description="Build Javadoc.">
        <mkdir dir="${javadoc.dir}"/>
        <javadoc destdir="${javadoc.dir}">
            <classpath path="${cp}"/>
            <sourcepath>
                <pathelement location="${src.dir}"/>
            </sourcepath>
            <fileset dir="${src.dir}"/>
        </javadoc>
    </target>

    <target name="clean" depends="-init" description="Clean build products.">
        <delete dir="${build.dir}"/>
        <delete file="${jar}"/>
    </target>

    <target name="profile">
        <ant antfile="nbproject/netbeans-targets.xml" target="profile"/>
    </target>

</project>
<?xml version="1.0" encoding="UTF-8"?>

<!--
 Copyright 2006 Sun Microsystems, Inc.  All Rights Reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions
 are met:

   - Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.

   - Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.

   - Neither the name of Sun Microsystems nor the names of its
     contributors may be used to endorse or promote products derived
     from this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<project name="Font2DTest" basedir="." default="jar">

    <import file="nbproject/jdk.xml"/>
    
    <target name="-prop-init">
        <property file="user.build.properties"/>
        <property file="build.properties"/>
    </target>

    <target name="-init" depends="-prop-init,-jdk-init"/>

    <target name="compile" depends="-init" description="Compile main sources.">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${classes.dir}" debug="${debug}" deprecation="${deprecation}">
            <classpath path="${cp}"/>
        </javac>
        <copy todir="${classes.dir}">
            <fileset dir="${src.dir}"/>
        </copy>
    </target>

    <target name="jar" depends="compile" description="Build JAR file for main sources.">
        <jar jarfile="${jar}" compress="true">
            <manifest>
                <attribute name="Main-Class" value="${main.class}"/>
            </manifest>
            <fileset dir="${classes.dir}"/>
        </jar>
    </target>

    <target name="run" depends="compile" description="Run application.">
        <fail unless="main.class">Must set property 'main.class' (e.g. in build.properties)</fail>
        <java classname="${main.class}" fork="true" failonerror="true">
            <classpath path="${run.cp}"/>
        </java>
    </target>

    <target name="run-applet" depends="jar" description="Run applet.">
        <exec executable="${nbjdk.appletviewer}">
            <arg file="${applet.html}"/>
        </exec>
        <!-- To view in regular web browser instead:
        <nbbrowse file="${applet.html}"/>
        -->
    </target>
    
    <target name="javadoc" depends="-init" description="Build Javadoc.">
        <mkdir dir="${javadoc.dir}"/>
        <javadoc destdir="${javadoc.dir}">
            <classpath path="${cp}"/>
            <sourcepath>
                <pathelement location="${src.dir}"/>
            </sourcepath>
            <fileset dir="${src.dir}"/>
        </javadoc>
    </target>

    <target name="clean" depends="-init" description="Clean build products.">
        <delete dir="${build.dir}"/>
        <delete file="${jar}"/>
    </target>

    <target name="profile">
        <ant antfile="nbproject/netbeans-targets.xml" target="profile"/>
    </target>

</project>
<?xml version="1.0" encoding="UTF-8"?>

<!--
 Copyright 2006 Sun Microsystems, Inc.  All Rights Reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions
 are met:

   - Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.

   - Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.

   - Neither the name of Sun Microsystems nor the names of its
     contributors may be used to endorse or promote products derived
     from this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<project name="Metalworks" basedir="." default="jar">

    <import file="nbproject/jdk.xml"/>
    
    <target name="-prop-init">
        <property file="user.build.properties"/>
        <property file="build.properties"/>
    </target>

    <target name="-init" depends="-prop-init,-jdk-init"/>

    <target name="compile" depends="-init" description="Compile main sources.">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${classes.dir}" debug="${debug}" deprecation="${deprecation}">
            <classpath path="${cp}"/>
        </javac>
        <copy todir="${classes.dir}">
            <fileset dir="${src.dir}"/>
        </copy>
    </target>

    <target name="jar" depends="compile" description="Build JAR file for main sources.">
        <jar jarfile="${jar}" compress="true">
            <manifest>
                <attribute name="Main-Class" value="${main.class}"/>
            </manifest>
            <fileset dir="${classes.dir}"/>
        </jar>
    </target>

    <target name="run" depends="compile" description="Run application.">
        <fail unless="main.class">Must set property 'main.class' (e.g. in build.properties)</fail>
        <java classname="${main.class}" fork="true" failonerror="true">
            <classpath path="${run.cp}"/>
        </java>
    </target>

    <target name="javadoc" depends="-init" description="Build Javadoc.">
        <mkdir dir="${javadoc.dir}"/>
        <javadoc destdir="${javadoc.dir}">
            <classpath path="${cp}"/>
            <sourcepath>
                <pathelement location="${src.dir}"/>
            </sourcepath>
            <fileset dir="${src.dir}"/>
        </javadoc>
    </target>

    <target name="clean" depends="-init" description="Clean build products.">
        <delete dir="${build.dir}"/>
        <delete file="${jar}"/>
    </target>

    <target name="profile">
        <ant antfile="nbproject/netbeans-targets.xml" target="profile"/>
    </target>

</project>
<?xml version="1.0" encoding="UTF-8"?>

<!--
 Copyright 2006 Sun Microsystems, Inc.  All Rights Reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions
 are met:

   - Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.

   - Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.

   - Neither the name of Sun Microsystems nor the names of its
     contributors may be used to endorse or promote products derived
     from this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<project name="Notepad" basedir="." default="jar">

    <import file="nbproject/jdk.xml"/>
    
    <target name="-prop-init">
        <property file="user.build.properties"/>
        <property file="build.properties"/>
    </target>

    <target name="-init" depends="-prop-init,-jdk-init"/>

    <target name="compile" depends="-init" description="Compile main sources.">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${classes.dir}" debug="${debug}" deprecation="${deprecation}">
            <classpath path="${cp}"/>
        </javac>
        <copy todir="${classes.dir}">
            <fileset dir="${src.dir}"/>
        </copy>
    </target>

    <target name="jar" depends="compile" description="Build JAR file for main sources.">
        <jar jarfile="${jar}" compress="true">
            <manifest>
                <attribute name="Main-Class" value="${main.class}"/>
            </manifest>
            <fileset dir="${classes.dir}"/>
        </jar>
    </target>

    <target name="run" depends="compile" description="Run application.">
        <fail unless="main.class">Must set property 'main.class' (e.g. in build.properties)</fail>
        <java classname="${main.class}" fork="true" failonerror="true">
            <classpath path="${run.cp}"/>
        </java>
    </target>

    <target name="javadoc" depends="-init" description="Build Javadoc.">
        <mkdir dir="${javadoc.dir}"/>
        <javadoc destdir="${javadoc.dir}">
            <classpath path="${cp}"/>
            <sourcepath>
                <pathelement location="${src.dir}"/>
            </sourcepath>
            <fileset dir="${src.dir}"/>
        </javadoc>
    </target>

    <target name="clean" depends="-init" description="Clean build products.">
        <delete dir="${build.dir}"/>
        <delete file="${jar}"/>
    </target>

    <target name="profile">
        <ant antfile="nbproject/netbeans-targets.xml" target="profile"/>
    </target>

</project>
<?xml version="1.0" encoding="UTF-8"?>

<!--
 Copyright 2006 Sun Microsystems, Inc.  All Rights Reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions
 are met:

   - Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.

   - Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.

   - Neither the name of Sun Microsystems nor the names of its
     contributors may be used to endorse or promote products derived
     from this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<project name="SampleTree" basedir="." default="jar">

    <import file="nbproject/jdk.xml"/>
    
    <target name="-prop-init">
        <property file="user.build.properties"/>
        <property file="build.properties"/>
    </target>

    <target name="-init" depends="-prop-init,-jdk-init"/>

    <target name="compile" depends="-init" description="Compile main sources.">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${classes.dir}" debug="${debug}" deprecation="${deprecation}">
            <classpath path="${cp}"/>
        </javac>
        <copy todir="${classes.dir}">
            <fileset dir="${src.dir}"/>
        </copy>
    </target>

    <target name="jar" depends="compile" description="Build JAR file for main sources.">
        <jar jarfile="${jar}" compress="true">
            <manifest>
                <attribute name="Main-Class" value="${main.class}"/>
            </manifest>
            <fileset dir="${classes.dir}"/>
        </jar>
    </target>

    <target name="run" depends="compile" description="Run application.">
        <fail unless="main.class">Must set property 'main.class' (e.g. in build.properties)</fail>
        <java classname="${main.class}" fork="true" failonerror="true">
            <classpath path="${run.cp}"/>
        </java>
    </target>

    <target name="javadoc" depends="-init" description="Build Javadoc.">
        <mkdir dir="${javadoc.dir}"/>
        <javadoc destdir="${javadoc.dir}">
            <classpath path="${cp}"/>
            <sourcepath>
                <pathelement location="${src.dir}"/>
            </sourcepath>
            <fileset dir="${src.dir}"/>
        </javadoc>
    </target>

    <target name="clean" depends="-init" description="Clean build products.">
        <delete dir="${build.dir}"/>
        <delete file="${jar}"/>
    </target>

    <target name="profile">
        <ant antfile="nbproject/netbeans-targets.xml" target="profile"/>
    </target>

</project>
<?xml version="1.0" encoding="UTF-8"?>

<!--
 Copyright 2006 Sun Microsystems, Inc.  All Rights Reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions
 are met:

   - Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.

   - Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.

   - Neither the name of Sun Microsystems nor the names of its
     contributors may be used to endorse or promote products derived
     from this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<project name="SwingApplet" basedir="." default="jar">

    <import file="nbproject/jdk.xml"/>
    
    <target name="-prop-init">
        <property file="user.build.properties"/>
        <property file="build.properties"/>
    </target>

    <target name="-init" depends="-prop-init,-jdk-init"/>

    <target name="compile" depends="-init" description="Compile main sources.">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${classes.dir}" debug="${debug}" deprecation="${deprecation}">
            <classpath path="${cp}"/>
        </javac>
        <copy todir="${classes.dir}">
            <fileset dir="${src.dir}"/>
        </copy>
    </target>

    <target name="jar" depends="compile" description="Build JAR file for main sources.">
        <jar jarfile="${jar}" compress="true">
            <manifest>
                <attribute name="Main-Class" value="${main.class}"/>
            </manifest>
            <fileset dir="${classes.dir}"/>
        </jar>
    </target>

    <target name="run" depends="compile" description="Run application.">
        <fail unless="main.class">Must set property 'main.class' (e.g. in build.properties)</fail>
        <java classname="${main.class}" fork="true" failonerror="true">
            <classpath path="${run.cp}"/>
        </java>
    </target>

    <target name="run-applet" depends="jar" description="Run applet.">
        <exec executable="${nbjdk.appletviewer}">
            <arg file="${applet.html}"/>
        </exec>
        <!-- To view in regular web browser instead:
        <nbbrowse file="${applet.html}"/>
        -->
    </target>
    
    <target name="javadoc" depends="-init" description="Build Javadoc.">
        <mkdir dir="${javadoc.dir}"/>
        <javadoc destdir="${javadoc.dir}">
            <classpath path="${cp}"/>
            <sourcepath>
                <pathelement location="${src.dir}"/>
            </sourcepath>
            <fileset dir="${src.dir}"/>
        </javadoc>
    </target>

    <target name="clean" depends="-init" description="Clean build products.">
        <delete dir="${build.dir}"/>
        <delete file="${jar}"/>
    </target>

    <target name="profile">
        <ant antfile="nbproject/netbeans-targets.xml" target="profile"/>
    </target>

</project>
<?xml version="1.0" encoding="UTF-8"?>

<!--
 Copyright 2006 Sun Microsystems, Inc.  All Rights Reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions
 are met:

   - Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.

   - Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.

   - Neither the name of Sun Microsystems nor the names of its
     contributors may be used to endorse or promote products derived
     from this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<project name="TableExample" basedir="." default="jar">

    <import file="nbproject/jdk.xml"/>
    
    <target name="-prop-init">
        <property file="user.build.properties"/>
        <property file="build.properties"/>
    </target>

    <target name="-init" depends="-prop-init,-jdk-init"/>

    <target name="compile" depends="-init" description="Compile main sources.">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${classes.dir}" debug="${debug}" deprecation="${deprecation}">
            <classpath path="${cp}"/>
        </javac>
        <copy todir="${classes.dir}">
            <fileset dir="${src.dir}"/>
        </copy>
    </target>

    <target name="jar" depends="compile" description="Build JAR file for main sources.">
        <jar jarfile="${jar}" compress="true">
            <manifest>
                <attribute name="Main-Class" value="${main.class}"/>
            </manifest>
            <fileset dir="${classes.dir}"/>
        </jar>
    </target>

    <target name="run" depends="compile" description="Run application.">
        <fail unless="main.class">Must set property 'main.class' (e.g. in build.properties)</fail>
        <java classname="${main.class}" fork="true" failonerror="true">
            <classpath path="${run.cp}"/>
        </java>
    </target>

    <target name="javadoc" depends="-init" description="Build Javadoc.">
        <mkdir dir="${javadoc.dir}"/>
        <javadoc destdir="${javadoc.dir}">
            <classpath path="${cp}"/>
            <sourcepath>
                <pathelement location="${src.dir}"/>
            </sourcepath>
            <fileset dir="${src.dir}"/>
        </javadoc>
    </target>

    <target name="clean" depends="-init" description="Clean build products.">
        <delete dir="${build.dir}"/>
        <delete file="${jar}"/>
    </target>

    <target name="profile">
        <ant antfile="nbproject/netbeans-targets.xml" target="profile"/>
    </target>

</project>
<?xml version="1.0" encoding="UTF-8"?>

<!--
 Copyright 2006 Sun Microsystems, Inc.  All Rights Reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions
 are met:

   - Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.

   - Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.

   - Neither the name of Sun Microsystems nor the names of its
     contributors may be used to endorse or promote products derived
     from this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<project name="FullThreadDump" basedir="." default="jar">

    <import file="nbproject/jdk.xml"/>
    
    <target name="-prop-init">
        <property file="user.build.properties"/>
        <property file="build.properties"/>
    </target>

    <target name="-init" depends="-prop-init,-jdk-init"/>

    <target name="compile" depends="-init" description="Compile main sources.">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${classes.dir}" debug="${debug}" deprecation="${deprecation}">
            <classpath path="${cp}"/>
        </javac>
        <copy todir="${classes.dir}">
            <fileset dir="${src.dir}"/>
        </copy>
    </target>

    <target name="jar" depends="compile" description="Build JAR file for main sources.">
        <jar jarfile="${jar}" compress="true">
            <manifest>
                <attribute name="Main-Class" value="${main.class}"/>
            </manifest>
            <fileset dir="${classes.dir}"/>
        </jar>
    </target>

    <target name="run" depends="compile" description="Run application.">
        <fail unless="main.class">Must set property 'main.class' (e.g. in build.properties)</fail>
        <java classname="${main.class}" fork="true" failonerror="true">
            <classpath path="${run.cp}"/>
        </java>
    </target>

    <target name="javadoc" depends="-init" description="Build Javadoc.">
        <mkdir dir="${javadoc.dir}"/>
        <javadoc destdir="${javadoc.dir}">
            <classpath path="${cp}"/>
            <sourcepath>
                <pathelement location="${src.dir}"/>
            </sourcepath>
            <fileset dir="${src.dir}"/>
        </javadoc>
    </target>

    <target name="clean" depends="-init" description="Clean build products.">
        <delete dir="${build.dir}"/>
        <delete file="${jar}"/>
    </target>

    <target name="profile">
        <ant antfile="nbproject/netbeans-targets.xml" target="profile"/>
    </target>

</project>
<?xml version="1.0" encoding="UTF-8"?>

<!--
 Copyright 2006 Sun Microsystems, Inc.  All Rights Reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions
 are met:

   - Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.

   - Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.

   - Neither the name of Sun Microsystems nor the names of its
     contributors may be used to endorse or promote products derived
     from this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<project name="JTop" basedir="." default="jar">

    <import file="nbproject/jdk.xml"/>
    
    <target name="-prop-init">
        <property file="user.build.properties"/>
        <property file="build.properties"/>
    </target>

    <target name="-init" depends="-prop-init,-jdk-init"/>

    <target name="compile" depends="-init" description="Compile main sources.">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${classes.dir}" debug="${debug}" deprecation="${deprecation}">
            <classpath path="${cp}"/>
        </javac>
        <copy todir="${classes.dir}">
            <fileset dir="${src.dir}"/>
        </copy>
    </target>

    <target name="jar" depends="compile" description="Build JAR file for main sources.">
        <jar jarfile="${jar}" compress="true">
            <manifest>
                <attribute name="Main-Class" value="${main.class}"/>
            </manifest>
            <fileset dir="${classes.dir}"/>
        </jar>
    </target>

    <target name="run" depends="compile" description="Run application.">
        <fail unless="main.class">Must set property 'main.class' (e.g. in build.properties)</fail>
        <java classname="${main.class}" fork="true" failonerror="true">
            <classpath path="${run.cp}"/>
        </java>
    </target>

    <target name="javadoc" depends="-init" description="Build Javadoc.">
        <mkdir dir="${javadoc.dir}"/>
        <javadoc destdir="${javadoc.dir}">
            <classpath path="${cp}"/>
            <sourcepath>
                <pathelement location="${src.dir}"/>
            </sourcepath>
            <fileset dir="${src.dir}"/>
        </javadoc>
    </target>

    <target name="clean" depends="-init" description="Clean build products.">
        <delete dir="${build.dir}"/>
        <delete file="${jar}"/>
    </target>

    <target name="profile">
        <ant antfile="nbproject/netbeans-targets.xml" target="profile"/>
    </target>

</project>
<?xml version="1.0" encoding="UTF-8"?>

<!--
 Copyright 2006 Sun Microsystems, Inc.  All Rights Reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions
 are met:

   - Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.

   - Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.

   - Neither the name of Sun Microsystems nor the names of its
     contributors may be used to endorse or promote products derived
     from this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<project name="MemoryMonitor" basedir="." default="jar">

    <import file="nbproject/jdk.xml"/>
    
    <target name="-prop-init">
        <property file="user.build.properties"/>
        <property file="build.properties"/>
    </target>

    <target name="-init" depends="-prop-init,-jdk-init"/>

    <target name="compile" depends="-init" description="Compile main sources.">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${classes.dir}" debug="${debug}" deprecation="${deprecation}">
            <classpath path="${cp}"/>
        </javac>
        <copy todir="${classes.dir}">
            <fileset dir="${src.dir}"/>
        </copy>
    </target>

    <target name="jar" depends="compile" description="Build JAR file for main sources.">
        <jar jarfile="${jar}" compress="true">
            <manifest>
                <attribute name="Main-Class" value="${main.class}"/>
            </manifest>
            <fileset dir="${classes.dir}"/>
        </jar>
    </target>

    <target name="run" depends="compile" description="Run application.">
        <fail unless="main.class">Must set property 'main.class' (e.g. in build.properties)</fail>
        <java classname="${main.class}" fork="true" failonerror="true">
            <classpath path="${run.cp}"/>
        </java>
    </target>

    <target name="javadoc" depends="-init" description="Build Javadoc.">
        <mkdir dir="${javadoc.dir}"/>
        <javadoc destdir="${javadoc.dir}">
            <classpath path="${cp}"/>
            <sourcepath>
                <pathelement location="${src.dir}"/>
            </sourcepath>
            <fileset dir="${src.dir}"/>
        </javadoc>
    </target>

    <target name="clean" depends="-init" description="Clean build products.">
        <delete dir="${build.dir}"/>
        <delete file="${jar}"/>
    </target>

    <target name="profile">
        <ant antfile="nbproject/netbeans-targets.xml" target="profile"/>
    </target>

</project>
<?xml version="1.0" encoding="UTF-8"?>

<!--
 Copyright 2006 Sun Microsystems, Inc.  All Rights Reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions
 are met:

   - Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.

   - Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.

   - Neither the name of Sun Microsystems nor the names of its
     contributors may be used to endorse or promote products derived
     from this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<project name="VerboseGC" basedir="." default="jar">

    <import file="nbproject/jdk.xml"/>
    
    <target name="-prop-init">
        <property file="user.build.properties"/>
        <property file="build.properties"/>
    </target>

    <target name="-init" depends="-prop-init,-jdk-init"/>

    <target name="compile" depends="-init" description="Compile main sources.">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${classes.dir}" debug="${debug}" deprecation="${deprecation}">
            <classpath path="${cp}"/>
        </javac>
        <copy todir="${classes.dir}">
            <fileset dir="${src.dir}"/>
        </copy>
    </target>

    <target name="jar" depends="compile" description="Build JAR file for main sources.">
        <jar jarfile="${jar}" compress="true">
            <manifest>
                <attribute name="Main-Class" value="${main.class}"/>
            </manifest>
            <fileset dir="${classes.dir}"/>
        </jar>
    </target>

    <target name="run" depends="compile" description="Run application.">
        <fail unless="main.class">Must set property 'main.class' (e.g. in build.properties)</fail>
        <java classname="${main.class}" fork="true" failonerror="true">
            <classpath path="${run.cp}"/>
        </java>
    </target>

    <target name="javadoc" depends="-init" description="Build Javadoc.">
        <mkdir dir="${javadoc.dir}"/>
        <javadoc destdir="${javadoc.dir}">
            <classpath path="${cp}"/>
            <sourcepath>
                <pathelement location="${src.dir}"/>
            </sourcepath>
            <fileset dir="${src.dir}"/>
        </javadoc>
    </target>

    <target name="clean" depends="-init" description="Clean build products.">
        <delete dir="${build.dir}"/>
        <delete file="${jar}"/>
    </target>

    <target name="profile">
        <ant antfile="nbproject/netbeans-targets.xml" target="profile"/>
    </target>

</project>
<?xml version="1.0" encoding="UTF-8"?>

<!--
 Copyright 2006 Sun Microsystems, Inc.  All Rights Reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions
 are met:

   - Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.

   - Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.

   - Neither the name of Sun Microsystems nor the names of its
     contributors may be used to endorse or promote products derived
     from this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<project name="jconsole-plugin" basedir="." default="jar">

    <import file="nbproject/jdk.xml"/>
    
    <target name="-prop-init">
        <property file="user.build.properties"/>
        <property file="build.properties"/>
    </target>

    <target name="-init" depends="-prop-init,-jdk-init"/>

    <target name="compile" depends="-init" description="Compile main sources.">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${classes.dir}" debug="${debug}" deprecation="${deprecation}">
            <classpath path="${cp}"/>
        </javac>
        <copy todir="${classes.dir}">
            <fileset dir="${src.dir}"/>
        </copy>
    </target>

    <target name="jar" depends="compile" description="Build JAR file for main sources.">
        <jar jarfile="${jar}" compress="true">
            <manifest>
                <attribute name="Main-Class" value="${main.class}"/>
            </manifest>
            <fileset dir="${classes.dir}"/>
        </jar>
    </target>

    <target name="run" depends="compile" description="Run application.">
        <fail unless="main.class">Must set property 'main.class' (e.g. in build.properties)</fail>
        <java classname="${main.class}" fork="true" failonerror="true">
            <classpath path="${run.cp}"/>
        </java>
    </target>

    <target name="run-jconsole" depends="jar" description="Run JConsole.">
        <exec executable="${nbjdk.jconsole}">
            <arg value="-pluginpath"/>
            <arg file="${jar}"/>
        </exec>
    </target>
    
    <target name="javadoc" depends="-init" description="Build Javadoc.">
        <mkdir dir="${javadoc.dir}"/>
        <javadoc destdir="${javadoc.dir}">
            <classpath path="${cp}"/>
            <sourcepath>
                <pathelement location="${src.dir}"/>
            </sourcepath>
            <fileset dir="${src.dir}"/>
        </javadoc>
    </target>

    <target name="clean" depends="-init" description="Clean build products.">
        <delete dir="${build.dir}"/>
        <delete file="${jar}"/>
    </target>

    <target name="profile">
        <ant antfile="nbproject/netbeans-targets.xml" target="profile"/>
    </target>

</project>
<?xml version="1.0" encoding="UTF-8"?>

<!--
 Copyright 2006 Sun Microsystems, Inc.  All Rights Reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions
 are met:

   - Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.

   - Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.

   - Neither the name of Sun Microsystems nor the names of its
     contributors may be used to endorse or promote products derived
     from this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->


<!-- 
  This is ant (http://ant.apache.org) build script to build the jconsole 
  script console plugin.
-->
 
<project name="JConsole Script Shell Plugin" default="all" basedir=".">

  <!-- property definitions -->
  <property name="app.name" value="jconsole-plugin"/>
  <property name="src.dir"  value="src"/>  
  <property name="jconsole.jar.dir"  value="${java.home}/../lib"/>
  <property name="build.dir"  value="."/>
  <property name="dist.jar" value="${build.dir}/${app.name}.jar"/>
  <property name="classes.dir"  value="${build.dir}/classes"/>
  <property name="resources.dir"  value="${classes.dir}/resources"/>


  <!-- make directories required -->
  <target name="prepare">
    <mkdir dir="${classes.dir}"/>
  </target>

  <target name="clean">
     <delete file="${dist.jar}"/>
     <delete dir="${classes.dir}"/>
  </target>

  <!-- we need jconsole.jar in CLASSPATH to build -->
  <path id="javac.classpath">
    <pathelement path="${jconsole.jar.dir}/jconsole.jar" />
  </path>

  <target name="compile" depends="prepare" description="compiles the sources">
    <javac srcdir="${src.dir}"
           destdir="${classes.dir}"
           debug="on" deprecation="on">
      <classpath refid="javac.classpath" />
    </javac>
    <copy todir="${classes.dir}/META-INF/services">
      <fileset dir="${src.dir}/META-INF/services"/>
    </copy>
    <copy todir="${resources.dir}">
      <fileset dir="${src.dir}/resources"/>
    </copy>
  </target>

  <target name="all" depends="compile" description="buile deployment bundle">
    <jar jarfile="${dist.jar}"
         basedir="${classes.dir}"/>
  </target>

</project>
<?xml version="1.0" encoding="UTF-8"?>

<!--
 Copyright 2006 Sun Microsystems, Inc.  All Rights Reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions
 are met:

   - Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.

   - Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.

   - Neither the name of Sun Microsystems nor the names of its
     contributors may be used to endorse or promote products derived
     from this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->


<!-- 
  This is ant (http://ant.apache.org) build script to build the
  "jmx-scandir" sample. Either this build.xml can be used standalone 
  with "ant" tool or can be opened as a project with NetBeans IDE
  (http://www.netbeans.org).
-->

<project name="jmx-scandir" default="jar" basedir=".">

    <import file="nbproject/jdk.xml"/>
    

    <target name="-prop-init">
        <property file="user.build.properties"/>
        <property file="build.properties"/>
    </target>

    <target name="-init" depends="-prop-init,-jdk-init"/>

    <target name="compile" depends="-init" description="Compile main sources.">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${classes.dir}" debug="${debug}" deprecation="${deprecation}">
            <classpath path="${cp}"/>
        </javac>
        <copy todir="${classes.dir}">
            <fileset dir="${src.dir}"/>
        </copy>
    </target>

    <target name="jar" depends="compile" description="Build JAR file for main sources.">
        <mkdir dir="${dist.dir}" />
        <jar jarfile="${jar}" compress="true">
            <manifest>
                <attribute name="Main-Class" value="${main.agent.class}"/>
            </manifest>
            <fileset dir="${classes.dir}"/>
        </jar>
    </target>

    <target name="run-client" depends="compile" description="Run client.">
        <fail unless="main.client.class">Must set property 'main.client.class' (e.g. in build.properties)</fail>
        <java classname="${main.client.class}" fork="true" failonerror="true">
            <classpath path="${run.cp}"/>
            <jvmarg line="${client.jvmargs}" />
            <arg line="${client.args}" />
        </java>
    </target>

    <target name="run-agent" depends="compile" description="Run agent.">
        <fail unless="main.agent.class">Must set property 'main.agent.class' (e.g. in build.properties)</fail>
        <java classname="${main.agent.class}" fork="true" failonerror="true">
            <classpath path="${run.cp}"/>
            <jvmarg line="${agent.jvmargs}" />
        </java>
    </target>

    <target name="run" depends="run-agent" description="Run agent." />

    <target name="run-single" depends="-init,compile">
        <fail unless="run.class">Must select one file in the IDE or set run.class</fail>
        <java classname="${run.class}" fork="true" failonerror="true">
            <classpath path="${run.cp}"/>
        </java>
    </target>

    <target name="javadoc" depends="-init" description="Build Javadoc.">
        <mkdir dir="${javadoc.dir}"/>
        <javadoc destdir="${javadoc.dir}">
            <classpath path="${cp}"/>
            <sourcepath>
                <pathelement location="${src.dir}"/>
            </sourcepath>
            <fileset dir="${src.dir}"/>
        </javadoc>
    </target>

    <target name="clean" depends="-init" description="Clean build products.">
        <delete dir="${build.dir}"/>
        <delete file="${jar}"/>
        <delete dir="${dist.dir}"/>
    </target>

    <target name="profile">
        <ant antfile="nbproject/netbeans-targets.xml" target="profile"/>
    </target>

    <!-- JUnit targets -->

    <target name="compile-test" depends="-init,compile">
        <fail unless="libs.junit.classpath">Must set libs.junit.classpath variable to the JUnit classpath in the build.properties file.</fail>
        <mkdir dir="${build.test.classes.dir}"/>
        <javac srcdir="${test.src.dir}" destdir="${build.test.classes.dir}" debug="${debug}" classpath="${javac.test.classpath}"/>
        <copy todir="${build.test.classes.dir}">
            <fileset dir="${test.src.dir}" excludes="**/*.java"/>
        </copy>
    </target>

    <target name="-do-test-run" depends="-init,compile-test">
        <mkdir dir="${build.test.results.dir}"/>
        <junit showoutput="true" fork="true" dir="${basedir}" failureproperty="tests.failed" errorproperty="tests.failed">
            <batchtest todir="${build.test.results.dir}">
                <fileset dir="${test.src.dir}" includes="**/*Test.java"/>
            </batchtest>
            <classpath>
                <path path="${run.test.classpath}"/>
            </classpath>
            <syspropertyset>
                <propertyref prefix="test-sys-prop."/>
                <mapper type="glob" from="test-sys-prop.*" to="*"/>
            </syspropertyset>
            <formatter type="brief" usefile="false"/>
            <formatter type="xml"/>
            <jvmarg line="${run.jvmargs}"/>
        </junit>
        <fail if="tests.failed">Some tests failed; see details above.</fail>
    </target>
    
    <target name="test" depends="-init,compile-test,-do-test-run" description="Run unit tests."/>

    <target name="-do-test-run-single" depends="-init,compile-test">
        <fail unless="test.includes">Must select some files in the IDE or set test.includes</fail>
        <junit showoutput="true" fork="true" dir="${basedir}" failureproperty="tests.failed" errorproperty="tests.failed">
            <batchtest todir="${build.test.results.dir}">
                <fileset dir="${test.src.dir}" includes="${test.includes}"/>
            </batchtest>
            <classpath>
                <path path="${run.test.classpath}"/>
            </classpath>
            <syspropertyset>
                <propertyref prefix="test-sys-prop."/>
                <mapper type="glob" from="test-sys-prop.*" to="*"/>
            </syspropertyset>
            <formatter type="brief" usefile="false"/>
            <formatter type="xml"/>
            <jvmarg line="${run.jvmargs}"/>
        </junit>
        <fail if="tests.failed">Some tests failed; see details above.</fail>
    </target>

    <target name="test-single" depends="-init,compile-test,-do-test-run-single" description="Run single unit test."/>
</project>
<?xml version="1.0" encoding="UTF-8"?>

<!--
 Copyright 2006 Sun Microsystems, Inc.  All Rights Reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions
 are met:

   - Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.

   - Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.

   - Neither the name of Sun Microsystems nor the names of its
     contributors may be used to endorse or promote products derived
     from this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->


<!-- 
  This is ant (http://ant.apache.org) build script to build the
  "Scriptpad" sample. Either this build.xml can be used standalone 
  with "ant" tool or can be opened as a project with NetBeans IDE
  (http://www.netbeans.org).
-->

<project name="Scriptpad" default="jar" basedir=".">

    <import file="nbproject/jdk.xml"/>

    <target name="-prop-init">
        <property file="user.build.properties"/>
        <property file="build.properties"/>
    </target>

    <target name="-init" depends="-prop-init,-jdk-init"/>

    <target name="compile" depends="-init" description="Compile main sources.">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${classes.dir}" debug="${debug}" deprecation="${deprecation}">
            <classpath path="${cp}"/>
        </javac>
        <copy todir="${classes.dir}">
            <fileset dir="${src.dir}"/>
        </copy>
    </target>

    <target name="jar" depends="compile" description="Build JAR file for main sources.">
        <jar jarfile="${jar}" compress="true">
            <manifest>
                <attribute name="Main-Class" value="${main.class}"/>
            </manifest>
            <fileset dir="${classes.dir}"/>
        </jar>
    </target>

    <target name="run" depends="compile" description="Run application.">
        <fail unless="main.class">Must set property 'main.class' (e.g. in build.properties)</fail>
        <java classname="${main.class}" fork="true" failonerror="true">
            <classpath path="${run.cp}"/>
        </java>
    </target>

    <target name="javadoc" depends="-init" description="Build Javadoc.">
        <mkdir dir="${javadoc.dir}"/>
        <javadoc destdir="${javadoc.dir}">
            <classpath path="${cp}"/>
            <sourcepath>
                <pathelement location="${src.dir}"/>
            </sourcepath>
            <fileset dir="${src.dir}"/>
        </javadoc>
    </target>

    <target name="clean" depends="-init" description="Clean build products.">
        <delete dir="${build.dir}"/>
        <delete file="${jar}"/>
    </target>

    <target name="profile">
        <ant antfile="nbproject/netbeans-targets.xml" target="profile"/>
    </target>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright 2007 Sun Microsystems, Inc.  All Rights Reserved.
 DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.

 This code is free software; you can redistribute it and/or modify it
 under the terms of the GNU General Public License version 2 only, as
 published by the Free Software Foundation.  Sun designates this
 particular file as subject to the "Classpath" exception as provided
 by Sun in the LICENSE file that accompanied this code.

 This code is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 version 2 for more details (a copy is included in the LICENSE file that
 accompanied this code).

 You should have received a copy of the GNU General Public License version
 2 along with this work; if not, write to the Free Software Foundation,
 Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.

 Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 CA 95054 USA or visit www.sun.com if you need additional information or
 have any questions.
-->

<!--
 This is the main build file for the complete langtools workspace.
 It is used both when working on the tools in NetBeans, and when building
 JDK itself, in which case it is invoked from the wrapper Makefile.
 -->

<project name="langtools" default="build" basedir="..">
    
    <!-- The following locations can be used to override default property values. -->

    <!-- Use this location for customizations specific to this instance of this workspace -->
    <property file="build.properties"/>

    <!-- Use this location for customizations common to all OpenJDK langtools workspaces -->
    <property file="${user.home}/.openjdk/${ant.project.name}-build.properties"/>

    <!-- Use this location for customizations common to all OpenJDK workspaces -->
    <property file="${user.home}/.openjdk/build.properties"/>
    
    <!-- Convenient shorthands for standard locations within the workspace. -->    
    <property name="build.dir" location="build"/>
    <property name="build.bootstrap.dir" location="${build.dir}/bootstrap"/>
    <property name="build.coverage.dir" location="${build.dir}/coverage"/>
    <property name="build.classes.dir" location="${build.dir}/classes"/>
    <property name="build.gensrc.dir" location="${build.dir}/gensrc"/>
    <property name="build.javadoc.dir" location="${build.dir}/javadoc"/>
    <property name="build.jtreg.dir" location="${build.dir}/jtreg"/>
    <property name="build.toolclasses.dir" location="${build.dir}/toolclasses"/>
    <property name="dist.dir" location="dist"/>
    <property name="dist.bin.dir" location="${dist.dir}/bin"/>
    <property name="dist.coverage.dir" location="${dist.dir}/coverage"/>
    <property name="dist.findbugs.dir" location="${dist.dir}/findbugs"/>
    <property name="dist.lib.dir" location="${dist.dir}/lib"/>
    <property name="make.dir" location="make"/>
    <property name="make.tools.dir" location="${make.dir}/tools"/>
    <property name="src.dir" location="src"/>
    <property name="src.bin.dir" location="${src.dir}/share/bin"/>
    <property name="src.classes.dir" location="${src.dir}/share/classes"/>
    <property name="test.dir" location="test"/>

    <!-- java.marker is set to a marker file to check for within a Java install dir.
         The best file to check for across Solaris/Linux/Windows/MacOS is one of the
         executables; regrettably, that is OS-specific. -->
    <condition property="java.marker" value="bin/java">
	<os family="unix"/>
    </condition>
    <condition property="java.marker" value="bin/java.exe">
	<os family="windows"/>
    </condition>
    
    <!-- Standard property values, if not overriden by earlier settings. -->
    <property file="${make.dir}/build.properties"/> 
    
    <!-- Standard target to build deliverables for JDK build. -->

    <target name="build" depends="build-bootstrap-tools,build-all-classes">
        <copy todir="${dist.dir}/bootstrap">
            <fileset dir="${build.bootstrap.dir}" includes="bin/,lib/"/>
        </copy>
        <chmod dir="${dist.dir}/bootstrap/bin" perm="ugo+rx">
            <include name="*"/>
        </chmod>
        <mkdir dir="${dist.lib.dir}"/>
        <jar file="${dist.lib.dir}/classes.jar" basedir="${build.classes.dir}"/>
        <zip file="${dist.lib.dir}/src.zip" basedir="${src.classes.dir}"/>
    </target>
    
    <target name="build-bootstrap-tools" depends="build-bootstrap-javac,build-bootstrap-javadoc,build-bootstrap-doclets,build-bootstrap-javah"/>
    
    <target name="build-all-tools" depends="build-javac,build-javadoc,build-doclets,build-javah,build-javap,build-apt"/>
    
    <target name="build-all-classes" depends="build-classes-javac,build-classes-javadoc,build-classes-doclets,build-classes-javah,build-classes-javap,build-classes-apt"/>
  
    <!-- clean -->

    <target name="clean" description="Delete all generated files">
        <delete dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>
    </target>

    <!-- Additional targets for running tools on the build -->
    
    <!-- An alternative for the following would be to do a single jtreg run for all tests.
         However, that would currently be slower, since we would have to run all the tests
         with samevm="false", since not all test directories currently support samevm="true". -->

    <target name="jtreg" depends="jtreg-javac,jtreg-javadoc,jtreg-doclets,jtreg-javah,jtreg-javap,jtreg-apt"/>
    
    <target name="findbugs" depends="-def-findbugs,build-all-tools">
        <property name="findbugs.reportLevel" value="medium"/>
        <mkdir dir="${dist.findbugs.dir}"/>
        <findbugs
            home="${findbugs.home}"
            projectName="JDK langtools ${full.version}"
            output="xml"
            outputFile="${dist.findbugs.dir}/findbugs.xml"
            reportLevel="${findbugs.reportLevel}"
            failOnError="false"
            errorProperty="findbugs.all.errors"
            warningsProperty="findbugs.all.warnings"
            jvmargs="-Xmx512M">
            <class location="${build.classes.dir}"/>
            <sourcePath>
                <pathelement location="${src.classes.dir}"/>
            </sourcePath>
        </findbugs>
        <exec executable="sh">
            <arg value="${findbugs.home}/bin/convertXmlToText"/>
            <arg value="-longBugCodes"/>
            <arg value="-html:${findbugs.home}/src/xsl/fancy.xsl"/>
            <arg value="${dist.findbugs.dir}/findbugs.xml"/>
            <redirector output="${dist.findbugs.dir}/findbugs.html"/>
        </exec>
    </target>

    <target name="coverage" depends="-def-cobertura,build-all-classes,instrument-classes,jtreg,coverage-report"/>

    <target name="instrument-classes" depends="-def-cobertura">
        <!-- only define the following property when we want coverage info -->
        <path id="coverage.classpath">
            <pathelement location="${build.coverage.dir}/classes"/>
            <path refid="cobertura.classpath"/>
        </path>
        <property name="coverage.options" value="-Dnet.sourceforge.cobertura.datafile=${build.coverage.dir}/cobertura.ser"/>
        <property name="coverage.classpath" refid="coverage.classpath"/>
        <mkdir dir="${build.coverage.dir}/classes"/>
        <delete file="${build.coverage.dir}/cobertura.ser"/>
        <cobertura-instrument todir="${build.coverage.dir}/classes"
            datafile="${build.coverage.dir}/cobertura.ser">
            <fileset dir="${build.classes.dir}" 
               includes="**/*.class" excludes="**/resources/*.class"/>
        </cobertura-instrument>
    </target>  

    <target name="coverage-report" depends="-def-cobertura">
        <mkdir dir="${dist.coverage.dir}"/>
        <cobertura-report 
            srcdir="${src.classes.dir}"
            destdir="${dist.coverage.dir}"
            datafile="${build.coverage.dir}/cobertura.ser"/>
        <cobertura-report 
            format="xml" 
            srcdir="${src.classes.dir}" 
            destdir="${dist.coverage.dir}"
            datafile="${build.coverage.dir}/cobertura.ser"/>
    </target>
    
    <!-- javac targets -->

    <target name="build-bootstrap-javac" depends="-def-build-bootstrap-tool">
        <build-bootstrap-tool name="javac" includes="${javac.includes}"/>
    </target>
    
    <target name="build-classes-javac" depends="build-bootstrap-javac">
        <build-classes name="javac" includes="${javac.includes}"/>
    </target>
    
    <target name="build-javac" depends="build-bootstrap-javac">
        <build-tool name="javac" includes="${javac.includes}"/>
    </target>
    
    <target name="javadoc-javac" depends="build-javac,-def-javadoc-tool">
        <javadoc-tool name="javac" includes="${javac.includes}" options="${javadoc.jls3.option}"/>
    </target>
    
    <target name="jtreg-javac" depends="build-javac,-def-jtreg">
        <jtreg-tool name="javac" samevm="true" tests="${javac.tests}"/>
    </target>
    
    <target name="findbugs-javac" depends="build-javac,-def-findbugs">
        <findbugs-tool name="javac"/>
    </target>
    
    <target name="javac" depends="build-javac,jtreg-javac,findbugs-javac"/>
    
    <!-- javadoc targets -->

    <target name="build-bootstrap-javadoc" depends="build-bootstrap-javac">
        <build-bootstrap-tool name="javadoc"
                              includes="${javadoc.includes}"
                              jarclasspath="javac.jar doclets.jar"/>
    </target>
    
    <target name="build-classes-javadoc" depends="build-classes-javac">
        <build-classes name="javadoc" includes="${javadoc.includes}"/>
    </target>
    
    <target name="build-javadoc" depends="build-javac">
        <build-tool name="javadoc"
                    includes="${javadoc.includes}"
                    jarclasspath="javac.jar doclets.jar"/>
    </target>
    
    <target name="javadoc-javadoc" depends="build-javadoc,-def-javadoc-tool">
        <javadoc-tool name="javadoc" includes="${javadoc.includes}"/>
    </target>
    
    <target name="jtreg-javadoc" depends="build-javadoc,-def-jtreg">
        <jtreg-tool name="javadoc" samevm="false" tests="${javadoc.tests}"/>
    </target>
    
    <target name="findbugs-javadoc" depends="build-javadoc,-def-findbugs">
        <findbugs-tool name="javadoc"/>
    </target>
    
    <target name="javadoc" depends="build-javadoc,jtreg-javadoc,findbugs-javadoc"/>
    
    <!-- doclets targets -->

    <target name="build-bootstrap-doclets" depends="build-bootstrap-javadoc,-def-build-bootstrap-jar">
        <build-bootstrap-jar name="doclets"
                              includes="${doclets.includes}"
                              jarmainclass="com.sun.tools.javadoc.Main"
                              jarclasspath="javadoc.jar"/>
    </target>
    
    <target name="build-classes-doclets" depends="build-classes-javadoc">
        <build-classes name="doclets" includes="${doclets.includes}"/>
    </target>
    
    <target name="build-doclets" depends="build-javadoc">
        <!-- just jar, no bin for doclets -->
        <build-jar name="doclets"
                    includes="${doclets.includes}"
                    jarclasspath="javadoc.jar"/>
    </target>

    <!-- (no javadoc for doclets) -->
    
    <target name="jtreg-doclets" depends="build-doclets,-def-jtreg">
        <jtreg-tool name="doclets" samevm="false" tests="${doclets.tests}"/>
    </target>
    
    <target name="findbugs-doclets" depends="build-doclets,-def-findbugs">
        <findbugs-tool name="doclets"/>
    </target>
    
    <target name="doclets" depends="build-doclets,jtreg-doclets,findbugs-doclets"/>
    
    <!-- javah targets -->

    <target name="build-bootstrap-javah" depends="build-bootstrap-javadoc">
        <build-bootstrap-tool name="javah"
                              includes="${javah.includes}"
                              jarclasspath="javadoc.jar doclets.jar javac.jar"/>
    </target>
    
    <target name="build-javah" depends="build-javadoc">
        <build-tool name="javah"
                    includes="${javah.includes}"
                    jarclasspath="javadoc.jar doclets.jar javac.jar"/>
    </target>
    
    <target name="build-classes-javah" depends="build-classes-javadoc">
        <build-classes name="javah" includes="${javah.includes}"/>
    </target>
    
    <!-- (no javadoc for javah) -->

    <target name="jtreg-javah" depends="build-javah,-def-jtreg">
        <jtreg-tool name="javah" samevm="true" tests="${javah.tests}"/>
    </target>
    
    <target name="findbugs-javah" depends="build-javah,-def-findbugs">
        <findbugs-tool name="javah"/>
    </target>
    
    <target name="javah" depends="build-javah,jtreg-javah,findbugs-javah"/>
    
    <!-- javap targets -->

    <target name="build-bootstrap-javap" depends="-def-build-bootstrap-tool">
        <build-bootstrap-tool name="javap"
                              includes="${javap.includes}"
                              jarmainclass="sun.tools.javap.Main"/>
    </target>
    
    <target name="build-classes-javap" depends="build-bootstrap-javac">
        <build-classes name="javap" includes="${javap.includes}"/>
    </target>
    
    <target name="build-javap" depends="build-bootstrap-javac">
        <build-tool name="javap"
                    includes="${javap.includes}"
                    jarmainclass="sun.tools.javap.Main"/>
    </target>
    
    <!-- (no javadoc for javap) -->

    <target name="jtreg-javap" depends="build-javap,-def-jtreg">
        <jtreg-tool name="javap" samevm="true" tests="${javap.tests}"/>
    </target>
    
    <target name="findbugs-javap" depends="build-javap,-def-findbugs">
        <findbugs-tool name="javap"/>
    </target>
    
    <target name="javap" depends="build-javap,jtreg-javap,findbugs-javap"/>
    
    <!-- apt targets -->
    
    <target name="build-bootstrap-apt" depends="build-bootstrap-javac">
        <build-bootstrap-tool name="apt"
                              includes="${apt.includes}"
                              jarclasspath="javac.jar"/>
    </target>
    
    <target name="build-apt" depends="build-javac">
        <build-tool name="apt"
                    includes="${apt.includes}"
                    jarclasspath="javac.jar"/>
    </target>
    
    <target name="build-classes-apt" depends="build-classes-javac">
        <build-classes name="apt" includes="${apt.includes}"/>
    </target>
    
    <target name="javadoc-apt" depends="build-apt,-def-javadoc-tool">
        <javadoc-tool name="apt" includes="${apt.includes}"/>
    </target>
    
    
    <target name="jtreg-apt" depends="build-apt,-def-jtreg">
        <jtreg-tool name="apt" samevm="true" tests="${apt.tests}"/>
    </target>
    
    <target name="findbugs-apt" depends="build-apt,-def-findbugs">
        <findbugs-tool name="apt"/>
    </target>
    
    <target name="apt" depends="build-apt,jtreg-apt,findbugs-apt"/>

    <!-- Check targets -->
    
    <target name="-check-boot.java.home" depends="-def-check">
        <check name="bootstrap java" property="boot.java.home" marker="${java.marker}"/>
    </target>
    
    <target name="-check-target.java.home" depends="-def-check">
        <check name="target java" property="target.java.home" marker="${java.marker}"/>
    </target>
    
    <target name="-check-cobertura.home" depends="-def-check">
        <check name="cobertura" property="cobertura.home" marker="cobertura.jar"/>
    </target>
    
    <target name="-check-findbugs.home" depends="-def-check">
        <check name="findbugs" property="findbugs.home" marker="lib/findbugs.jar"/>
    </target>
    
    <target name="-check-jtreg.home" depends="-def-check">
        <check name="jtreg" property="jtreg.home" marker="lib/jtreg.jar"/>
    </target>
    
    <!-- Ant macro and preset defs -->

    <target name="-def-build-tool" depends="-def-build-jar">
        <macrodef name="build-tool">
            <attribute name="name"/>
            <attribute name="includes"/>
            <attribute name="excludes" default="**/package-info.java"/>
            <attribute name="bin.dir" default="${dist.bin.dir}"/>
            <attribute name="classes.dir" default="${build.classes.dir}"/>
            <attribute name="gensrc.dir" default="${build.gensrc.dir}"/>
            <attribute name="lib.dir" default="${dist.lib.dir}"/>
            <attribute name="java" default="java"/>
            <attribute name="javac.bootclasspath" default="-J-Xbootclasspath/p:${build.bootstrap.dir}/classes"/>
            <attribute name="javac.target" default="${javac.target}"/>
            <attribute name="jarmainclass" default="com.sun.tools.@{name}.Main"/>
            <attribute name="jarclasspath" default=""/>
            <attribute name="release" default="${release}"/>
            <attribute name="full.version" default="${full.version}"/>
            <sequential>
                <build-jar
                    name="@{name}"
                    gensrc.dir="@{gensrc.dir}"
                    classes.dir="@{classes.dir}"
                    lib.dir="@{lib.dir}"
                    includes="@{includes}"
                    excludes="@{excludes}"
                    jarmainclass="@{jarmainclass}"
                    jarclasspath="@{jarclasspath}"
                    release="@{release}"
                    full.version="@{full.version}"
                    javac.bootclasspath="@{javac.bootclasspath}"
                    javac.target="@{javac.target}"
                />
                <mkdir dir="@{bin.dir}"/>
                <copy file="${src.bin.dir}/launcher.sh-template" tofile="@{bin.dir}/@{name}">
                    <filterset begintoken="#" endtoken="#">
                        <filter token="PROGRAM" value="@{name}"/> 
                        <filter token="TARGET_JAVA" value="@{java}"/> 
                    </filterset>
                </copy>
                <chmod file="@{bin.dir}/@{name}" perm="ugo+rx"/>
            </sequential>
        </macrodef>
    </target>

    <target name="-def-build-jar" depends="-def-build-classes">
        <macrodef name="build-jar">
            <attribute name="name"/>
            <attribute name="includes"/>
            <attribute name="excludes" default="**/package-info.java"/>
            <attribute name="classes.dir" default="${build.classes.dir}"/>
            <attribute name="gensrc.dir" default="${build.gensrc.dir}"/>
            <attribute name="lib.dir" default="${dist.lib.dir}"/>
            <attribute name="javac.bootclasspath" default="-J-Xbootclasspath/p:${build.bootstrap.dir}/classes"/>
            <attribute name="javac.target" default="${javac.target}"/>
            <attribute name="jarmainclass" default="com.sun.tools.@{name}.Main"/>
            <attribute name="jarclasspath" default=""/>
            <attribute name="release" default="${release}"/>
            <attribute name="full.version" default="${full.version}"/>
            <sequential>
                <build-classes
                    name="@{name}"
                    gensrc.dir="@{gensrc.dir}"
                    classes.dir="@{classes.dir}"
                    includes="@{includes}"
                    excludes="@{excludes}"
                    release="@{release}"
                    full.version="@{full.version}"
                    javac.bootclasspath="@{javac.bootclasspath}"
                    javac.target="@{javac.target}"
                />
                <mkdir dir="@{lib.dir}"/>
                <jar destfile="@{lib.dir}/@{name}.jar"
                     basedir="@{classes.dir}"
                     includes="@{includes}">
                    <manifest>    
                        <attribute name="Main-Class" value="@{jarmainclass}"/>
                        <attribute name="Class-Path" value="@{jarclasspath}"/>
                    </manifest>
                </jar>
            </sequential>
        </macrodef>
    </target>

    <target name="-def-build-classes" depends="-def-pcompile">
        <macrodef name="build-classes">
            <attribute name="name"/>
            <attribute name="includes"/>
            <attribute name="excludes" default="**/package-info.java"/>
            <attribute name="classes.dir" default="${build.classes.dir}"/>
            <attribute name="gensrc.dir" default="${build.gensrc.dir}"/>
            <attribute name="javac.bootclasspath" default="${build.bootstrap.dir}/classes"/>
            <attribute name="javac.target" default="${javac.target}"/>
            <attribute name="release" default="${release}"/>
            <attribute name="full.version" default="${full.version}"/>
            <sequential>
                <mkdir dir="@{gensrc.dir}"/>
                <mkdir dir="@{classes.dir}"/>
                <pcompile srcdir="${src.classes.dir}"
                          destdir="@{gensrc.dir}"
                          includes="@{includes}"/>
                <copy todir="@{gensrc.dir}">
                    <fileset dir="${src.classes.dir}" includes="${javac.includes}"/>
                    <globmapper from="*.properties-template" to="*.properties"/>
                    <filterset begintoken="$(" endtoken=")">
                        <filter token="JDK_VERSION" value="${jdk.version}"/>
                        <filter token="RELEASE" value="@{release}"/>
                        <filter token="FULL_VERSION" value="@{full.version}"/>
                    </filterset>
                </copy>
                <pcompile srcdir="@{gensrc.dir}"
                          destdir="@{gensrc.dir}"
                          includes="**/*.properties"/>
                <javac fork="true"
                       srcdir="@{gensrc.dir}"
                       destdir="@{classes.dir}"
                       includes="@{includes}"
                       sourcepath=""
                       includeAntRuntime="no"
                       target="@{javac.target}">
                    <compilerarg value="-J-Xbootclasspath/p:@{javac.bootclasspath}"/>
                    <compilerarg line="${javac.version.opt}"/>
                    <compilerarg line="-Xlint"/>
                </javac>
                <javac fork="true"
                       srcdir="${src.classes.dir}"
                       destdir="@{classes.dir}"
                       includes="@{includes}"
                       excludes="@{excludes}"
                       sourcepath=""
                       includeAntRuntime="no"
                       target="@{javac.target}"
                       debug="${javac.debug}" 
                       debuglevel="${javac.debuglevel}">
                    <compilerarg value="-J-Xbootclasspath/p:@{javac.bootclasspath}"/>
                    <compilerarg value="-Xbootclasspath/p:@{classes.dir}"/>
                    <compilerarg line="${javac.no.jdk.warnings}"/>
                    <compilerarg line="${javac.version.opt}"/>
                    <compilerarg line="${javac.lint.opts}"/>
                </javac>
                <copy todir="@{classes.dir}">
                    <fileset dir="${src.classes.dir}"> 
                        <include name="@{includes}"/>
                        <exclude name="**/*.java"/>
                        <exclude name="**/*.properties"/>
                        <exclude name="**/*-template"/>
                        <exclude name="**/package.html"/>
                    </fileset>
                </copy>
            </sequential>
        </macrodef>
    </target>
    
    <target name="-def-build-bootstrap-tool" depends="-check-boot.java.home,-def-build-tool">
        <presetdef name="build-bootstrap-tool">
            <build-tool
                javac.target="${boot.javac.target}"
                gensrc.dir="${build.bootstrap.dir}/gensrc"
                classes.dir="${build.bootstrap.dir}/classes"
                bin.dir="${build.bootstrap.dir}/bin"
                lib.dir="${build.bootstrap.dir}/lib"
                java="${boot.java}"
                javac.bootclasspath=""
                release="${bootstrap.release}"
                full.version="${bootstrap.full.version}"/>
        </presetdef>
    </target>
    
    <target name="-def-build-bootstrap-jar" depends="-def-build-jar">
        <presetdef name="build-bootstrap-jar">
            <build-jar
                javac.target="${boot.javac.target}"
                gensrc.dir="${build.bootstrap.dir}/gensrc"
                classes.dir="${build.bootstrap.dir}/classes"
                lib.dir="${build.bootstrap.dir}/lib"
                javac.bootclasspath=""
                release="${bootstrap.release}"
                full.version="${bootstrap.full.version}"/>
        </presetdef>
    </target>
    
    <target name="-def-pcompile">
        <mkdir dir="${build.toolclasses.dir}"/>
        <javac srcdir="${make.tools.dir}/CompileProperties"
               destdir="${build.toolclasses.dir}/"
               classpath="${ant.home}/lib/ant.jar"/>
        <taskdef name="pcompile"
                 classname="CompilePropertiesTask" 
                 classpath="${build.toolclasses.dir}/"/>
    </target>
    
    <target name="-def-javadoc-tool" depends="-check-target.java.home">
        <macrodef name="javadoc-tool">
            <attribute name="name"/>
            <attribute name="includes"/>
            <attribute name="options" default=""/>
            <attribute name="source" default="1.5"/> <!-- FIXME -->
            <sequential>
                <property name="javadoc.options" value=""/> <!-- default, can be overridden per user or per project -->
                <!-- Note: even with this default value, includes
         from src.classes.dir get javadoc'd; see packageset below -->
                <property name="javadoc.packagenames" value="none"/> <!-- default, can be overridden per user or per project -->
                <javadoc 
                    executable="${target.java.home}/bin/javadoc"
                    destdir="${build.javadoc.dir}/@{name}" 
                    source="@{source}"
                    windowtitle="UNOFFICIAL" 
                    failonerror="true" 
                    use="true"
                    author="false" 
                    version="false"
                    packagenames="${javadoc.packagenames}" >
                    <header><![CDATA[<strong>Unofficial Javadoc</strong> generated from developer sources for preview purposes only]]></header>
                    <arg line="@{options}"/>
                    <bootclasspath>
                        <path location="${build.classes.dir}"/>
                        <path location="${target.java.home}/jre/lib/rt.jar"/>
                    </bootclasspath>
                    <sourcepath>
                        <pathelement location="${src.classes.dir}"/>
                    </sourcepath>
                    <!-- XXX just <fileset> (restricted further to **/*.java) and no <packageset> -->
                    <!-- means that {@link some.package} will not work, which is no good. -->
                    <!-- (It correctly skips excluded single classes, but not if packageset is also included, -->
                    <!-- which also causes duplicates in the class index for included files.) -->
                    <packageset dir="${src.classes.dir}" includes="@{includes}">
                        <or>
                            <filename name="java/"/>
                            <filename name="javax/"/>
                            <filename name="com/sun/javadoc/"/>
                            <filename name="com/sun/mirror/"/>
                            <filename name="com/sun/source/"/>
                        </or>
                    </packageset>
                </javadoc>
            </sequential>
        </macrodef>
    </target>
    
    <target name="-def-jtreg" unless="jtreg.defined" depends="-check-jtreg.home">
        <taskdef name="jtreg" classname="com.sun.javatest.regtest.Main$$Ant">
            <classpath>
                <pathelement location="${jtreg.home}/lib/jtreg.jar"/>
                <pathelement location="${jtreg.home}/lib/javatest.jar"/>
            </classpath>
        </taskdef>
        <macrodef name="jtreg-tool">
            <attribute name="name"/>
            <attribute name="tests"/>
            <attribute name="jdk" default="${target.java.home}"/>
            <attribute name="samevm" default="false"/>
            <attribute name="verbose" default="summary"/>
            <attribute name="options" default=""/>
            <attribute name="keywords" default="-keywords:!ignore"/>
            <attribute name="jpda.jvmargs" default=""/>
            <sequential>
                <property name="coverage.options" value=""/>    <!-- default -->
                <property name="coverage.classpath" value=""/>    <!-- default -->
                <jtreg 
                    dir="${test.dir}"
                    workDir="${build.jtreg.dir}/@{name}/work" 
                    reportDir="${build.jtreg.dir}/@{name}/report"
                    jdk="@{jdk}"
                    samevm="@{samevm}" verbose="@{verbose}"
                    failonerror="false" resultproperty="jtreg.@{name}.result"
                    javacoptions="-g"
                    vmoptions="${coverage.options} -Xbootclasspath/p:${coverage.classpath}:${build.classes.dir} @{jpda.jvmargs}">
                    <arg line="@{keywords}"/>
                    <arg line="@{options}"/>
                    <arg line="@{tests}"/>
                </jtreg>
                <!-- the next two properties are for convenience, when only 
                     a single instance of jtreg will be invoked. -->
                <condition property="jtreg.passed">
                    <equals arg1="${jtreg.javac.result}" arg2="0"/>
                </condition>
                <property name="jtreg.report" value="${build.jtreg.dir}/@{name}/report"/>
            </sequential>
        </macrodef>
        <property name="jtreg.defined" value="true"/>
    </target>

    <target name="-def-cobertura" depends="-check-cobertura.home">
        <path id="cobertura.classpath">
            <fileset dir="${cobertura.home}">
                <include name="cobertura.jar"/>
                <include name="lib/**/*.jar"/>
            </fileset>
        </path>
	<taskdef classpathref="cobertura.classpath" resource="tasks.properties"/>
    </target>
    
    <target name="-def-findbugs" unless="findbugs.defined" depends="-check-findbugs.home">
        <taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask">
            <classpath>
                <pathelement location="${findbugs.home}/lib/findbugs.jar"/>
            </classpath>
        </taskdef>
        <macrodef name="findbugs-tool">
            <attribute name="name"/>
            <attribute name="output" default="emacs"/>
            <attribute name="outputFile" default=""/>
            <attribute name="reportLevel" default="high"/>
            <sequential>
                <findbugs 
                    home="${findbugs.home}"
                    output="@{output}"
                    outputFile="@{outputFile}"
                    reportLevel="@{reportLevel}"
                    failOnError="false"
                    errorProperty="findbugs.@{name}.errors"
                    warningsProperty="findbugs.@{name}.warnings"
                    jvmargs="-Xmx512M" >
                    <class location="${dist.dir}/lib/@{name}.jar"/>
                    <auxClasspath>
                        <pathelement location="${build.classes.dir}"/>
                    </auxClasspath>
                    <sourcePath>
                        <pathelement location="${src.classes.dir}"/>
                    </sourcePath>
                </findbugs>
            </sequential>
        </macrodef>
        <property name="findbugs.defined" value="true"/>
    </target>
    
    <target name="-def-check">
        <macrodef name="check">
            <attribute name="name"/>
            <attribute name="property"/>
            <attribute name="marker"/>
            <sequential>
                <fail message="Cannot locate @{name}: please set @{property} to its location">
                    <condition>
                        <not>
                            <isset property="@{property}"/>
                        </not>
                    </condition>
                </fail>
                <fail message="@{name} is not installed in ${@{property}}">
                    <condition>
                        <not>
                            <available file="${@{property}}/@{marker}"/>
                        </not>
                    </condition>
                </fail>
            </sequential>
        </macrodef>
    </target>

    <!-- standard JDK target -->
    <target name="sanity" 
        description="display settings of congiguration values">
        <echo level="info">ant.home = ${ant.home}</echo>
        <echo level="info">boot.java.home = ${boot.java.home}</echo>
        <echo level="info">target.java.home = ${target.java.home}</echo>
        <echo level="info">jtreg.home = ${jtreg.home}</echo>
        <echo level="info">findbugs.home = ${findbugs.home}</echo>
    </target>

    <!-- useful debugging targets -->
    <target name="diagnostics">
        <diagnostics/>
    </target>

    <target name="post-sanity" depends="-def-jtreg,sanity,build"
        description="perform basic validation after a standard build">
        <jtreg 
            dir="make/test"
            workDir="${build.jtreg.dir}/post-sanity/work" 
            reportDir="${build.jtreg.dir}/post-sanity/report"
            jdk="${target.java.home}"
            verbose="summary"
            failonerror="false" resultproperty="jtreg.post-sanity.result">
        </jtreg>
        
    </target>
</project>

<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright 2007 Sun Microsystems, Inc.  All Rights Reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions
 are met:

   - Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.

   - Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.

   - Neither the name of Sun Microsystems nor the names of its
     contributors may be used to endorse or promote products derived
     from this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<!--
 Build file for the annotation processing tool, apt.
 - The basic functionality of the build is imported from make/build.xml.
 - Additional support for NetBeans actions is imported from 
   make/netbeans/common/shared.xml.
 - This file gives the final customizations.
 This tool is now deprecated, and any further development is strongly
 discouraged.
-->

<project name="apt" default="build" basedir="../../..">
    <property name="tool.name" value="apt"/>
    
    <import file="../common/shared.xml"/>
    
    <!-- 
      Alias the following imported targets, giving descriptions as appropriate.
      NetBeans will emphasize targets with descriptions in the Ant Targets list,
      and will display the targets in the context menu (under Run Target) for 
      this file in the Projects viewer. 
    -->
    
    <target name="build" depends="build-apt" description="Build the annotation processing tool, apt."/>
    
    <target name="debug" depends="-debug-nb" description="Debug the annotation processing tool, apt."/>
    
    <target name="-jtreg" depends="jtreg-apt"/>    
    <target name="jtreg" depends="-jtreg-nb" description="Run the jtreg tests for the annotation processing tool, apt."/>
    
</project>
<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright 2007 Sun Microsystems, Inc.  All Rights Reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions
 are met:

   - Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.

   - Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.

   - Neither the name of Sun Microsystems nor the names of its
     contributors may be used to endorse or promote products derived
     from this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<!--
 Build file for the compiler.
 - The basic functionality of the build is imported from make/build.xml.
 - Additional support for NetBeans actions is imported from 
   make/netbeans/common/shared.xml.
 - This file gives the final customizations.
-->

<project name="compiler" default="build" basedir="../../..">
    <property name="tool.name" value="javac"/>
    
    <import file="../common/shared.xml"/>
    
    <!-- 
      Alias the following imported targets, giving descriptions as appropriate.
      NetBeans will emphasize targets with descriptions in the Ant Targets list,
      and will display the targets in the context menu (under Run Target) for 
      this file in the Projects viewer. 
    -->
    
    <target name="build" depends="build-javac" description="Build the compiler."/>
    
    <target name="debug" depends="-debug-nb" description="Debug the compiler."/>
    
    <target name="-javadoc" depends="javadoc-javac"/>
    <target name="javadoc" depends="-javadoc-nb" description="Generate javadoc documentation for the compiler."/>
    
    <target name="-jtreg" depends="jtreg-javac"/>
    <target name="jtreg" depends="-jtreg-nb" description="Run the jtreg tests for the compiler."/>
    
</project>
<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright 2007 Sun Microsystems, Inc.  All Rights Reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions
 are met:

   - Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.

   - Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.

   - Neither the name of Sun Microsystems nor the names of its
     contributors may be used to endorse or promote products derived
     from this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<!--
 Build file for the standard doclets used by documentation tool, javadoc.
 - The basic functionality of the build is imported from make/build.xml.
 - Additional support for NetBeans actions is imported from 
   make/netbeans/common/shared.xml.
 - This file gives the final customizations.
-->

<project name="doclets" default="build" basedir="../../..">
    <property name="tool.name" value="doclets"/>
    
    <import file="../common/shared.xml"/>
    
    <!-- 
      Alias the following imported targets, giving descriptions as appropriate.
      NetBeans will emphasize targets with descriptions in the Ant Targets list,
      and will display the targets in the context menu (under Run Target) for 
      this file in the Projects viewer. 
    -->
    
    <target name="build" depends="build-doclets" description="Build the standard doclets for the documentation tool, javadoc."/>
    
    <target name="debug" depends="-debug-nb" description="Debug the standard doclets for the documentation tool, javadoc."/>
    
    <target name="-jtreg" depends="jtreg-doclets"/>    
    <target name="jtreg" depends="-jtreg-nb" description="Run the jtreg tests for the standard doclets used by the documentation tool, javadoc."/>
    
</project>
<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright 2007 Sun Microsystems, Inc.  All Rights Reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions
 are met:

   - Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.

   - Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.

   - Neither the name of Sun Microsystems nor the names of its
     contributors may be used to endorse or promote products derived
     from this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<!--
 Build file for the documentation tool, javadoc.
 - The basic functionality of the build is imported from make/build.xml.
 - Additional support for NetBeans actions is imported from 
   make/netbeans/common/shared.xml.
 - This file gives the final customizations.
-->

<project name="javadoc" default="build" basedir="../../..">
    <property name="tool.name" value="javadoc"/>
    
    <import file="../common/shared.xml"/>
    
    <!-- 
      Alias the following imported targets, giving descriptions as appropriate.
      NetBeans will emphasize targets with descriptions in the Ant Targets list,
      and will display the targets in the context menu (under Run Target) for 
      this file in the Projects viewer. 
    -->
    
    <target name="build" depends="build-javadoc" description="Build the documentation tool, javadoc."/>
    
    <target name="debug" depends="-debug-nb" description="Debug the documentation tool, javadoc."/>
    
    <target name="-javadoc" depends="javadoc-javadoc"/>
    <target name="javadoc" depends="-javadoc-nb" description="Generate javadoc documentation for the Doclet API."/>
    
    <target name="-jtreg" depends="jtreg-javadoc"/>    
    <target name="jtreg" depends="-jtreg-nb" description="Run the jtreg tests for the documentation tool, javadoc."/>
    
</project>
<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright 2007 Sun Microsystems, Inc.  All Rights Reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions
 are met:

   - Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.

   - Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.

   - Neither the name of Sun Microsystems nor the names of its
     contributors may be used to endorse or promote products derived
     from this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<!--
 Build file for the native header tool, javah.
 - The basic functionality of the build is imported from make/build.xml.
 - Additional support for NetBeans actions is imported from 
   make/netbeans/common/shared.xml.
 - This file gives the final customizations.
-->

<project name="javah" default="build" basedir="../../..">
    <property name="tool.name" value="javah"/>
    
    <import file="../common/shared.xml"/>
    
    <!-- 
      Alias the following imported targets, giving descriptions as appropriate.
      NetBeans will emphasize targets with descriptions in the Ant Targets list,
      and will display the targets in the context menu (under Run Target) for 
      this file in the Projects viewer. 
    -->
    
    <target name="build" depends="build-javah" description="Build the native header tool, javah."/>
    
    <target name="debug" depends="-debug-nb" description="Debug the native header tool, javah."/>
    
    <target name="-jtreg" depends="jtreg-javah"/>
    <target name="jtreg" depends="-jtreg-nb" description="Run the jtreg tests for the native header tool, javah."/>
    
</project>
<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright 2007 Sun Microsystems, Inc.  All Rights Reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions
 are met:

   - Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.

   - Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.

   - Neither the name of Sun Microsystems nor the names of its
     contributors may be used to endorse or promote products derived
     from this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<!--
 Build file for the disassembler tool, javap.
 - The basic functionality of the build is imported from make/build.xml.
 - Additional support for NetBeans actions is imported from 
   make/netbeans/common/shared.xml.
 - This file gives the final customizations.
-->

<project name="javap" default="build" basedir="../../..">
    <property name="tool.name" value="javap"/>
    
    <import file="../common/shared.xml"/>
    
    <!-- 
      Alias the following imported targets, giving descriptions as appropriate.
      NetBeans will emphasize targets with descriptions in the Ant Targets list,
      and will display the targets in the context menu (under Run Target) for 
      this file in the Projects viewer. 
    -->
    
    <target name="build" depends="build-javap" description="Build the disassembler tool, javap."/>
    
    <target name="debug" depends="-debug-nb" description="Debug the disassembler tool, javap."/>
    
    <target name="-jtreg" depends="jtreg-javap"/>
    <target name="jtreg" depends="-jtreg-nb" description="Run the jtreg tests for the disassembler tool, javap."/>
    
</project>
<!--
 Copyright 2006 Sun Microsystems, Inc.  All Rights Reserved.
 DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.

 This code is free software; you can redistribute it and/or modify it
 under the terms of the GNU General Public License version 2 only, as
 published by the Free Software Foundation.  Sun designates this
 particular file as subject to the "Classpath" exception as provided
 by Sun in the LICENSE file that accompanied this code.

 This code is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 version 2 for more details (a copy is included in the LICENSE file that
 accompanied this code).

 You should have received a copy of the GNU General Public License version
 2 along with this work; if not, write to the Free Software Foundation,
 Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.

 Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 CA 95054 USA or visit www.sun.com if you need additional information or
 have any questions.
-->

<project name="os-javac" default="build" basedir=".">
    <property name="src" value="src"/>
    <property name="src.bin" value="${src}/bin"/>
    <property name="src.classes" value="${src}/share/classes"/>
    <property name="build" value ="build"/>
    <property name="build.bootclasses" value="${build}/bootclasses"/>
    <property name="build.classes" value="${build}/classes"/>
    <property name="build.jtreg" value="${build}/jtreg"/>
    <property name="dist" value="dist"/>
    <property name="dist.javac" value="${dist}"/>
    
    <patternset id="src.javac">
        <include name="javax/annotation/processing/**/*.java"/>
        <include name="javax/lang/model/**/*.java"/>
        <include name="javax/tools/**/*.java"/>
        <include name="com/sun/source/**/*.java"/>
        <include name="com/sun/tools/javac/**/*.java"/>
    </patternset>

    <fileset id="javac.resources" dir="${src.classes}">
        <include name="com/sun/tools/javac/resources/*.properties"/>
        <exclude name="**/*-template.*"/>
    </fileset>
    
    <target name="prep">
        <mkdir dir="${build.bootclasses}"/>
        <mkdir dir="${build.classes}"/>
        <mkdir dir="${dist.javac}/bin"/>
        <mkdir dir="${dist.javac}/lib"/>
        <tstamp>
            <format property="build.time" pattern="MM/dd/yyyy hh:mm aa"/>
            <format property="build.fullversion.time" pattern="MM/dd/yyyy_HH_mm"/>
        </tstamp>
        <property file="build.properties"/>
    </target>
    
    <target name="check-javac.isuptodate">
        <uptodate targetfile="${dist.javac}/lib/javac.jar" property="javac.is.uptodate">
            <srcfiles dir="${src.classes}">
                <patternset refid="src.javac"/>
                <include name="${src.classes}/com/sun/tools/javac/resources/*.properties"/>
            </srcfiles>
        </uptodate>
    </target>
    
    <target name="build" depends="prep,build-lib.javac.jar,build-bin.javac"/>

    <target name="build-lib.javac.jar" depends="check-javac.isuptodate" unless="javac.is.uptodate">
        <!-- to compile javac, set includeAntRuntime=no to prevent javac's 
        own tools.jar incorrectly appearing on the classpath -->
        <javac srcdir="${src.classes}" destdir="${build.bootclasses}"
            source="${compiler.source.level}"  debug="true" debuglevel="source,lines"
            includeAntRuntime="no">
            <patternset refid="src.javac"/>
        </javac>
        <copy todir="${build.bootclasses}">
            <fileset refid="javac.resources"/>
        </copy>
        <echo message="recompiling compiler with itself"/>
        <pathconvert pathsep=" " property="src.javac.files">
            <path>
                <fileset dir="${src.classes}">
                    <patternset refid="src.javac"/>
                </fileset>
            </path>
        </pathconvert>
        <java fork="true" classpath="${build.bootclasses}" classname="com.sun.tools.javac.Main">
            <arg value="-sourcepath"/>
            <arg value=""/>
            <arg value="-d"/>
            <arg file="${build.classes}"/>
            <arg value="-g:source,lines"/>
            <arg line="${src.javac.files}"/>
        </java>
        <copy todir="${build.classes}">
            <fileset refid="javac.resources"/>
        </copy>
        <copy file="${src.classes}/com/sun/tools/javac/resources/version-template.properties"
            tofile="${build.classes}/com/sun/tools/javac/resources/version.properties">
            <filterset begintoken="$(" endtoken=")">
                <filter token="JDK_VERSION"  value="${build.jdk.version}"/>
                <filter token="RELEASE"      value="${build.release}"/>
                <filter token="FULL_VERSION" value="${build.full.version}"/>
            </filterset>
        </copy>
        <jar destfile="${dist.javac}/lib/javac.jar" basedir="${build.classes}">
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Built-At" value="${build.time}"/>
                <attribute name="Main-Class" value="com.sun.tools.javac.Main"/>
            </manifest>
        </jar>
    </target>
    
    <target name="build-bin.javac">
        <copy tofile="${dist.javac}/bin/javac" file="${src.bin}/javac.sh"/>
        <chmod file="${dist.javac}/bin/javac" perm="+x"/>
    </target>
    
    <property name="javadoc.jls3.url" value="http://java.sun.com/docs/books/jls/"/>
    <property name="javadoc.jls3.cite" value="&lt;a href=&quot;${javadoc.jls3.url}&quot;&gt;The Java Language Specification, Third Edition&lt;/a&gt;"/>
    
    <target name="docs" depends="prep">
        <javadoc sourcepath="${src.classes}" destdir="${dist}/doc/api"
            bootclasspath="${java.home}/lib/rt.jar" classpath="">
            <package name="javax.annotation.processing.*"/>
            <package name="javax.lang.model.*"/>
            <package name="javax.tools.*"/>
            <package name="com.sun.source.*"/>
            <package name="com.sun.tools.javac.*"/>
            <arg value="-tag"/>
            <arg value="jls3:a:See &lt;cite&gt;${javadoc.jls3.cite}&lt;/cite&gt;:"/>
        </javadoc>
    </target>
    
    <target name="test" depends="xtest" />

    <!-- can't call it test, because NetBeans associates that with JUnit -->
    <target name="xtest" depends="build">
        <fail unless="jtreg.home" message="Property 'jtreg.home' needs to be set to the jtreg installation directory."/>
        <taskdef name="jtreg" classpath="${jtreg.home}/lib/jtreg.jar" classname="com.sun.javatest.regtest.Main$$Ant"/>
        <fail unless="test.jdk.home" message="Property 'test.jdk.home' needs to be set to the baseline JDK to be used to run the tests"/>
        <jtreg dir="test" samevm="true" verbose="summary"
                jdk="${test.jdk.home}"
                workDir="${build.jtreg}/work" 
                reportDir="${build.jtreg}/report">
            <arg value="-noshell"/>
            <arg value="-Xbootclasspath/p:${dist.javac}/lib/javac.jar"/>
            <include name="tools/javac"/>
        </jtreg>
    </target>
    
    <target name="clean">
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
    </target>
   
</project>
