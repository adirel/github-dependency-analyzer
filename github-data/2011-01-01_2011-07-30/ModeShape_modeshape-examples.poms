<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.modeshape.example</groupId>
	<artifactId>modeshape-custom-logging-example</artifactId>
	<packaging>jar</packaging>
	<name>Example that uses ModeShape w/ custom logging</name>
	<description>A simple self-contained example application that creates an embedded ModeShape engine but uses a custom logging framework.</description>
	<version>1.0-SNAPSHOT</version>
	<properties>
        <!-- Instruct the build to use only UTF-8 encoding for source code -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>1.7</maven.compiler.target>
		<!--
		Global dependency version information
		-->
		<modeshape.version>4.0.0.Alpha1</modeshape.version>
		<!--
		Maven plugin versions
		-->
		<maven.surefire.report.plugin.version>2.4.3</maven.surefire.report.plugin.version>
		<maven.surefire.plugin.version>2.7.1</maven.surefire.plugin.version>
		<maven.assembly.plugin.version>2.2</maven.assembly.plugin.version>
		<maven.install.plugin.version>2.3.1</maven.install.plugin.version>
		<maven.jar.plugin.version>2.3.1</maven.jar.plugin.version>
		<maven.compiler.plugin.version>2.3.2</maven.compiler.plugin.version>
		<maven.source.plugin.version>2.1.2</maven.source.plugin.version>
		<maven.resources.plugin.version>2.4.3</maven.resources.plugin.version>

        <!--dependency versions-->
        <version.slf4j.api>1.6.1</version.slf4j.api>
        <version.junit>4.11</version.junit>
        <version.logback>0.9.29</version.logback>
    </properties>
  <dependencyManagement>    
      <dependencies>
          <!-- Import the ModeShape BOM for embedded usage. This adds to the "dependenciesManagement" section
               defaults for all of the modules we might need, but we still have to include in the 
               "dependencies" section the modules we DO need. The benefit is that we don't have to
               specify the versions of any of those modules.-->
          <dependency>
              <groupId>org.modeshape.bom</groupId>
              <artifactId>modeshape-bom-embedded</artifactId>
              <version>${modeshape.version}</version>
              <type>pom</type>
              <scope>import</scope>
          </dependency>
      </dependencies>
  </dependencyManagement>
  <dependencies>
      <!-- This module is **explicitly** using a number of other modules, so we have to include
           them in the "dependencies" section. However, since we imported the ModeShape BOM in the
           "dependencyManagement" section, we don't have to include "scope" or "version". -->

      <!-- Our code starts an embedded ModeShape engine -->
      <dependency>
          <groupId>javax.jcr</groupId>
          <artifactId>jcr</artifactId>
      </dependency>
      <dependency>
          <groupId>org.modeshape</groupId>
          <artifactId>modeshape-jcr</artifactId>
      </dependency>
      <dependency>
          <groupId>org.modeshape</groupId>
          <artifactId>modeshape-common</artifactId>
      </dependency>
      <!-- Our code implements a custom logger using LogBack (which implements the SLF4J API)
           and implements ModeShape's logging factory -->
      <dependency>
          <groupId>ch.qos.logback</groupId>
          <artifactId>logback-classic</artifactId>
          <version>${version.logback}</version>
      </dependency>
      <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
          <version>${version.slf4j.api}</version>
      </dependency>

      <!-- And of course we're using JUnit for testing -->
      <dependency>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
          <version>${version.junit}</version>
          <scope>test</scope>
      </dependency>
    </dependencies>
	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>
			<!-- Specify the compiler options and settings -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.plugin.version}</version>
				<configuration>
					<showDeprecation>false</showDeprecation>
					<showWarnings>false</showWarnings>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefire.plugin.version}</version>
			</plugin>
			<!-- Produce source jars during the 'verify' phase -->
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<version>${maven.source.plugin.version}</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!--
				Build a test-jar for each project, so that src/test/* resources and
				classes can be used in other projects. Also customize how the jar
				files are assembled.
			-->
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven.jar.plugin.version}</version>
				<executions>
					<execution>
						<id>test-jar</id>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven.resources.plugin.version}</version>
			</plugin>
		</plugins>
	</build>
	<repositories>
		<repository>
			<id>JBoss-Releases</id>
			<url>https://repository.jboss.org/nexus/content/repositories/releases/</url>
		</repository>
	</repositories>
</project>
<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.modeshape.example</groupId>
    <artifactId>modeshape-ddl-parser-example</artifactId>
    <packaging>jar</packaging>
    <name>Example that uses ModeShape's DDL Parser</name>
    <description>A simple example application that parses DDL using the ModeShape DDL sequencer library.</description>
    <version>1.0-SNAPSHOT</version>
    <properties>
        <!-- Instruct the build to use only UTF-8 encoding for source code -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>1.7</maven.compiler.target>
        <!--
        Global dependency version information
        -->
        <modeshape.version>4.0.0.Alpha1</modeshape.version>
        <!--
        Maven plugin versions
        -->
        <maven.surefire.report.plugin.version>2.4.3</maven.surefire.report.plugin.version>
        <maven.surefire.plugin.version>2.7.1</maven.surefire.plugin.version>
        <maven.assembly.plugin.version>2.2</maven.assembly.plugin.version>
        <maven.install.plugin.version>2.3.1</maven.install.plugin.version>
        <maven.jar.plugin.version>2.3.1</maven.jar.plugin.version>
        <maven.compiler.plugin.version>2.3.2</maven.compiler.plugin.version>
        <maven.source.plugin.version>2.1.2</maven.source.plugin.version>
        <maven.resources.plugin.version>2.4.3</maven.resources.plugin.version>
        <!--dependency versions-->
        <version.log4j>1.2.16</version.log4j>
        <version.junit>4.11</version.junit>
    </properties>
    <dependencyManagement>
        <dependencies>
            <!-- Import the ModeShape BOM for embedded usage. This adds to the "dependenciesManagement" section
                 defaults for all of the modules we might need, but we still have to include in the
                 "dependencies" section the modules we DO need. The benefit is that we don't have to
                 specify the versions of any of those modules.-->
            <dependency>
                <groupId>org.modeshape.bom</groupId>
                <artifactId>modeshape-bom-embedded</artifactId>
                <version>${modeshape.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <!-- This module is **explicitly** using a number of other modules, so we have to include
             them in the "dependencies" section. However, since we imported the ModeShape BOM in the
             "dependencyManagement" section, we don't have to include "scope" or "version". -->

        <!-- DDL sequencer library that we'll use directly (without JCR) -->
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-sequencer-ddl</artifactId>
        </dependency>
        <!-- Logging -->
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${version.log4j}</version>
        </dependency>
        <!-- Use JUnit for our tests -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${version.junit}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**</include>
                </includes>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </resource>
        </resources>
        <plugins>
            <!-- Specify the compiler options and settings -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <showDeprecation>false</showDeprecation>
                    <showWarnings>false</showWarnings>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.plugin.version}</version>
            </plugin>
            <!-- Produce source jars during the 'verify' phase -->
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven.source.plugin.version}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--
                Build a test-jar for each project, so that src/test/* resources and
                classes can be used in other projects. Also customize how the jar
                files are assembled.
            -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven.jar.plugin.version}</version>
                <executions>
                    <execution>
                        <id>test-jar</id>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven.resources.plugin.version}</version>
            </plugin>
        </plugins>
    </build>
    <repositories>
        <repository>
            <id>JBoss-Releases</id>
            <url>https://repository.jboss.org/nexus/content/repositories/releases/</url>
        </repository>
    </repositories>
</project>
<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.modeshape.example</groupId>
	<artifactId>modeshape-embedded-example</artifactId>
	<packaging>jar</packaging>
	<name>Example that embeds ModeShape in JSE application</name>
	<description>A simple example application that creates an embedded ModeShape engine.</description>
	<version>1.0-SNAPSHOT</version>
	<properties>
        <!-- Instruct the build to use only UTF-8 encoding for source code -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>1.7</maven.compiler.target>
		<!--
		Global dependency version information
		-->
        <modeshape.version>4.0.0.Alpha1</modeshape.version>
		<!--
		Maven plugin versions
		-->
		<maven.surefire.report.plugin.version>2.4.3</maven.surefire.report.plugin.version>
		<maven.surefire.plugin.version>2.7.1</maven.surefire.plugin.version>
		<maven.assembly.plugin.version>2.2</maven.assembly.plugin.version>
		<maven.install.plugin.version>2.3.1</maven.install.plugin.version>
		<maven.jar.plugin.version>2.3.1</maven.jar.plugin.version>
		<maven.compiler.plugin.version>2.3.2</maven.compiler.plugin.version>
		<maven.source.plugin.version>2.1.2</maven.source.plugin.version>
		<maven.resources.plugin.version>2.4.3</maven.resources.plugin.version>

        <!--dependency versions-->
        <version.junit>4.11</version.junit>
	</properties>
  <dependencyManagement>    
      <dependencies>
          <!-- Import the ModeShape BOM for embedded usage. This adds to the "dependenciesManagement" section
               defaults for all of the modules we might need, but we still have to include in the 
               "dependencies" section the modules we DO need. The benefit is that we don't have to
               specify the versions of any of those modules.-->
          <dependency>
              <groupId>org.modeshape.bom</groupId>
              <artifactId>modeshape-bom-embedded</artifactId>
              <version>${modeshape.version}</version>
              <type>pom</type>
              <scope>import</scope>
          </dependency>
      </dependencies>
  </dependencyManagement>
    <dependencies>
        <!-- This module is **explicitly** using a number of other modules, so we have to include
             them in the "dependencies" section. However, since we imported the ModeShape BOM in the
             "dependencyManagement" section, we don't have to include "scope" or "version". -->
        <dependency>
            <groupId>javax.jcr</groupId>
            <artifactId>jcr</artifactId>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
        </dependency>
        <!-- We don't specify a logging framework, so ModeShape will use the JDK logger -->
        <!-- Use JUnit for our tests -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${version.junit}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>
			<!-- Specify the compiler options and settings -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.plugin.version}</version>
				<configuration>
					<showDeprecation>false</showDeprecation>
					<showWarnings>false</showWarnings>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefire.plugin.version}</version>
			</plugin>
			<!-- Produce source jars during the 'verify' phase -->
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<version>${maven.source.plugin.version}</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!--
				Build a test-jar for each project, so that src/test/* resources and
				classes can be used in other projects. Also customize how the jar
				files are assembled.
			-->
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven.jar.plugin.version}</version>
				<executions>
					<execution>
						<id>test-jar</id>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven.resources.plugin.version}</version>
			</plugin>
		</plugins>
	</build>
	<repositories>
		<repository>
			<id>JBoss-Releases</id>
			<url>https://repository.jboss.org/nexus/content/repositories/releases/</url>
		</repository>
	</repositories>
</project>
<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.modeshape.example</groupId>
    <artifactId>modeshape-federation-example</artifactId>
    <packaging>jar</packaging>
	  <name>Example that uses ModeShape integrated with external systems</name>
    <description>A simple example application that creates an embedded federated ModeShape engine.</description>
    <version>1.0-SNAPSHOT</version>
    <properties>
		<!-- Instruct the build to use only UTF-8 encoding for source code -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>1.7</maven.compiler.target>
        <!--
            Global dependency version information
            -->
        <modeshape.version>4.0.0.Alpha1</modeshape.version>
		<!--
		Maven plugin versions
		-->
        <maven.surefire.report.plugin.version>2.4.3</maven.surefire.report.plugin.version>
        <maven.surefire.plugin.version>2.7.1</maven.surefire.plugin.version>
        <maven.assembly.plugin.version>2.2</maven.assembly.plugin.version>
        <maven.install.plugin.version>2.3.1</maven.install.plugin.version>
        <maven.jar.plugin.version>2.3.1</maven.jar.plugin.version>
        <maven.compiler.plugin.version>2.3.2</maven.compiler.plugin.version>
        <maven.source.plugin.version>2.1.2</maven.source.plugin.version>
        <maven.resources.plugin.version>2.4.3</maven.resources.plugin.version>
        <!--dependency versions-->
        <version.junit>4.11</version.junit>
    </properties>

    <dependencyManagement>    
        <dependencies>
            <!-- Import the ModeShape BOM for embedded usage. This adds to the "dependenciesManagement" section
                 defaults for all of the modules we might need, but we still have to include in the 
                 "dependencies" section the modules we DO need. The benefit is that we don't have to
                 specify the versions of any of those modules.-->
            <dependency>
                <groupId>org.modeshape.bom</groupId>
                <artifactId>modeshape-bom-embedded</artifactId>
                <version>${modeshape.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
        </dependency>       
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${version.junit}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    
    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**</include>
                </includes>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </resource>
        </resources>
        <plugins>
			<!-- Specify the compiler options and settings -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <showDeprecation>false</showDeprecation>
                    <showWarnings>false</showWarnings>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.plugin.version}</version>
            </plugin>
			<!-- Produce source jars during the 'verify' phase -->
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven.source.plugin.version}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
			<!--
				Build a test-jar for each project, so that src/test/* resources and
				classes can be used in other projects. Also customize how the jar
				files are assembled.
			-->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven.jar.plugin.version}</version>
                <executions>
                    <execution>
                        <id>test-jar</id>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <repositories>
        <repository>
            <id>JBoss-Releases</id>
            <url>https://repository.jboss.org/nexus/content/repositories/releases/</url>
        </repository>
    </repositories>
</project>
<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.modeshape.example</groupId>
    <artifactId>modeshape-filesystem-store-example</artifactId>
    <packaging>jar</packaging>
	  <name>Example that uses ModeShape w/ file-based storage</name>
    <description>A simple example application that creates an embedded ModeShape engine using filesystem for storage.</description>
    <version>1.0-SNAPSHOT</version>
    <properties>
        <!-- Instruct the build to use only UTF-8 encoding for source code -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>1.7</maven.compiler.target>

		<!--
		Global dependency version information
		-->
        <modeshape.version>4.0.0.Alpha1</modeshape.version>
		<!--
		Maven plugin versions
		-->
        <maven.surefire.report.plugin.version>2.4.3</maven.surefire.report.plugin.version>
        <maven.surefire.plugin.version>2.7.1</maven.surefire.plugin.version>
        <maven.assembly.plugin.version>2.2</maven.assembly.plugin.version>
        <maven.install.plugin.version>2.3.1</maven.install.plugin.version>
        <maven.jar.plugin.version>2.3.1</maven.jar.plugin.version>
        <maven.compiler.plugin.version>2.3.2</maven.compiler.plugin.version>
        <maven.source.plugin.version>2.1.2</maven.source.plugin.version>
        <maven.resources.plugin.version>2.4.3</maven.resources.plugin.version>

        <!--dependency versions-->
        <version.junit>4.11</version.junit>
    </properties>

    <dependencyManagement>    
        <dependencies>
            <!-- Import the ModeShape BOM for embedded usage. This adds to the "dependenciesManagement" section
                 defaults for all of the modules we might need, but we still have to include in the 
                 "dependencies" section the modules we DO need. The benefit is that we don't have to
                 specify the versions of any of those modules.-->
            <dependency>
                <groupId>org.modeshape.bom</groupId>
                <artifactId>modeshape-bom-embedded</artifactId>
                <version>${modeshape.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${version.junit}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    
    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**</include>
                </includes>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </resource>
        </resources>
        <plugins>
			<!-- Specify the compiler options and settings -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <showDeprecation>false</showDeprecation>
                    <showWarnings>false</showWarnings>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.plugin.version}</version>
            </plugin>
			<!-- Produce source jars during the 'verify' phase -->
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven.source.plugin.version}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
			<!--
				Build a test-jar for each project, so that src/test/* resources and
				classes can be used in other projects. Also customize how the jar
				files are assembled.
			-->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven.jar.plugin.version}</version>
                <executions>
                    <execution>
                        <id>test-jar</id>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <repositories>
        <repository>
            <id>JBoss-Releases</id>
            <url>https://repository.jboss.org/nexus/content/repositories/releases/</url>
        </repository>
    </repositories>
</project>
<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.modeshape.example</groupId>
    <artifactId>modeshape-jca-example</artifactId>
    <packaging>war</packaging>
    <name>ModeShape JCA Example</name>
    <description>A simple example application that uses JCA to access repository.</description>
    <version>1.0-SNAPSHOT</version>
    <properties>
        <!-- Instruct the build to use only UTF-8 encoding for source code -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>1.7</maven.compiler.target>

        <modeshape.version>4.0.0.Alpha1</modeshape.version>

        <!--dependency versions-->
        <version.log4j>1.2.16</version.log4j>
        <version.servlet.api>2.5</version.servlet.api>
    </properties>
    <dependencyManagement>
        <dependencies>
            <!-- Import the ModeShape BOM for embedded usage. This adds to the "dependenciesManagement" section
                 defaults for all of the modules we might need, but we still have to include in the
                 "dependencies" section the modules we DO need. The benefit is that we don't have to
                 specify the versions of any of those modules.-->
            <dependency>
                <groupId>org.modeshape.bom</groupId>
                <artifactId>modeshape-bom-embedded</artifactId>
                <version>${modeshape.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>javax.jcr</groupId>
            <artifactId>jcr</artifactId>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${version.log4j}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>${version.servlet.api}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>
    <repositories>
        <repository>
            <id>JBoss-Releases</id>
            <url>https://repository.jboss.org/nexus/content/repositories/releases/</url>
        </repository>
    </repositories>
</project>
<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.modeshape.example</groupId>
    <artifactId>modeshape-jdbc-store-example</artifactId>
    <packaging>jar</packaging>
	  <name>Example that uses ModeShape w/ JDBC-based storage</name>
    <description>A simple example application that creates an embedded ModeShape engine using local H2 JDBC database for storage, and the file system for indexes and binaries.</description>
    <version>1.0-SNAPSHOT</version>
    <properties>
		<!-- Instruct the build to use only UTF-8 encoding for source code -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>1.7</maven.compiler.target>
		<!--
		Global dependency version information
		-->
        <modeshape.version>4.0.0.Alpha1</modeshape.version>
        <jdbc.h2.version>1.2.124</jdbc.h2.version>
        <c3p0.version>0.9.1.2</c3p0.version>
        <junit.version>4.11</junit.version>
		<!--
		Maven plugin versions
		-->
        <maven.surefire.report.plugin.version>2.4.3</maven.surefire.report.plugin.version>
        <maven.surefire.plugin.version>2.7.1</maven.surefire.plugin.version>
        <maven.assembly.plugin.version>2.2</maven.assembly.plugin.version>
        <maven.install.plugin.version>2.3.1</maven.install.plugin.version>
        <maven.jar.plugin.version>2.3.1</maven.jar.plugin.version>
        <maven.compiler.plugin.version>2.3.2</maven.compiler.plugin.version>
        <maven.source.plugin.version>2.1.2</maven.source.plugin.version>
        <maven.resources.plugin.version>2.4.3</maven.resources.plugin.version>
    </properties>

    <dependencyManagement>    
        <dependencies>
            <!-- Import the ModeShape BOM for embedded usage. This adds to the "dependenciesManagement" section
                 defaults for all of the modules we might need, but we still have to include in the 
                 "dependencies" section the modules we DO need. The benefit is that we don't have to
                 specify the versions of any of those modules.-->
            <dependency>
                <groupId>org.modeshape.bom</groupId>
                <artifactId>modeshape-bom-embedded</artifactId>
                <version>${modeshape.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
        </dependency>
        <!--This examples uses Infinispan's JDBC cache store, which requires C3P0 and a JDBC database driver -->
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-cachestore-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>c3p0</groupId>
            <artifactId>c3p0</artifactId>
            <version>${c3p0.version}</version>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${jdbc.h2.version}</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    
    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**</include>
                </includes>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </resource>
        </resources>
        <plugins>
			<!-- Specify the compiler options and settings -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <showDeprecation>false</showDeprecation>
                    <showWarnings>false</showWarnings>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.plugin.version}</version>
            </plugin>
			<!-- Produce source jars during the 'verify' phase -->
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven.source.plugin.version}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
			<!--
				Build a test-jar for each project, so that src/test/* resources and
				classes can be used in other projects. Also customize how the jar
				files are assembled.
			-->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven.jar.plugin.version}</version>
                <executions>
                    <execution>
                        <id>test-jar</id>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <repositories>
        <repository>
            <id>JBoss-Releases</id>
            <url>https://repository.jboss.org/nexus/content/repositories/releases/</url>
        </repository>
    </repositories>
</project>
<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.modeshape.example</groupId>
	<artifactId>modeshape-jdk-logging-example</artifactId>
	<packaging>jar</packaging>
	<name>Example that uses ModeShape w/ JDK logging</name>
	<description>A simple self-contained example application that creates an embedded ModeShape engine but uses the JDK logger.</description>
	<version>1.0-SNAPSHOT</version>
	<properties>
		<!-- Instruct the build to use only UTF-8 encoding for source code -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>1.7</maven.compiler.target>
		<!--
		Global dependency version information
		-->
        <modeshape.version>4.0.0.Alpha1</modeshape.version>
		<!--
		Maven plugin versions
		-->
		<maven.surefire.report.plugin.version>2.4.3</maven.surefire.report.plugin.version>
		<maven.surefire.plugin.version>2.7.1</maven.surefire.plugin.version>
		<maven.assembly.plugin.version>2.2</maven.assembly.plugin.version>
		<maven.install.plugin.version>2.3.1</maven.install.plugin.version>
		<maven.jar.plugin.version>2.3.1</maven.jar.plugin.version>
		<maven.compiler.plugin.version>2.3.2</maven.compiler.plugin.version>
		<maven.source.plugin.version>2.1.2</maven.source.plugin.version>
		<maven.resources.plugin.version>2.4.3</maven.resources.plugin.version>
        <!--dependency versions-->
        <version.junit>4.11</version.junit>
	</properties>
  <dependencyManagement>    
      <dependencies>
          <!-- Import the ModeShape BOM for embedded usage. This adds to the "dependenciesManagement" section
               defaults for all of the modules we might need, but we still have to include in the 
               "dependencies" section the modules we DO need. The benefit is that we don't have to
               specify the versions of any of those modules.-->
          <dependency>
              <groupId>org.modeshape.bom</groupId>
              <artifactId>modeshape-bom-embedded</artifactId>
              <version>${modeshape.version}</version>
              <type>pom</type>
              <scope>import</scope>
          </dependency>
      </dependencies>
  </dependencyManagement>
  <dependencies>
      <!-- This module is **explicitly** using a number of other modules, so we have to include
           them in the "dependencies" section. However, since we imported the ModeShape BOM in the
           "dependencyManagement" section, we don't have to include "scope" or "version". -->
      <dependency>
          <groupId>javax.jcr</groupId>
          <artifactId>jcr</artifactId>
      </dependency>
      <dependency>
          <groupId>org.modeshape</groupId>
          <artifactId>modeshape-jcr</artifactId>
      </dependency>
      <!-- No logging library provided, so ModeShape will use JDK Util Logging -->
      
      <!-- Use JUnit for testing -->
      <dependency>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
          <version>${version.junit}</version>
          <scope>test</scope>
      </dependency>
  </dependencies>
	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>
			<!-- Specify the compiler options and settings -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.plugin.version}</version>
				<configuration>
					<showDeprecation>false</showDeprecation>
					<showWarnings>false</showWarnings>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefire.plugin.version}</version>
			</plugin>
			<!-- Produce source jars during the 'verify' phase -->
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<version>${maven.source.plugin.version}</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!--
				Build a test-jar for each project, so that src/test/* resources and
				classes can be used in other projects. Also customize how the jar
				files are assembled.
			-->
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven.jar.plugin.version}</version>
				<executions>
					<execution>
						<id>test-jar</id>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven.resources.plugin.version}</version>
			</plugin>
		</plugins>
	</build>
	<repositories>
		<repository>
			<id>JBoss-Releases</id>
			<url>https://repository.jboss.org/nexus/content/repositories/releases/</url>
		</repository>
	</repositories>
</project>
<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.modeshape.example</groupId>
    <artifactId>modeshape-leveldb-store-example</artifactId>
    <packaging>jar</packaging>
	  <name>Example that uses ModeShape w/ a LevelDB-based storage</name>
    <description>A simple example application that creates an embedded ModeShape engine using local LevelDB database for storage, and the file system for indexes and binaries.</description>
    <version>1.0-SNAPSHOT</version>
    <properties>
		<!-- Instruct the build to use only UTF-8 encoding for source code -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>1.7</maven.compiler.target>

        <!--
        Global dependency version information
        -->
        <modeshape.version>4.0.0.Alpha1</modeshape.version>
		<!--
		Maven plugin versions
		-->
        <maven.surefire.report.plugin.version>2.4.3</maven.surefire.report.plugin.version>
        <maven.surefire.plugin.version>2.7.1</maven.surefire.plugin.version>
        <maven.assembly.plugin.version>2.2</maven.assembly.plugin.version>
        <maven.install.plugin.version>2.3.1</maven.install.plugin.version>
        <maven.jar.plugin.version>2.3.1</maven.jar.plugin.version>
        <maven.compiler.plugin.version>2.3.2</maven.compiler.plugin.version>
        <maven.source.plugin.version>2.1.2</maven.source.plugin.version>
        <maven.resources.plugin.version>2.4.3</maven.resources.plugin.version>
        <!--dependency versions-->
        <version.junit>4.11</version.junit>
    </properties>

    <dependencyManagement>    
        <dependencies>
            <!-- Import the ModeShape BOM for embedded usage. This adds to the "dependenciesManagement" section
                 defaults for all of the modules we might need, but we still have to include in the 
                 "dependencies" section the modules we DO need. The benefit is that we don't have to
                 specify the versions of any of those modules.-->
            <dependency>
                <groupId>org.modeshape.bom</groupId>
                <artifactId>modeshape-bom-embedded</artifactId>
                <version>${modeshape.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
        </dependency>
        <!--This examples uses Infinispan's LevelDB cache store -->
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-cachestore-leveldb</artifactId>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${version.junit}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    
    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**</include>
                </includes>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </resource>
        </resources>
        <plugins>
			<!-- Specify the compiler options and settings -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <showDeprecation>false</showDeprecation>
                    <showWarnings>false</showWarnings>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.plugin.version}</version>
            </plugin>
			<!-- Produce source jars during the 'verify' phase -->
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven.source.plugin.version}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
			<!--
				Build a test-jar for each project, so that src/test/* resources and
				classes can be used in other projects. Also customize how the jar
				files are assembled.
			-->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven.jar.plugin.version}</version>
                <executions>
                    <execution>
                        <id>test-jar</id>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <repositories>
        <repository>
            <id>JBoss-Releases</id>
            <url>https://repository.jboss.org/nexus/content/repositories/releases/</url>
        </repository>
    </repositories>
</project>
<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.modeshape.example</groupId>
    <artifactId>modeshape-log4j-logging-example</artifactId>
    <packaging>jar</packaging>
    <name>Example that uses ModeShape w/ Log4J</name>
    <description>A simple self-contained example application that creates an embedded ModeShape engine but uses the Log4J
        logging factory.
    </description>
    <version>1.0-SNAPSHOT</version>
    <properties>
        <!-- Instruct the build to use only UTF-8 encoding for source code -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>1.7</maven.compiler.target>
        <!--
        Global dependency version information
        -->
        <modeshape.version>4.0.0.Alpha1</modeshape.version>
        <!--
        Maven plugin versions
        -->
        <maven.surefire.report.plugin.version>2.4.3</maven.surefire.report.plugin.version>
        <maven.surefire.plugin.version>2.7.1</maven.surefire.plugin.version>
        <maven.assembly.plugin.version>2.2</maven.assembly.plugin.version>
        <maven.install.plugin.version>2.3.1</maven.install.plugin.version>
        <maven.jar.plugin.version>2.3.1</maven.jar.plugin.version>
        <maven.compiler.plugin.version>2.3.2</maven.compiler.plugin.version>
        <maven.source.plugin.version>2.1.2</maven.source.plugin.version>
        <maven.resources.plugin.version>2.4.3</maven.resources.plugin.version>
        <!--dependency versions-->
        <version.log4j>1.2.16</version.log4j>
        <version.junit>4.11</version.junit>
    </properties>
    <dependencyManagement>
        <dependencies>
            <!-- Import the ModeShape BOM for embedded usage. This adds to the "dependenciesManagement" section
                 defaults for all of the modules we might need, but we still have to include in the
                 "dependencies" section the modules we DO need. The benefit is that we don't have to
                 specify the versions of any of those modules.-->
            <dependency>
                <groupId>org.modeshape.bom</groupId>
                <artifactId>modeshape-bom-embedded</artifactId>
                <version>${modeshape.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <!-- This module is **explicitly** using a number of other modules, so we have to include
             them in the "dependencies" section. However, since we imported the ModeShape BOM in the
             "dependencyManagement" section, we don't have to include "scope" or "version". -->
        <dependency>
            <groupId>javax.jcr</groupId>
            <artifactId>jcr</artifactId>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
        </dependency>
        <!-- Logging: use Log4J -->
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${version.log4j}</version>
        </dependency>
        <!-- Use JUnit for testing -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${version.junit}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**</include>
                </includes>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </resource>
        </resources>
        <plugins>
            <!-- Specify the compiler options and settings -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <showDeprecation>false</showDeprecation>
                    <showWarnings>false</showWarnings>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.plugin.version}</version>
            </plugin>
            <!-- Produce source jars during the 'verify' phase -->
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven.source.plugin.version}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--
                Build a test-jar for each project, so that src/test/* resources and
                classes can be used in other projects. Also customize how the jar
                files are assembled.
            -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven.jar.plugin.version}</version>
                <executions>
                    <execution>
                        <id>test-jar</id>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven.resources.plugin.version}</version>
            </plugin>
        </plugins>
    </build>
    <repositories>
        <repository>
            <id>JBoss-Releases</id>
            <url>https://repository.jboss.org/nexus/content/repositories/releases/</url>
        </repository>
    </repositories>
</project>
<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.modeshape.example</groupId>
	<artifactId>modeshape-logback-logging-example</artifactId>
	<packaging>jar</packaging>
	<name>Example that uses ModeShape w/ LogBack logging</name>
	<description>A simple self-contained example application that creates an embedded ModeShape engine but uses the LogBack logging factory.</description>
	<version>1.0-SNAPSHOT</version>
	<properties>
		<!-- Instruct the build to use only UTF-8 encoding for source code -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>1.7</maven.compiler.target>

        <!--
        Global dependency version information
        -->
        <modeshape.version>4.0.0.Alpha1</modeshape.version>
		<!--
		Maven plugin versions
		-->
		<maven.surefire.report.plugin.version>2.4.3</maven.surefire.report.plugin.version>
		<maven.surefire.plugin.version>2.7.1</maven.surefire.plugin.version>
		<maven.assembly.plugin.version>2.2</maven.assembly.plugin.version>
		<maven.install.plugin.version>2.3.1</maven.install.plugin.version>
		<maven.jar.plugin.version>2.3.1</maven.jar.plugin.version>
		<maven.compiler.plugin.version>2.3.2</maven.compiler.plugin.version>
		<maven.source.plugin.version>2.1.2</maven.source.plugin.version>
		<maven.resources.plugin.version>2.4.3</maven.resources.plugin.version>
        <!--dependency versions-->
        <version.logback>0.9.29</version.logback>
        <version.junit>4.11</version.junit>
	</properties>
  <dependencyManagement>    
      <dependencies>
          <!-- Import the ModeShape BOM for embedded usage. This adds to the "dependenciesManagement" section
               defaults for all of the modules we might need, but we still have to include in the 
               "dependencies" section the modules we DO need. The benefit is that we don't have to
               specify the versions of any of those modules.-->
          <dependency>
              <groupId>org.modeshape.bom</groupId>
              <artifactId>modeshape-bom-embedded</artifactId>
              <version>${modeshape.version}</version>
              <type>pom</type>
              <scope>import</scope>
          </dependency>
      </dependencies>
  </dependencyManagement>
  <dependencies>
      <!-- This module is **explicitly** using a number of other modules, so we have to include
           them in the "dependencies" section. However, since we imported the ModeShape BOM in the
           "dependencyManagement" section, we don't have to include "scope" or "version". -->
      <dependency>
          <groupId>javax.jcr</groupId>
          <artifactId>jcr</artifactId>
      </dependency>
      <dependency>
          <groupId>org.modeshape</groupId>
          <artifactId>modeshape-jcr</artifactId>
      </dependency>
      <!-- Logging: we'll use LogBack (which implements the SLF4J API); ModeShape knows what to do. -->
      <dependency>
          <groupId>ch.qos.logback</groupId>
          <artifactId>logback-classic</artifactId>
          <version>${version.logback}</version>
      </dependency>
      <!-- Use JUnit for testing -->
      <dependency>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
          <version>${version.junit}</version>
          <scope>test</scope>
      </dependency>
  </dependencies>
	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>
			<!-- Specify the compiler options and settings -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.plugin.version}</version>
				<configuration>
					<showDeprecation>false</showDeprecation>
					<showWarnings>false</showWarnings>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefire.plugin.version}</version>
			</plugin>
			<!-- Produce source jars during the 'verify' phase -->
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<version>${maven.source.plugin.version}</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!--
				Build a test-jar for each project, so that src/test/* resources and
				classes can be used in other projects. Also customize how the jar
				files are assembled.
			-->
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven.jar.plugin.version}</version>
				<executions>
					<execution>
						<id>test-jar</id>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven.resources.plugin.version}</version>
			</plugin>
		</plugins>
	</build>
	<repositories>
		<repository>
			<id>JBoss-Releases</id>
			<url>https://repository.jboss.org/nexus/content/repositories/releases/</url>
		</repository>
	</repositories>
</project>
<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.modeshape.example</groupId>
	<artifactId>modeshape-sequencing-example</artifactId>
	<packaging>jar</packaging>
	<name>Example that uses ModeShape Sequencers</name>
	<description>A simple example application that creates an embedded ModeShape engine and uses sequencing.</description>
	<version>1.0-SNAPSHOT</version>
	<properties>
		<!-- Instruct the build to use only UTF-8 encoding for source code -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>1.7</maven.compiler.target>

        <!--
        Global dependency version information
        -->
        <modeshape.version>4.0.0.Alpha1</modeshape.version>
		<!--
		Maven plugin versions
		-->
		<maven.surefire.report.plugin.version>2.4.3</maven.surefire.report.plugin.version>
		<maven.surefire.plugin.version>2.7.1</maven.surefire.plugin.version>
		<maven.assembly.plugin.version>2.2</maven.assembly.plugin.version>
		<maven.install.plugin.version>2.3.1</maven.install.plugin.version>
		<maven.jar.plugin.version>2.3.1</maven.jar.plugin.version>
		<maven.compiler.plugin.version>2.3.2</maven.compiler.plugin.version>
		<maven.source.plugin.version>2.1.2</maven.source.plugin.version>
		<maven.resources.plugin.version>2.4.3</maven.resources.plugin.version>
        <!--dependency versions-->
        <version.log4j>1.2.16</version.log4j>
        <version.junit>4.11</version.junit>
	</properties>
  <dependencyManagement>    
      <dependencies>
          <!-- Import the ModeShape BOM for embedded usage. This adds to the "dependenciesManagement" section
               defaults for all of the modules we might need, but we still have to include in the 
               "dependencies" section the modules we DO need. The benefit is that we don't have to
               specify the versions of any of those modules.-->
          <dependency>
              <groupId>org.modeshape.bom</groupId>
              <artifactId>modeshape-bom-embedded</artifactId>
              <version>${modeshape.version}</version>
              <type>pom</type>
              <scope>import</scope>
          </dependency>
      </dependencies>
  </dependencyManagement>
  <dependencies>
      <!-- This module is **explicitly** using a number of other modules, so we have to include
           them in the "dependencies" section. However, since we imported the ModeShape BOM in the
           "dependencyManagement" section, we don't have to include "scope" or "version". -->
      <dependency>
          <groupId>javax.jcr</groupId>
          <artifactId>jcr</artifactId>
      </dependency>
      <dependency>
          <groupId>org.modeshape</groupId>
          <artifactId>modeshape-jcr</artifactId>
      </dependency>
      <!-- Sequencers that we're using in the example-->
      <dependency>
          <groupId>org.modeshape</groupId>
          <artifactId>modeshape-sequencer-mp3</artifactId>
      </dependency>
      <dependency>
          <groupId>org.modeshape</groupId>
          <artifactId>modeshape-sequencer-text</artifactId>
      </dependency>
      <dependency>
          <groupId>org.modeshape</groupId>
          <artifactId>modeshape-sequencer-images</artifactId>
      </dependency>
      <dependency>
          <groupId>org.modeshape</groupId>
          <artifactId>modeshape-sequencer-java</artifactId>
      </dependency>
      <!-- Logging will use Log4J -->
      <dependency>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
          <version>${version.log4j}</version>
      </dependency>
      <!-- Use JUnit for testing -->
      <dependency>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
          <version>${version.junit}</version>
          <scope>test</scope>
      </dependency>
  </dependencies>
	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>
			<!-- Specify the compiler options and settings -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.plugin.version}</version>
				<configuration>
					<showDeprecation>false</showDeprecation>
					<showWarnings>false</showWarnings>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefire.plugin.version}</version>
			</plugin>
			<!-- Produce source jars during the 'verify' phase -->
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<version>${maven.source.plugin.version}</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!--
				Build a test-jar for each project, so that src/test/* resources and
				classes can be used in other projects. Also customize how the jar
				files are assembled.
			-->
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven.jar.plugin.version}</version>
				<executions>
					<execution>
						<id>test-jar</id>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven.resources.plugin.version}</version>
			</plugin>
		</plugins>
	</build>
	<repositories>
		<repository>
			<id>JBoss-Releases</id>
			<url>https://repository.jboss.org/nexus/content/repositories/releases/</url>
		</repository>
	</repositories>
</project>
<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.modeshape.example</groupId>
    <artifactId>modeshape-slf4j-logging-example</artifactId>
    <packaging>jar</packaging>
    <name>Example that uses ModeShape w/ SLF4J (and Log4J)</name>
    <description>A simple self-contained example application that creates an embedded ModeShape engine but uses the SLF4J
        logging factory (with Log4J).
    </description>
    <version>1.0-SNAPSHOT</version>
    <properties>
        <!-- Instruct the build to use only UTF-8 encoding for source code -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>1.7</maven.compiler.target>

        <!--
        Global dependency version information
        -->
        <modeshape.version>4.0.0.Alpha1</modeshape.version>
        <!--
        Maven plugin versions
        -->
        <maven.surefire.report.plugin.version>2.4.3</maven.surefire.report.plugin.version>
        <maven.surefire.plugin.version>2.7.1</maven.surefire.plugin.version>
        <maven.assembly.plugin.version>2.2</maven.assembly.plugin.version>
        <maven.install.plugin.version>2.3.1</maven.install.plugin.version>
        <maven.jar.plugin.version>2.3.1</maven.jar.plugin.version>
        <maven.compiler.plugin.version>2.3.2</maven.compiler.plugin.version>
        <maven.source.plugin.version>2.1.2</maven.source.plugin.version>
        <maven.resources.plugin.version>2.4.3</maven.resources.plugin.version>
        <!--dependency versions-->
        <version.slf4j.api>1.6.1</version.slf4j.api>
        <version.slf4j.log4j>1.6.1</version.slf4j.log4j>
        <version.log4j>1.2.16</version.log4j>
        <version.junit>4.11</version.junit>
    </properties>
    <dependencyManagement>
        <dependencies>
            <!-- Import the ModeShape BOM for embedded usage. This adds to the "dependenciesManagement" section
                 defaults for all of the modules we might need, but we still have to include in the
                 "dependencies" section the modules we DO need. The benefit is that we don't have to
                 specify the versions of any of those modules.-->
            <dependency>
                <groupId>org.modeshape.bom</groupId>
                <artifactId>modeshape-bom-embedded</artifactId>
                <version>${modeshape.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <!-- This module is **explicitly** using a number of other modules, so we have to include
             them in the "dependencies" section. However, since we imported the ModeShape BOM in the
             "dependencyManagement" section, we don't have to include "scope" or "version". -->
        <dependency>
            <groupId>javax.jcr</groupId>
            <artifactId>jcr</artifactId>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
        </dependency>
        <!-- Logging: use Log4J via SLF4J API -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${version.slf4j.api}</version>
        </dependency>
        <!-- We could use SL4J with any other binding, but here we'll use Log4J -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${version.slf4j.log4j}</version>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${version.log4j}</version>
        </dependency>
        <!-- Use JUnit for testing -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${version.junit}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**</include>
                </includes>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </resource>
        </resources>
        <plugins>
            <!-- Specify the compiler options and settings -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <showDeprecation>false</showDeprecation>
                    <showWarnings>false</showWarnings>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.plugin.version}</version>
            </plugin>
            <!-- Produce source jars during the 'verify' phase -->
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven.source.plugin.version}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--
                Build a test-jar for each project, so that src/test/* resources and
                classes can be used in other projects. Also customize how the jar
                files are assembled.
            -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven.jar.plugin.version}</version>
                <executions>
                    <execution>
                        <id>test-jar</id>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven.resources.plugin.version}</version>
            </plugin>
        </plugins>
    </build>
    <repositories>
        <repository>
            <id>JBoss-Releases</id>
            <url>https://repository.jboss.org/nexus/content/repositories/releases/</url>
        </repository>
    </repositories>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.modeshape.example</groupId>
    <artifactId>modeshape-spring-example</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>Example of a web application that uses ModeShape together with the Spring Framework</name>
    <description>
        A simple self-contained web application that integrates ModeShape together with the Spring Framework.
    </description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>1.7</maven.compiler.target>

        <!-- Maven plugin versions -->
        <version.assembly.plugin>2.4</version.assembly.plugin>
        <version.clean.plugin>2.5</version.clean.plugin>
        <version.compiler.plugin>3.0</version.compiler.plugin>
        <version.dependency.plugin>2.6</version.dependency.plugin>
        <version.install.plugin>2.4</version.install.plugin>
        <version.jar.plugin>2.4</version.jar.plugin>
        <version.resources.plugin>2.6</version.resources.plugin>
        <version.surefire.plugin>2.12.3</version.surefire.plugin>
        <version.war.plugin>2.3</version.war.plugin>

        <!-- Global dependency version information-->
        <modeshape.version>4.0.0.Alpha1</modeshape.version>
        <version.servlet.api>2.5</version.servlet.api>
        <version.spring>3.2.3.RELEASE</version.spring>
        <version.jta>1.1</version.jta>
        <version.atomikos>3.8.0</version.atomikos>
        <version.jsp>2.0</version.jsp>
        <version.jstl>1.2</version.jstl>
        <version.log4j>1.2.16</version.log4j>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.modeshape.bom</groupId>
                <artifactId>modeshape-bom-embedded</artifactId>
                <version>${modeshape.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
        </dependency>

        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-core</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>${version.jstl}</version>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>${version.servlet.api}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jsp-api</artifactId>
            <version>${version.jsp}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${version.spring}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${version.spring}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${version.spring}</version>
        </dependency>
        <dependency>
            <groupId>javax.transaction</groupId>
            <artifactId>jta</artifactId>
            <version>${version.jta}</version>
        </dependency>
        <dependency>
            <groupId>com.atomikos</groupId>
            <artifactId>transactions</artifactId>
            <version>${version.atomikos}</version>
        </dependency>
        <dependency>
            <groupId>com.atomikos</groupId>
            <artifactId>transactions-jta</artifactId>
            <version>${version.atomikos}</version>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${version.log4j}</version>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>

        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${version.assembly.plugin}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${version.clean.plugin}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${version.compiler.plugin}</version>
                    <configuration>
                        <showDeprecation>false</showDeprecation>
                        <showWarnings>false</showWarnings>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${version.dependency.plugin}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${version.install.plugin}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${version.jar.plugin}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${version.resources.plugin}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${version.surefire.plugin}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${version.war.plugin}</version>
                    <configuration>
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.modeshape.example</groupId>
    <artifactId>modeshape-tomcat-jsf-example</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>Example of a JSF web application that uses ModeShape via CDI</name>
    <description>
        A simple self-contained JSF web application that injects a ModeShape repository via CDI and performs various operations.
        The application produces a WAR file that should be deployed in a Tomcat 7 or newer instance.
    </description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>1.7</maven.compiler.target>

        <!-- Maven plugin versions -->
        <version.assembly.plugin>2.4</version.assembly.plugin>
        <version.clean.plugin>2.5</version.clean.plugin>
        <version.compiler.plugin>3.0</version.compiler.plugin>
        <version.dependency.plugin>2.6</version.dependency.plugin>
        <version.install.plugin>2.4</version.install.plugin>
        <version.jar.plugin>2.4</version.jar.plugin>
        <version.resources.plugin>2.6</version.resources.plugin>
        <version.surefire.plugin>2.12.3</version.surefire.plugin>
        <version.war.plugin>2.3</version.war.plugin>

        <!-- Global dependency version information-->
        <modeshape.version>4.0.0.Alpha1</modeshape.version>
        <version.servlet.api>2.5</version.servlet.api>
        <version.weld.servlet>1.1.9.Final</version.weld.servlet>
        <version.jsf.api>2.0</version.jsf.api>
        <version.jsf.impl>2.0.2-FCS</version.jsf.impl>
        <version.jstl>1.2</version.jstl>
        <version.jsp>2.0</version.jsp>
        <version.log4j>1.2.16</version.log4j>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.modeshape.bom</groupId>
                <artifactId>modeshape-bom-embedded</artifactId>
                <version>${modeshape.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>${version.servlet.api}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.weld.servlet</groupId>
            <artifactId>weld-servlet</artifactId>
            <version>${version.weld.servlet}</version>
        </dependency>

        <dependency>
            <groupId>javax.faces</groupId>
            <artifactId>jsf-api</artifactId>
            <version>${version.jsf.api}</version>
        </dependency>
        <dependency>
            <groupId>javax.faces</groupId>
            <artifactId>jsf-impl</artifactId>
            <version>${version.jsf.impl}</version>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>${version.jstl}</version>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jsp-api</artifactId>
            <version>${version.jsp}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${version.log4j}</version>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>

        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${version.assembly.plugin}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${version.clean.plugin}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${version.compiler.plugin}</version>
                    <configuration>
                        <showDeprecation>false</showDeprecation>
                        <showWarnings>false</showWarnings>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${version.dependency.plugin}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${version.install.plugin}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${version.jar.plugin}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${version.resources.plugin}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${version.surefire.plugin}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${version.war.plugin}</version>
                    <configuration>
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.modeshape.examples</groupId>
  <artifactId>modeshape-examples-parent</artifactId>
  <version>1.0-SNAPSHOT</version>
  <name>ModeShape Examples</name>
  <url>http://www.modeshape.org</url>
  <packaging>pom</packaging>
  <description>Top-Level POM for building all of the examples.</description>
  <scm>
    <connection>scm:git:git://github.com/ModeShape/modeshape-examples.git</connection>
    <developerConnection>scm:git:git@github.com:ModeShape/modeshape-examples.git</developerConnection>
    <url>http://github.com/ModeShape/modeshape-examples</url>
  </scm>
  <modules>
    <module>modeshape-embedded-example</module>
    <module>modeshape-custom-logging-example</module>
    <module>modeshape-jdk-logging-example</module>
    <module>modeshape-log4j-logging-example</module>
    <module>modeshape-logback-logging-example</module>
    <module>modeshape-slf4j-logging-example</module>
    <module>modeshape-sequencing-example</module>
    <module>modeshape-ddl-parser-example</module>
    <module>modeshape-filesystem-store-example</module>
    <module>modeshape-jdbc-store-example</module>
    <module>modeshape-leveldb-store-example</module>
    <module>modeshape-jca-example</module>
    <module>modeshape-tomcat-jsf-example</module>
    <module>modeshape-spring-example</module>
    <module>modeshape-federation-example</module>
  </modules>
</project>
