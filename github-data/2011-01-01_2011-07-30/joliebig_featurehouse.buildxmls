<?xml version="1.0"?>

<project basedir=".">
	<taskdef name="astgen" classname="cide.astgen.ant.AstgenTask" />
	<taskdef name="jcc" classname="cide.astgen.ant.JavaCCTask" />

	<target name="alllanguages" depends="antlr,bali,c,capprox,cs,ecmascript,fj,gcide,haskell,phaskell,java15,javacc,properties,simple,html,xml"/>

	<target name="antlr">
		<antcall target="createlang">
			<param name="language" value="antlr" />
			<param name="directory" value="${basedir}\..\CIDE_Language_ANTLR\src" />
		</antcall>
	</target>

	<target name="bali">
		<antcall target="createlang">
			<param name="language" value="bali" />
			<param name="directory" value="${basedir}\..\CIDE_Language_Bali\src" />
		</antcall>
	</target>
	<target name="c">
		<antcall target="createlang">
			<param name="language" value="c" />
			<param name="directory" value="${basedir}\..\CIDE_Language_C\src" />
		</antcall>
	</target>
	<target name="capprox">
		<antcall target="createlang">
			<param name="language" value="capprox" />
			<param name="directory" value="${basedir}\..\CIDE_Language_CApprox\src" />
		</antcall>
	</target>
	<target name="cs">
		<antcall target="createlang">
			<param name="language" value="cs" />
			<param name="directory" value="${basedir}\..\CIDE_Language_CS\src" />
		</antcall>
	</target>
	<target name="ecmascript">
		<antcall target="createlang">
			<param name="language" value="ecmascript" />
			<param name="directory" value="${basedir}\..\CIDE_Language_ECMAScript\src" />
		</antcall>
	</target>
	<target name="fj">
		<antcall target="createlang">
			<param name="language" value="fj" />
			<param name="directory" value="${basedir}\..\CIDE_Language_FJ\src" />
		</antcall>
	</target>
	<target name="gcide">
		<antcall target="createlang">
			<param name="language" value="gcide" />
			<param name="directory" value="${basedir}\..\CIDE_Language_gCIDE\src" />
		</antcall>
	</target>
	<target name="haskell">
		<antcall target="createlang">
			<param name="language" value="haskell" />
			<param name="directory" value="${basedir}\..\CIDE_Language_Haskell\src" />
		</antcall>
	</target>
	<target name="phaskell">
		<antcall target="createlang">
			<param name="language" value="phaskell" />
			<param name="directory" value="${basedir}\..\CIDE_Language_Haskell\src" />
		</antcall>
	</target>
	<target name="java15">
		<antcall target="createlang">
			<param name="language" value="java15" />
			<param name="directory" value="${basedir}\..\CIDE_Language_Java\src" />
		</antcall>
	</target>
	<target name="javacc">
		<antcall target="createlang">
			<param name="language" value="javacc" />
			<param name="directory" value="${basedir}\..\CIDE_Language_JavaCC\src" />
		</antcall>
	</target>
	<target name="properties">
		<antcall target="createlang">
			<param name="language" value="property" />
			<param name="directory" value="${basedir}\..\CIDE_Language_Properties\src" />
		</antcall>
	</target>
	<target name="simple">
		<antcall target="createlang">
			<param name="language" value="simple" />
			<param name="directory" value="${basedir}\..\CIDE_Language_Simple\src" />
		</antcall>
	</target>
		<target name="xml">
			<antcall target="createlang">
				<param name="language" value="xml" />
				<param name="directory" value="${basedir}\..\CIDE_Language_XML_Plain\src" />
			</antcall>
		</target>
	<target name="html">
		<antcall target="createlang">
			<param name="language" value="html" />
			<param name="directory" value="${basedir}\..\CIDE_Language_XML_Plain\src" />
		</antcall>
	</target>
	<!-- <target name="xhtml">
		<antcall target="createlang">
			<param name="language" value="xhtml" />
			<param name="directory" value="${basedir}\..\CIDE_Language_XML_concrete\src" />
		</antcall>
	</target> -->

	<target name="createlang">
		<antcall target="clean">
			<param name="language" value="${language}" />
			<param name="directory" value="${directory}" />
		</antcall>
		<antcall target="astgen">
			<param name="language" value="${language}" />
			<param name="directory" value="${directory}" />
		</antcall>
	</target>


	<target name="clean">
		<delete failonerror="false">
			<fileset dir="${directory}/tmp/generated_${language}">
				<include name="*.java" />
				<include name="*.class" />
			</fileset>
		</delete>
	</target>

	<target name="astgen">
		<echo>Generating Language Extension for ${language}...</echo>
		<antcall target="clean" />
		<mkdir dir="${directory}/tmp/generated_${language}" />
		<astgen grammarFileName="${directory}/${language}.gcide" targetDirectory="${directory}/tmp/generated_${language}" targetPackage="tmp.generated_${language}" />
		<jcc grammarFileName="${directory}/tmp/generated_${language}/${language}.jj" targetDirectory="${directory}/tmp/generated_${language}" />
	</target>
</project>
<?xml version='1.0' encoding='ISO-8859-1' ?>
<!--

Copyright Â© 2002 Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
California 95054, U.S.A. All rights reserved.  Sun Microsystems, Inc. has
intellectual property rights relating to technology embodied in the product
that is described in this document. In particular, and without limitation,
these intellectual property rights may include one or more of the U.S.
patents listed at http://www.sun.com/patents and one or more additional
patents or pending patent applications in the U.S. and in other countries.
U.S. Government Rights - Commercial software. Government users are subject
to the Sun Microsystems, Inc. standard license agreement and applicable
provisions of the FAR and its supplements.  Use is subject to license terms.
Sun,  Sun Microsystems,  the Sun logo and  Java are trademarks or registered
trademarks of Sun Microsystems, Inc. in the U.S. and other countries.  This
product is covered and controlled by U.S. Export Control laws and may be
subject to the export or import laws in other countries.  Nuclear, missile,
chemical biological weapons or nuclear maritime end uses or end users, whether
direct or indirect, are strictly prohibited.  Export or reexport to countries
subject to U.S. embargo or to entities identified on U.S. export exclusion
lists, including, but not limited to, the denied persons and specially
designated nationals lists is strictly prohibited.

-->


<project name="javacc-compile" default="compile" basedir=".">
  <property name="javacc.root"
            value="../../../..">
  </property>
  <property name="bootstrap.javacc.mainclass"
            value="COM.sun.labs.javacc.Main">
  </property>
  <property name="junit.jar"
            value="${javacc.root}/lib/junit3.8.1/junit.jar">
  </property>

  <target name="compile" depends="compile-nojar">
    <ant antfile="build.xml" target="jar-nocompile"
         dir="${javacc.root}">
    </ant>
  </target>

  <target name="compile-nojar" depends="generated-files">
    <javac srcdir="${javacc.root}/src"
           destdir="${javacc.root}/classes"
           debug="${build.compiler.debug}"
           source="1.4"
           classpath="${javacc.root}/classes:${junit.jar}">
    </javac>
  </target>

  <target name="realclean">
    <delete>
      <fileset dir=".">
         <include name="JavaCCParser.java"/>
         <include name="JavaCCParserTokenManager.java"/>
         <include name="JavaCCParserConstants.java"/>
         <include name="*CharStream*.java"/>
         <include name="TokenMgrError.java"/>
         <include name="ParseException.java"/>
      </fileset>
    </delete>
  </target>

  <target name="generated-files">
    <ant antfile="build.xml" target="generated-files"
         dir="${javacc.root}">
    </ant>
  </target>

  <target name="parser-files-init">
        <uptodate property="parser.gen"
                  targetfile="JavaCC.jj">
            <srcfiles dir="." includes="JavaCCParser.java"/>
        </uptodate>
  </target>

  <target name="parser-files" depends="parser-files-init" if="parser.gen">
     <java classname="${bootstrap.javacc.mainclass}"
           classpath="${javacc.root}/bootstrap/javacc.jar"
           fork="true">
           <arg file="JavaCC.jj"/>
     </java>
  </target>

</project>
<project name="FeatureHouse" default="jar" basedir=".">
<description>
FeatureHouse: Automatic, language-independent software composition and merging
</description>

  <property name="srcfstgen" location="./fstgen/src:./fstgen/test:./CIDE2_ast/src:./CIDE_generateAST/src" />
  <property name="srcfstcomp" location="./fstcomp:./fstgen/src:./fstgen/test:./CIDE2_ast/src:./CIDE_generateAST/src" />
  <property name="srcfstmerge" location="./fstmerge:./fstcomp:./fstgen/src:./fstgen/test:./CIDE2_ast/src:./CIDE_generateAST/src" />
  <property name="build-dir" location="build" />
  <property name="jar-dir" location="jar" />
  <property name="test-dir" location="test" />
  <property name="result-dir" location="result" />

  <presetdef name="javac">
    <javac includeantruntime="false" />
  </presetdef>

  <tstamp>
    <format property="current.time" pattern="yyyMMdd" />
  </tstamp>

  <target name="fstcomp">
    <mkdir dir="${build-dir}"/>
    <javac sourcepath="${srcfstcomp}" destdir="${build-dir}" srcdir="./fstcomp/composer/"/>
  </target>

  <target name="fstmerge">
     <mkdir dir="${build-dir}"/>
     <javac sourcepath="${srcfstmerge}" destdir="${build-dir}" srcdir="./fstmerge/merger/"/>
  </target>

  <target name="jar" depends="fstcomp,fstmerge" description="generate featurehouse.jar" >
    <mkdir dir="${jar-dir}"/>
    <jar jarfile="${jar-dir}/featurehouse_${current.time}.jar" basedir="${build-dir}">
      <manifest>
        <attribute name="Main-Class" value="composer.FSTGenComposer" />
      </manifest>
    </jar>
  </target>

  <target name="test-compile">
    <mkdir dir="${test-dir}" />
    <javac classpath="./fstgen/lib/junit-4.8.2.jar" sourcepath="${srcfstgen}" destdir="${test-dir}" srcdir="./fstgen/test/" />

    <copy todir="${test-dir}">
      <fileset dir="./fstgen/test/">
        <include name="*testfiles/**" />
      </fileset>
    </copy>
  </target>

  <target name="test" depends="test-compile">
  
    <mkdir dir="${result-dir}" />
    <junit printsummary="yes" haltonfailure="yes">
      <classpath>
        <pathelement location="./fstgen/lib/junit-4.8.2.jar" />
        <pathelement location="${test-dir}" />
      </classpath>

      <formatter type="plain"/>

      <batchtest fork="yes" todir="${result-dir}">
        <fileset dir="${test-dir}" >
	  <include name="*Test.class" />
	</fileset>
      </batchtest>
    </junit>
  </target>

  <target name="clean" description="clean up" >
    <delete dir="${build-dir}"/>
    <delete dir="${jar-dir}"/>
    <delete dir="${test-dir}"/>
    <delete dir="${result-dir}"/>
  </target>
</project>
<project name="examples" default="eg1" basedir=".">

  <property name="javacc.home" value="/usr/local/javacc/"/>

  <target name="eg1" description="Builds example 'eg1'">
    <delete dir="eg1"/>
    <mkdir dir="eg1"/> 
    <copy file="eg1.jjt" todir="eg1"/>
    <jjtree target="eg1.jjt" outputdirectory="eg1" javacchome="${javacc.home}"/>
    <javacc target="eg1/eg1.jj" outputdirectory="eg1" javacchome="${javacc.home}"/>
    <javac deprecation="false" srcdir="eg1" destdir="eg1"/>
    <echo message="*******"/>
    <echo message="******* Now cd into the eg1 directory and run 'java eg1' ******"/>
    <echo message="*******"/>
  </target>

  <target name="eg2" description="Builds example 'eg2'">
    <delete dir="eg2"/>
    <mkdir dir="eg2"/> 
    <copy file="eg2.jjt" todir="eg2"/>
    <copy file="ASTMyID.java" todir="eg2"/>
    <jjtree target="eg2.jjt" outputdirectory="eg2" javacchome="${javacc.home}"/>
    <javacc target="eg2/eg2.jj" outputdirectory="eg2" javacchome="${javacc.home}"/>
    <javac deprecation="false" srcdir="eg2" destdir="eg2"/>
    <echo message="*******"/>
    <echo message="******* Now cd into the eg2 directory and run 'java eg2' ******"/>
    <echo message="*******"/>
  </target>

  <target name="eg3" description="Builds example 'eg3'">
    <delete dir="eg3"/>
    <mkdir dir="eg3"/> 
    <copy file="eg3.jjt" todir="eg3"/>
    <copy file="ASTMyID.java" todir="eg3"/>
    <jjtree target="eg3.jjt" outputdirectory="eg3" javacchome="${javacc.home}"/>
    <javacc target="eg3/eg3.jj" outputdirectory="eg3" javacchome="${javacc.home}"/>
    <javac deprecation="false" srcdir="eg3" destdir="eg3"/>
    <echo message="*******"/>
    <echo message="******* Now cd into the eg3 directory and run 'java eg3' ******"/>
    <echo message="*******"/>
  </target>

  <target name="eg4" description="Builds example 'eg4'">
    <delete dir="eg4"/>
    <mkdir dir="eg4"/> 
    <copy file="eg4.jjt" todir="eg4"/>
    <copy file="ASTMyID.java" todir="eg4"/>
    <copy file="ASTMyOtherID.java" todir="eg4"/>
    <copy file="eg4DumpVisitor.java" todir="eg4"/>
    <jjtree target="eg4.jjt" outputdirectory="eg4" javacchome="${javacc.home}"/>
    <javacc target="eg4/eg4.jj" outputdirectory="eg4" javacchome="${javacc.home}"/>
    <javac deprecation="false" srcdir="eg4" destdir="eg4"/>
    <echo message="*******"/>
    <echo message="******* Now cd into the eg4 directory and run 'java eg4' ******"/>
    <echo message="*******"/>
  </target>

  <target name="clean" description="Cleans up any example directories">
    <delete dir="eg1"/>
    <delete dir="eg2"/>
    <delete dir="eg3"/>
    <delete dir="eg4"/>
  </target>
    

</project>
<?xml version="1.0" encoding="UTF-8"?>

<project name="BachelorThesis" basedir=".">
	<target name="build">
		<javacc target="traversalLanguageParser.jj"
		        outputdirectory="."
		        javacchome="../javacc/"
		/>		
	</target>
</project><?xml version="1.0" encoding="UTF-8"?>
<!-- ======================================================================
     13.03.2008 18:00:55

     test_fstgen
     description

     ckaestne
     ====================================================================== -->
<project name="test_fstgen" default="testContract">
	<echo>${java.class.path}</echo>
	<eclipse.convertPath resourcePath="fstgen" property="fstgen_dir" />
	<eclipse.convertPath resourcePath="CIDE2_ast/bin" property="ast_dir" />
	<eclipse.convertPath resourcePath="CIDE_generateAST/bin" property="astgen_dir" />

	<taskdef name="fstgen" classname="de.ovgu.cide.fstgen.FSTgenTask">
		<classpath>
			<pathelement path="${fstgen_dir}/bin" />
			<pathelement path="${ast_dir}" />
			<pathelement path="${astgen_dir}" />
		</classpath>
	</taskdef>
	<taskdef name="jcc" classname="cide.astgen.ant.JavaCCTask">
		<classpath>
			<pathelement path="${fstgen_dir}/bin" />
			<pathelement path="${ast_dir}" />
			<pathelement path="${astgen_dir}" />
		</classpath>
	</taskdef>
	<taskdef name="fstgenWithJMLPostprocessing" classname="de.ovgu.cide.fstgen.FSTgenTaskWithJMLPostprocessing">
		<classpath>
			<pathelement path="${fstgen_dir}/bin" />
			<pathelement path="${ast_dir}" />
			<pathelement path="${astgen_dir}" />
		</classpath>
	</taskdef>

	<target name="all" depends="testFJ,testJava,testJavaMerge,testJak,testCSharp,testC,testHaskell,testJavaCC,testAlloy"></target>

	<target name="testFJ">
		<antcall target="testGrammar">
			<param name="language" value="fj" />
			<param name="parserClass" value="FJParser" />
			<param name="mainProduction" value="TypeDeclaration" />
			<param name="directory" value="${fstgen_dir}/src/de/ovgu/cide/fstgen/parsers" />
			<param name="testFile" value="TestCase.fj" />
		</antcall>
	</target>

	<target name="testJava">
		<antcall target="testGrammar">
			<param name="language" value="java15" />
			<param name="parserClass" value="Java15Parser" />
			<param name="mainProduction" value="CompilationUnit" />
			<param name="directory" value="${fstgen_dir}/src/de/ovgu/cide/fstgen/parsers" />
			<param name="testFile" value="Test.java" />
		</antcall>
	</target>
	<target name="testJMLContracts">
		<antcall target="testGrammar">
			<param name="language" value="jml_contract_composition" />
			<param name="parserClass" value="JMLParser" />
			<param name="mainProduction" value="CompilationUnit" />
			<param name="directory" value="${fstgen_dir}/src/de/ovgu/cide/fstgen/parsers" />
			<param name="testFile" value="TestJMLContracts.java" />
		</antcall>
	</target>
	<target name="testJavaMerge">
		<antcall target="testGrammar">
			<param name="language" value="java15_merge" />
			<param name="parserClass" value="Java15MergeParser" />
			<param name="mainProduction" value="CompilationUnit" />
			<param name="directory" value="${fstgen_dir}/src/de/ovgu/cide/fstgen/parsers" />
			<param name="testFile" value="Test.java" />
		</antcall>
	</target>

	<target name="testJak">
		<antcall target="testGrammar">
			<param name="language" value="jak" />
			<param name="parserClass" value="JakParser" />
			<param name="mainProduction" value="CompilationUnit" />
			<param name="directory" value="${fstgen_dir}/src/de/ovgu/cide/fstgen/parsers" />
			<param name="testFile" value="Test.jak" />
		</antcall>
	</target>

	<target name="testCSharp">
		<antcall target="testGrammar">
			<param name="language" value="csharp" />
			<param name="parserClass" value="CSharpParser" />
			<param name="mainProduction" value="compilation_unit" />
			<param name="directory" value="${fstgen_dir}/src/de/ovgu/cide/fstgen/parsers" />
			<param name="testFile" value="Test.cs" />
		</antcall>
	</target>

	<target name="testCSharpMerge">
		<antcall target="testGrammar">
			<param name="language" value="csharp_merge" />
			<param name="parserClass" value="CSharpMergeParser" />
			<param name="mainProduction" value="compilation_unit" />
			<param name="directory" value="${fstgen_dir}/src/de/ovgu/cide/fstgen/parsers" />
			<param name="testFile" value="Test_Merge.cs" />
		</antcall>
	</target>

	<target name="testC">
			<antcall target="testGrammar">
				<param name="language" value="capprox" />
				<param name="parserClass" value="CApproxParser" />
				<param name="mainProduction" value="TranslationUnit" />
				<param name="directory" value="${fstgen_dir}/src/de/ovgu/cide/fstgen/parsers" />
				<param name="testFile" value="Test.c" />
			</antcall>
	</target>

	<target name="testPython">
			<antcall target="testGrammar">
				<param name="language" value="python" />
				<param name="parserClass" value="PythonParser" />
				<param name="mainProduction" value="file_input" />
				<param name="directory" value="${fstgen_dir}/src/de/ovgu/cide/fstgen/parsers" />
				<param name="testFile" value="Test.py" />
			</antcall>
	</target>

	<target name="testHaskell">
			<antcall target="testGrammar">
				<param name="language" value="haskell" />
				<param name="parserClass" value="HaskellParser" />
				<param name="mainProduction" value="module" />
				<param name="directory" value="${fstgen_dir}/src/de/ovgu/cide/fstgen/parsers" />
				<param name="testFile" value="Test.hs" />
			</antcall>
		</target>

	<target name="testJavaCC">
		<antcall target="testGrammar">
			<param name="language" value="javacc" />
			<param name="parserClass" value="JavaCCParser" />
			<param name="mainProduction" value="javacc_input" />
			<param name="directory" value="${fstgen_dir}/src/de/ovgu/cide/fstgen/parsers" />
			<param name="testFile" value="C.jj" />
		</antcall>
	</target>

	<target name="testAlloy">
		<antcall target="testGrammar">
			<param name="language" value="alloy" />
			<param name="parserClass" value="AlloyParser" />
			<param name="mainProduction" value="Specification" />
			<param name="directory" value="${fstgen_dir}/src/de/ovgu/cide/fstgen/parsers" />
			<param name="testFile" value="Test.als" />
		</antcall>
	</target>

    <target name="testJCop">
		<antcall target="testGrammar">
        	<param name="language" value="jcop" />
        	<param name="parserClass" value="JCopParser" />
        	<param name="mainProduction" value="CompilationUnit" />
    	    <param name="directory" value="${fstgen_dir}/src/de/ovgu/cide/fstgen/parsers" />
	        <param name="testFile" value="Test.jcop" />
        </antcall>
    </target>
	
	<target name="testContract">
		<antcall target="testGrammar">
			<param name="language" value="contract" />
			<param name="parserClass" value="ContractParser" />
			<param name="mainProduction" value="SpecCaseSeq" />
			<param name="directory" value="${fstgen_dir}/src/de/ovgu/cide/fstgen/parsers" />
			<param name="testFile" value="TestContract.java" />
		</antcall>
	</target>


	<target name="testJavaJML">
		<antcall target="testGrammarWithPostprocessing">
			<param name="language" value="javaJML" />
			<param name="parserClass" value="JavaJMLParser" />
			<param name="mainProduction" value="CompilationUnit" />
			<param name="directory" value="${fstgen_dir}/src/de/ovgu/cide/fstgen/parsers" />
			<param name="testFile" value="TestJML.java" />
			<param name="fstProcessorClassName" value="FSTprocessorJML" />
		</antcall>
	</target>

	<target name="testStratego">
		<antcall target="testGrammar">
			<param name="language" value="stratego" />
			<param name="parserClass" value="StrategoParser" />
			<param name="mainProduction" value="Module" />
			<param name="directory" value="${fstgen_dir}/src/de/ovgu/cide/fstgen/parsers" />
			<param name="testFile" value="Test.str" />
		</antcall>
	</target>

	<target name="testSDF">
		<antcall target="testGrammar">
			<param name="language" value="sdf" />
			<param name="parserClass" value="SDFParser" />
			<param name="mainProduction" value="Module" />
			<param name="directory" value="${fstgen_dir}/src/de/ovgu/cide/fstgen/parsers" />
			<param name="testFile" value="Test.sdf" />
		</antcall>
	</target>

	<target name="testGrammar" description="--> description">
		<mkdir dir="${directory}/generated_${language}" />

		<fstgen grammarFileName="${fstgen_dir}/test/${language}_fst.gcide" targetJJFile="${directory}/generated_${language}/${language}.jj" targetPackage="de.ovgu.cide.fstgen.parsers.generated_${language}" autoSpacingPrettyPrinter="${autoSpacingPrettyPrinter}" />
		<jcc grammarFileName="${directory}/generated_${language}/${language}.jj" targetDirectory="${directory}/generated_${language}" />
		<eclipse.refreshLocal resource="fstgen" depth="infinite" />
		<eclipse.incrementalBuild project="fstgen" />
		<java classname="de.ovgu.cide.fstgen.GenericParserStarter">
			<arg value="de.ovgu.cide.fstgen.parsers.generated_${language}.${parserClass}" />
			<arg value="${mainProduction}" />
			<arg value="${fstgen_dir}/test/${testFile}" />
			<classpath>
				<pathelement path="${fstgen_dir}/bin" />
				<pathelement path="${ast_dir}" />
				<pathelement path="${astgen_dir}" />
			</classpath>
		</java>
	</target>


	<target name="testGrammarWithPostprocessing" description="Same as testGrammar, but with a postprocessing step">
		<mkdir dir="${directory}/generated_${language}" />

		<fstgenWithJMLPostprocessing grammarFileName="${directory}/${language}_fst.gcide" targetJJFile="${directory}/generated_${language}/${language}.jj" targetPackage="generated_${language}" autoSpacingPrettyPrinter="${autoSpacingPrettyPrinter}" />
		<jcc grammarFileName="${directory}/generated_${language}/${language}.jj" targetDirectory="${directory}/generated_${language}" />
		<eclipse.refreshLocal resource="fstgen" depth="infinite" />
		<eclipse.incrementalBuild project="fstgen" />
		<java classname="de.ovgu.cide.fstgen.GenericPostprocessingParserStarter">
			<arg value="de.ovgu.cide.fstgen.parsers.generated_${language}.${parserClass}" />
			<arg value="${mainProduction}" />
			<arg value="${fstgen_dir}/test/${testFile}" />
			<arg value="de.ovgu.cide.fstgen.fstProcessing.FSTprocessorJML" />
			<classpath>
				<pathelement path="${fstgen_dir}/bin" />
				<pathelement path="${ast_dir}" />
				<pathelement path="${astgen_dir}" />
			</classpath>
		</java>
	</target>


</project>
