/*
 * Copyright 2010-2014 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import java.text.SimpleDateFormat
import org.apache.ivy.plugins.resolver.URLResolver

apply plugin: 'base'
apply plugin: 'idea'
apply plugin: 'eclipse'

buildscript {
    repositories {
        jcenter()
        maven {
            name "Ben's Maven repo"
            url 'http://dl.bintray.com/content/bmuschko/maven'
        }
        maven {
            name "Ben's Gradle Plugins repo"
            url 'http://dl.bintray.com/content/bmuschko/gradle-plugins'
        }
    }
    dependencies {
        classpath 'org.gradle.api.plugins:gradle-izpack-plugin:0.2.2'
        classpath 'org.gradle.api.plugins:gradle-java2html-plugin:0.4'
    }
}

evaluationDependsOn(':griffon-rt')
evaluationDependsOn(':griffon-cli')
evaluationDependsOn(':griffon-resources')
evaluationDependsOn(':griffon-scripts')
evaluationDependsOn(':griffon-shell')
evaluationDependsOn(':griffon-wrapper')
evaluationDependsOn(':griffon-guide')

// dependsOnChildren()

subprojects { subproj ->
    apply plugin: 'idea'
    if(plugins.hasPlugin('java')){
        sourceCompatibility = 1.5
        targetCompatibility = 1.5
        group = 'org.codehaus.griffon'

        apply from: "${rootDir}/gradle/coverage.gradle"
        apply from: "${rootDir}/gradle/codeQuality.gradle"
    }

    repositories {
        jcenter()
        maven { url 'http://repository.codehaus.org' }
        maven { url 'http://repository.springsource.com/maven/bundles/release' }
        maven { url 'http://gradle.artifactoryonline.com/gradle/libs-releases-local' }
        maven { url 'http://repository.sonatype.org/content/groups/public' }
        maven { url 'http://repo.grails.org/grails/core/' }
        mavenCentral()
    }
}

Date buildTimeAndDate = new Date()
ext {
    buildTime = new SimpleDateFormat('dd-MMM-yyyy').format(buildTimeAndDate)
    buildDate = new SimpleDateFormat('hh:mm aa').format(buildTimeAndDate)
}

configure(mavenizedProjects()) { proj ->
    proj.apply from: "${rootDir}/gradle/maven.gradle"
    proj.task('checkManifest') {
        dependsOn proj.classes
        doLast {
            proj.tasks.withType(Jar).each { jarfile ->
                jarfile.manifest {
                    attributes(
                        'Built-By': System.properties['user.name'],
                        'Created-By': System.properties['java.version'] + " (" + System.properties['java.vendor'] + " " + System.getProperty("java.vm.version") + ")",
                        'Build-Date': buildTime,
                        'Build-Time': buildDate,
                        'Specification-Title': proj.name,
                        'Specification-Version': project.version,
                        'Specification-Vendor': 'griffon-framework.org',
                        'Implementation-Title': proj.name,
                        'Implementation-Version': project.version,
                        'Implementation-Vendor': 'griffon-framework.org'
                    )
                }
            }
        }
    }
    proj.jar.dependsOn proj.checkManifest
}

// @todo move apply statements to the top of the build script
apply from: "${rootDir}/gradle/package.gradle"
apply from: "${rootDir}/gradle/installer.gradle"

task allTests(dependsOn: [clean, project(':griffon-rt').test, project(':griffon-cli').test]) {
    description = "Runs all tests."
}

task fullDist(dependsOn: [zipBinary, zipSource, tarBinary, tarSource, izPackCreateInstaller, deb]) {
    description = "Assembles all packages."
}

task bambooStage1(dependsOn: allTests) {
    description = "Makes a full test run and assembles all packages."
}

task bambooStage2(dependsOn: [bambooStage1, fullDist, rpm]) {
    description = "Makes a full test run and assembles all packages."
}

def mavenizedProjects() {
    [
        project(':griffon-rt'),
        project(':griffon-cli'),
        project(':griffon-resources'),
        project(':griffon-scripts'),
        project(':griffon-shell')
    ]
}
/*
 * Copyright 2010-2014 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'groovy'

configurations {
    compile.transitive = false
}

repositories {
    jcenter()
    maven { url 'http://repository.codehaus.org/' }
    maven { url 'http://repo.grails.org/grails/core/' }
    maven { url 'http://repository.springsource.com/maven/bundles/release' }
    maven { url 'http://download.java.net/maven/2/' }
    mavenCentral()
}

dependencies {
    compile gradleApi()
    compile("org.grails:grails-docs:$grailsDocsVersion",
         "org.codehaus.groovy:groovy-all:$groovyVersion",
         'radeox:radeox:1.0-b2',
         'com.lowagie:itext:2.0.8',
         'org.xhtmlrenderer:core-renderer:R8',
         "log4j:log4j:${log4jVersion}",
         "org.slf4j:slf4j-api:$slf4jVersion",
         "org.slf4j:slf4j-log4j12:$slf4jVersion",
         "org.slf4j:jcl-over-slf4j:$slf4jVersion")
}
buildscript {
    repositories {
        mavenCentral()
        mavenRepo name: 'Codehaus',       url: 'http://repository.codehaus.org'
        mavenRepo name: 'SpringSource',   url: 'http://repository.springsource.com/maven/bundles/release'
        mavenRepo name: 'Sonaytpe',       url: 'http://repository.sonatype.org/content/groups/public'
        mavenRepo name: 'Grails Central', url: 'http://repo.grails.org/grails/core/'
        mavenRepo name: 'JavaNet',        url: 'http://download.java.net/maven/2/'
    }

    dependencies {
        classpath('org.codehaus.griffon:gradle-griffon-plugin:1.1.0')
        classpath('org.codehaus.griffon:griffon-scripts:@griffon.version@')
    }
}

ext.griffonVersion = '@griffon.version@'
version = '@griffon.app.version@'

apply plugin: 'griffon'

repositories {
    mavenCentral()
    mavenRepo name: 'Codehaus', url: 'http://repository.codehaus.org/'
}

dependencies {
    compile "org.codehaus.griffon:griffon-rt:$griffonVersion"
}
