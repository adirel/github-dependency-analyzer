<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>pom</artifactId>
    <groupId>com.nirima.jenkins.repository</groupId>
    <version>1.3-SNAPSHOT</version>
  </parent>
  <artifactId>jenkins-maven-plugin</artifactId>
  <packaging>maven-plugin</packaging>
  <name>jenkins-maven-plugin Maven Mojo</name>
  <description>Jenkins Maven Mojo</description>


  <properties>
    <aetherVersion>1.13.1</aetherVersion>
    <mavenVersion>3.0.5</mavenVersion>
    <wagonVersion>1.0-beta-6</wagonVersion>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcomponents-client</artifactId>
      <version>4.1.1</version>
      <type>pom</type>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <version>${mavenVersion}</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.0.1</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jgit</groupId>
      <artifactId>org.eclipse.jgit</artifactId>
      <version>0.12.1</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
      <version>4.0.1</version>
    </dependency>
  </dependencies>
  <repositories>
    <repository>
      <id>jgit-repository</id>
      <name>Eclipse JGit Repository</name>
      <url>http://download.eclipse.org/jgit/maven</url>
    </repository>
  </repositories>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.jenkins-ci.plugins</groupId>
        <artifactId>plugin</artifactId>
        <version>1.532</version>
    </parent>

    <groupId>com.nirima.jenkins.repository</groupId>
    <artifactId>pom</artifactId>
    <name>Jenkins Maven Repository Server : Project POM</name>

    <version>1.3-SNAPSHOT</version>
    <packaging>pom</packaging>

    <developers>
        <developer>
            <id>magnayn</id>
            <name>Nigel Magnay</name>
            <email>nigel.magnay@gmail.com</email>
        </developer>
        <developer>
            <id>bjwschaap</id>
            <name>Bastiaan Schaap</name>
            <email>bastiaan.schaap@gmail.com</email>
        </developer>
    </developers>

    <properties>
        <jenkins.version>1.532</jenkins.version>
    </properties>

    <licenses>
       <license>
          <name>MIT</name>
       </license>
    </licenses>
    <scm>
        <connection>scm:git:git://github.com/magnayn/Jenkins-Repository.git</connection>
        <developerConnection>scm:git:git@github.com:magnayn/Jenkins-Repository.git</developerConnection>
    </scm>
    <modules>
        <module>repository-hpi</module>
        <module>jenkins-maven-plugin</module>
    </modules>

   <!-- get every artifact through repo.jenkins-ci.org, which proxies all the artifacts that we need -->
   <repositories>
       <repository>
           <id>repo.jenkins-ci.org</id>
	   <url>http://repo.jenkins-ci.org/public/</url>
       </repository>
   </repositories>

   <pluginRepositories>
       <pluginRepository>
            <id>repo.jenkins-ci.org</id>
            <url>http://repo.jenkins-ci.org/public/</url>
       </pluginRepository>
   </pluginRepositories>

    <distributionManagement>
        <repository>
            <id>maven.jenkins-ci.org</id>
            <url>http://maven.jenkins-ci.org:8081/content/repositories/releases/</url>
        </repository>
    </distributionManagement>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.nirima.jenkins.repository</groupId>
        <artifactId>pom</artifactId>
        <version>1.3-SNAPSHOT</version>
    </parent>

    <groupId>jenkins</groupId>
    <artifactId>repository</artifactId>
    <name>Jenkins Maven Repository Server Plugin</name>
    <description>This plug-in exposes project builds as a maven repository so the artifacts can be picked up by
        downstream builds or other systems.
    </description>
    <version>1.3-SNAPSHOT</version>
    <packaging>hpi</packaging>

    <url>http://wiki.jenkins-ci.org/display/JENKINS/Jenkins+Maven+Repository+Server</url>



    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.gmaven</groupId>
                <artifactId>gmaven-plugin</artifactId>
                <version>1.5</version>
                <executions>

                    <execution>
                        <id>copy-the-source</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>

                            <source>
                                File target = new File(
                                "${basedir}/target/classes/tools/com/nirima/jenkins/repository/jenkins-maven-plugin/${project.version}");
                                File src = new File(
                                "${settings.localRepository}/com/nirima/jenkins/repository/jenkins-maven-plugin/${project.version}");

                                def a = new AntBuilder();
                                a.mkdir(dir:target);

                                a.copy(todir: target) {
                                fileset(dir:src, includes:"*.jar")
                                }
                                a.copy(todir: target) {
                                fileset(dir:src, includes:"*.pom")
                                }
                            </source>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                  <dependency>
                    <groupId>org.codehaus.groovy</groupId>
                    <artifactId>groovy-all</artifactId>
                    <version>1.8.9</version>
                  </dependency>
                  <dependency>
                    <groupId>org.apache.ant</groupId>
                    <artifactId>ant</artifactId>
                    <version>1.9.2</version>
                  </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>
    <dependencies>
        <dependency>
            <groupId>org.jenkinsci.plugins</groupId>
            <artifactId>git</artifactId>
            <version>1.1.29</version>
        </dependency>

        <dependency>
            <groupId>org.jenkins-ci.main</groupId>
            <version>2.1</version>
            <artifactId>maven-plugin</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>11.0.1</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>token-macro</artifactId>
            <version>1.7</version>
            <optional>true</optional>
            <exclusions>
                <exclusion>
                    <groupId>org.jenkins-ci.plugins</groupId>
                    <artifactId>maven-plugin</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>promoted-builds</artifactId>
            <version>2.10</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>com.nirima.jenkins.repository</groupId>
            <artifactId>jenkins-maven-plugin</artifactId>
            <version>${project.version}</version>
            <scope>runtime</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.maven</groupId>
                    <artifactId>maven-plugin-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

    </dependencies>

 <repositories>
     <repository>
       <id>jgit-repository</id>
       <name>Eclipse JGit Repository</name>
       <url>http://download.eclipse.org/jgit/maven</url>
     </repository>
   </repositories>

</project>
