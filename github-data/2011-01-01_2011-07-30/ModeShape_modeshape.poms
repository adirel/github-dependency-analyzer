<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.modeshape.bom</groupId>
    <artifactId>modeshape-bom-embedded</artifactId>
    <version>4.0-SNAPSHOT</version>

    <name>ModeShape BOM for embedded usage</name>

    <url>http://www.modeshape.org</url>
    <packaging>pom</packaging>
    <description>Bill of Material (BOM) for embedding ModeShape within JavaSE apps, libraries, and (non-AS) web apps</description>
    <inceptionYear>2008</inceptionYear>

    <organization>
        <name>JBoss, by Red Hat</name>
        <url>http://www.jboss.org</url>
    </organization>

    <licenses>
        <license>
            <name>GNU Lesser General Public License</name>
            <url>http://repository.jboss.org/licenses/lgpl-2.1.txt</url>
            <!--url>http://www.gnu.org/licenses/lgpl.html</url-->
            <distribution>repo</distribution>
            <comments>A business-friendly OSS license</comments>
        </license>
    </licenses>

    <scm>
        <connection>scm:git:git://github.com/ModeShape/modeshape.git</connection>
        <developerConnection>scm:git:git@github.com:ModeShape/modeshape.git</developerConnection>
        <url>http://github.com/ModeShape/modeshape</url>
    </scm>

    <issueManagement>
        <system>jira</system>
        <url>http://issues.jboss.org/browse/MODE</url>
    </issueManagement>

    <developers>
        <developer>
            <id>modeshape.org</id>
            <name>ModeShape Community</name>
            <organization>modeshape.org</organization>
            <organizationUrl>http://modeshape.org</organizationUrl>
        </developer>
    </developers>

    <properties>
        <jcr.version>2.0</jcr.version>
        <infinispan.version>6.0.1.Final</infinispan.version>
        <jgroups.version>3.4.1.Final</jgroups.version>
        <c3p0.version>0.9.1.2</c3p0.version>  <!-- same as the one used by Infinispan's JDBC cache store -->
        <picketbox.version>4.0.17.SP2</picketbox.version>
        <atomikos.version>3.8.0</atomikos.version>
        <jbossjta.version>4.16.6.Final</jbossjta.version>
        <mongo.driver.version>2.7.3</mongo.driver.version>
        <embedmongo.version>1.28</embedmongo.version>
        <cassandra-cql-driver>2.0.0-rc2</cassandra-cql-driver>
        <tika.version>1.3</tika.version>
        <eclipse.equinox.common.version>3.3.0-v20070426</eclipse.equinox.common.version>
        <eclipse.jdt.core.version>3.3.0-v_771</eclipse.jdt.core.version>
        <eclipse.core.resources.version>3.3.0-v20070604</eclipse.core.resources.version>
        <eclipse.core.expressions.version>3.3.0-v20070606-0010</eclipse.core.expressions.version>
        <eclipse.core.runtime.version>3.3.100-v20070530</eclipse.core.runtime.version>
        <eclipse.osgi.version>3.3.0-v20070530</eclipse.osgi.version>
        <eclipse.core.jobs.version>3.3.0-v20070423</eclipse.core.jobs.version>
        <eclipse.equinox.registry.version>3.3.0-v20070522</eclipse.equinox.registry.version>
        <eclipse.equinox.preferences.version>3.2.100-v20070522</eclipse.equinox.preferences.version>
        <eclipse.core.contenttype.version>3.2.100-v20070319</eclipse.core.contenttype.version>
        <eclipse.xsd.version>2.2.3</eclipse.xsd.version>
        <eclipse.emf.common.version>2.4.0</eclipse.emf.common.version>
        <eclipse.emf.ecore.version>2.4.2</eclipse.emf.ecore.version>
        <eclipse.emf.ecorechange.version>2.2.3</eclipse.emf.ecorechange.version>
        <eclipse.emf.ecorexmi.version>2.4.1</eclipse.emf.ecorexmi.version>
        <javaassist.version>3.11.0.GA</javaassist.version>
        <jaudiotagger.version>2.0.3</jaudiotagger.version>
        <poi.version>3.10-beta1</poi.version>
        <jcommander.version>1.5</jcommander.version>
        <wsdl4j.version>1.6.2</wsdl4j.version>
        <!-- ***************** -->
        <!-- Repository Deployment URLs -->
        <!-- ***************** -->
        <jboss.releases.repo.url>https://repository.jboss.org/nexus/service/local/staging/deploy/maven2/</jboss.releases.repo.url>
        <jboss.snapshots.repo.url>https://repository.jboss.org/nexus/content/repositories/snapshots/</jboss.snapshots.repo.url>
    </properties>

    <!--
         This section defines the default dependency settings inherited by
         child projects. Note that this section does not add dependencies, but
         rather provide default settings.
     -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-jcr-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-jcr</artifactId>
                <version>${project.version}</version>
                <exclusions>
                    <!--
                      The TIKA default exclusions from modeshape-parent are repeated here because otherwise any clients depending
                      directly on modeshape-jcr *will not get* the exclusions from the <dependencyManagement> section of modeshape-parent.
                      Instead, they will only get the exclusions from modeshape-jcr.
                   -->
                    <!--
                     The NetCDF and HDF files are often used in the scientific community, so we exclude this
                     library (and the Commons HTTP Client library) by default.
                     -->
                    <exclusion>
                        <groupId>edu.ucar</groupId>
                        <artifactId>netcdf</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>commons-httpclient</groupId>
                        <artifactId>commons-httpclient</artifactId>
                    </exclusion>

                    <!--
                    Image metadata isn't often for text extraction,
                    so exclude this library by default.
                    -->
                    <exclusion>
                        <groupId>com.drewnoakes</groupId>
                        <artifactId>metadata-extractor</artifactId>
                    </exclusion>
                    <!--
                    RSS and Atom feeds aren't often used for text extraction,
                    RSS and Atom feeds aren't often used for text extraction,
                    so exclude this library by default.
                    -->
                    <exclusion>
                        <groupId>rome</groupId>
                        <artifactId>rome</artifactId>
                    </exclusion>
                    <!--
                    Boilerpipe HTML templates are likely not used,
                    so exclude this library by default.
                    -->
                    <exclusion>
                        <groupId>de.l3s.boilerpipe</groupId>
                        <artifactId>boilerpipe</artifactId>
                    </exclusion>
                    <!--
                    PDFBox declares the Bouncy Castle dependencies
                    as optional, and Tika always depends on them to avoid
                    problems with encrypted PDFs (see TIKA-370).
                    We exclude them by default.
                    -->
                    <exclusion>
                        <groupId>org.bouncycastle</groupId>
                        <artifactId>bcmail-jdk15</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.bouncycastle</groupId>
                        <artifactId>bcprov-jdk15</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-schematic</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-jcr-tck</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-ddl</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-images</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-java</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-mp3</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-msoffice</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-sramp</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-teiid</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-text</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-xml</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-xsd</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-wsdl</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-zip</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-extractor-tika</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-connector-git</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-connector-jdbc-metadata</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-connector-cmis</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-web-jcr-rest</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-web-jcr-rest-war</artifactId>
                <version>${project.version}</version>
                <type>war</type>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-web-jcr-webdav-war</artifactId>
                <version>${project.version}</version>
                <type>war</type>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-web-cmis-war</artifactId>
                <version>${project.version}</version>
                <type>war</type>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-web-explorer-war</artifactId>
                <version>${project.version}</version>
                <type>war</type>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-unit-test</artifactId>
                <version>${project.version}</version>
                <scope>test</scope>
            </dependency>

            <!--
                JCR
            -->
            <dependency>
                <groupId>javax.jcr</groupId>
                <artifactId>jcr</artifactId>
                <version>${jcr.version}</version>
            </dependency>

            <!--
                  Infinispan
              -->
            <dependency>
                <groupId>org.infinispan</groupId>
                <artifactId>infinispan-core</artifactId>
                <version>${infinispan.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.codehaus.woodstox</groupId>
                        <artifactId>woodstox-core-asl</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.codehaus.woodstox</groupId>
                        <artifactId>stax2-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!--
                JGroups is used for the changes bus, but it's optional. Most of the times though, this will be in the classpath
                because of ISPN.
             -->
            <dependency>
                <groupId>org.jgroups</groupId>
                <artifactId>jgroups</artifactId>
                <version>${jgroups.version}</version>
            </dependency>

            <!--
               Infinispan cachestores
            -->
            <dependency>
                <groupId>org.infinispan</groupId>
                <artifactId>infinispan-cachestore-leveldb</artifactId>
                <version>${infinispan.version}</version>
            </dependency>
            <dependency>
                <groupId>org.infinispan</groupId>
                <artifactId>infinispan-cachestore-remote</artifactId>
                <version>${infinispan.version}</version>
            </dependency>
            <dependency>
                <groupId>org.infinispan</groupId>
                <artifactId>infinispan-cachestore-cloud</artifactId>
                <version>${infinispan.version}</version>
            </dependency>
            <dependency>
                <groupId>org.infinispan</groupId>
                <artifactId>infinispan-cachestore-s3</artifactId>
                <version>${infinispan.version}</version>
            </dependency>
            <dependency>
                <groupId>org.infinispan</groupId>
                <artifactId>infinispan-cachestore-jpa</artifactId>
                <version>${infinispan.version}</version>
            </dependency>
            <dependency>
                <groupId>org.infinispan</groupId>
                <artifactId>infinispan-cachestore-jdbc</artifactId>
                <version>${infinispan.version}</version>
            </dependency>
            <!--Required by infinispan-cachestore-jdbc -->
            <dependency>
                <groupId>c3p0</groupId>
                <artifactId>c3p0</artifactId>
                <version>${c3p0.version}</version>
            </dependency>

            <!--
                Optional dependencies for modeshape-jcr which are present here so that clients of the BOM use the same version
                of those dependencies, in case certain features are used.
            -->
            <dependency>
                <groupId>org.apache.tika</groupId>
                <artifactId>tika-parsers</artifactId>
                <version>${tika.version}</version>
            </dependency>
            <!--
                JAAS implementations
            -->
            <dependency>
                <groupId>org.picketbox</groupId>
                <artifactId>picketbox-bare</artifactId>
                <version>${picketbox.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>apache-xalan</groupId>
                        <artifactId>xalan</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>apache-xalan</groupId>
                        <artifactId>serializer</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>apache-xerces</groupId>
                        <artifactId>xml-apis</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>apache-xerces</groupId>
                        <artifactId>xercesImpl</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.hibernate</groupId>
                        <artifactId>hibernate</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!--
                Transaction Managers
            -->
            <dependency>
                <groupId>com.atomikos</groupId>
                <artifactId>transactions</artifactId>
                <version>${atomikos.version}</version>
            </dependency>
            <dependency>
                <groupId>com.atomikos</groupId>
                <artifactId>transactions-jta</artifactId>
                <version>${atomikos.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.jbossts</groupId>
                <artifactId>jbossjta</artifactId>
                <version>${jbossjta.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>commons-httpclient</artifactId>
                        <groupId>commons-httpclient</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>ironjacamar-spec-api</artifactId>
                        <groupId>org.jboss.ironjacamar</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-logging-spi</artifactId>
                        <groupId>org.jboss.logging</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-logging</artifactId>
                        <groupId>org.jboss.logging</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-logging-processor</artifactId>
                        <groupId>org.jboss.logging</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-logging-generator</artifactId>
                        <groupId>org.jboss.logging</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jbossws-native-core</artifactId>
                        <groupId>org.jboss.ws.native</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>emma</artifactId>
                        <groupId>emma</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>emma_ant</artifactId>
                        <groupId>emma</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>hornetq-core</artifactId>
                        <groupId>org.hornetq</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>netty</artifactId>
                        <groupId>org.jboss.netty</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>wrapper</artifactId>
                        <groupId>tanukisoft</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jacorb</artifactId>
                        <groupId>jacorb</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jfreechart</artifactId>
                        <groupId>jfree</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-corba-ots-spi</artifactId>
                        <groupId>org.jboss.integration</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-server-manager</artifactId>
                        <groupId>org.jboss.jbossas</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-ejb-api_3.1_spec</artifactId>
                        <groupId>org.jboss.spec.javax.ejb</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jnp-client</artifactId>
                        <groupId>org.jboss.naming</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-servlet-api_3.0_spec</artifactId>
                        <groupId>org.jboss.spec.javax.servlet</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jbossws-common</artifactId>
                        <groupId>org.jboss.ws</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jcl-over-slf4j</artifactId>
                        <groupId>org.slf4j</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>stax-api</artifactId>
                        <groupId>stax</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>idl</artifactId>
                        <groupId>jacorb</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-logging-tools</artifactId>
                        <groupId>org.jboss.logging</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-connector-api_1.5_spec</artifactId>
                        <groupId>org.jboss.spec.javax.resource</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-transaction-spi</artifactId>
                        <groupId>org.jboss.integration</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-remoting</artifactId>
                        <groupId>org.jboss.remoting</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>slf4j-api</artifactId>
                        <groupId>org.slf4j</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>dom4j</artifactId>
                        <groupId>dom4j</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>commons-codec</artifactId>
                        <groupId>commons-codec</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-logmanager</artifactId>
                        <groupId>org.jboss.logmanager</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>hibernate-jpa-2.0-api</artifactId>
                        <groupId>org.hibernate.javax.persistence</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>commons-logging</artifactId>
                        <groupId>commons-logging</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jcommon</artifactId>
                        <groupId>jfree</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-transaction-api_1.1_spec</artifactId>
                        <groupId>org.jboss.spec.javax.transaction</groupId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!--
                Binary Stores
            -->

            <!-- MongoDB binary store -->
            <dependency>
                <groupId>org.mongodb</groupId>
                <artifactId>mongo-java-driver</artifactId>
                <version>${mongo.driver.version}</version>
                <scope>provided</scope>
            </dependency>

            <!-- Cassandra binary storage -->
            <dependency>
                <groupId>com.datastax.cassandra</groupId>
                <artifactId>cassandra-driver-core</artifactId>
                <version>${cassandra-cql-driver}</version>
                <scope>provided</scope>
            </dependency>

            <!--
               Sequencers
           -->

            <!-- Eclipse JDT artifacts declare their dependencies using ranges. (yikes!)
                 So we need to specify exact versions, and we can do that in a dependencyManagement section.
                 Here are the dependencies showing the last combination that we could get working:
                 +- org.eclipse.equinox:common:jar:3.3.0-v20070426:compile
                     +- org.eclipse.jdt:core:jar:3.3.0-v_771:compile
                     |  +- org.eclipse.core:resources:jar:3.3.0-v20070604:compile
                     |  |  \- org.eclipse.core:expressions:jar:3.3.0-v20070606-0010:compile
                     |  \- org.eclipse.core:runtime:jar:3.3.100-v20070530:compile
                     |     +- org.eclipse:osgi:jar:3.3.0-v20070530:compile
                     |     +- org.eclipse.core:jobs:jar:3.3.0-v20070423:compile
                     |     +- org.eclipse.equinox:registry:jar:3.3.0-v20070522:compile
                     |     +- org.eclipse.equinox:preferences:jar:3.2.100-v20070522:compile
                     |     \- org.eclipse.core:contenttype:jar:3.2.100-v20070319:compile
            -->
            <!--Java sequencer-->
            <dependency>
                <groupId>org.eclipse.equinox</groupId>
                <artifactId>common</artifactId>
                <version>${eclipse.equinox.common.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jdt</groupId>
                <artifactId>core</artifactId>
                <version>${eclipse.jdt.core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.core</groupId>
                <artifactId>resources</artifactId>
                <version>${eclipse.core.resources.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.core</groupId>
                <artifactId>expressions</artifactId>
                <version>${eclipse.core.expressions.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.core</groupId>
                <artifactId>runtime</artifactId>
                <version>${eclipse.core.runtime.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse</groupId>
                <artifactId>osgi</artifactId>
                <version>${eclipse.osgi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.core</groupId>
                <artifactId>jobs</artifactId>
                <version>${eclipse.core.jobs.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.equinox</groupId>
                <artifactId>registry</artifactId>
                <version>${eclipse.equinox.registry.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.equinox</groupId>
                <artifactId>preferences</artifactId>
                <version>${eclipse.equinox.preferences.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.core</groupId>
                <artifactId>contenttype</artifactId>
                <version>${eclipse.core.contenttype.version}</version>
            </dependency>
            <dependency>
                <groupId>javassist</groupId>
                <artifactId>javassist</artifactId>
                <version>${javaassist.version}</version>
            </dependency>
            <!--Mp3 sequencer-->
            <dependency>
                <groupId>org</groupId>
                <artifactId>jaudiotagger</artifactId>
                <version>${jaudiotagger.version}</version>
            </dependency>
            <!--MsOffice sequencer -->
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi</artifactId>
                <version>${poi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-scratchpad</artifactId>
                <version>${poi.version}</version>
            </dependency>
            <!--
                The following 2 POI dependencies are not used directly, but defined so that we use the same "beta" version
                across the board (see https://issues.jboss.org/browse/MODE-1934).Tika-parsers brings these 2 transitively in
             -->
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>${poi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml-schemas</artifactId>
                <version>${poi.version}</version>
            </dependency>
            <!--Teiid sequencer-->
            <dependency>
                <groupId>com.beust</groupId>
                <artifactId>jcommander</artifactId>
                <version>${jcommander.version}</version>
            </dependency>
            <!--WSDL sequencer-->
            <dependency>
                <groupId>wsdl4j</groupId>
                <artifactId>wsdl4j</artifactId>
                <version>${wsdl4j.version}</version>
            </dependency>
            <!--XSD sequencer-->
            <dependency>
                <groupId>org.eclipse.xsd</groupId>
                <artifactId>xsd</artifactId>
                <version>${eclipse.xsd.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.emf</groupId>
                <artifactId>common</artifactId>
                <version>${eclipse.emf.common.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.emf</groupId>
                <artifactId>ecore</artifactId>
                <version>${eclipse.emf.ecore.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.emf</groupId>
                <artifactId>ecore-change</artifactId>
                <version>${eclipse.emf.ecorechange.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.emf</groupId>
                <artifactId>ecore-xmi</artifactId>
                <version>${eclipse.emf.ecorexmi.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <distributionManagement>
      <repository>
        <id>jboss-releases-repository</id>
        <name>JBoss Releases Repository</name>
        <url>${jboss.releases.repo.url}</url>
      </repository>
      <snapshotRepository>
        <id>jboss-snapshots-repository</id>
        <name>JBoss Snapshots Repository</name>
        <url>${jboss.snapshots.repo.url}</url>
      </snapshotRepository>
    </distributionManagement>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.modeshape.bom</groupId>
    <artifactId>modeshape-bom-jbossas</artifactId>
    <version>4.0-SNAPSHOT</version>

    <name>ModeShape BOM for use within a JBoss App Server</name>

    <url>http://www.modeshape.org</url>
    <packaging>pom</packaging>
    <description>ModeShape and JBoss AS usage Bill of Material (BOM)</description>
    <inceptionYear>2008</inceptionYear>

    <organization>
        <name>JBoss, by Red Hat</name>
        <url>http://www.jboss.org</url>
    </organization>

    <licenses>
        <license>
            <name>GNU Lesser General Public License</name>
            <url>http://repository.jboss.org/licenses/lgpl-2.1.txt</url>
            <!--url>http://www.gnu.org/licenses/lgpl.html</url-->
            <distribution>repo</distribution>
            <comments>A business-friendly OSS license</comments>
        </license>
    </licenses>

    <scm>
        <connection>scm:git:git://github.com/ModeShape/modeshape.git</connection>
        <developerConnection>scm:git:git@github.com:ModeShape/modeshape.git</developerConnection>
        <url>http://github.com/ModeShape/modeshape</url>
    </scm>

    <issueManagement>
        <system>jira</system>
        <url>http://issues.jboss.org/browse/MODE</url>
    </issueManagement>

    <developers>
        <developer>
            <id>modeshape.org</id>
            <name>ModeShape Community</name>
            <organization>modeshape.org</organization>
            <organizationUrl>http://modeshape.org</organizationUrl>
        </developer>
    </developers>

    <properties>
        <!-- ***************** -->
        <!-- Repository Deployment URLs -->
        <!-- ***************** -->
        <jboss.releases.repo.url>https://repository.jboss.org/nexus/service/local/staging/deploy/maven2/</jboss.releases.repo.url>
        <jboss.snapshots.repo.url>https://repository.jboss.org/nexus/content/repositories/snapshots/</jboss.snapshots.repo.url>

        <jcr.version>2.0</jcr.version>
        <version.org.jboss.bom>1.0.7.Final</version.org.jboss.bom>
        <jboss.server.version>8.0.0.CR1</jboss.server.version>
    </properties>

    <!--
         This section defines the default dependency settings inherited by
         child projects. Note that this section does not add dependencies, but
         rather provide default settings.
     -->
    <dependencyManagement>
        <dependencies>
            <!-- All dependencies should be 'provided' since they are already installed in the server. -->

            <!-- ModeShape public API -->
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-jcr-api</artifactId>
                <version>${project.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>javax.jcr</groupId>
                <artifactId>jcr</artifactId>
                <version>${jcr.version}</version>
                <scope>provided</scope>
            </dependency>

            <!--
                The following imports will bring in 2 boms which contain server-specific dependencies and should give clients
                all the standard (JEE & JBoss spec) dependencies, together with logging.
            -->
            <dependency>
                <groupId>org.jboss.bom</groupId>
                <artifactId>jboss-javaee-6.0-with-tools</artifactId>
                <version>${version.org.jboss.bom}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>

            <dependency>
                <groupId>org.jboss.bom</groupId>
                <artifactId>jboss-javaee-6.0-with-logging</artifactId>
                <version>${version.org.jboss.bom}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>

            <!--The following are not included in the above BOMs but are required for Arquillian to run -->
            <dependency>
                <groupId>org.wildfly</groupId>
                <artifactId>wildfly-arquillian-container-managed</artifactId>
                <version>${jboss.server.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.wildfly</groupId>
                <artifactId>wildfly-arquillian-container-remote</artifactId>
                <version>${jboss.server.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <distributionManagement>
      <repository>
        <id>jboss-releases-repository</id>
        <name>JBoss Releases Repository</name>
        <url>${jboss.releases.repo.url}</url>
      </repository>
      <snapshotRepository>
        <id>jboss-snapshots-repository</id>
        <name>JBoss Snapshots Repository</name>
        <url>${jboss.snapshots.repo.url}</url>
      </snapshotRepository>
    </distributionManagement>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.modeshape.bom</groupId>
    <artifactId>modeshape-bom-remote-client</artifactId>
    <version>4.0-SNAPSHOT</version>

    <name>ModeShape BOM for remote REST and JDBC clients</name>

    <url>http://www.modeshape.org</url>
    <packaging>pom</packaging>
    <description>Bill of Material (BOM) for applications using ModeShape's REST client or remote JDBC driver.</description>
    <inceptionYear>2008</inceptionYear>

    <organization>
        <name>JBoss, by Red Hat</name>
        <url>http://www.jboss.org</url>
    </organization>

    <licenses>
        <license>
            <name>GNU Lesser General Public License</name>
            <url>http://repository.jboss.org/licenses/lgpl-2.1.txt</url>
            <!--url>http://www.gnu.org/licenses/lgpl.html</url-->
            <distribution>repo</distribution>
            <comments>A business-friendly OSS license</comments>
        </license>
    </licenses>

    <scm>
        <connection>scm:git:git://github.com/ModeShape/modeshape.git</connection>
        <developerConnection>scm:git:git@github.com:ModeShape/modeshape.git</developerConnection>
        <url>http://github.com/ModeShape/modeshape</url>
    </scm>

    <issueManagement>
        <system>jira</system>
        <url>http://issues.jboss.org/browse/MODE</url>
    </issueManagement>

    <developers>
        <developer>
            <id>modeshape.org</id>
            <name>ModeShape Community</name>
            <organization>modeshape.org</organization>
            <organizationUrl>http://modeshape.org</organizationUrl>
        </developer>
    </developers>

    <properties>
        <!-- ***************** -->
        <!-- Repository Deployment URLs -->
        <!-- ***************** -->
        <jboss.releases.repo.url>https://repository.jboss.org/nexus/service/local/staging/deploy/maven2/</jboss.releases.repo.url>
        <jboss.snapshots.repo.url>https://repository.jboss.org/nexus/content/repositories/snapshots/</jboss.snapshots.repo.url>
        <jcr.version>2.0</jcr.version>
    </properties>

    <!--
         This section defines the default dependency settings inherited by
         child BOMs. Note that this section does not add dependencies, but
         rather provide default settings.
     -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-web-jcr-rest-client</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-jdbc</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.jcr</groupId>
                <artifactId>jcr</artifactId>
                <version>${jcr.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <distributionManagement>
      <repository>
        <id>jboss-releases-repository</id>
        <name>JBoss Releases Repository</name>
        <url>${jboss.releases.repo.url}</url>
      </repository>
      <snapshotRepository>
        <id>jboss-snapshots-repository</id>
        <name>JBoss Snapshots Repository</name>
        <url>${jboss.snapshots.repo.url}</url>
      </snapshotRepository>
    </distributionManagement>
</project>
<?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>

   <groupId>org.modeshape</groupId>
   <artifactId>modeshape-checkstyle</artifactId>
   <version>4.0-SNAPSHOT</version>
   <name>ModeShape Checkstyle Rules</name>
   <description>Contains the definitions for the ModeShape commons code style and conventions</description>


    <properties>
        <!-- Instruct the build to use only UTF-8 encoding for source code -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
   <!--
   This module is referenced by ModeShape's parent POM, so it needs to be build before the parent
   or any other module. Therefore, this module cannot reference the parent, and needs to define enough
   to build and deploy the "modeshape-checkstyle" module.
   -->
   <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                    <showDeprecation>false</showDeprecation>
                    <showWarnings>false</showWarnings>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.11</version>
            </plugin>
            <!-- 
            This is not deployed into a Maven repository. It is merely installed into the local Maven repository
            during a local build.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>5.6</version>
            <exclusions>
                <exclusion>
                    <groupId>com.sun</groupId>
                    <artifactId>tools</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>
</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-connectors</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <!-- The groupId and version values are inherited from parent -->
    <artifactId>modeshape-connector-cmis</artifactId>
    <packaging>jar</packaging>
    <name>ModeShape Connector to CMIS Repositories</name>
    <description>ModeShape Connector that access the content in a CMIS repository</description>
    <url>http://www.modeshape.org</url>

    <!--
    Define the dependencies.  Note that all version and scopes default to those
    defined in the dependencyManagement section of the parent pom.
    -->
    <dependencies>
        <dependency>
            <groupId>org.apache.chemistry.opencmis</groupId>
            <artifactId>chemistry-opencmis-client-impl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.chemistry.opencmis</groupId>
            <artifactId>chemistry-opencmis-server-inmemory</artifactId>
            <type>war</type>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${version.failsafe.plugin}</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <skip>${skipTests}</skip>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
                <configuration>
                    <deployables>
                        <deployable>
                            <groupId>org.apache.chemistry.opencmis</groupId>
                            <artifactId>chemistry-opencmis-server-inmemory</artifactId>
                            <type>war</type>
                            <properties>
                                <context>/</context>
                            </properties>
                        </deployable>
                    </deployables>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-connectors</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <!-- The groupId and version values are inherited from parent -->
    <artifactId>modeshape-connector-git</artifactId>
    <packaging>jar</packaging>
    <name>ModeShape Connector to Git Repositories</name>
    <description>ModeShape Connector that access the content in a Git repository</description>
    <url>http://www.modeshape.org</url>

    <!--
    Define the dependencies.  Note that all version and scopes default to those
    defined in the dependencyManagement section of the parent pom.
    -->
    <dependencies>
        <dependency>
            <groupId>org.eclipse.jgit</groupId>
            <artifactId>org.eclipse.jgit</artifactId>
        </dependency>
    </dependencies>

    <build>
        <testResources>
            <testResource>
                <directory>${project.basedir}/src/test/resources</directory>
            </testResource>
            <testResource>
                <directory>${project.basedir}/src/test/java</directory>
            </testResource>
        </testResources>
    </build>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-connectors</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <!-- The groupId and version values are inherited from parent -->
    <artifactId>modeshape-connector-jdbc-metadata</artifactId>
    <packaging>jar</packaging>
    <name>ModeShape Connector to JDBC Schemas</name>
    <description>ModeShape Connector that processes JDBC metadata</description>
    <url>http://www.modeshape.org</url>

    <!--
        Define the dependencies.  Note that all version and scopes default to those
        defined in the dependencyManagement section of the parent pom.
    -->
    <dependencies>
        <!--This needs to be overwritten, because the default scope is test -->
        <dependency>
            <groupId>c3p0</groupId>
            <artifactId>c3p0</artifactId>
        </dependency>
        <!-- Test dependencies (defined in parent) -->
        <dependency>
            <groupId>commons-naming</groupId>
            <artifactId>commons-naming-core</artifactId>
        </dependency>
    </dependencies>

    <build>
        <testResources>
            <testResource>
                <directory>${project.basedir}/src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
    </build>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-parent</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../modeshape-parent/pom.xml</relativePath>
    </parent>
    <!-- The groupId and version values are inherited from parent -->
    <artifactId>modeshape-connectors</artifactId>
    <packaging>pom</packaging>
    <name>ModeShape Connectors</name>
    <description>ModeShape built-in connectors </description>
    <url>http://www.modeshape.org</url>
    <dependencies>
        <!-- Common (annotations & text parsers) -->
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-core</artifactId>
            <version>${infinispan.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
        </dependency>
        <!-- Logging - overriding the default dependencies to enforce the test scope -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
        </dependency>
    </dependencies>

    <modules>
        <module>modeshape-connector-git</module>
        <module>modeshape-connector-cmis</module>
        <module>modeshape-connector-jdbc-metadata</module>
    </modules>

    <profiles>
        <profile>
            <id>assembly</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <descriptorRefs>
                                <descriptorRef>module-with-dependencies</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-parent</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../../modeshape-parent</relativePath>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <groupId>org.modeshape.demo</groupId>
    <artifactId>modeshape-embedded-repo-demo</artifactId>
    <packaging>jar</packaging>
    <name>ModeShape Demo of Embedding Repository</name>
    <description>A simple demo application that creates an embedded ModeShape engine.</description>

    <dependencies>
        <dependency>
            <groupId>javax.jcr</groupId>
            <artifactId>jcr</artifactId>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
        </dependency>
        <!-- PicketBox (JAAS implementation, configured optionally) -->
        <dependency>
            <groupId>org.picketbox</groupId>
            <artifactId>picketbox-bare</artifactId>
            <scope>compile</scope>
        </dependency>
        <!-- Testing (note the scope) -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>assembly</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <descriptorRefs>
                                <descriptorRef>example-with-dependencies</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.modeshape</groupId>
    <artifactId>modeshape-parent</artifactId>
    <version>4.0-SNAPSHOT</version>
    <relativePath>../modeshape-parent</relativePath>
  </parent>

  <groupId>org.modeshape.demo</groupId>
  <artifactId>demos</artifactId>
  <packaging>pom</packaging>

  <name>ModeShape Demos</name>
  <description>Builds the ModeShape demos</description>

  <modules>
    <module>sequencers</module>
    <module>embedded-repo</module>
  </modules>
</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-parent</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../../modeshape-parent/pom.xml</relativePath>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <groupId>org.modeshape.demo</groupId>
    <artifactId>modeshape-sequencers-demo</artifactId>
    <packaging>jar</packaging>
    <name>ModeShape Demo of Sequencing Files</name>
    <description>Examples that showcase how to use sequencers with a JCR repository.</description>

    <dependencies>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-sequencer-java</artifactId>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-sequencer-images</artifactId>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-sequencer-mp3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-sequencer-text</artifactId>
        </dependency>
        <!--
        Logging (require SLF4J API for compiling, but use Logback binding for running)
        -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>runtime</scope>
        </dependency>
        <!--
          Java Content Repository API
        -->
        <dependency>
            <groupId>javax.jcr</groupId>
            <artifactId>jcr</artifactId>
        </dependency>
        <!--
          PicketBox (JAAS implementation used in test cases)
        -->
        <dependency>
            <groupId>org.picketbox</groupId>
            <artifactId>picketbox-bare</artifactId>
            <scope>compile</scope>
        </dependency>
        <!--
          Test cases use JUnit
        -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>assembly</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <descriptorRefs>
                                <descriptorRef>example-with-dependencies</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-parent</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../../../modeshape-parent/pom.xml</relativePath>
    </parent>
    <artifactId>modeshape-jbossas-cmis-war</artifactId>
    <packaging>war</packaging>
    <name>ModeShape CMIS Service for JBoss AS</name>
    <description>ModeShape servlet that provides CMIS bridge to repositories in a JBoss AS</description>
    <url>http://www.modeshape.org</url>
    <dependencies>
        <!--The following dependencies are installed in the container and will be picked up via the manifest-->
        <dependency>
            <groupId>javax.jcr</groupId>
            <artifactId>jcr</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-web-cmis</artifactId>
            <version>${project.version}</version>  		
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-parent</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../../../modeshape-parent/pom.xml</relativePath>
    </parent>
    <artifactId>modeshape-jbossas-explorer-war</artifactId>
    <packaging>war</packaging>
    <name>ModeShape Explorer for JBoss AS</name>
    <description>ModeShape explorer for repositories in a JBoss AS</description>
    <url>http://www.modeshape.org</url>
    <dependencies>
        <!--The following dependencies are installed in the container and will be picked up via the manifest-->
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-web-explorer</artifactId>
	    <version>${project.version}</version>
	    <type>war</type>	
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-parent</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../../../modeshape-parent/pom.xml</relativePath>
    </parent>
    <!-- The groupId and version values are inherited from parent -->
    <artifactId>modeshape-jbossas-subsystem</artifactId>
    <name>ModeShape for JBoss AS</name>
    <description>ModeShape deployment as a subsystem within the JBoss Application Server</description>
    <url>http://www.modeshape.org</url>
    
    <dependencies>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
        </dependency>

        <!-- Set these AS7 resources as 'provided' here rather than in parent POM, since other distributions may need to include them -->
        <!-- (Actually, we can't set these as 'provided' because the JavaDoc doesn't seem to build correctly, since it needs 'compile' scope) -->
        <dependency>
            <groupId>org.jboss.spec.javax.resource</groupId>
            <artifactId>jboss-connector-api_1.7_spec</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wildfly</groupId>
            <artifactId>wildfly-controller</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wildfly</groupId>
            <artifactId>wildfly-naming</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wildfly</groupId>
            <artifactId>wildfly-clustering-jgroups</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wildfly</groupId>
            <artifactId>wildfly-subsystem-test-framework</artifactId>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-core</artifactId>
        </dependency>

        <!--Testing-->
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>

    </dependencies>

</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-parent</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../../../modeshape-parent/pom.xml</relativePath>
    </parent>
    <artifactId>modeshape-jbossas-web-rest-war</artifactId>
    <packaging>war</packaging>
    <name>ModeShape JCR REST Service for JBoss AS</name>
    <description>ModeShape servlet that provides RESTful access to JCR items in a JBoss Application Server</description>
    <url>http://www.modeshape.org</url>
    <dependencies>
        <dependency>
            <groupId>javax.jcr</groupId>
            <artifactId>jcr</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-web-jcr-rest</artifactId>
            <exclusions>
                <!-- Exclude the artifacts that are provided with AS7; we only want the ModeShape code in the REST module. -->
                <exclusion>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>resteasy-jaxrs</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>resteasy-jaxb-provider</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>resteasy-jettison-provider</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>jaxrs-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>resteasy-multipart-provider</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-parent</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../../../modeshape-parent/pom.xml</relativePath>
    </parent>
    <artifactId>modeshape-jbossas-web-webdav-war</artifactId>
    <packaging>war</packaging>
    <name>ModeShape JCR WebDAV Service for JBoss AS</name>
    <description>ModeShape servlet that provides WebDAV access to JCR items in a JBoss AS</description>
    <url>http://www.modeshape.org</url>
    <dependencies>
        <!--The following dependencies are installed in the container and will be picked up via the manifest-->
        <dependency>
            <groupId>javax.jcr</groupId>
            <artifactId>jcr</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-web-jcr-webdav</artifactId>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.modeshape</groupId>
		<artifactId>modeshape-parent</artifactId>
		<version>4.0-SNAPSHOT</version>
		<relativePath>../../modeshape-parent/pom.xml</relativePath>
	</parent>
	<packaging>pom</packaging>
	<artifactId>modeshape-jbossas</artifactId>
	<name>ModeShape JBoss Deployment Components</name>
	<url>http://www.modeshape.org</url>
	<description>Builds the ModeShape components that can be deployed to JBoss</description>
	
	<modules>
		<module>modeshape-jbossas-subsystem</module>
		<module>modeshape-jbossas-web-rest-war</module>
		<module>modeshape-jbossas-web-webdav-war</module>
		<module>modeshape-jbossas-cmis-war</module>
		<module>modeshape-jbossas-explorer-war</module>
	</modules>

</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.modeshape</groupId>
    <artifactId>modeshape-parent</artifactId>
    <version>4.0-SNAPSHOT</version>
    <relativePath>../modeshape-parent</relativePath>
  </parent>

  <groupId>org.modeshape.deploy</groupId>
  <artifactId>modeshape-deploy</artifactId>
  <packaging>pom</packaging>

  <name>ModeShape Deployment Components</name>
  <description>Builds the ModeShape deployment-related components</description>

  <modules>
    <module>jbossas</module>
  </modules>
</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-extractors</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <!-- The groupId and version values are inherited from parent -->
    <artifactId>modeshape-extractor-tika</artifactId>
    <packaging>jar</packaging>
    <name>ModeShape Tika-based text extractor</name>
    <description>ModeShape text extractor that uses the Apache Tika library</description>
    <url>http://www.modeshape.org</url>

    <dependencies>
        <dependency>
            <groupId>org.apache.tika</groupId>
            <artifactId>tika-parsers</artifactId>
        </dependency>      
    </dependencies>      
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-parent</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../modeshape-parent/pom.xml</relativePath>
    </parent>
    <!-- The groupId and version values are inherited from parent -->
    <artifactId>modeshape-extractors</artifactId>
    <packaging>pom</packaging>
    <name>ModeShape Text Extractors</name>
    <description>ModeShape built-in text extractors</description>
    <url>http://www.modeshape.org</url>
    <dependencies>
        <!-- Common (annotations & text parsers) -->
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr-api</artifactId>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-core</artifactId>
            <version>${infinispan.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
        </dependency>

        <!-- Logging-->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>
        <dependency>
           <groupId>log4j</groupId>
           <artifactId>log4j</artifactId>
        </dependency>
    </dependencies>

    <modules>
        <module>modeshape-extractor-tika</module>      
    </modules>

    <profiles>
        <profile>
            <id>assembly</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <descriptorRefs>
                                <descriptorRef>module-with-dependencies</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-parent</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../../modeshape-parent/pom.xml</relativePath>
    </parent>
    <!-- The groupId and version values are inherited from parent  -->
    <artifactId>modeshape-jbossas-integration-tests</artifactId>
    <name>ModeShape for JBoss AS (Integration Tests)</name>
    <description>Integration tests that use the ModeShape subsystem for JBoss AS7</description>
    <url>http://www.modeshape.org</url>
    <properties>
        <arquillian.suspend>n</arquillian.suspend>

        <!--Force Ipv4 since that's how Arquillian starts -->
        <preferIpv4>true</preferIpv4>
        <preferIpv6>false</preferIpv6>
    </properties>
    <dependencyManagement>
        <dependencies>
            <!-- Define the version of JBoss' Java EE 6 APIs we want to import.
                  Any dependencies from org.jboss.spec will have their version defined by this
                  BOM -->
            <!-- JBoss distributes a complete set of Java EE 6 APIs including
                  a Bill of Materials (BOM). A BOM specifies the versions of a "stack" (or
                  a collection) of artifacts. We use this here so that we always get the correct
                  versions of artifacts. Here we use the jboss-javaee-6.0-with-tools stack
                  (you can read this as the JBoss stack of the Java EE 6 APIs, with some extras
                  tools for your project, such as Arquillian for testing) -->
            <dependency>
                <groupId>org.jboss.bom</groupId>
                <artifactId>jboss-javaee-6.0-with-tools</artifactId>
                <version>${jboss-javaee-6.0-with-tools.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <!--
      Define the dependencies. Note that all version and scopes default to
      those defined in the dependencyManagement section of the parent pom.
    -->
    <dependencies>
        <!-- Import the JCR API (and ModeShape's extension), we use provided scope as the API is included in JBoss AS 7 -->
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the CDI API, we use provided scope as the API is included in JBoss AS 7 -->
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the Common Annotations API (JSR-250), using 'provided' scope as the API is included in JBoss AS 7 -->
        <dependency>
            <groupId>org.jboss.spec.javax.annotation</groupId>
            <artifactId>jboss-annotations-api_1.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the EJB API, using 'provided' scope as the API is included in JBoss AS 7 -->
        <dependency>
            <groupId>org.jboss.spec.javax.ejb</groupId>
            <artifactId>jboss-ejb-api_3.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.spec</groupId>
            <artifactId>jboss-javaee-6.0</artifactId>
            <version>1.0.0.Final</version>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>

        <!-- Import JUnit, Arquillian, and other artifacts used in the tests -->
        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-depchain</artifactId>
            <type>pom</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.protocol</groupId>
            <artifactId>arquillian-protocol-servlet</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.wildfly</groupId>
            <artifactId>wildfly-arquillian-container-managed</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jboss.logging</groupId>
            <artifactId>jboss-logging</artifactId>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
            <scope>test</scope>
            <type>test-jar</type>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
            <scope>test</scope>
            <type>test-jar</type>
        </dependency>

        <!--Needed by the federation tests-->
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-connector-jdbc-metadata</artifactId>
            <scope>test</scope>
        </dependency>

        <!--Needed by the JDBC remote driver tets -->
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jdbc</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jdbc</artifactId>
            <scope>test</scope>
            <type>test-jar</type>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jdbc-local</artifactId>
            <scope>test</scope>
            <type>test-jar</type>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jdbc-local</artifactId>
            <scope>test</scope>
        </dependency>
        <!--Needed by the webdav tests -->
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-webdav-war</artifactId>
            <scope>test</scope>
            <type>test-jar</type>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-web-jcr-webdav-war</artifactId>
            <scope>test</scope>
            <type>test-jar</type>
        </dependency>
        <dependency>
            <groupId>com.googlecode.sardine</groupId>
            <artifactId>sardine</artifactId>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
    </dependencies>
    <build>
        <resources>
            <resource>
                <filtering>false</filtering>
                <directory>src/main/webapp</directory>
                <includes>
                    <include>*</include>
                    <include>**/*</include>
                </includes>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>*</include>
                </includes>
            </testResource>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>**/*</include>
                </includes>
            </testResource>
        </testResources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <phase>process-test-classes</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <!-- Unpack the JBoss Server version which should be installed locally first into the 'target' directory -->
                                <artifactItem>
                                    <groupId>${jboss.server.groupId}</groupId>
                                    <artifactId>${jboss.server.artifactId}</artifactId>
                                    <version>${jboss.server.version}</version>
                                    <type>${jboss.server.artifact.type}</type>
                                    <overWrite>false</overWrite>
                                    <outputDirectory>${project.build.directory}</outputDirectory>
                                </artifactItem>

                                <!-- Unpack the ModeShape distribution which is installed (hopefully) locally-->
                                <artifactItem>
                                    <groupId>org.modeshape</groupId>
                                    <artifactId>modeshape-distribution</artifactId>
                                    <version>${project.version}</version>
                                    <classifier>${jboss.kit.distribution.id}</classifier>
                                    <type>zip</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/${jboss.server.root.folder}</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--Copy & overwrite if necessary any test-specific files, including the configuration -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>overwrite-modules</id>
                        <phase>process-test-classes</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/${jboss.server.root.folder}/${jboss.kit.modules.location}</outputDirectory>
                            <overwrite>true</overwrite>
                            <resources>
                                <resource>
                                    <directory>src/main/resources/kit/jboss-wf8</directory>
                                    <filtering>false</filtering>
                                    <excludes>
                                        <exclude>standalone/**</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>overwrite-configuration</id>
                        <phase>process-test-classes</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/${jboss.server.root.folder}</outputDirectory>
                            <overwrite>true</overwrite>
                            <resources>
                                <resource>
                                    <directory>src/main/resources/kit/jboss-wf8</directory>
                                    <filtering>false</filtering>
                                    <includes>
                                        <include>standalone/**</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-parent</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../../modeshape-parent/pom.xml</relativePath>
    </parent>
    <!-- The groupId and version values are inherited from parent  -->
    <artifactId>modeshape-jbossas-kit-tests</artifactId>
    <name>ModeShape for JBoss AS Distribution Kit Tests</name>
    <description>Tests that use the distributed ModeShape subsystem for JBoss AS7</description>
    <url>http://www.modeshape.org</url>
    <properties>
        <arquillian.suspend>n</arquillian.suspend>
        <jboss.as.startup.timeout>240</jboss.as.startup.timeout>
        <!--Force Ipv4 since that's how Arquillian starts -->
        <preferIpv4>true</preferIpv4>
        <preferIpv6>false</preferIpv6>
    </properties>
    <dependencyManagement>
        <dependencies>
            <!-- Define the version of JBoss' Java EE 6 APIs we want to import.
                  Any dependencies from org.jboss.spec will have their version defined by this
                  BOM -->
            <!-- JBoss distributes a complete set of Java EE 6 APIs including
                  a Bill of Materials (BOM). A BOM specifies the versions of a "stack" (or
                  a collection) of artifacts. We use this here so that we always get the correct
                  versions of artifacts. Here we use the jboss-javaee-6.0-with-tools stack
                  (you can read this as the JBoss stack of the Java EE 6 APIs, with some extras
                  tools for your project, such as Arquillian for testing) -->
            <dependency>
                <groupId>org.jboss.bom</groupId>
                <artifactId>jboss-javaee-6.0-with-tools</artifactId>
                <version>${jboss-javaee-6.0-with-tools.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <!--
      Define the dependencies. Note that all version and scopes default to
      those defined in the dependencyManagement section of the parent pom.
    -->
    <dependencies>
        <!-- Import the JCR API (and ModeShape's extension), we use provided scope as the API is included in JBoss AS 7 -->
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import JUnit, Arquillian, and other artifacts used in the tests -->
        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-depchain</artifactId>
            <type>pom</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.protocol</groupId>
            <artifactId>arquillian-protocol-servlet</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.wildfly</groupId>
            <artifactId>wildfly-arquillian-container-managed</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <resources>
            <resource>
                <filtering>false</filtering>
                <directory>src/main/webapp</directory>
                <includes>
                    <include>*</include>
                    <include>**/*</include>
                </includes>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>*</include>
                </includes>
            </testResource>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>**/*</include>
                </includes>
            </testResource>
        </testResources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <phase>process-test-classes</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <!-- Unpack the JBoss Server version which should be installed locally first into the 'target' directory -->
                                <artifactItem>
                                    <groupId>${jboss.server.groupId}</groupId>
                                    <artifactId>${jboss.server.artifactId}</artifactId>
                                    <version>${jboss.server.version}</version>
                                    <type>${jboss.server.artifact.type}</type>
                                    <overWrite>false</overWrite>
                                    <outputDirectory>${project.build.directory}</outputDirectory>
                                </artifactItem>

                                <!-- Unpack the ModeShape distribution which is installed (hopefully) locally-->
                                <artifactItem>
                                    <groupId>org.modeshape</groupId>
                                    <artifactId>modeshape-distribution</artifactId>
                                    <version>${project.version}</version>
                                    <classifier>${jboss.kit.distribution.id}</classifier>
                                    <type>zip</type>
                                    <overWrite>false</overWrite>
                                    <outputDirectory>${project.build.directory}/${jboss.server.root.folder}</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.modeshape</groupId>
    <artifactId>modeshape-parent</artifactId>
    <version>4.0-SNAPSHOT</version>
    <relativePath>../modeshape-parent</relativePath>
  </parent>

  <artifactId>modeshape-integration</artifactId>
  <packaging>pom</packaging>

  <name>ModeShape Integration Test Components</name>
  <description>Comprises the set of integration tests for the ModeShape project</description>

  <modules>
    <module>modeshape-jbossas-integration-tests</module>
  </modules>

    <profiles>
        <profile>
            <id>assembly</id>
            <modules>
                <module>modeshape-jbossas-kit-tests</module>
            </modules>
        </profile>
    </profiles>
</project><?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-parent</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../modeshape-parent/pom.xml</relativePath>
    </parent>

    <artifactId>modeshape-assembly-descriptors</artifactId>
    <name>ModeShape Assembly Descriptors</name>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <!-- We don't want to run this -->
                        <phase>non-existant</phase>
                    </execution>
                    <execution>
                        <id>attach-test-sources</id>
                        <!-- We don't want to run this -->
                        <phase>non-existant</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                    <attach>false</attach>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <id>test-jar</id>
                        <!-- We don't want to run this -->
                        <phase>non-existant</phase>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <skip>true</skip>
                    <attach>false</attach>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-parent</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../modeshape-parent/pom.xml</relativePath>
    </parent>

    <!-- The groupId and version values are inherited from parent -->
    <artifactId>modeshape-client</artifactId>
    <packaging>pom</packaging>
    <name>ModeShape Client Jar</name>
    <description>Library that allows ModeShape Tools to interact with ModeShape</description>
    <url>http://www.modeshape.org</url>

    <profiles>
        <profile>
            <id>assembly</id>
            <properties>
                <ant.jdbc.parseDirectory>${project.build.directory}/jdbc_parse</ant.jdbc.parseDirectory>
            </properties>

            <dependencies>
                <dependency>
                    <groupId>org.modeshape</groupId>
                    <artifactId>modeshape-jdbc</artifactId>
                    <version>${project.version}</version>
                    <classifier>jar-with-dependencies</classifier>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <!-- Copy the jdbc jar with dependencies to a temporary location, which will be then processed by ANT -->
                                        <artifactItem>
                                            <groupId>org.modeshape</groupId>
                                            <artifactId>modeshape-jdbc</artifactId>
                                            <version>${project.version}</version>
                                            <classifier>jar-with-dependencies</classifier>
                                            <outputDirectory>${project.build.directory}</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!--
                       The following ant tasks are used to remove any duplicates from the modeshape-jdbc jar and to merge the
                       services.

                       Note:  this is all changing in future releases.
                    -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>repackage-client-jar</id>
                                <phase>package</phase>
                                <configuration>
                                    <target>
                                        <unzip src="${project.build.directory}/modeshape-jdbc-${project.version}-jar-with-dependencies.jar"
                                               dest="${project.build.directory}/tempjars"/>

                                        <unzip src="${project.build.directory}/tempjars/jcr-${jcr.version}.jar"
                                               dest="${ant.jdbc.parseDirectory}"/>

                                        <unzip src="${project.build.directory}/tempjars/commons-codec-1.6.jar"
                                               dest="${ant.jdbc.parseDirectory}"/>
                                        <move file="${ant.jdbc.parseDirectory}/META-INF/LICENSE.txt"
                                              tofile="${ant.jdbc.parseDirectory}/META-INF/LICENSE_commons-codec.txt"/>

                                        <unzip src="${project.build.directory}/tempjars/commons-logging-1.1.1.jar"
                                               dest="${ant.jdbc.parseDirectory}"/>
                                        <move file="${ant.jdbc.parseDirectory}/META-INF/LICENSE"
                                              tofile="${ant.jdbc.parseDirectory}/META-INF/LICENSE_commons-logging.txt"/>
                                        <move file="${ant.jdbc.parseDirectory}/META-INF/NOTICE"
                                              tofile="${ant.jdbc.parseDirectory}/META-INF/NOTICE_commons-logging.txt"/>

                                        <unzip src="${project.build.directory}/tempjars/joda-time-${joda.time.version}.jar"
                                               dest="${ant.jdbc.parseDirectory}"/>
                                        <move file="${ant.jdbc.parseDirectory}/META-INF/LICENSE.txt"
                                              tofile="${ant.jdbc.parseDirectory}/META-INF/LICENSE_joda-time.txt"/>
                                        <move file="${ant.jdbc.parseDirectory}/META-INF/NOTICE.txt"
                                              tofile="${ant.jdbc.parseDirectory}/META-INF/NOTICE_joda-time.txt"/>

                                        <unzip src="${project.build.directory}/tempjars/httpclient-${httpclient.version}.jar"
                                               dest="${ant.jdbc.parseDirectory}"/>
                                        <move file="${ant.jdbc.parseDirectory}/META-INF/LICENSE.txt"
                                              tofile="${ant.jdbc.parseDirectory}/META-INF/LICENSE_httpclient.txt"/>
                                        <move file="${ant.jdbc.parseDirectory}/META-INF/NOTICE.txt"
                                              tofile="${ant.jdbc.parseDirectory}/META-INF/NOTICE_httpclient.txt"/>

                                        <unzip src="${project.build.directory}/tempjars/httpcore-${httpclient.version}.jar"
                                               dest="${ant.jdbc.parseDirectory}"/>
                                        <move file="${ant.jdbc.parseDirectory}/META-INF/LICENSE.txt"
                                              tofile="${ant.jdbc.parseDirectory}/META-INF/LICENSE_httpcore.txt"/>
                                        <move file="${ant.jdbc.parseDirectory}/META-INF/NOTICE.txt"
                                              tofile="${ant.jdbc.parseDirectory}/META-INF/NOTICE_httpcore.txt"/>

                                        <unzip src="${project.build.directory}/tempjars/jettison-${jettison.version}.jar"
                                               dest="${ant.jdbc.parseDirectory}"/>
                                        <move file="${ant.jdbc.parseDirectory}/META-INF/LICENSE"
                                              tofile="${ant.jdbc.parseDirectory}/META-INF/LICENSE_jettison.txt"/>

                                        <unzip src="${project.build.directory}/tempjars/modeshape-common-${project.version}.jar"
                                               dest="${ant.jdbc.parseDirectory}"/>
                                        <unzip src="${project.build.directory}/tempjars/modeshape-jcr-api-${project.version}.jar"
                                               dest="${ant.jdbc.parseDirectory}"/>
                                        <unzip src="${project.build.directory}/tempjars/modeshape-web-jcr-rest-client-${project.version}.jar"
                                               dest="${ant.jdbc.parseDirectory}"/>

                                        <move file="${project.build.directory}/tempjars/META-INF/services/java.sql.Driver"
                                              tofile="${project.build.directory}/tempdrivers/jdbc_drivers"/>
                                        <unzip src="${project.build.directory}/tempjars/modeshape-jdbc-local-${project.version}.jar"
                                               dest="${ant.jdbc.parseDirectory}"/>
                                        <move file="${ant.jdbc.parseDirectory}/META-INF/services/java.sql.Driver"
                                              tofile="${project.build.directory}/tempdrivers/jdbc_local_drivers"/>

                                        <copy todir="${ant.jdbc.parseDirectory}/org">
                                            <fileset dir="${project.build.directory}/tempjars/org"/>
                                        </copy>

                                        <concat destfile="${ant.jdbc.parseDirectory}/META-INF/services/java.sql.Driver"
                                                fixlastline="yes">
                                            <fileset file="${project.build.directory}/tempdrivers/jdbc_drivers"/>
                                            <fileset file="${project.build.directory}/tempdrivers/jdbc_local_drivers"/>
                                        </concat>

                                        <delete file="${project.build.directory}/modeshape-jdbc-${project.version}-jar-with-dependencies.jar"/>

                                        <delete dir="${project.build.directory}/tempjars"/>
                                        <delete dir="${project.build.directory}/tempproviders"/>
                                        <delete dir="${project.build.directory}/tempdrivers"/>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <executions>
                            <!--Creates & attaches the main jar assembly -->
                            <execution>
                                <id>default</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <attach>true</attach>
                                    <descriptors>
                                        <descriptor>src/assembly/kit.xml</descriptor>
                                    </descriptors>
                                    <appendAssemblyId>false</appendAssemblyId>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-parent</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../modeshape-parent/pom.xml</relativePath>
    </parent>

    <!-- The groupId and version values are inherited from parent -->
    <artifactId>modeshape-common</artifactId>
    <packaging>jar</packaging>
    <name>ModeShape Common</name>
    <description>ModeShape Common Library and Utilities</description>
    <url>http://www.modeshape.org</url>

    <!--
         Define the dependencies. Note that all version and scopes default to
         those defined in the dependencyManagement section of the parent pom.
     -->
    <dependencies>
        <!--
        Testing (note the scope)
        -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
        </dependency>
        <!--
             This is the only module that requires (or should ever require) SLF4j and LOG4j for compiling. All the logger by default
             should have the "test" scope.
          -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>assembly</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <descriptorRefs>
                                <descriptorRef>component-with-dependencies</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-parent</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../modeshape-parent/pom.xml</relativePath>
    </parent>

    <artifactId>modeshape-distribution</artifactId>
    <name>ModeShape Distribution</name>
    <packaging>pom</packaging>

    <dependencies>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-schematic</artifactId>
        </dependency>

        <!-- 
        Both 'modeshape-jcr' and 'modeshape-extractor-tika' depend on Tika, but have different transitive dependencies
        (due to exclusions). Therefore, depend on this directly to pull in all transitive dependences defined in the parent POM.
        And do this before 'modeshape-jcr' pulls in only a subset.
        -->
        <dependency>
          <groupId>org.apache.tika</groupId>
          <artifactId>tika-parsers</artifactId>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-connector-git</artifactId>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-connector-jdbc-metadata</artifactId>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-sequencer-images</artifactId>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-sequencer-mp3</artifactId>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-sequencer-java</artifactId>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-sequencer-msoffice</artifactId>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-sequencer-teiid</artifactId>
        </dependency>
        
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-sequencer-text</artifactId>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-sequencer-xml</artifactId>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-sequencer-xsd</artifactId>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-sequencer-wsdl</artifactId>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-sequencer-sramp</artifactId>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-sequencer-zip</artifactId>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-sequencer-ddl</artifactId>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-extractor-tika</artifactId>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jdbc-local</artifactId>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jbossas-subsystem</artifactId>
        </dependency>

    </dependencies>

    <profiles>
        <profile>
            <id>assembly</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.modeshape</groupId>
                    <artifactId>modeshape-common</artifactId>
                    <version>${project.version}</version>
                    <classifier>component-with-dependencies</classifier>
                    <type>zip</type>
                </dependency>

                <dependency>
                    <groupId>org.modeshape</groupId>
                    <artifactId>modeshape-jcr-api</artifactId>
                    <version>${project.version}</version>
                    <classifier>component-with-dependencies</classifier>
                    <type>zip</type>
                </dependency>

                <dependency>
                    <groupId>org.modeshape</groupId>
                    <artifactId>modeshape-schematic</artifactId>
                    <classifier>component-with-dependencies</classifier>
                    <version>${project.version}</version>
                    <type>zip</type>
                </dependency>

                <dependency>
                    <groupId>org.modeshape</groupId>
                    <artifactId>modeshape-jcr</artifactId>
                    <classifier>component-with-dependencies</classifier>
                    <version>${project.version}</version>
                    <type>zip</type>
                </dependency>

                <dependency>
                    <groupId>org.modeshape</groupId>
                    <artifactId>modeshape-sequencer-images</artifactId>
                    <classifier>module-with-dependencies</classifier>
                    <version>${project.version}</version>
                    <type>zip</type>
                </dependency>

                <dependency>
                    <groupId>org.modeshape</groupId>
                    <artifactId>modeshape-unit-test</artifactId>
                    <classifier>module-with-dependencies</classifier>
                    <version>${project.version}</version>
                    <type>zip</type>
                </dependency>

                <dependency>
                    <groupId>org.modeshape</groupId>
                    <artifactId>modeshape-sequencer-mp3</artifactId>
                    <classifier>module-with-dependencies</classifier>
                    <version>${project.version}</version>
                    <type>zip</type>
                </dependency>

                <dependency>
                    <groupId>org.modeshape</groupId>
                    <artifactId>modeshape-sequencer-java</artifactId>
                    <classifier>module-with-dependencies</classifier>
                    <version>${project.version}</version>
                    <type>zip</type>
                </dependency>

                <dependency>
                    <groupId>org.modeshape</groupId>
                    <artifactId>modeshape-sequencer-msoffice</artifactId>
                    <classifier>module-with-dependencies</classifier>
                    <version>${project.version}</version>
                    <type>zip</type>
                </dependency>

                <dependency>
                    <groupId>org.modeshape</groupId>
                    <artifactId>modeshape-sequencer-teiid</artifactId>
                    <classifier>module-with-dependencies</classifier>
                    <version>${project.version}</version>
                    <type>zip</type>
                </dependency>

                <dependency>
                    <groupId>org.modeshape</groupId>
                    <artifactId>modeshape-sequencer-text</artifactId>
                    <classifier>module-with-dependencies</classifier>
                    <version>${project.version}</version>
                    <type>zip</type>
                </dependency>

                <dependency>
                    <groupId>org.modeshape</groupId>
                    <artifactId>modeshape-sequencer-xml</artifactId>
                    <classifier>module-with-dependencies</classifier>
                    <version>${project.version}</version>
                    <type>zip</type>
                </dependency>

                <dependency>
                    <groupId>org.modeshape</groupId>
                    <artifactId>modeshape-sequencer-xsd</artifactId>
                    <classifier>module-with-dependencies</classifier>
                    <version>${project.version}</version>
                    <type>zip</type>
                </dependency>

                <dependency>
                    <groupId>org.modeshape</groupId>
                    <artifactId>modeshape-sequencer-wsdl</artifactId>
                    <classifier>module-with-dependencies</classifier>
                    <version>${project.version}</version>
                    <type>zip</type>
                </dependency>

                <dependency>
                    <groupId>org.modeshape</groupId>
                    <artifactId>modeshape-sequencer-sramp</artifactId>
                    <classifier>module-with-dependencies</classifier>
                    <version>${project.version}</version>
                    <type>zip</type>
                </dependency>

                <dependency>
                    <groupId>org.modeshape</groupId>
                    <artifactId>modeshape-sequencer-zip</artifactId>
                    <classifier>module-with-dependencies</classifier>
                    <version>${project.version}</version>
                    <type>zip</type>
                </dependency>

                <dependency>
                    <groupId>org.modeshape</groupId>
                    <artifactId>modeshape-sequencer-ddl</artifactId>
                    <classifier>module-with-dependencies</classifier>
                    <version>${project.version}</version>
                    <type>zip</type>
                </dependency>

                <dependency>
                    <groupId>org.modeshape</groupId>
                    <artifactId>modeshape-connector-git</artifactId>
                    <classifier>module-with-dependencies</classifier>
                    <version>${project.version}</version>
                    <type>zip</type>
                </dependency>

                <dependency>
                    <groupId>org.modeshape</groupId>
                    <artifactId>modeshape-extractor-tika</artifactId>
                    <classifier>module-with-dependencies</classifier>
                    <version>${project.version}</version>
                    <type>zip</type>
                </dependency>

                <dependency>
                    <groupId>org.modeshape</groupId>
                    <artifactId>modeshape-web-jcr</artifactId>
                    <classifier>module-with-dependencies</classifier>
                    <version>${project.version}</version>
                    <type>zip</type>
                </dependency>

                <dependency>
                    <groupId>org.modeshape</groupId>
                    <artifactId>modeshape-web-jcr-rest</artifactId>
                    <classifier>module-with-dependencies</classifier>
                    <version>${project.version}</version>
                    <type>zip</type>
                </dependency>

                <dependency>
                    <groupId>org.modeshape</groupId>
                    <artifactId>modeshape-web-jcr-rest-client</artifactId>
                    <classifier>module-with-dependencies</classifier>
                    <version>${project.version}</version>
                    <type>zip</type>
                </dependency>

                <dependency>
                    <groupId>org.modeshape</groupId>
                    <artifactId>modeshape-webdav</artifactId>
                    <classifier>module-with-dependencies</classifier>
                    <version>${project.version}</version>
                    <type>zip</type>
                </dependency>

                <dependency>
                    <groupId>org.modeshape</groupId>
                    <artifactId>modeshape-web-jcr-webdav</artifactId>
                    <classifier>module-with-dependencies</classifier>
                    <version>${project.version}</version>
                    <type>zip</type>
                </dependency>
		
                <dependency>
                    <groupId>org.modeshape</groupId>
                    <artifactId>modeshape-web-cmis</artifactId>
                    <classifier>module-with-dependencies</classifier>
                    <version>${project.version}</version>
                    <type>zip</type>
                </dependency>

                <dependency>
                    <groupId>org.modeshape</groupId>
                    <artifactId>modeshape-web-explorer</artifactId>
                    <classifier>module-with-dependencies</classifier>
                    <version>${project.version}</version>
                    <type>zip</type>
                </dependency>

                <dependency>
                    <groupId>org.modeshape</groupId>
                    <artifactId>modeshape-jdbc-local</artifactId>
                    <classifier>module-with-dependencies</classifier>
                    <version>${project.version}</version>
                    <type>zip</type>
                </dependency>

                <dependency>
                    <groupId>org.modeshape</groupId>
                    <artifactId>modeshape-jdbc</artifactId>
                    <classifier>module-with-dependencies</classifier>
                    <version>${project.version}</version>
                    <type>zip</type>
                </dependency>

                <dependency>
                    <groupId>org.modeshape</groupId>
                    <artifactId>modeshape-jca</artifactId>
                    <classifier>module-with-dependencies</classifier>
                    <version>${project.version}</version>
                    <type>zip</type>
                </dependency>

                <!--The client artifact is produced during the assembly profile, by the modeshape-jdbc profile -->
                <dependency>
                    <groupId>org.modeshape</groupId>
                    <artifactId>${client.artifactId}</artifactId>
                    <version>${project.version}</version>
                </dependency>

                <dependency>
                    <groupId>org.modeshape</groupId>
                    <artifactId>modeshape-jbossas-subsystem</artifactId>
                    <version>${project.version}</version>
                </dependency>

                <dependency>
                    <groupId>org.modeshape.demo</groupId>
                    <artifactId>modeshape-sequencers-demo</artifactId>
                    <classifier>example-with-dependencies</classifier>
                    <version>${project.version}</version>
                    <type>zip</type>
                </dependency>

                <dependency>
                    <groupId>org.modeshape.demo</groupId>
                    <artifactId>modeshape-embedded-repo-demo</artifactId>
                    <classifier>example-with-dependencies</classifier>
                    <version>${project.version}</version>
                    <type>zip</type>
                </dependency>

                <!-- 
                Hack: Need to include these 'provided' dependencies and force 'compile' scope, because of a JavaDoc plugin issue;
                see http://jira.codehaus.org/browse/MJAVADOC-340 and other workarounds below
                -->
                <dependency>
                  <groupId>org.mongodb</groupId>
                  <artifactId>mongo-java-driver</artifactId>
                  <version>${mongo.driver.version}</version>
                  <scope>compile</scope>
                </dependency>
                <dependency>
                    <groupId>org.wildfly</groupId>
                    <artifactId>wildfly-controller</artifactId>
                    <version>${jboss.server.version}</version>
                    <scope>compile</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <!-- 
                        We're building JavaDoc in one pass, using dependencies of this module, versus building aggregates
                        that involve forking a full JavaDoc build of all modules within this module. One pass is not only
                        a lot faster, but it also is compatible with Mead builds for productization. The only issue is
                        that some 'provided' dependencies need to be hacked (see above).
                        -->
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>${version.javadoc.plugin}</version>
                                
                        <configuration>
                            <includeDependencySources>true</includeDependencySources>
                            <failOnError>true</failOnError>
                            <dependencySourceIncludes>
                                <!-- We only want JavaDoc for the modules with a groupId of "org.modeshape" -->
                                <dependencySourceInclude>org.modeshape:*</dependencySourceInclude>
                            </dependencySourceIncludes>
                            <dependencySourceExcludes>
                                <!-- But want to exclude modules like demos and tests -->
                                <dependencySourceExclude>org.modeshape.demo:*</dependencySourceExclude>
                                <dependencySourceExclude>org.modeshape:modeshape-integration-tests:*</dependencySourceExclude>
                                <dependencySourceExclude>org.modeshape:modeshape-jbossas-integration-tests:*</dependencySourceExclude>
                                <dependencySourceExclude>org.modeshape:*:test:*</dependencySourceExclude>
                                <dependencySourceExclude>org.modeshape:modeshape-client:*</dependencySourceExclude>
                            </dependencySourceExcludes>

                            <links>
                              <link>http://docs.oracle.com/javase/7/docs/api/</link>
                              <link>http://docs.oracle.com/javaee/7/api/</link>
                              <link>http://www.slf4j.org/apidocs/</link>
                              <link>http://www.day.com/maven/javax.jcr/javadocs/jcr-2.0/</link>
                              <link>http://api.mongodb.org/java/${mongo.driver.version}/</link>
                              <link>https://docs.jboss.org/infinispan/6.0/apidocs/</link>
                            </links>
                            <groups>
                              <group>
                                <title>ModeShape API (extends JCR API)</title>
                                <packages>org.modeshape.jcr.api:org.modeshape.jcr.api.monitor*:org.modeshape.jcr.api.nodetype*:org.modeshape.jcr.api.observation*:org.modeshape.jcr.api.query*:org.modeshape.jcr.api.value*</packages>
                              </group>
                              <group>
                                <title>ModeShape JDBC Driver</title>
                                <packages>org.modeshape.jdbc*</packages>
                              </group>
                              <group>
                                <title>ModeShape engine</title>
                                <packages>org.modeshape.jcr*:org.modeshape.jcr.bus*:org.modeshape.jcr.cache*:org.modeshape.jcr.clustering*:org.modeshape.jcr.query*:org.modeshape.jcr.security*:org.modeshape.jcr.sequencer*:org.modeshape.jcr.text*:org.modeshape.jcr.value*</packages>
                              </group>
                              <group>
                                <title>ModeShape SPI for Extensions</title>
                                <packages>org.modeshape.jcr.spi.*:org.modeshape.jcr.federation.spi.*:org.modeshape.jcr.api.sequencer*:org.modeshape.jcr.api.mimetype*:org.modeshape.jcr.api.text*</packages>
                              </group>
                              <group>
                                <title>ModeShape Provided Sequencers</title>
                                <packages>org.modeshape.sequencer*</packages>
                              </group>
                              <group>
                                <title>ModeShape Provided Connectors</title>
                                <packages>org.modeshape.connector*</packages>
                              </group>
                              <group>
                                <title>ModeShape Provided Mime Type Detectors</title>
                                <packages>org.modeshape.jcr.mimetype*</packages>
                              </group>
                              <group>
                                <title>ModeShape Provided Text Extractors</title>
                                <packages>org.modeshape.extractor*</packages>
                              </group>
                              <group>
                                <title>ModeShape Web services</title>
                                <packages>org.modeshape.web*</packages>
                              </group>
                              <group>
                                <title>ModeShape Subsystem for AS7</title>
                                <packages>org.modeshape.jboss.*</packages>
                              </group>
                            </groups>
                            <excludePackageNames>org.modeshape.test*:org.modeshape.demo*</excludePackageNames>
                            <attach>false</attach>
                            <useStandardDocletOptions>true</useStandardDocletOptions>
                            <charset>UTF-8</charset>
                            <docencoding>UTF-8</docencoding>
                            <encoding>UTF-8</encoding>
                            <locale>en_US</locale>
                            <breakiterator>true</breakiterator>
                            <version>true</version>
                            <author>false</author>
                            <keywords>true</keywords>
                            <overview>${basedir}/src/javadoc/overview.html</overview>
                            <maxmemory>1024m</maxmemory>
                        </configuration>

                        <executions>
                            <execution>
                                <id>javadoc-all</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>javadoc</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/api</outputDirectory>
                                    <reportOutputDirectory>${project.build.directory}/api</reportOutputDirectory>
                                    <destDir>api</destDir>
                                    <doctitle>${project.name} Library Reference (${project.version})</doctitle>
                                    <windowtitle>${project.name} Library Reference (${project.version})</windowtitle>
                                    <detectOfflineLinks>false</detectOfflineLinks>
                                </configuration>
                            </execution>
                        </executions>

                    </plugin>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <finalName>modeshape-${project.version}</finalName>
                            <descriptorRefs>
                                <descriptorRef>binary-distribution</descriptorRef>
                                <descriptorRef>source-distribution</descriptorRef>
                                <descriptorRef>${jboss.kit.distribution.id}</descriptorRef>
                            </descriptorRefs>
                            <descriptors>
                                <descriptor>src/assembly/javadoc.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </plugin>

                </plugins>
            </build>
        </profile>
        <profile>
            <!--
              This profile is enabled by default and only builds the distributions required 
              by the integration tests.
            -->
            <id>integration</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <finalName>modeshape-${project.version}</finalName>
                            <descriptorRefs>
                                <descriptorRef>${jboss.kit.distribution.id}</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-parent</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../modeshape-parent/pom.xml</relativePath>
    </parent>

    <artifactId>modeshape-jca-rar</artifactId>
    <packaging>rar</packaging>
    <name>ModeShape JCR-JCA Adapter RAR</name>
    <description>JCA Resource adapter RAR</description>
    <url>http://www.modeshape.org</url>

    <dependencies>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jca</artifactId>
        </dependency>
    </dependencies>
    <build>
        <finalName>modeshape-jca</finalName>
        <plugins>
            <!--Do not produce any test jar-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <useDefaultManifestFile>true</useDefaultManifestFile>
                </configuration>
                <executions>
                    <execution>
                        <id>test-jar</id>
                        <phase>non-existent</phase>
                    </execution>
                </executions>
            </plugin>
            <!-- Skip any source generation -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                        <phase>non-existent</phase>
                    </execution>
                    <execution>
                        <id>attach-test-sources</id>
                        <goals>
                            <goal>test-jar-no-fork</goal>
                        </goals>
                        <phase>non-existent</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-rar-plugin</artifactId>
                <configuration>
                    <raXmlFile>src/main/resources/META-INF/ra.xml</raXmlFile>
                </configuration>
            </plugin>
            <!--
              No tests
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-parent</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../modeshape-parent/pom.xml</relativePath>
    </parent>

    <artifactId>modeshape-jca</artifactId>
    <packaging>jar</packaging>
    <name>ModeShape JCR-JCA Adapter API</name>
    <description>JCA Resource adapter implementation</description>
    <url>http://www.modeshape.org</url>

    <dependencies>
        <dependency>
            <groupId>javax.jcr</groupId>
            <artifactId>jcr</artifactId>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.spec.javax.resource</groupId>
            <artifactId>jboss-connector-api_1.7_spec</artifactId>
        </dependency>
        <!--
        Testing (note the scope)
        -->
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.ironjacamar</groupId>
            <artifactId>ironjacamar-common-impl-papaki</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.ironjacamar</groupId>
            <artifactId>ironjacamar-depchain</artifactId>
            <scope>test</scope>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>org.jboss.ironjacamar</groupId>
            <artifactId>ironjacamar-deployers-common</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.ironjacamar</groupId>
            <artifactId>ironjacamar-deployers-fungal</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.ironjacamar</groupId>
            <artifactId>ironjacamar-embedded-arquillian</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.ironjacamar</groupId>
            <artifactId>ironjacamar-embedded</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <!--Overwrite this plugin from parent, to avoid it requiring a MANIFEST.MF file -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <useDefaultManifestFile>true</useDefaultManifestFile>
                </configuration>
                <executions>
                    <execution>
                        <id>test-jar</id>
                        <phase>non-existent</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>assembly</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <descriptorRefs>
                                <descriptorRef>module-with-dependencies</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <repositories>
        <repository>
            <id>jboss</id>
            <url>http://repository.jboss.org/nexus/content/groups/public</url>
        </repository>
        <repository>
            <id>fungal</id>
            <url>https://repository.jboss.org/nexus/content/repositories/thirdparty-uploads/</url>
        </repository>
    </repositories>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-parent</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../modeshape-parent/pom.xml</relativePath>
    </parent>

    <!-- The groupId and version values are inherited from parent -->
    <artifactId>modeshape-jcr-api</artifactId>
    <packaging>jar</packaging>
    <name>ModeShape Repository API</name>
    <description>ModeShape JCR Repository API</description>
    <url>http://www.modeshape.org</url>

    <!--
    Define the dependencies.  Note that all version and scopes default to those
    defined in the dependencyManagement section of the parent pom.
    -->
    <dependencies>
        <!--
          Java Content Repository API
        -->
        <dependency>
            <groupId>javax.jcr</groupId>
            <artifactId>jcr</artifactId>
        </dependency>

        <!--
        These following are defined as 'provided' in the parent POM, since ModeShape
        has code that is optional if these APIs are available.
        -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>

        <!-- See MODE-1140 -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
    </dependencies>

   <build>
        <resources>
            <resource>
                <filtering>false</filtering>
                <directory>src/main/resources</directory>
                <includes>
                    <include>*</include>
                    <include>**/*</include>
                </includes>
            </resource>
        </resources>
    </build>
    <profiles>
        <profile>
            <id>assembly</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <descriptorRefs>
                                <descriptorRef>component-with-dependencies</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-parent</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../modeshape-parent</relativePath>
    </parent>

    <!-- The groupId and version values are inherited from parent -->
    <artifactId>modeshape-jcr-tck</artifactId>
    <packaging>jar</packaging>
    <name>ModeShape JCR Compatibility Unit Tests</name>
    <description>ModeShape unit tests to check compatibility with the JCR 2.0 API. This does NOT use the official TCK.</description>
    <url>http://www.modeshape.org</url>

    <!--
    Define the dependencies.  Note that all version and scopes default to those
    defined in the dependencyManagement section of the parent pom.
    -->
    <dependencies>
        <!-- This is first so that we load the configuration files from the JCR test classpath first -->
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
        </dependency>
        <!--
        Testing (note the scope)
        -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <!--
        Logging (require SLF4J API for compiling, but use Log4J and its SLF4J binding for testing)
        -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>

        <!--
          Java Content Repository API
        -->
        <dependency>
            <groupId>javax.jcr</groupId>
            <artifactId>jcr</artifactId>
            <scope>test</scope>
        </dependency>
        <!--
          Apache JCR API unit tests (for any JCR implementation), which is a subset of the official TCK
        -->
        <dependency>
            <groupId>org.apache.jackrabbit</groupId>
            <artifactId>jackrabbit-jcr-tests</artifactId>
        </dependency>
        <!--
        PicketBox (JAAS implementation used in test cases)
        -->
        <dependency>
            <groupId>org.picketbox</groupId>
            <artifactId>picketbox-bare</artifactId>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <!--Disable JAR packaging because there aren't any sources-->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <id>test-jar</id>
                        <phase>non-existant</phase>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
                <!--Used so that OSGI information can be added without changing the packaging type-->
                <configuration>
                    <skipIfEmpty>true</skipIfEmpty>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <!--Disable bundle packaging because there aren't any sources-->
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>non-existant</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-parent</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../modeshape-parent/pom.xml</relativePath>
    </parent>

    <!-- The groupId and version values are inherited from parent -->
    <artifactId>modeshape-jcr</artifactId>
    <packaging>jar</packaging>
    <name>ModeShape JCR Repository</name>
    <description>ModeShape implementation of the JCR API</description>
    <url>http://www.modeshape.org</url>

    <!--
      Define the dependencies. Note that all version and scopes default to those defined in the dependencyManagement section of the
      parent pom.
    -->
    <dependencies>
        <!-- Public API (beyond JCR 2.0) -->
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr-api</artifactId>
        </dependency>
        <!-- This should eventually get refactored into this project -->
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
        </dependency>
        <!-- Infinispan -->
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-schematic</artifactId>
        </dependency>
        <!--Event bus clustering. Note the scope in the parent (provided) - this should be optional from a MS perspective -->
        <dependency>
            <groupId>org.jgroups</groupId>
            <artifactId>jgroups</artifactId>
        </dependency>
        <!-- Heap and file-based maps -->
        <dependency>
            <groupId>org.mapdb</groupId>
            <artifactId>mapdb</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.jms</groupId>
            <artifactId>javax.jms-api</artifactId>
        </dependency>

        <!-- MIME-type detection. This can be excluded in applications and components that depend on ModeShape
             if MIME type detection is to be disabled in ModeShape. -->
        <dependency>
            <groupId>org.apache.tika</groupId>
            <artifactId>tika-parsers</artifactId>
            <exclusions>
                <!--
                Exclude a few more things that we don't need for MIME type detection.
                We do this here instead of in the parent POM because the Tika-based
                text extractor will want these.
                -->
                <exclusion>
                    <groupId>org.apache.james</groupId>
                    <artifactId>apache-mime4j-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.james</groupId>
                    <artifactId>apache-mime4j-dom</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.ccil.cowan.tagsoup</groupId>
                    <artifactId>tagsoup</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>asm</groupId>
                    <artifactId>asm</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.pdfbox</groupId>
                    <artifactId>pdfbox</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.googlecode.juniversalchardet</groupId>
                    <artifactId>juniversalchardet</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.geronimo.specs</groupId>
                    <artifactId>geronimo-stax-api_1.0_spec</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.googlecode.mp4parser</groupId>
                    <artifactId>isoparser</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--  Used in tests -->
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-core</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-cachestore-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>c3p0</groupId>
            <artifactId>c3p0</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-cachestore-leveldb</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mongodb</groupId>
            <artifactId>mongo-java-driver</artifactId>
        </dependency>
        <dependency>
            <groupId>de.flapdoodle.embed</groupId>
            <artifactId>de.flapdoodle.embed.mongo</artifactId>
        </dependency>
        
        <!--
        These following are defined as 'provided' in the parent POM, since ModeShape
        has code that is optional if these APIs are available.
        -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.spec.javax.security.jacc</groupId>
            <artifactId>jboss-jacc-api_1.5_spec</artifactId>
        </dependency>

        <!--
            Testing (note the scope)
        -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.jbossts</groupId>
            <artifactId>jbossjta</artifactId>
        </dependency>
        <!--
        Used for Base64 testing. This may overlap or vary with the JBoss AS7 integration, so we fully-specify the version
        we want to use here. It's only to validate our Base64 functionality, so we can use an older version.
        -->
        <dependency>
            <groupId>org.jboss</groupId>
            <artifactId>jboss-common-core</artifactId>
            <version>2.2.17.GA</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.jboss.logging</groupId>
                    <artifactId>jboss-logging-spi</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!--
        Logging (require SLF4J API for compiling, but use Log4J and its SLF4J binding for testing)
        -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>
        <!--
          Apache JCR API unit tests (for any JCR implementation), which is a subset of the official TCK
        -->
        <dependency>
            <groupId>org.apache.jackrabbit</groupId>
            <artifactId>jackrabbit-jcr-tests</artifactId>
        </dependency>
        <!--
          PicketBox (JAAS implementation used in test cases)
          -->
        <dependency>
            <groupId>org.picketbox</groupId>
            <artifactId>picketbox-bare</artifactId>
        </dependency>

        <!--
            Atomikos Transaction Manager (for testing only)
        -->
        <dependency>
            <groupId>com.atomikos</groupId>
            <artifactId>transactions</artifactId>
        </dependency>
        <dependency>
            <groupId>com.atomikos</groupId>
            <artifactId>transactions-jta</artifactId>
        </dependency>
        
        <!-- Cassandra binary storage -->
        <dependency>
            <groupId>com.datastax.cassandra</groupId>
            <artifactId>cassandra-driver-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.cassandra</groupId>
            <artifactId>cassandra-all</artifactId>
        </dependency>
    </dependencies>
    <build>
        <resources>
            <resource>
                <filtering>false</filtering>
                <directory>src/main/resources</directory>
                <includes>
                    <include>*</include>
                    <include>**/*</include>
                </includes>
            </resource>
            <!-- Apply the properties set in the POM to the resource files -->
            <resource>
                <filtering>true</filtering>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/repository.properties</include>
                </includes>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>**/*</include>
                </includes>
                <excludes>
                    <exclude>datasource.properties</exclude>
                </excludes>
            </testResource>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>datasource.properties</include>
                </includes>
            </testResource>
        </testResources>        
    </build>
    <profiles>
        <profile>
            <id>exclude-tck-known-issues</id>
            <activation>
                <property>
                    <name>!runAllTck</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <!--Configure SureFire to use the "known issues" variable which causes certain TCK tests to not be reported as failures -->
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <systemProperties>
                                <property>
                                    <name>known.issues</name>
                                    <value>
                                        <!-- 
                                        List each test method that is not passing because of known issues, where the method is
                                        of the form "package#method". One per line. For example:
                                        org.apache.jackrabbit.test.api.ShareableNodeTest#testModifyDescendantAndSave
                                        -->
                                        org.apache.jackrabbit.test.api.ShareableNodeTesttestSearch
                                        org.apache.jackrabbit.test.api.query.qom.ChildNodeJoinConditionTest#testLeftOuterJoin
                                        org.apache.jackrabbit.test.api.query.qom.DescendantNodeJoinConditionTest#testLeftOuterJoin
                                        org.apache.jackrabbit.test.api.query.qom.EquiJoinConditionTest#testRightOuterJoin1
                                        org.apache.jackrabbit.test.api.query.qom.EquiJoinConditionTest#testRightOuterJoin2
                                        org.apache.jackrabbit.test.api.query.qom.SameNodeJoinConditionTest#testRightOuterJoin
                                        org.apache.jackrabbit.test.api.query.qom.SameNodeJoinConditionTest#testRightOuterJoinWithPath
                                        org.apache.jackrabbit.test.api.query.SQLQueryLevel2Test#testFullTextSearch
                                        org.apache.jackrabbit.test.api.query.SQLQueryLevel2Test#testPathColumn
                                        org.apache.jackrabbit.test.api.query.SQLQueryLevel2Test#testScoreColumn
                                        org.apache.jackrabbit.test.api.query.XPathQueryLevel2Test#testFullTextSearch
                                        org.apache.jackrabbit.test.api.query.XPathQueryLevel2Test#testPathColumn
                                        org.apache.jackrabbit.test.api.query.XPathQueryLevel2Test#testScoreColumn
                                        org.apache.jackrabbit.test.api.query.TextNodeTest#testTextNodeTestContains
                                        org.apache.jackrabbit.test.api.query.qom.FullTextSearchScoreTest#testConstraint
                                        org.apache.jackrabbit.test.api.query.qom.FullTextSearchScoreTest#testOrdering
                                        org.apache.jackrabbit.test.api.ShareableNodeTest#testSearch
                                        org.apache.jackrabbit.test.api.version.RestoreTest#testRestoreName
                                        org.apache.jackrabbit.test.api.version.RestoreTest#testRestoreNameJcr2
                                    </value>
                                </property>
                            </systemProperties>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>assembly</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <descriptorRefs>
                                <descriptorRef>component-with-dependencies</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-parent</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../modeshape-parent/pom.xml</relativePath>
    </parent>

    <!-- The groupId and version values are inherited from parent -->
    <artifactId>modeshape-jdbc-local</artifactId>
    <packaging>jar</packaging>
    <name>ModeShape JDBC Driver (Local)</name>
    <description>JDBC driver to allow clients to use JCR-SQL2 to query a ModeShape JCR repository within the same JVM process.
    </description>
    <url>http://www.modeshape.org</url>
    <!--
      Define the dependencies. Note that all version and scopes default to those defined in the dependencyManagement section of the
      parent pom.
    -->
    <dependencies>
        <dependency>
            <groupId>javax.jcr</groupId>
            <artifactId>jcr</artifactId>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
        </dependency>
        <!--
        Testing (note the scope)
        -->
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-core</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
        </dependency>
        <!--
        Logging (require SLF4J API for compiling, but use Log4J and its SLF4J binding for testing and assume it's supplied at runtime)
        -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>
        <!--
          PicketBox (JAAS implementation used in test cases)
          -->
        <dependency>
            <groupId>org.picketbox</groupId>
            <artifactId>picketbox-bare</artifactId>
        </dependency>
        <!--
          ID Trust (JAAS Dependency) for testing
        -->
    </dependencies>

    <build>
        <resources>
            <resource>
                <filtering>false</filtering>
                <directory>src/main/resources</directory>
                <excludes>
                    <exclude>**/JdbcLocalI18n.properties</exclude>
                </excludes>
            </resource>
            <!-- Apply the properties set in the POM to the resource files -->
            <resource>
                <filtering>true</filtering>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/JdbcLocalI18n.properties</include>
                </includes>
            </resource>
        </resources>
    </build>
    <profiles>
        <profile>
            <id>assembly</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <descriptorRefs>
                                <descriptorRef>module-with-dependencies</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project><?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-parent</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../modeshape-parent/pom.xml</relativePath>
    </parent>

    <!-- The groupId and version values are inherited from parent -->
    <artifactId>modeshape-jdbc</artifactId>
    <packaging>jar</packaging>
    <name>ModeShape JDBC Driver</name>
    <description>JDBC driver to allow clients to use JCR-SQL2 to query a local or remote ModeShape JCR repository.</description>
    <url>http://www.modeshape.org</url>
    <!--
      Define the dependencies. Note that all version and scopes default to those defined in the dependencyManagement section of the
      parent pom.
    -->
    <dependencies>
        <dependency>
            <groupId>javax.jcr</groupId>
            <artifactId>jcr</artifactId>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jdbc-local</artifactId>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-web-jcr-rest-client</artifactId>
        </dependency>
        <!--
        Testing (note the scope)
        -->
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-core</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jdbc-local</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-web-jcr-rest-war</artifactId>
            <type>war</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
        </dependency>
        <!--
          PicketBox (JAAS implementation used in test cases)
          -->
        <dependency>
            <groupId>org.picketbox</groupId>
            <artifactId>picketbox-bare</artifactId>
        </dependency>
        <!--
        Logging (require SLF4J API for compiling, but use Log4J and its SLF4J binding for testing)
        -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <filtering>false</filtering>
                <directory>src/main/resources</directory>
                <includes>
                    <include>*</include>
                    <include>**/*</include>
                </includes>
            </resource>
            <!-- Apply the properties set in the POM to the resource files -->
            <resource>
                <filtering>true</filtering>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/JdbcI18n.properties</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <executions>
                    <!--During the default test phase, excluded the Http tests which will run during the integration phase-->
                    <execution>
                        <!--The id of the default test phase of the maven plugin (do not change) -->
                        <id>default-test</id>
                        <configuration>
                            <excludes>
                                <exclude>**/*Http*Test.java</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                    <!--Execute the Http tests during the integration tests, in a running cargo container -->
                    <execution>
                        <id>integration-tests</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>**/*Http*Test.java</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--Configuration inherited from parent pom -->
            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
                <configuration>
                    <deployables>
                        <!-- application to deploy (brought in as a transitive dependency of modeshape-rest-client -->
                        <deployable>
                            <groupId>org.modeshape</groupId>
                            <artifactId>modeshape-web-jcr-rest-war</artifactId>
                            <type>war</type>
                            <properties>
                                <context>modeshape</context>
                            </properties>
                        </deployable>
                    </deployables>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>assembly</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <executions>
                            <!--This installs a jar which will be unpacked and processed by ANT in the modeshape-client module -->
                            <execution>
                                <id>default</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <attach>true</attach>
                                    <descriptors>
                                        <descriptor>src/assembly/kit.xml</descriptor>
                                    </descriptors>
                                </configuration>
                            </execution>
                            <!--Creates an assembly which will be included in the binary distribution -->
                            <execution>
                                <id>module-with-dependencies</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <descriptorRefs>
                                        <descriptorRef>module-with-dependencies</descriptorRef>
                                    </descriptorRefs>
                                    <archive>
                                        <manifest>
                                            <addClasspath>true</addClasspath>
                                        </manifest>
                                    </archive>
                                    <attach>true</attach>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <groupId>org.jboss</groupId>
        <artifactId>jboss-parent</artifactId>
        <version>9</version>
        <relativePath></relativePath>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <groupId>org.modeshape</groupId>
    <artifactId>modeshape-parent</artifactId>
    <version>4.0-SNAPSHOT</version>
    <name>ModeShape Parent</name>

    <url>http://www.modeshape.org</url>
    <packaging>pom</packaging>
    <description>ModeShape is a JCR repository implementation with support for federation and sequencing.</description>
    <inceptionYear>2008</inceptionYear>

    <organization>
        <name>JBoss, a division of Red Hat</name>
        <url>http://www.jboss.org</url>
    </organization>

    <licenses>
        <license>
            <name>Apache Software License 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <scm>
        <connection>scm:git:git://github.com/ModeShape/modeshape.git</connection>
        <developerConnection>scm:git:git@github.com:ModeShape/modeshape.git</developerConnection>
        <url>http://github.com/ModeShape/modeshape</url>
    </scm>

    <issueManagement>
        <system>jira</system>
        <url>http://issues.jboss.org/browse/MODE</url>
    </issueManagement>

    <developers>
        <developer>
            <name>Randall Hauch</name>
            <id>randall</id>
            <email>rhauch@redhat.com</email>
            <organization>JBoss, a division of Red Hat</organization>
            <roles>
                <role>Project Lead</role>
                <role>Developer</role>
            </roles>
            <timezone>-6</timezone>
        </developer>
        <developer>
            <name>Van Halbert</name>
            <id>vhalbert@redhat.com</id>
            <email>vhalbert@redhat.com</email>
            <organization>JBoss, a division of Red Hat</organization>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>-6</timezone>
        </developer>
        <developer>
            <name>Horia Chiorean</name>
            <id>hchiorea@redhat.com</id>
            <email>hchiorea@redhat.com</email>
            <organization>JBoss, a division of Red Hat</organization>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>+2</timezone>
        </developer>
        <developer>
            <name>Dan Florian</name>
            <id>dan</id>
            <email>dflorian@redhat.com</email>
            <organization>JBoss, a division of Red Hat</organization>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>-5</timezone>
        </developer>
        <developer>
            <name>Stefano Maestri</name>
            <id>stefano</id>
            <email>stefano.maestri@javalinux.it</email>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>+1</timezone>
        </developer>
        <developer>
            <name>Serge Pagop</name>
            <id>spagop</id>
            <email>Serge.Pagop@innoq.com</email>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>+1</timezone>
        </developer>
        <developer>
            <name>Michael Trezzi</name>
            <id>mathwizard</id>
            <email>michael@mathwizard.org</email>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>+1</timezone>
        </developer>
        <developer>
            <name>Alexandre Porcelli</name>
            <id>porcelli</id>
            <email>porcelli@devexp.com.br</email>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>-3</timezone>
        </developer>
        <developer>
            <name>Sergiy Litsenko</name>
            <id>lisbor</id>
            <email>litsenko_sergey@yahoo.com</email>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>+10</timezone>
        </developer>
        <developer>
            <name>Vijay Kiran</name>
            <id>vijay.duvvuri</id>
            <email>mail@vijaykiran.com</email>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>+1</timezone>
        </developer>
        <developer>
            <name>Oleg Kulikov</name>
            <id>okulikov</id>
            <email>okulikov@redhat.com</email>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>+4</timezone>
        </developer>
        <developer>
            <name>Ted Jones</name>
            <id>tejones</id>
            <email>tejones@redhat.com</email>
            <organization>JBoss, a division of Red Hat</organization>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>-6</timezone>
        </developer>
        <developer>
            <name>Barry LaFond</name>
            <id>blafond</id>
            <email>blafond@redhat.com</email>
            <organization>JBoss, a division of Red Hat</organization>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>-6</timezone>
        </developer>
        <developer>
            <name>John Verhaeg</name>
            <id>jverhaeg</id>
            <email>jverhaeg@redhat.com</email>
            <organization>JBoss, a division of Red Hat</organization>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>-6</timezone>
        </developer>
    </developers>

    <contributors>
        <contributor>
            <name>Greg Haber</name>
            <organization>JBoss, a division of Red Hat</organization>
            <timezone>-5</timezone>
        </contributor>
        <contributor>
            <name>George Gastaldi</name>
            <email>gegastaldi@gmail.com</email>
            <timezone>-3</timezone>
        </contributor>
    </contributors>

    <properties>

        <!-- Used to define the JCR Descriptor value -->
        <jcr.repository.vendor>${project.organization.name}</jcr.repository.vendor>
        <jcr.repository.vendor.url>http://www.modeshape.org</jcr.repository.vendor.url>
        <jcr.repository.name>ModeShape</jcr.repository.name>

        <!-- Instruct the build to use only UTF-8 encoding for source code -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!--
              These are properties used in the database profiles. Must initialize
              them to be empty so that Maven applies them via filtering to the
              resources. If a project needs files filtered, however, make sure to
              include a 'testResources' fragment in the 'build' section of the
              child project POM to say which files need to be filtered.
          -->
        <dataSource.maximumConnectionsInPool>2</dataSource.maximumConnectionsInPool>
        <dataSource.minimumConnectionsInPool>1</dataSource.minimumConnectionsInPool>
        <dataSource.numberOfConnectionsToAcquireAsNeeded>1</dataSource.numberOfConnectionsToAcquireAsNeeded>
        <dataSource.maximumSizeOfStatementCache>100</dataSource.maximumSizeOfStatementCache>
        <dataSource.maximumConnectionIdleTimeInSeconds>10</dataSource.maximumConnectionIdleTimeInSeconds>
        <dataSource.retryLimit>0</dataSource.retryLimit>

        <!--By default, we use whatever the underlying machine supports. However, certain sub-modules may change this -->
        <preferIpv4>false</preferIpv4>
        <preferIpv6>true</preferIpv6>
        <debug.argline/>
        <!--
          Global dependency version information
          -->
        <modeshape.java.version>1.7</modeshape.java.version>
        <maven.compiler.source>${modeshape.java.version}</maven.compiler.source>
        <maven.compiler.target>${modeshape.java.version}</maven.compiler.target>
        <checkstyle.version>5.6</checkstyle.version>

        <joda.time.version>1.6.2</joda.time.version>
        <junit.version>4.11</junit.version>
        <hamcrest.version>1.3</hamcrest.version>
        <mockito.all.version>1.8.4</mockito.all.version>
        <slf4j.api.version>1.7.2</slf4j.api.version>
        <slf4j.log4j.version>1.7.2</slf4j.log4j.version>
        <log4j.version>1.2.16</log4j.version>
        <jcr.version>2.0</jcr.version>
        <mapdb.version>0.9.11</mapdb.version>
        <jackrabbit.jcr.tck.version>2.6.0</jackrabbit.jcr.tck.version>
        <jackrabbit.lucene.version>3.6.0</jackrabbit.lucene.version>
        <jbossjta.version>4.16.6.Final</jbossjta.version>
        <atomikos.version>3.8.0</atomikos.version>
        <picketbox.version>4.0.20.Beta2</picketbox.version>
        <lucene.version>3.6.2</lucene.version>
        <lucene.regex.version>3.0.3</lucene.regex.version>

        <infinispan.version>6.0.1.Final</infinispan.version>
        <!--Make sure the jgroups version is the same as the one used by ISPN -->
        <jgroups.version>3.4.1.Final</jgroups.version>
        <c3p0.version>0.9.1.2</c3p0.version>
        <jboss.logging.version>3.1.3.GA</jboss.logging.version>

        <sun.xml.bind.jaxbimpl.version>2.2.5</sun.xml.bind.jaxbimpl.version>
        <jdbc.derby.version>10.8.1.2</jdbc.derby.version>
        <jdbc.hsqldb.version>2.2.9</jdbc.hsqldb.version>
        <jdbc.h2.version>1.3.172</jdbc.h2.version>
        <jdbc.postgresql9.version>9.2-1002.jdbc4</jdbc.postgresql9.version>
        <jdbc.postgresql8.version>8.2-504.jdbc3</jdbc.postgresql8.version>
        <jdbc.mysql5.version>5.1.25</jdbc.mysql5.version>
        <jdbc.db2v9.version>3.58.82</jdbc.db2v9.version>
        <jdbc.db2v9.license.version>3.57.86</jdbc.db2v9.license.version>
        <jdbc.oracle10g.version>10.0.2.0</jdbc.oracle10g.version>
        <jdbc.oracle11g.version>11.1.0.7.0</jdbc.oracle11g.version>
        <jdbc.sybase15.version>6.0.5</jdbc.sybase15.version>
        <jdbc.mssql2008.version>4.0.2206</jdbc.mssql2008.version>
        <javax.servlet.version>3.1.0</javax.servlet.version>
        <javax.jms.version>2.0</javax.jms.version>
        <javax.jacc.version>1.0.0.Final</javax.jacc.version>
        <resteasy.version>3.0.6.Final</resteasy.version>
        <commons.logging.version>1.1.1</commons.logging.version>
        <commons.naming.version>20031116.223527</commons.naming.version>
        <jettison.version>1.3.1</jettison.version>
        <httpclient.version>4.2.1</httpclient.version>
        <sardine.version>146</sardine.version>
        <javaassist.version>3.11.0.GA</javaassist.version>
        <jaudiotagger.version>2.0.3</jaudiotagger.version>
        <poi.version>3.10-beta1</poi.version>
        <jcommander.version>1.5</jcommander.version>
        <wsdl4j.version>1.6.2</wsdl4j.version>
        <bson4jackson.version>1.1.2</bson4jackson.version>
        <mongo.driver.version>2.7.3</mongo.driver.version>
        <embedmongo.version>1.28</embedmongo.version>
        <json.simple.version>1.1</json.simple.version>
        <logback.version>0.9.29</logback.version>
        <jgit.version>2.1.0.201209190230-r</jgit.version>
        <jgit.jsch.version>0.1.44-1</jgit.jsch.version>
        <eclipse.equinox.common.version>3.3.0-v20070426</eclipse.equinox.common.version>
        <eclipse.jdt.core.version>3.3.0-v_771</eclipse.jdt.core.version>
        <eclipse.core.resources.version>3.3.0-v20070604</eclipse.core.resources.version>
        <eclipse.core.expressions.version>3.3.0-v20070606-0010</eclipse.core.expressions.version>
        <eclipse.core.runtime.version>3.3.100-v20070530</eclipse.core.runtime.version>
        <eclipse.osgi.version>3.3.0-v20070530</eclipse.osgi.version>
        <eclipse.core.jobs.version>3.3.0-v20070423</eclipse.core.jobs.version>
        <eclipse.equinox.registry.version>3.3.0-v20070522</eclipse.equinox.registry.version>
        <eclipse.equinox.preferences.version>3.2.100-v20070522</eclipse.equinox.preferences.version>
        <eclipse.core.contenttype.version>3.2.100-v20070319</eclipse.core.contenttype.version>
        <eclipse.xsd.version>2.2.3</eclipse.xsd.version>
        <eclipse.emf.common.version>2.4.0</eclipse.emf.common.version>
        <eclipse.emf.ecore.version>2.4.2</eclipse.emf.ecore.version>
        <eclipse.emf.ecorechange.version>2.2.3</eclipse.emf.ecorechange.version>
        <eclipse.emf.ecorexmi.version>2.4.1</eclipse.emf.ecorexmi.version>
        <tika.version>1.3</tika.version>
        <image.metadata.extractor>2.6.2</image.metadata.extractor>

        <!-- Apache chemistry version -->
        <chemistry.version>0.10.0</chemistry.version>

        <!-- GWT version -->
        <gwt.version>2.5.1</gwt.version>
        <gwt.maven.plugin.version>${gwt.version}</gwt.maven.plugin.version>

        <!-- Smart GWT version -->
        <smartgwt.version>2.4</smartgwt.version>

        <!--
            JBOSS AS/EAP constants
        -->
        <org.jboss.spec.javax.resource.connector-api.version>1.0.0.Final</org.jboss.spec.javax.resource.connector-api.version>

        <!--Properties which must be used when installing locally a server ZIP distribution -->
        <jboss.server.groupId>org.wildfly</jboss.server.groupId>
        <jboss.server.artifactId>wildfly-dist</jboss.server.artifactId>
        <jboss.server.artifact.type>tar.gz</jboss.server.artifact.type>
        <jboss.server.version>8.0.0.Final</jboss.server.version>
        <jboss.server.root.folder>wildfly-8.0.0.Final</jboss.server.root.folder>

        <!--The root folder under EAP/AS where the ModeShape & related modules should be placed-->
        <jboss.kit.modules.location>modules</jboss.kit.modules.location>

        <!-- The id of the maven distribution which is building the current kit -->
        <jboss.kit.distribution.id>jboss-wf8-dist</jboss.kit.distribution.id>

         <!--Versions used by the integration/kit tests an -->
        <jboss-javaee-6.0-with-tools.version>1.0.7.Final</jboss-javaee-6.0-with-tools.version>

        <!--
          Maven plugin versions
          -->
        <cargo.container>jetty9x</cargo.container>
        <maven.codehaus.cargo.plugin.version>1.4.6</maven.codehaus.cargo.plugin.version>
        <version.jar.plugin>2.4</version.jar.plugin>
        <version.javadoc.plugin>2.9</version.javadoc.plugin>
        <version.bundle.plugin>2.3.7</version.bundle.plugin>
        <version.failsafe.plugin>2.13</version.failsafe.plugin>
        <version.gwt.maven.plugin>2.5.1</version.gwt.maven.plugin>
        <version.checkstyle.maven.plugin>2.10</version.checkstyle.maven.plugin>

        <!--The name of the modeshape-client artifact used by tools-->
        <client.artifactId>modeshape-client</client.artifactId>

	   <!-- IronJacamar container -->
        <version.org.jboss.ironjacamar>1.0.13.Final</version.org.jboss.ironjacamar>

        <!--Skip long running tests by default-->
        <skipLongRunningTests>true</skipLongRunningTests>
        <cassandra-cql-driver>2.0.0-rc2</cassandra-cql-driver>
        <cassandra.all.version>2.0.3</cassandra.all.version>
    </properties>

    <profiles>

        <!--
              ###################################################################
              Clustering-related profiles
              ###################################################################

              To use, specify "-DpreferIpv6" or "-DpreferIpv4" on the Maven command line,
              depending upon your environment's network configuration.
          -->
        <profile>
            <id>preferIpv6</id>
            <activation>
                <property>
                    <name>preferIpv6</name>
                </property>
            </activation>
            <properties>
                <preferIpv4>false</preferIpv4>
                <preferIpv6>true</preferIpv6>
            </properties>
        </profile>
        <profile>
            <id>preferIpv4</id>
            <activation>
                <property>
                    <name>preferIpv4</name>
                </property>
            </activation>
            <properties>
                <preferIpv4>true</preferIpv4>
                <preferIpv6>false</preferIpv6>
            </properties>
        </profile>

        <!--
              ###################################################################
              Enable remotely debugging on the command line
              ###################################################################

              To use, specify "-Ddebug=true" on the Maven command line
              (typically used when running a single test). Then, start
              remote debugger (on port 1044) and connect.
          -->
        <profile>
            <id>debug</id>
            <activation>
                <property>
                    <name>debug</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
                <!-- Useful for remotely debugging the unit tests run by Surefire ... -->
                <debug.argline>-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=1044</debug.argline>
            </properties>
        </profile>

        <!--
            ###################################################################
            Database profiles to specify which DBMS is used for tests.
            ###################################################################
        -->

        <!-- The default test environment is H2 -->
        <profile>
            <id>default_dbms</id>
            <activation>
                <property>
                    <name>!database</name>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>com.h2database</groupId>
                    <artifactId>h2</artifactId>
                    <version>${jdbc.h2.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <properties>
                <database>h2</database>
                <dataSource.driverClassName>org.h2.Driver</dataSource.driverClassName>
                <dataSource.url>jdbc:h2:mem:${project.build.directory}/db/h2/modeshape</dataSource.url>
                <dataSource.username>sa</dataSource.username>
                <dataSource.password/>
            </properties>
        </profile>

        <!-- The HSQLDB test environment -->
        <profile>
            <id>hsqldb</id>
            <activation>
                <property>
                    <name>database</name>
                    <value>hsqldb</value>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>hsqldb</groupId>
                    <artifactId>hsqldb</artifactId>
                    <version>${jdbc.hsqldb.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <properties>
                <database>hsqldb</database>
                <dataSource.driverClassName>org.hsqldb.jdbcDriver</dataSource.driverClassName>
                <dataSource.url>jdbc:hsqldb:mem:modeshape</dataSource.url>
                <dataSource.username>sa</dataSource.username>
                <dataSource.password />
            </properties>
        </profile>

        <!-- The MySQL5 test environment -->
        <profile>
            <id>mysql5</id>
            <activation>
                <property>
                    <name>database</name>
                    <value>mysql5</value>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>mysql</groupId>
                    <artifactId>mysql-connector-java</artifactId>
                    <version>${jdbc.mysql5.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <properties>
                <database>mysql5</database>
                <dataSource.dialect>org.hibernate.dialect.MySQL5InnoDBDialect</dataSource.dialect>
                <dataSource.driverClassName>com.mysql.jdbc.Driver</dataSource.driverClassName>
                <dataSource.url>jdbc:mysql://vmg02.mw.lab.eng.bos.redhat.com/modeshape</dataSource.url>
                <dataSource.username>modeshape</dataSource.username>
                <dataSource.password>modeshape</dataSource.password>
            </properties>
        </profile>

        <profile>
            <id>mysql5_local</id>
            <activation>
                <property>
                    <name>database</name>
                    <value>mysql5</value>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>mysql</groupId>
                    <artifactId>mysql-connector-java</artifactId>
                    <version>${jdbc.mysql5.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <properties>
                <database>mysql5</database>
                <dataSource.dialect>org.hibernate.dialect.MySQL5InnoDBDialect</dataSource.dialect>
                <dataSource.driverClassName>com.mysql.jdbc.Driver</dataSource.driverClassName>
                <dataSource.url>jdbc:mysql://localhost:3306/modeshape</dataSource.url>
                <dataSource.username>root</dataSource.username>
                <dataSource.password></dataSource.password>
            </properties>
        </profile>

        <!-- The PostgreSQL test environment -->
        <profile>
            <id>postgresql8</id>
            <activation>
                <property>
                    <name>database</name>
                    <value>postgresql8</value>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>postgresql</groupId>
                    <artifactId>postgresql</artifactId>
                    <version>${jdbc.postgresql8.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <properties>
                <database>postgresql8</database>
                <dataSource.driverClassName>org.postgresql.Driver</dataSource.driverClassName>
                <dataSource.url>jdbc:postgresql://localhost:5432/modeshape</dataSource.url>
                <dataSource.username>postgres</dataSource.username>
                <dataSource.password>postgres</dataSource.password>
            </properties>
        </profile>

        <profile>
            <id>postgresql9_local</id>
            <activation>
                <property>
                    <name>database</name>
                    <value>postgresql9</value>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>postgresql</groupId>
                    <artifactId>postgresql</artifactId>
                    <version>${jdbc.postgresql9.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <properties>
                <database>postgresql9</database>
                <dataSource.dialect>org.hibernate.dialect.PostgreSQLDialect</dataSource.dialect>
                <dataSource.driverClassName>org.postgresql.Driver</dataSource.driverClassName>
                <dataSource.url>jdbc:postgresql://localhost:5432/modeshape</dataSource.url>
                <dataSource.username>postgres</dataSource.username>
                <dataSource.password>postgres</dataSource.password>
            </properties>
        </profile>

        <!-- The Oracle10g test environment -->
        <profile>
            <id>oracle10g</id>
            <activation>
                <property>
                    <name>database</name>
                    <value>oracle10g</value>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>com.oracle</groupId>
                    <artifactId>ojdbc14</artifactId>
                    <version>${jdbc.oracle10g.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <properties>
                <database>oracle10g</database>
                <dataSource.dialect>org.hibernate.dialect.Oracle10gDialect</dataSource.dialect>
                <dataSource.driverClassName>oracle.jdbc.driver.OracleDriver</dataSource.driverClassName>
                <dataSource.url>jdbc:oracle:thin:@vmg05.mw.lab.eng.bos.redhat.com:1521:QAORA10</dataSource.url>
                <dataSource.username>modeshape</dataSource.username>
                <dataSource.password>modeshape</dataSource.password>
            </properties>
        </profile>

        <!-- The Oracle11g test environment -->
        <profile>
            <id>oracle11g</id>
            <activation>
                <property>
                    <name>database</name>
                    <value>oracle11g</value>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>com.oracle</groupId>
                    <artifactId>ojdbc6</artifactId>
                    <version>${jdbc.oracle11g.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <properties>
                <database>oracle11g</database>
                <dataSource.driverClassName>oracle.jdbc.driver.OracleDriver</dataSource.driverClassName>
                <dataSource.url>jdbc:oracle:thin:@dev04.mw.lab.eng.bos.redhat.com:1521:qaora11</dataSource.url>
                <dataSource.username>modeshape</dataSource.username>
                <dataSource.password>modeshape</dataSource.password>
            </properties>
        </profile>

        <!-- The Sybase 15 test environment -->
        <profile>
            <id>sybase15</id>
            <activation>
                <property>
                    <name>database</name>
                    <value>sybase15</value>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>com.sybase</groupId>
                    <artifactId>jconnect</artifactId>
                    <version>${jdbc.sybase15.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <properties>
                <database>sybase15</database>
                <dataSource.dialect>org.hibernate.dialect.SybaseDialect</dataSource.dialect>
                <dataSource.driverClassName>com.sybase.jdbc3.jdbc.SybDriver</dataSource.driverClassName>
                <dataSource.url>jdbc:sybase:Tds:vmg07.mw.lab.eng.bos.redhat.com:5000/modeshape</dataSource.url>
                <dataSource.username>modeshape</dataSource.username>
                <dataSource.password>modeshape</dataSource.password>
            </properties>
        </profile>

        <!-- The SQLServer2008 (MS JDBC) test environment -->
        <profile>
            <id>mssql2008</id>
            <activation>
                <property>
                    <name>database</name>
                    <value>mssql2008</value>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>com.microsoft.sqlserver</groupId>
                    <artifactId>msjdbc</artifactId>
                    <version>${jdbc.mssql2008.version}</version>
                    <classifier>4</classifier>
                    <!--
                        Must use the JDBC-4 driver on JDK6
                    -->
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <properties>
                <database>mssql2008</database>
                <metadata.collectorClassName>org.modeshape.connector.meta.jdbc.SqlServerMetadataCollector</metadata.collectorClassName>
                <dataSource.dialect>org.hibernate.dialect.SQLServerDialect</dataSource.dialect>
                <dataSource.driverClassName>com.microsoft.sqlserver.jdbc.SQLServerDriver</dataSource.driverClassName>
                <dataSource.url>jdbc:sqlserver://vmg04.mw.lab.eng.bos.redhat.com</dataSource.url>
                <dataSource.username>modeshape</dataSource.username>
                <dataSource.password>modeshape</dataSource.password>
            </properties>
        </profile>

        <!--These profiles must have the same ID as the ones from the root pom-->
        <profile>
            <id>assembly</id>
            <properties>
                <skipLongRunningTests>false</skipLongRunningTests>
            </properties>
        </profile>

        <profile>
            <id>performance</id>
            <properties>
                <skipLongRunningTests>false</skipLongRunningTests>
            </properties>
        </profile>
    </profiles>

    <build>
        <!--
              This section defines the default plugin settings inherited by child
              projects.
          -->
        <pluginManagement>
            <plugins>
                <!--
                        Fixes how test resources of a project can be used in projects
                        dependent on it
                    -->
                <plugin>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>maven-bundle-plugin</artifactId>
                    <extensions>true</extensions>
                    <configuration>
                        <instructions>
                            <Export-Package>org.modeshape.*</Export-Package>
                        </instructions>
                    </configuration>
                </plugin>

                <plugin>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <dependencies>
                        <dependency>
                            <groupId>org.modeshape</groupId>
                            <artifactId>modeshape-assembly-descriptors</artifactId>
                            <version>${project.version}</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>single</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.cargo</groupId>
                    <artifactId>cargo-maven2-plugin</artifactId>
                    <version>${maven.codehaus.cargo.plugin.version}</version>
                    <executions>
                        <execution>
                            <id>start-container</id>
                            <phase>pre-integration-test</phase>
                            <goals>
                                <goal>start</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>stop-container</id>
                            <phase>post-integration-test</phase>
                            <goals>
                                <goal>stop</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <skip>${skipTests}</skip>
                        <container>
                            <containerId>${cargo.container}</containerId>
                            <log>${project.build.directory}/cargo.log</log>
                            <home>${project.build.directory}/cargo</home>
                            <type>embedded</type>
                        </container>
                        <configuration >
                            <properties>
                                <cargo.logging>high</cargo.logging>
                                <cargo.servlet.users>dnauser:password:connect,readwrite,admin|unauthorized:password:bogus</cargo.servlet.users>
                                <cargo.servlet.port>8090</cargo.servlet.port>
                            </properties>
                        </configuration>
                        <deployables>
                            <deployable>
                                <properties>
                                    <context>${project.build.finalName}</context>
                                </properties>
                            </deployable>
                        </deployables>
                    </configuration>
                </plugin>

                <!--
                    Inform m2e to ignore build errors. These errors started occurring after upgrading to Eclipse Indigo (3.7). This
                    issue is discussed/solved here: http://stackoverflow.com/questions/8706017/maven-dependency-plugin-goals-copy-dependencies-unpack-is-not-supported-b
                -->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <!-- copy-dependency plugin -->
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-dependency-plugin</artifactId>
                                        <versionRange>[1.0.0,)</versionRange>
                                        <goals>
                                            <goal>copy-dependencies</goal>
                                            <goal>unpack</goal>
                                         </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore />
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>gwt-maven-plugin</artifactId>
                    <version>${version.gwt.maven.plugin}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <!-- Specify the compiler options and settings -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${modeshape.java.version}</source>
                    <target>${modeshape.java.version}</target>
                    <showDeprecation>false</showDeprecation>
                    <showWarnings>false</showWarnings>
                </configuration>
            </plugin>
            <!-- Produce source jars during package and test-source jars during the 'verify' phase -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                    <id>attach-sources</id>
                    <goals>
                        <goal>jar-no-fork</goal>
                    </goals>
                    </execution>
                    <execution>
                        <id>attach-test-sources</id>
                        <goals>
                            <goal>test-jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <!-- Manually specify the JUnit provider; see MODE-1140 -->
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <!--artifactId>surefire-junit47</artifactId-->
                        <artifactId>surefire-junit4</artifactId>
                        <!--artifactId>surefire-junit3</artifactId-->
                        <version>${version.surefire.plugin}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <systemProperties combine.children="append">
                        <property>
                            <name>java.io.tmpdir</name>
                            <value>${basedir}/target</value>
                        </property>
                        <property>
                            <name>java.net.preferIPv4Stack</name>
                            <value>${preferIpv4}</value>
                        </property>
                        <property>
                            <name>java.net.preferIPv6Addresses</name>
                            <value>${preferIpv6}</value>
                        </property>
                        <property>
                            <name>skipLongRunningTests</name>
                            <value>${skipLongRunningTests}</value>
                        </property>
                    </systemProperties>
                    <argLine>-Xmx1524M ${debug.argline} -XX:MaxPermSize=256M -Xss1024k -Djava.awt.headless=true</argLine>
                    <runOrder>alphabetical</runOrder>
                    <useFile>false</useFile>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
            </plugin>

            <!--
                   Build a test-jar for each project, so that src/test/* resources and
                   classes can be used in other projects. Also customize how the jar
                   files are assembled.
               -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <id>test-jar</id>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
                <!--Used so that OSGI information can be added without changing the packaging type-->
                <configuration>
                    <skipIfEmpty>true</skipIfEmpty>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>
            <!--Add OSGI metadata to manifest-->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${version.checkstyle.maven.plugin}</version><!--$NO-MVN-MAN-VER$-->
                <dependencies>
                    <dependency>
                        <groupId>org.modeshape</groupId>
                        <artifactId>modeshape-checkstyle</artifactId>
                        <version>${project.version}</version>
                     </dependency>
                </dependencies>
                <configuration>
                   <configLocation>checkstyle.xml</configLocation>
                   <consoleOutput>true</consoleOutput>
                   <failsOnError>true</failsOnError>
                   <linkXRef>false</linkXRef>
                   <violationSeverity>error</violationSeverity>
                   <includeTestSourceDirectory>true</includeTestSourceDirectory>
                </configuration>
                <executions>
                   <execution>
                      <id>check-style</id>
                      <phase>verify</phase>
                      <goals>
                         <goal>checkstyle</goal>
                      </goals>
                   </execution>
                </executions>
             </plugin>
        </plugins>
    </build>

    <!--
         This section defines the default dependency settings inherited by
         child projects. Note that this section does not add dependencies, but
         rather provide default settings.
     -->
    <dependencyManagement>
        <dependencies>
            <!-- ModeShape subprojects -->
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-jcr</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-schematic</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-jcr-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-jcr-tck</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-connector-git</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-connector-jdbc-metadata</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-ddl</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-images</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-java</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-mp3</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-msoffice</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-sramp</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-teiid</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-text</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-xml</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-xsd</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-wsdl</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-zip</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-extractor-tika</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-web-jcr-rest</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-web-jcr-rest-client</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-web-jcr-rest-war</artifactId>
                <version>${project.version}</version>
                <type>war</type>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-web-jcr</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-webdav</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-webdav-war</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-web-jcr-webdav</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-web-jcr-webdav-war</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-jdbc-local</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-jdbc</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-jca</artifactId>
                <version>${project.version}</version>
            </dependency>
           <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-jbossas-subsystem</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-unit-test</artifactId>
                <version>${project.version}</version>
                <scope>test</scope>
            </dependency>
            <!--
                ModeShape test modules
            -->
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-common</artifactId>
                <version>${project.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-jcr</artifactId>
                <version>${project.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-webdav-war</artifactId>
                <version>${project.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-web-jcr-webdav</artifactId>
                <version>${project.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-web-jcr-webdav-war</artifactId>
                <version>${project.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-jdbc-local</artifactId>
                <version>${project.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-jdbc</artifactId>
                <version>${project.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
            <!--
                Servlet, JAAC, and JCA APIs
            -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${javax.servlet.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.jboss.spec.javax.security.jacc</groupId>
                <artifactId>jboss-jacc-api_1.5_spec</artifactId>
                <version>${javax.jacc.version}</version>
            </dependency>

            <!--
                Infinispan
            -->
            <dependency>
                <groupId>org.infinispan</groupId>
                <artifactId>infinispan-core</artifactId>
                <version>${infinispan.version}</version>
            </dependency>
            <dependency>
                <groupId>org.infinispan</groupId>
                <artifactId>infinispan-core</artifactId>
                <version>${infinispan.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>

            <!--
                JGroups is used for the changes bus, but it's optional. Most of the times though, this will be in the classpath
                because of ISPN.
             -->
            <dependency>
                <groupId>org.jgroups</groupId>
                <artifactId>jgroups</artifactId>
                <version>${jgroups.version}</version>
            </dependency>
            <dependency>
                <groupId>org.infinispan</groupId>
                <artifactId>infinispan-cachestore-jdbc</artifactId>
                <version>${infinispan.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.infinispan</groupId>
                <artifactId>infinispan-cachestore-leveldb</artifactId>
                <version>${infinispan.version}</version>
                <scope>test</scope>
            </dependency>

            <!--Required by infinispan-cachestore-jdbc -->
            <dependency>
                <groupId>c3p0</groupId>
                <artifactId>c3p0</artifactId>
                <version>${c3p0.version}</version>
            </dependency>
            
            <!-- Heap and file-based maps -->
            <dependency>
                <groupId>org.mapdb</groupId>
                <artifactId>mapdb</artifactId>
                <version>${mapdb.version}</version>
            </dependency>

            <dependency>
                <groupId>javax.jms</groupId>
                <artifactId>javax.jms-api</artifactId>
                <version>${javax.jms.version}</version>
                <scope>provided</scope>
            </dependency>
            <!--
               Time and Date
               -->
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda.time.version}</version>
            </dependency>
            <!-- Testing (note the scope) -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-library</artifactId>
                <version>${hamcrest.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>${mockito.all.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- Logging (all of the libraries should be optional, as the logging implementation falls back to JUL if nothig is found -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.api.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>${slf4j.log4j.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>${log4j.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- CMIS extension - Apache chemistry -->
            <dependency>
                <groupId>org.apache.chemistry.opencmis</groupId>
                <artifactId>chemistry-opencmis-commons-api</artifactId>
                <version>${chemistry.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.chemistry.opencmis</groupId>
                <artifactId>chemistry-opencmis-commons-impl</artifactId>
                <version>${chemistry.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.chemistry.opencmis</groupId>
                <artifactId>chemistry-opencmis-server-support</artifactId>
                <version>${chemistry.version}</version>
            </dependency>
            
            <dependency>
                <groupId>org.apache.chemistry.opencmis</groupId>
                <artifactId>chemistry-opencmis-server-jcr</artifactId>
                <version>${chemistry.version}</version>
                <classifier>classes</classifier>
            </dependency>

            <dependency>
                <groupId>org.apache.chemistry.opencmis</groupId>
                <artifactId>chemistry-opencmis-server-bindings</artifactId>
                <version>${chemistry.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.chemistry.opencmis</groupId>
                <artifactId>chemistry-opencmis-client-impl</artifactId>
                <version>${chemistry.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.chemistry.opencmis</groupId>
                <artifactId>chemistry-opencmis-server-inmemory</artifactId>
                <version>${chemistry.version}</version>
                <type>war</type>
            </dependency>

            <!-- GWT dependency -->
            <dependency>
                <groupId>com.google.gwt</groupId>
                <artifactId>gwt-servlet</artifactId>
                <version>${gwt.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>com.google.gwt</groupId>
                <artifactId>gwt-user</artifactId>
                <version>${gwt.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>smartgwt</groupId>
                <artifactId>smartgwt</artifactId>
                <version>${smartgwt.version}</version>
                <type>jar</type>
            </dependency>
            <dependency>
                <groupId>com.smartgwt</groupId>
                <artifactId>smartgwt-skins</artifactId>
                <version>${smartgwt.version}</version>
                <type>jar</type>
            </dependency>

            <!--
                Demo module
            -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
                <scope>provided</scope>
            </dependency>
            <!-- Java Content Repository API -->
            <dependency>
                <groupId>javax.jcr</groupId>
                <artifactId>jcr</artifactId>
                <version>${jcr.version}</version>
                <scope>compile</scope>
            </dependency>
            <!--
                   Apache JCR API unit tests (for any JCR implementation), which is a
                   subset of the official TCK
               -->
            <dependency>
                <groupId>org.apache.jackrabbit</groupId>
                <artifactId>jackrabbit-jcr-tests</artifactId>
                <version>${jackrabbit.jcr.tck.version}</version>
                <scope>test</scope>
            </dependency>
            <!--
               JGit
               -->
            <dependency>
                <groupId>org.eclipse.jgit</groupId>
                <artifactId>org.eclipse.jgit</artifactId>
                <version>${jgit.version}</version>
            </dependency>
            <!--
               PicketBox (JAAS implementation used in test cases)
               -->
            <dependency>
                <groupId>org.picketbox</groupId>
                <artifactId>picketbox-bare</artifactId>
                <version>${picketbox.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>apache-xalan</groupId>
                        <artifactId>xalan</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>apache-xalan</groupId>
                        <artifactId>serializer</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>apache-xerces</groupId>
                        <artifactId>xml-apis</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>apache-xerces</groupId>
                        <artifactId>xercesImpl</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.hibernate</groupId>
                        <artifactId>hibernate</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!--
               JAX-B implementation used by some modules particularly the JBoss Console component
               -->
            <dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-impl</artifactId>
                <version>${sun.xml.bind.jaxbimpl.version}</version>
                <scope>runtime</scope>
            </dependency>
            <!--
               Web Modules dependencies
            -->
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-jaxrs</artifactId>
                <version>${resteasy.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-simple</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>jcl-over-slf4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-jaxb-provider</artifactId>
                <version>${resteasy.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.sun.xml.bind</groupId>
                        <artifactId>jaxb-impl</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.sun.xml.stream</groupId>
                        <artifactId>stream.buffer</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-jettison-provider</artifactId>
                <version>${resteasy.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-multipart-provider</artifactId>
                <version>${resteasy.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.sun.xml.bind</groupId>
                        <artifactId>jaxb-impl</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.sun.xml.stream</groupId>
                        <artifactId>stream.buffer</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.codehaus.jettison</groupId>
                <artifactId>jettison</artifactId>
                <version>${jettison.version}</version>
                <exclusions>
                    <!-- This results in duplicate stax-api jars. This is the older one.
                         A newer is brought in by com.sun.xml.bind:jaxb-impl
                    -->
                    <exclusion>
                        <groupId>stax</groupId>
                        <artifactId>stax-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${httpclient.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpmime</artifactId>
                <version>${httpclient.version}</version>
                <scope>test</scope>
            </dependency>
            <!--WebDav client used for testing-->
            <dependency>
                <groupId>com.googlecode.sardine</groupId>
                <artifactId>sardine</artifactId>
                <version>${sardine.version}</version>
                <scope>test</scope>
            </dependency>

            <!--
                Sequencers
            -->

            <!-- Eclipse JDT artifacts declare their dependencies using ranges. (yikes!)
                 So we need to specify exact versions, and we can do that in a dependencyManagement section.
                 Here are the dependencies showing the last combination that we could get working:
                 +- org.eclipse.equinox:common:jar:3.3.0-v20070426:compile
                     +- org.eclipse.jdt:core:jar:3.3.0-v_771:compile
                     |  +- org.eclipse.core:resources:jar:3.3.0-v20070604:compile
                     |  |  \- org.eclipse.core:expressions:jar:3.3.0-v20070606-0010:compile
                     |  \- org.eclipse.core:runtime:jar:3.3.100-v20070530:compile
                     |     +- org.eclipse:osgi:jar:3.3.0-v20070530:compile
                     |     +- org.eclipse.core:jobs:jar:3.3.0-v20070423:compile
                     |     +- org.eclipse.equinox:registry:jar:3.3.0-v20070522:compile
                     |     +- org.eclipse.equinox:preferences:jar:3.2.100-v20070522:compile
                     |     \- org.eclipse.core:contenttype:jar:3.2.100-v20070319:compile
            -->

            <!--Image sequencer-->
            <dependency>
                <groupId>com.drewnoakes</groupId>
                <artifactId>metadata-extractor</artifactId>
                <version>${image.metadata.extractor}</version>
            </dependency>
            <!--Java sequencer-->
            <dependency>
                <groupId>org.eclipse.equinox</groupId>
                <artifactId>common</artifactId>
                <version>${eclipse.equinox.common.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jdt</groupId>
                <artifactId>core</artifactId>
                <version>${eclipse.jdt.core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.core</groupId>
                <artifactId>resources</artifactId>
                <version>${eclipse.core.resources.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.core</groupId>
                <artifactId>expressions</artifactId>
                <version>${eclipse.core.expressions.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.core</groupId>
                <artifactId>runtime</artifactId>
                <version>${eclipse.core.runtime.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse</groupId>
                <artifactId>osgi</artifactId>
                <version>${eclipse.osgi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.core</groupId>
                <artifactId>jobs</artifactId>
                <version>${eclipse.core.jobs.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.equinox</groupId>
                <artifactId>registry</artifactId>
                <version>${eclipse.equinox.registry.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.equinox</groupId>
                <artifactId>preferences</artifactId>
                <version>${eclipse.equinox.preferences.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.core</groupId>
                <artifactId>contenttype</artifactId>
                <version>${eclipse.core.contenttype.version}</version>
            </dependency>
            <dependency>
                <groupId>javassist</groupId>
                <artifactId>javassist</artifactId>
                <version>${javaassist.version}</version>
            </dependency>
            <!--Mp3 sequencer-->
            <dependency>
                <groupId>org</groupId>
                <artifactId>jaudiotagger</artifactId>
                <version>${jaudiotagger.version}</version>
            </dependency>
            <!--MsOffice sequencer-->
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi</artifactId>
                <version>${poi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-scratchpad</artifactId>
                <version>${poi.version}</version>
            </dependency>
            <!--
                The following 2 POI dependencies are not used directly, but defined so that we use the same "beta" version
                across the board (see https://issues.jboss.org/browse/MODE-1934).Tika-parsers brings these 2 transitively in
             -->
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>${poi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml-schemas</artifactId>
                <version>${poi.version}</version>
            </dependency>
            <!--Teiid sequencer-->
            <dependency>
                <groupId>com.beust</groupId>
                <artifactId>jcommander</artifactId>
                <version>${jcommander.version}</version>
            </dependency>
            <!--WSDL sequencer-->
            <dependency>
                <groupId>wsdl4j</groupId>
                <artifactId>wsdl4j</artifactId>
                <version>${wsdl4j.version}</version>
            </dependency>
            <!--XSD sequencer-->
            <dependency>
                <groupId>org.eclipse.xsd</groupId>
                <artifactId>xsd</artifactId>
                <version>${eclipse.xsd.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.emf</groupId>
                <artifactId>common</artifactId>
                <version>${eclipse.emf.common.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.emf</groupId>
                <artifactId>ecore</artifactId>
                <version>${eclipse.emf.ecore.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.emf</groupId>
                <artifactId>ecore-change</artifactId>
                <version>${eclipse.emf.ecorechange.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.emf</groupId>
                <artifactId>ecore-xmi</artifactId>
                <version>${eclipse.emf.ecorexmi.version}</version>
            </dependency>

            <!--TIKA text extractor
                This Tika dependency brings in a lot of 3rd party libraries. We'll exclude
                most of them and only keep a few that are for Microsoft Office documents,
                HTML, XML and PDF. When others are needed, they can simply be added to
                an application's dependencies.
                
                Note that 'modeshape-jcr' excludes even more transitive dependencies, since it
                only uses the MIME type detector functionality, whereas the 'modeshape-extractor-tika'
                uses everything defined here.
                -->
            <dependency>
                <groupId>org.apache.tika</groupId>
                <artifactId>tika-parsers</artifactId>
                <version>${tika.version}</version>
                <exclusions>
                    <!--
                    The NetCDF and HDF files are often used in the scientific community, so we exclude this
                    library (and the Commons HTTP Client library) by default.
                    -->
                    <exclusion>
                        <groupId>edu.ucar</groupId>
                        <artifactId>netcdf</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>commons-httpclient</groupId>
                        <artifactId>commons-httpclient</artifactId>
                    </exclusion>

                    <!--
                    Image metadata isn't often for text extraction,
                    so exclude this library by default.
                    -->
                    <exclusion>
                        <groupId>com.drewnoakes</groupId>
                        <artifactId>metadata-extractor</artifactId>
                    </exclusion>
                    <!--
                    RSS and Atom feeds aren't often used for text extraction,
                    so exclude this library by default.
                    -->
                    <exclusion>
                        <groupId>rome</groupId>
                        <artifactId>rome</artifactId>
                    </exclusion>
                    <!--
                    Boilerpipe HTML templates are likely not used,
                    so exclude this library by default.
                    -->
                    <exclusion>
                        <groupId>de.l3s.boilerpipe</groupId>
                        <artifactId>boilerpipe</artifactId>
                    </exclusion>
                    <!-- 
                    PDFBox declares the Bouncy Castle dependencies
                    as optional, and Tika always depends on them to avoid
                    problems with encrypted PDFs (see TIKA-370). 
                    We exclude them by default. 
                    -->
                    <exclusion>
                      <groupId>org.bouncycastle</groupId>
                      <artifactId>bcmail-jdk15</artifactId>
                    </exclusion>
                    <exclusion>
                      <groupId>org.bouncycastle</groupId>
                      <artifactId>bcprov-jdk15</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!--
                Schematic dependencies
            -->
            <dependency>
                <groupId>org.jboss.logging</groupId>
                <artifactId>jboss-logging</artifactId>
                <version>${jboss.logging.version}</version>
            </dependency>

            <dependency>
                <groupId>de.undercouch</groupId>
                <artifactId>bson4jackson</artifactId>
                <version>${bson4jackson.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mongodb</groupId>
                <artifactId>mongo-java-driver</artifactId>
                <version>${mongo.driver.version}</version>
                <scope>provided</scope>
            </dependency>
            <!-- MongoDB binary store test -->
            <dependency>
                <groupId>de.flapdoodle.embed</groupId>
                <artifactId>de.flapdoodle.embed.mongo</artifactId>
                <version>${embedmongo.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.googlecode.json-simple</groupId>
                <artifactId>json-simple</artifactId>
                <version>${json.simple.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.jbossts</groupId>
                <artifactId>jbossjta</artifactId>
                <version>${jbossjta.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <artifactId>commons-httpclient</artifactId>
                        <groupId>commons-httpclient</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>ironjacamar-spec-api</artifactId>
                        <groupId>org.jboss.ironjacamar</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-logging-spi</artifactId>
                        <groupId>org.jboss.logging</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-logging</artifactId>
                        <groupId>org.jboss.logging</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-logging-processor</artifactId>
                        <groupId>org.jboss.logging</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-logging-generator</artifactId>
                        <groupId>org.jboss.logging</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jbossws-native-core</artifactId>
                        <groupId>org.jboss.ws.native</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>emma</artifactId>
                        <groupId>emma</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>emma_ant</artifactId>
                        <groupId>emma</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>hornetq-core</artifactId>
                        <groupId>org.hornetq</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>netty</artifactId>
                        <groupId>org.jboss.netty</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>wrapper</artifactId>
                        <groupId>tanukisoft</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jacorb</artifactId>
                        <groupId>jacorb</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jfreechart</artifactId>
                        <groupId>jfree</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-corba-ots-spi</artifactId>
                        <groupId>org.jboss.integration</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-server-manager</artifactId>
                        <groupId>org.jboss.jbossas</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-ejb-api_3.1_spec</artifactId>
                        <groupId>org.jboss.spec.javax.ejb</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jnp-client</artifactId>
                        <groupId>org.jboss.naming</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-servlet-api_3.0_spec</artifactId>
                        <groupId>org.jboss.spec.javax.servlet</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jbossws-common</artifactId>
                        <groupId>org.jboss.ws</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jcl-over-slf4j</artifactId>
                        <groupId>org.slf4j</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>stax-api</artifactId>
                        <groupId>stax</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>idl</artifactId>
                        <groupId>jacorb</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-logging-tools</artifactId>
                        <groupId>org.jboss.logging</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-connector-api_1.5_spec</artifactId>
                        <groupId>org.jboss.spec.javax.resource</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-transaction-spi</artifactId>
                        <groupId>org.jboss.integration</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-remoting</artifactId>
                        <groupId>org.jboss.remoting</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>slf4j-api</artifactId>
                        <groupId>org.slf4j</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>dom4j</artifactId>
                        <groupId>dom4j</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>commons-codec</artifactId>
                        <groupId>commons-codec</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-logmanager</artifactId>
                        <groupId>org.jboss.logmanager</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>hibernate-jpa-2.0-api</artifactId>
                        <groupId>org.hibernate.javax.persistence</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>commons-logging</artifactId>
                        <groupId>commons-logging</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jcommon</artifactId>
                        <groupId>jfree</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-transaction-api_1.1_spec</artifactId>
                        <groupId>org.jboss.spec.javax.transaction</groupId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!--
                JBOSS AS subsystem
            -->
            <dependency>
                <groupId>org.jboss.spec.javax.resource</groupId>
                <artifactId>jboss-connector-api_1.7_spec</artifactId>
                <version>${org.jboss.spec.javax.resource.connector-api.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.wildfly</groupId>
                <artifactId>wildfly-controller</artifactId>
                <version>${jboss.server.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.wildfly</groupId>
                <artifactId>wildfly-naming</artifactId>
                <version>${jboss.server.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.wildfly</groupId>
                <artifactId>wildfly-clustering-jgroups</artifactId>
                <version>${jboss.server.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.wildfly</groupId>
                <artifactId>wildfly-subsystem-test-framework</artifactId>
                <version>${jboss.server.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.wildfly</groupId>
                <artifactId>wildfly-arquillian-container-managed</artifactId>
                <version>${jboss.server.version}</version>
                <scope>test</scope>
            </dependency>
            <!--JCA connector-->
            <dependency>
                <groupId>org.jboss.ironjacamar</groupId>
                <artifactId>ironjacamar-depchain</artifactId>
                <version>${version.org.jboss.ironjacamar}</version>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.jboss.ironjacamar</groupId>
                <artifactId>ironjacamar-spec-api</artifactId>
                <version>${version.org.jboss.ironjacamar}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.ironjacamar</groupId>
                <artifactId>ironjacamar-common-api</artifactId>
                <version>${version.org.jboss.ironjacamar}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.ironjacamar</groupId>
                <artifactId>ironjacamar-common-spi</artifactId>
                <version>${version.org.jboss.ironjacamar}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.ironjacamar</groupId>
                <artifactId>ironjacamar-common-impl</artifactId>
                <version>${version.org.jboss.ironjacamar}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.ironjacamar</groupId>
                <artifactId>ironjacamar-common-impl-papaki</artifactId>
                <version>${version.org.jboss.ironjacamar}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.ironjacamar</groupId>
                <artifactId>ironjacamar-core-api</artifactId>
                <version>${version.org.jboss.ironjacamar}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.ironjacamar</groupId>
                <artifactId>ironjacamar-core-impl</artifactId>
                <version>${version.org.jboss.ironjacamar}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.ironjacamar</groupId>
                <artifactId>ironjacamar-deployers-common</artifactId>
                <version>${version.org.jboss.ironjacamar}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.ironjacamar</groupId>
                <artifactId>ironjacamar-deployers-fungal</artifactId>
                <version>${version.org.jboss.ironjacamar}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.ironjacamar</groupId>
                <artifactId>ironjacamar-embedded-arquillian</artifactId>
                <version>${version.org.jboss.ironjacamar}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.ironjacamar</groupId>
                <artifactId>ironjacamar-embedded</artifactId>
                <version>${version.org.jboss.ironjacamar}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.ironjacamar</groupId>
                <artifactId>ironjacamar-validator</artifactId>
                <version>${version.org.jboss.ironjacamar}</version>
                <scope>test</scope>
            </dependency>


            <!--
                Atomikos Transaction Manager (for testing only)
            -->
            <dependency>
                <groupId>com.atomikos</groupId>
                <artifactId>transactions</artifactId>
                <version>${atomikos.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.atomikos</groupId>
                <artifactId>transactions-jta</artifactId>
                <version>${atomikos.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- Cassandra JDBC driver -->
            <dependency>
                <groupId>com.datastax.cassandra</groupId>
                <artifactId>cassandra-driver-core</artifactId>
                <version>${cassandra-cql-driver}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.cassandra</groupId>
                <artifactId>cassandra-all</artifactId>
                <version>${cassandra.all.version}</version>
                <scope>test</scope>
            </dependency>

            <!--Test dependency which allows custom JNDI bindings-->
            <dependency>
                <groupId>commons-naming</groupId>
                <artifactId>commons-naming-core</artifactId>
                <version>${commons.naming.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>${version.surefire.plugin}</version>
            </plugin>
        </plugins>
    </reporting>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-parent</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../modeshape-parent</relativePath>
    </parent>

    <!-- The groupId and version values are inherited from parent -->
    <artifactId>modeshape-performance-tests</artifactId>
    <packaging>jar</packaging>
    <name>ModeShape Performance Tests</name>
    <description>ModeShape performance tests</description>
    <url>http://www.modeshape.org</url>
    <!--
      Define the dependencies. Note that all version and scopes default to those defined in the dependencyManagement section of the
      parent pom.
    -->
    <dependencies>
        <!-- Public API (beyond JCR 2.0) -->
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr-api</artifactId>
        </dependency>
        <!-- ModeShape JCR -->
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <!-- This should eventually get refactored into this project -->
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <!-- Infinispan -->
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-schematic</artifactId>
        </dependency>
        <!--  Used in tests -->
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-core</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-cachestore-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-cachestore-leveldb</artifactId>
        </dependency>
        <dependency>
            <groupId>c3p0</groupId>
            <artifactId>c3p0</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
        </dependency>
        <!--
        These following are defined as 'provided' in the parent POM, since ModeShape
        has code that is optional if these APIs are available.
        -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jboss.spec.javax.security.jacc</groupId>
            <artifactId>jboss-jacc-api_1.5_spec</artifactId>
        </dependency>

        <!--
        Testing (note the scope)
        -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.jbossts</groupId>
            <artifactId>jbossjta</artifactId>
        </dependency>
        <!--
        Logging (require SLF4J API for compiling, but use Log4J and its SLF4J binding for testing)
        -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
        </dependency>
    </dependencies>
    <build>
        <resources>
            <!-- Apply the properties set in the POM to the resource files -->
            <resource>
                <filtering>true</filtering>
                <directory>src/test/resources</directory>
                <includes>
                    <include>**/repository.properties</include>
                </includes>
            </resource>
        </resources>
    </build>
</project>
<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-parent</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../modeshape-parent/pom.xml</relativePath>
    </parent>

    <artifactId>modeshape-schematic</artifactId>
    <packaging>jar</packaging>
    <name>Schematic API</name>
    <description>Module for storing JSON/BSON documents and JSON Schemas in Infinispan</description>
    <dependencies>

        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-core</artifactId>
        </dependency>

        <!--  Used in tests -->
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-core</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-cachestore-leveldb</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jboss.logging</groupId>
            <artifactId>jboss-logging</artifactId>
        </dependency>

        <!-- We use a number of libraries to test the JSON and BSON readers and writers -->
        <dependency>
            <groupId>de.undercouch</groupId>
            <artifactId>bson4jackson</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mongodb</groupId>
            <artifactId>mongo-java-driver</artifactId>
        </dependency>
        <dependency>
            <groupId>com.googlecode.json-simple</groupId>
            <artifactId>json-simple</artifactId>
        </dependency>

        <!--
        Testing (note the scope)
        -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.jbossts</groupId>
            <artifactId>jbossjta</artifactId>
        </dependency>

        <!--
        Logging (require SLF4J API for compiling, but use Log4J and its SLF4J binding for testing)
        -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <configuration>
                    <instructions>
                        <Export-Package>
                            org.infinispan.schematic*;version=${project.version};-split-package:=error
                        </Export-Package>
                    </instructions>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>assembly</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <descriptorRefs>
                                <descriptorRef>component-with-dependencies</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-parent</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../modeshape-parent/pom.xml</relativePath>
    </parent>

    <artifactId>modeshape-unit-test</artifactId>
    <packaging>jar</packaging>
    <name>ModeShape Unit Test Framework</name>
    <description>A simple framework for creating unit tests for ModeShape and which automatically brings in many libraries for testing ModeShape.</description>

    <!--
      Define the dependencies. Note that all version and scopes default to those defined in the dependencyManagement section of the
      parent pom.
    -->
    <dependencies>
        <dependency>
            <groupId>javax.jcr</groupId>
            <artifactId>jcr</artifactId>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
        </dependency>
        <!--
        Dependencies for all the test-related JARs, brought in automatically
        -->
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
            <type>test-jar</type>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
            <scope>compile</scope>
            <type>test-jar</type>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-core</artifactId>
            <type>test-jar</type>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jdbc-local</artifactId>
            <type>test-jar</type>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <scope>compile</scope>
        </dependency>

        <!--
        Bring in the more popular Infinispan CacheLoader libraries, plus the H2 database.
        These are commonly needed when running ModeShape with more typical configurations.
        However, simply use an "<exclusions>" section to intensionally exclude any of these
        libraries.
        -->
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-cachestore-leveldb</artifactId>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-cachestore-jdbc</artifactId>
        </dependency>
    </dependencies>
    <profiles>
        <profile>
            <id>assembly</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <descriptorRefs>
                                <descriptorRef>module-with-dependencies</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.modeshape</groupId>
    <artifactId>modeshape-parent</artifactId>
	<version>4.0-SNAPSHOT</version>
    <relativePath>modeshape-parent/pom.xml</relativePath>
  </parent>

	<groupId>org.modeshape</groupId>
	<artifactId>modeshape</artifactId>

	<packaging>pom</packaging>
	<name>ModeShape</name>
	<description>Builds the entire ModeShape distribution.</description>

	<modules>
        <!-- Order is important -->

        <!-- First these -->
        <module>checkstyle</module>
        <module>modeshape-parent</module>
        <module>modeshape-assembly-descriptors</module>
        <!-- Order is important -->
        <module>modeshape-jcr-api</module>
        <module>modeshape-common</module>
        <module>modeshape-schematic</module>
        <module>modeshape-jcr</module>
        <module>modeshape-unit-test</module>
        <module>sequencers</module>
        <module>extractors</module>

        <!--Connectors-->
        <module>connectors</module>
        <!--
          The REST client needs the JDBC driver
        -->
        <module>web</module>
        <module>modeshape-jdbc-local</module>
        <module>modeshape-jdbc</module>
        <!-- 
          JCA Resource adapter
    	-->
    	<module>modeshape-jca</module>

        <!--
          The JBoss AS7 subsystem needs the web components and (local) JDBC drivers.
        -->
        <module>deploy/jbossas</module>
        <module>modeshape-distribution</module>

        <!-- Finally the BOMs -->
        <module>boms/modeshape-bom-embedded</module>
        <module>boms/modeshape-bom-jbossas</module>
        <module>boms/modeshape-bom-remote-client</module>
    </modules>
	<properties>
		<rootDir>${project.basedir}</rootDir>
	</properties>

	<profiles>
		<!-- 
		  This profile is used to run the build plus the JCR TCK tests
			and must be activated manually, as in "mvn ... -Pjcr-tck ..."
		-->
		<profile>
			<id>jcr-tck</id>
			<modules>
				<module>modeshape-jcr-tck</module>
			</modules>
		</profile>
		
		<!-- 
		  This profile is used to run the build plus the integration tests
			and must be activated manually, as in "mvn ... -Pintegration ..."
		-->
		<profile>
			<id>integration</id>
			<modules>
			  <!-- 
			    Build the distribution before running the integration tests, 
			    as some of the integration tests rely upon the distributions
			  -->
				<module>integration</module>
			</modules>
		</profile>
		
		<!-- 
		  This profile is used to run longer-running performance tests,
		  and must be activated manually, as in "mvn ... -Pperformance ..."
		-->
        <profile>
            <id>performance</id>
            <modules>
                <!--
                    The JBoss AS7 subsystem needs the web components and (local) JDBC drivers.
                -->
                <module>modeshape-performance-tests</module>
            </modules>
        </profile>
		
		<!-- 
		  This profile is used to build everything for a release, including all assemblies,
			and must be activated manually, as in "mvn ... -Passembly ..."
		-->
        <profile>
            <id>assembly</id>
            <modules>
                <module>modeshape-jca-rar</module>
                <module>modeshape-client</module>
                <module>demos</module>
                <module>integration</module>
            </modules>
        </profile>
	</profiles>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-parent</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../../modeshape-parent</relativePath>
    </parent>

    <!-- The groupId and version values are inherited from parent -->
    <artifactId>modeshape-test-reference-impl</artifactId>
    <packaging>jar</packaging>
    <name>Tests using the JCR Reference Implementation</name>
    <description>Tests that check the behavior of the JCR Reference Implementation</description>
    <url>http://www.modeshape.org</url>

    <!--
         Define the dependencies. Note that all version and scopes default to
         those defined in the dependencyManagement section of the parent pom.
     -->
    <dependencies>
        <!--
        Testing (note the scope)
        -->
        <dependency>
            <groupId>javax.jcr</groupId>
            <artifactId>jcr</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
        </dependency>
        <!--
              Logging (require SLF4J API for compiling, but use Log4J and its SLF4J
              binding for testing)
          -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
        </dependency>
        <!-- Override the Lucene version, since JR uses a more modern version -->
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-core</artifactId>
            <version>${jackrabbit.lucene.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.jackrabbit</groupId>
            <artifactId>jackrabbit-core</artifactId>
            <version>${jackrabbit.jcr.tck.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>**/*</include>
                </includes>
            </testResource>
        </testResources>
        <plugins>
            <!-- Do not build any source JARs -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <!-- We don't want to run this -->
                        <phase>non-existant</phase>
                    </execution>
                </executions>
            </plugin>
            <!-- Do not build any JARs -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <id>test-jar</id>
                        <!-- We don't want to run this -->
                        <phase>non-existant</phase>
                    </execution>
                    <execution>
                        <id>default-jar</id>
                        <!-- We don't want to run this -->
                        <phase>non-existant</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!--Disable bundle packaging because there aren't any sources-->
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>non-existant</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Do not install any files -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-install</id>
                        <!-- We don't want to run this -->
                        <phase>non-existant</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-sequencers</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <!-- The groupId and version values are inherited from parent -->
    <artifactId>modeshape-sequencer-ddl</artifactId>
    <packaging>jar</packaging>
    <name>ModeShape Sequencer for DDL Files</name>
    <description>ModeShape Sequencer that processes DDL files</description>
    <url>http://www.modeshape.org</url>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-sequencers</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <!-- The groupId and version values are inherited from parent -->
    <artifactId>modeshape-sequencer-images</artifactId>
    <packaging>jar</packaging>
    <name>ModeShape Sequencer for Image Files</name>
    <description>ModeShape Sequencer that processes PNG, JPEG, GIF and other image files</description>
    <url>http://www.modeshape.org</url>
    <dependencies>
        <dependency>
            <groupId>com.drewnoakes</groupId>
            <artifactId>metadata-extractor</artifactId>
        </dependency>
    </dependencies>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-sequencers</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <!-- The groupId and version values are inherited from parent -->
    <artifactId>modeshape-sequencer-java</artifactId>
    <packaging>jar</packaging>
    <name>ModeShape Sequencer for Java Class/Source Files</name>
    <description>ModeShape Sequencer that processes Java class and source files</description>
    <url>http://www.modeshape.org</url>

    <!--
    Define the dependencies.  Note that all version and scopes default to those
    defined in the dependencyManagement section of the parent pom.
    -->
    <dependencies>
        <dependency>
            <groupId>javassist</groupId>
            <artifactId>javassist</artifactId>
        </dependency>
        <!--
              Eclipse Java Development Tools (JDT) parser and its (many) required libraries
          -->
        <dependency>
            <groupId>org.eclipse.equinox</groupId>
            <artifactId>common</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.jdt</groupId>
            <artifactId>core</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.eclipse.core.runtime.compatibility</groupId>
                    <artifactId>auth</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.eclipse.equinox</groupId>
                    <artifactId>app</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.eclipse</groupId>
                    <artifactId>text</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.eclipse.core</groupId>
                    <artifactId>filesystem</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <testResources>
            <testResource>
                <directory>${project.basedir}/src/test/resources</directory>
            </testResource>
            <testResource>
                <directory>${project.basedir}/src/test/java</directory>
                <includes>
                    <include>org/modeshape/sequencer/testdata/*.*</include>
                </includes>
            </testResource>
        </testResources>
    </build>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-sequencers</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <!-- The groupId and version values are inherited from parent -->
    <artifactId>modeshape-sequencer-mp3</artifactId>
    <packaging>jar</packaging>
    <name>ModeShape Sequencer for MP3 Files</name>
    <description>ModeShape Sequencer that processes MP3 audio files</description>
    <url>http://www.modeshape.org</url>
    <dependencies>
        <dependency>
            <groupId>org</groupId>
            <artifactId>jaudiotagger</artifactId>
        </dependency>
    </dependencies>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-sequencers</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <!-- The groupId and version values are inherited from parent -->
    <artifactId>modeshape-sequencer-msoffice</artifactId>
    <packaging>jar</packaging>
    <name>ModeShape Sequencer for Microsoft Office Files</name>
    <description>ModeShape Sequencer that processes Microsoft Office files and searches for common metadata</description>
    <url>http://www.modeshape.org</url>
    <dependencies>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-scratchpad</artifactId>
        </dependency>
    </dependencies>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-sequencers</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <!-- The groupId and version values are inherited from parent -->
    <artifactId>modeshape-sequencer-sramp</artifactId>
    <packaging>jar</packaging>
    <name>ModeShape Sequencer for S-RAMP Files</name>
    <description>ModeShape Sequencer library defining the S-RAMP core model lexicon and CND, useful for other sequencers that
        reuse or extend S-RAMP definitions.
    </description>
    <url>http://www.modeshape.org</url>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-sequencers</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
     <!-- The groupId and version values are inherited from parent -->
    <artifactId>modeshape-sequencer-teiid</artifactId>
    <packaging>jar</packaging>
    <name>ModeShape Teiid Sequencer</name>
    <description>ModeShape Sequencer that processes Teiid models and VDBs</description>
    <url>http://www.modeshape.org</url>
    <dependencies>
        <dependency>
            <groupId>com.beust</groupId>
            <artifactId>jcommander</artifactId>
        </dependency>
    </dependencies>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-sequencers</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <!-- The groupId and version values are inherited from parent -->
    <artifactId>modeshape-sequencer-text</artifactId>
    <packaging>jar</packaging>
    <name>ModeShape Sequencer for Text Files</name>
    <description>ModeShape Sequencer that processes fixed width and delimited text files</description>
    <url>http://www.modeshape.org</url>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-sequencers</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <!-- The groupId and version values are inherited from parent -->
    <artifactId>modeshape-sequencer-wsdl</artifactId>
    <packaging>jar</packaging>
    <name>ModeShape Sequencer for WSDL Files</name>
    <description>ModeShape Sequencer that processes Web Service Definition Language (WSDL) 1.1 files and extracts the
        representation of the service definitions to repository
    </description>
    <url>http://www.modeshape.org</url>
    <dependencies>
        <dependency>
            <groupId>wsdl4j</groupId>
            <artifactId>wsdl4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-sequencer-sramp</artifactId>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-sequencer-xsd</artifactId>
        </dependency>
    </dependencies>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-sequencers</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <!-- The groupId and version values are inherited from parent -->
    <artifactId>modeshape-sequencer-xml</artifactId>
    <packaging>jar</packaging>
    <name>ModeShape Sequencer for XML Files</name>
    <description>ModeShape Sequencer that processes XML files</description>
    <url>http://www.modeshape.org</url>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-sequencers</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <!-- The groupId and version values are inherited from parent -->
    <artifactId>modeshape-sequencer-xsd</artifactId>
    <packaging>jar</packaging>
    <name>ModeShape Sequencer for XSD Files</name>
    <description>ModeShape Sequencer that processes XML Schema Documents and extracts the schema model to repository</description>
    <url>http://www.modeshape.org</url>
    <dependencies>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-sequencer-sramp</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.xsd</groupId>
            <artifactId>xsd</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.emf</groupId>
            <artifactId>common</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.emf</groupId>
            <artifactId>ecore</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.emf</groupId>
            <artifactId>ecore-change</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.emf</groupId>
            <artifactId>ecore-xmi</artifactId>
        </dependency>
    </dependencies>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-sequencers</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <!-- The groupId and version values are inherited from parent -->
    <artifactId>modeshape-sequencer-zip</artifactId>
    <packaging>jar</packaging>
    <name>ModeShape Sequencer for ZIP Files</name>
    <description>ModeShape Sequencer that processes zip files and extracts content to repository</description>
    <url>http://www.modeshape.org</url>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-parent</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../modeshape-parent/pom.xml</relativePath>
    </parent>
    <!-- The groupId and version values are inherited from parent -->
    <artifactId>modeshape-sequencers</artifactId>
    <packaging>pom</packaging>
    <name>ModeShape Sequencers</name>
    <description>ModeShape built-in sequencers </description>
    <url>http://www.modeshape.org</url>
    <dependencies>
        <!-- Common (annotations & text parsers) -->
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr-api</artifactId>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-core</artifactId>
            <version>${infinispan.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
        </dependency>
        <!-- Logging - overriding the default dependencies to enforce the test scope -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
        </dependency>
    </dependencies>

    <modules>
        <module>modeshape-sequencer-msoffice</module>
        <module>modeshape-sequencer-images</module>
        <module>modeshape-sequencer-java</module>
        <module>modeshape-sequencer-zip</module>
        <module>modeshape-sequencer-ddl</module>
        <module>modeshape-sequencer-mp3</module>
        <module>modeshape-sequencer-text</module>
        <module>modeshape-sequencer-sramp</module>
        <module>modeshape-sequencer-teiid</module>
        <module>modeshape-sequencer-xsd</module>
        <module>modeshape-sequencer-xml</module>
        <module>modeshape-sequencer-wsdl</module>
    </modules>

    <profiles>
        <profile>
            <id>assembly</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <descriptorRefs>
                                <descriptorRef>module-with-dependencies</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-parent</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../../modeshape-parent</relativePath>
    </parent>
    <artifactId>modeshape-web-cmis-war</artifactId>
    <packaging>war</packaging>
    <name>ModeShape CMIS Servlet Test WAR</name>
    <description>ModeShape Servlet WAR which allows integration testing of the CMIS library</description>
    <url>http://www.modeshape.org</url>
    <dependencies>
        <!--  TESTING DEPENDENCIES -->
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-web-cmis</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.chemistry.opencmis</groupId>
            <artifactId>chemistry-opencmis-server-jcr</artifactId>
            <classifier>classes</classifier>
        </dependency>

        <dependency>
            <groupId>org.apache.chemistry.opencmis</groupId>
            <artifactId>chemistry-opencmis-client-impl</artifactId>
        </dependency>

        <!-- dependency>
            <groupId>org.apache.chemistry.opencmis</groupId>
            <artifactId>chemistry-opencmis-server-jcr</artifactId>
            <type>war</type>
            <classifier>classes</classifier>
        </dependency -->
        
        <dependency>
            <groupId>org.apache.chemistry.opencmis</groupId>
            <artifactId>chemistry-opencmis-server-bindings</artifactId>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>

        <dependency>
            <groupId>com.googlecode.sardine</groupId>
            <artifactId>sardine</artifactId>
        </dependency>
        
    </dependencies>
    <build>
        <finalName>modeshape-cmis</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <id>test-jar</id>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.testOutputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
            </plugin>
            <!--
                   Override the default Surefire behavior to run during
                   integration-test phase
               -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>surefire-it</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <skip>false</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-parent</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../../modeshape-parent</relativePath>
    </parent>

    <artifactId>modeshape-web-cmis</artifactId>
    <packaging>jar</packaging>
    <name>ModeShape CMIS Library</name>
    <description>ModeShape Apache Chemistry support library</description>
    <url>http://www.modeshape.org</url>

    <dependencies>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-web-jcr</artifactId>
        </dependency>

        <!--
          Java Content Repository API
        -->
        <dependency>
            <groupId>javax.jcr</groupId>
            <artifactId>jcr</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.chemistry.opencmis</groupId>
            <artifactId>chemistry-opencmis-commons-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.chemistry.opencmis</groupId>
            <artifactId>chemistry-opencmis-commons-impl</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.chemistry.opencmis</groupId>
            <artifactId>chemistry-opencmis-server-support</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.chemistry.opencmis</groupId>
            <artifactId>chemistry-opencmis-server-jcr</artifactId>
            <classifier>classes</classifier>
        </dependency>

        <!--  TESTING DEPENDENCIES -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>assembly</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <descriptorRefs>
                                <descriptorRef>module-with-dependencies</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-parent</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../../modeshape-parent</relativePath>
    </parent>
    <artifactId>modeshape-web-explorer-war</artifactId>
    <packaging>war</packaging>
    <name>ModeShape Repository Explorer (Full)</name>
    <description>ModeShape repository explorer that embeds ModeShape and can be deloyed standalone</description>
    <url>http://www.modeshape.org</url>
    <dependencies>
        <dependency>
            <groupId>javax.jcr</groupId>
            <artifactId>jcr</artifactId>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
        </dependency>

        <!--The following dependencies are installed in the container and will be picked up via the manifest-->
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-web-explorer</artifactId>
            <version>${project.version}</version>
            <type>war</type>
        </dependency>
    </dependencies>
   <build>
       <finalName>modeshape-standalone-explorer-${project.version}</finalName>
       <plugins>
           <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-surefire-plugin</artifactId>
               <configuration>
                   <skip>true</skip>
               </configuration>
           </plugin>
           <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-parent</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../../modeshape-parent</relativePath>
    </parent>
    <artifactId>modeshape-web-explorer</artifactId>
    <packaging>war</packaging>
    <name>ModeShape Repository Explorer (Bare)</name>
    <description>ModeShape repository explorer that does not contain ModeShape libraries</description>
    <url>http://www.modeshape.org</url>
    <dependencies>
        <dependency>
            <groupId>javax.jcr</groupId>
            <artifactId>jcr</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-web-jcr</artifactId>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>

        <dependency>
            <groupId>com.googlecode.sardine</groupId>
            <artifactId>sardine</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-servlet</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-user</artifactId>
            <scope>provided</scope>
        </dependency>              
        <dependency>
            <groupId>smartgwt</groupId>
            <artifactId>smartgwt</artifactId>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>com.smartgwt</groupId>
            <artifactId>smartgwt-skins</artifactId>
            <type>jar</type>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>
    <build>
        <finalName>modeshape-explorer-${project.version}</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
        <plugins>            
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>gwt-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <runTarget>org.modeshape.explorer.client.Explorer/Explorer.html</runTarget>
                </configuration>
            </plugin>            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <id>test-jar</id>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.testOutputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>           
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>assembly</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <descriptorRefs>
                                <descriptorRef>module-with-dependencies</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-parent</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../../modeshape-parent</relativePath>
    </parent>
    <!-- The groupId and version values are inherited from parent -->
    <artifactId>modeshape-web-jcr-rest-client</artifactId>
    <packaging>jar</packaging>
    <name>ModeShape JCR REST Client</name>
    <description>ModeShape JCR REST client resource publishing
    </description>
    <url>http://www.modeshape.org</url>
    <!--
         Define the dependencies. Note that all version and scopes default to
         those defined in the dependencyManagement section of the parent pom.
     -->
    <dependencies>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.jcr</groupId>
            <artifactId>jcr</artifactId>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jettison</groupId>
            <artifactId>jettison</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>
        <!-- Testing dependencies-->
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-web-jcr-rest-war</artifactId>
            <type>war</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
        </dependency>
        <!--
              Logging (require SLF4J API for compiling, but use Log4J and its SLF4J
              binding for testing)
          -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
                <configuration>
                    <deployables>
                        <!-- application to deploy -->
                        <deployable>
                            <groupId>org.modeshape</groupId>
                            <artifactId>modeshape-web-jcr-rest-war</artifactId>
                            <type>war</type>
                            <properties>
                                <context>resources</context>
                            </properties>
                        </deployable>
                    </deployables>
                </configuration>
            </plugin>
            <!--
                Override the default Surefire behavior to run during
                integration-test phase
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>surefire-it</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <skip>false</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>assembly</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <descriptorRefs>
                                <descriptorRef>module-with-dependencies</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!--Creates a JCR rest client kit which can be run from the command line -->
        <profile>
            <id>commandline</id>
            <build>
                <defaultGoal>package</defaultGoal>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <descriptors>
                                        <descriptor>src/assembly/build-jar-with-dependencies.xml</descriptor>
                                    </descriptors>
                                    <archive>
                                        <manifest>
                                            <addClasspath>true</addClasspath>
                                        </manifest>
                                    </archive>
                                </configuration>
                            </execution>

                            <execution>
                                <id>commandline</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <descriptors>
                                        <descriptor>src/assembly/kit.xml</descriptor>
                                    </descriptors>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-parent</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../../modeshape-parent</relativePath>
    </parent>

    <artifactId>modeshape-web-jcr-rest-war</artifactId>
    <packaging>war</packaging>
    <name>ModeShape JCR REST Servlet</name>
    <description>ModeShape servlet that provides RESTful access to JCR items</description>
    <url>http://www.modeshape.org</url>
    <dependencies>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-web-jcr-rest</artifactId>
        </dependency>
        <!--This is provided dependency of the above, which Maven seems to ignore as transitive-->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-impl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!--  TESTING DEPENDENCIES -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
        </dependency>
    </dependencies>
    <build>
        <finalName>resources</finalName>
        <!-- Filter the *.json files used for testing -->
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*</include>
                </includes>
            </testResource>
        </testResources>
        <plugins>
            <!--Overwrite this plugin from parent, to avoid it requiring a MANIFEST.MF file -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <id>test-jar</id>
                        <phase>non-existent</phase>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
            </plugin>
            <!--
                   Override the default Surefire behavior to run during
                   integration-test phase
               -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>surefire-it</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <skip>false</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-parent</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../../modeshape-parent</relativePath>
    </parent>

    <artifactId>modeshape-web-jcr-rest</artifactId>
    <packaging>jar</packaging>
    <name>ModeShape JCR REST Library</name>
    <description>ModeShape REST support library</description>
    <url>http://www.modeshape.org</url>
    <dependencies>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-web-jcr</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jaxrs</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jaxb-provider</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jettison-provider</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-multipart-provider</artifactId>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jettison</groupId>
            <artifactId>jettison</artifactId>
        </dependency>

        <!--
          Java Content Repository API
        -->
        <dependency>
            <groupId>javax.jcr</groupId>
            <artifactId>jcr</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>

        <!--  TESTING DEPENDENCIES -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>assembly</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <descriptorRefs>
                                <descriptorRef>module-with-dependencies</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-parent</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../../modeshape-parent</relativePath>
    </parent>
    <artifactId>modeshape-web-jcr-webdav-war</artifactId>
    <packaging>war</packaging>
    <name>ModeShape JCR WebDAV Servlet</name>
    <description>ModeShape servlet that provides WebDAV access to JCR items</description>
    <url>http://www.modeshape.org</url>
    <dependencies>
        <!--  TESTING DEPENDENCIES -->
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-web-jcr-webdav</artifactId>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-webdav-war</artifactId>
            <scope>test</scope>
            <type>test-jar</type>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
            <scope>test</scope>
            <type>test-jar</type>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>

        <dependency>
            <groupId>com.googlecode.sardine</groupId>
            <artifactId>sardine</artifactId>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
        </dependency>
    </dependencies>
    <build>
        <finalName>webdav-jcr</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <id>test-jar</id>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                        <configuration>
                            <archive>
                                <manifestFile>${project.build.testOutputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                            </archive>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
            </plugin>
            <!--
                   Override the default Surefire behavior to run during
                   integration-test phase
               -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>surefire-it</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <skip>false</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-parent</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../../modeshape-parent</relativePath>
    </parent>
    <artifactId>modeshape-web-jcr-webdav</artifactId>
    <packaging>jar</packaging>
    <name>ModeShape JCR WebDAV Library</name>
    <description>ModeShape JCR WebDAV Library</description>
    <url>http://www.modeshape.org</url>
    <dependencies>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-web-jcr</artifactId>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-webdav</artifactId>
        </dependency>

        <!--
          Java Content Repository API
        -->
        <dependency>
            <groupId>javax.jcr</groupId>
            <artifactId>jcr</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>

        <!--Logging dependencies-->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <!--  TESTING DEPENDENCIES -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-core</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>assembly</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <descriptorRefs>
                                <descriptorRef>module-with-dependencies</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-parent</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../../modeshape-parent</relativePath>
    </parent>

    <artifactId>modeshape-web-jcr</artifactId>
    <packaging>jar</packaging>
    <name>ModeShape JCR Web Library</name>
    <description>ModeShape web support library</description>
    <url>http://www.modeshape.org</url>

    <dependencies>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
        </dependency>

        <!--
          Java Content Repository API 
        -->
        <dependency>
            <groupId>javax.jcr</groupId>
            <artifactId>jcr</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>

        <!--  TESTING DEPENDENCIES -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>assembly</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <descriptorRefs>
                                <descriptorRef>module-with-dependencies</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-parent</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../../modeshape-parent</relativePath>
    </parent>
    <artifactId>modeshape-webdav-war</artifactId>
    <packaging>war</packaging>
    <name>ModeShape WebDAV Servlet Test WAR</name>
    <description>ModeShape Servlet WAR which allows integration testing of the default WebDav framework (forked from WebDAV-Servlet)</description>
    <url>http://www.modeshape.org</url>
    <dependencies>
        <!--  TESTING DEPENDENCIES -->
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-webdav</artifactId>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>

        <dependency>
            <groupId>com.googlecode.sardine</groupId>
            <artifactId>sardine</artifactId>
        </dependency>
    </dependencies>
    <build>
        <finalName>webdav</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <id>test-jar</id>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.testOutputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
            </plugin>
            <!--
                   Override the default Surefire behavior to run during
                   integration-test phase
               -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>surefire-it</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <skip>false</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.modeshape</groupId>
        <artifactId>modeshape-parent</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath>../../modeshape-parent</relativePath>
    </parent>
    <artifactId>modeshape-webdav</artifactId>
    <packaging>jar</packaging>
    <name>ModeShape WebDAV Servlet</name>
    <description>ModeShape WebDAV Servlet Library</description>
    <url>http://www.modeshape.org</url>
    <dependencies>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>assembly</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <descriptorRefs>
                                <descriptorRef>module-with-dependencies</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.modeshape</groupId>
    <artifactId>modeshape-parent</artifactId>
    <version>4.0-SNAPSHOT</version>
    <relativePath>../modeshape-parent</relativePath>
  </parent>

  <artifactId>modeshape-web</artifactId>
  <packaging>pom</packaging>
  <name>ModeShape Web Components</name>
  <url>http://www.modeshape.org</url>
  <description>Build the ModeShape web components</description>
  <modules>
    <module>modeshape-web-jcr</module>
    <module>modeshape-web-jcr-rest</module>
    <module>modeshape-web-jcr-rest-war</module>
    <module>modeshape-web-jcr-rest-client</module>
    <module>modeshape-webdav</module>
    <module>modeshape-webdav-war</module>
    <module>modeshape-web-jcr-webdav</module>
    <module>modeshape-web-jcr-webdav-war</module>
    <module>modeshape-web-cmis</module>
    <module>modeshape-web-cmis-war</module>
    <module>modeshape-web-explorer</module>
    <module>modeshape-web-explorer-war</module>
  </modules>
</project>
