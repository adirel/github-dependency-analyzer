<!--
  ~ Copyright (c) 2011-2013, Peter Abeles. All Rights Reserved.
  ~
  ~ This file is part of BoofCV (http://boofcv.org).
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project name="boofcv_examples" basedir="." default="main">


    <property name="src.dir"     value="src"/>
    <property name="lib.dir"     value="../lib"/>

    <property name="build.dir"   value="build"/>
    <property name="classes.dir" value="${build.dir}/classes"/>

    <property name="junit.dir"  value="lib/"/>

    <path id="project.classpath">
        <fileset dir="${lib.dir}" includes="**/*.jar"/>
    </path>

    <path id="run.classpath">
        <fileset dir="${build.dir}" includes="**/*.jar"/>
    </path>

    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>

    <target name="compile">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${classes.dir}" includeantruntime="false">
            <classpath refid="project.classpath"/>
        </javac>
    </target>

    <target name="jar" depends="compile">
        <mkdir dir="${build.dir}"/>
        <jar destfile="${build.dir}/${ant.project.name}.jar" basedir="${classes.dir}">
	  <zipgroupfileset dir="${lib.dir}" includes="*.jar" excludes="junit*" /> 
	</jar>

    </target>


    <target name="clean-build" depends="clean,jar"/>

    <target name="main" depends="clean,jar"/>

    <target name="run">
        <java classname="${which}" fork="true">
	  <classpath refid="run.classpath"/>
	</java>
    </target>

</project>
<project name="BoofCVAndroid" basedir="." default="main">
  <description>
    Build script for Android integration
  </description>
  
  <import file="../build_common.xml"/>
  
  <!--  Specify where your android SDK is here-->
  <property name="android.dir" value="/opt/android-sdk-linux/platforms/android-17"/>

  <path id="project.classpath">
    <fileset dir="${lib.dir}" includes="**/*.jar"/>
    <fileset dir="${android.dir}" includes="**/*.jar"/>
  </path>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project name="video" default="help">

	<!-- The local.properties file is created and updated by the 'android' tool.
		 It contains the path to the SDK. It should *NOT* be checked into
		 Version Control Systems. -->
	<property file="local.properties"/>

	<!-- The ant.properties file can be created by you. It is only edited by the
		 'android' tool to add properties to it.
		 This is the place to change some Ant specific build properties.
		 Here are some properties you may want to change/update:

		 source.dir
			 The name of the source directory. Default is 'src'.
		 out.dir
			 The name of the output directory. Default is 'bin'.

		 For other overridable properties, look at the beginning of the rules
		 files in the SDK, at tools/ant/build.xml

		 Properties related to the SDK location or the project target should
		 be updated using the 'android' tool with the 'update' action.

		 This file is an integral part of the build system for your
		 application and should be checked into Version Control Systems.

		 -->
	<property file="ant.properties"/>

	<!-- if sdk.dir was not set from one of the property file, then
		 get it from the ANDROID_HOME env var.
		 This must be done before we load project.properties since
		 the proguard config can use sdk.dir -->
	<property environment="env"/>
	<condition property="sdk.dir" value="${env.ANDROID_HOME}">
		<isset property="env.ANDROID_HOME"/>
	</condition>

	<!-- The project.properties file is created and updated by the 'android'
		 tool, as well as ADT.

		 This contains project specific properties such as project target, and library
		 dependencies. Lower level build properties are stored in ant.properties
		 (or in .classpath for Eclipse projects).

		 This file is an integral part of the build system for your
		 application and should be checked into Version Control Systems. -->
	<loadproperties srcFile="project.properties"/>

	<!-- quick check on sdk.dir -->
	<fail
			message="sdk.dir is missing. Make sure to generate local.properties using 'android update project' or to inject it through the ANDROID_HOME environment variable."
			unless="sdk.dir"
			/>

	<!--
		Import per project custom build rules if present at the root of the project.
		This is the place to put custom intermediary targets such as:
			-pre-build
			-pre-compile
			-post-compile (This is typically used for code obfuscation.
						   Compiled code location: ${out.classes.absolute.dir}
						   If this is not done in place, override ${out.dex.input.absolute.dir})
			-post-package
			-post-build
			-pre-clean
	-->
	<import file="custom_rules.xml" optional="true"/>

	<!-- Import the actual build file.

		 To customize existing targets, there are two options:
		 - Customize only one target:
			 - copy/paste the target into this file, *before* the
			   <import> task.
			 - customize it to your needs.
		 - Customize the whole content of build.xml
			 - copy/paste the content of the rules files (minus the top node)
			   into this file, replacing the <import> task.
			 - customize to your needs.

		 ***********************
		 ****** IMPORTANT ******
		 ***********************
		 In all cases you must update the value of version-tag below to read 'custom' instead of an integer,
		 in order to avoid having your file be overridden by tools such as "android update project"
	-->
	<!-- version-tag: 1 -->
	<import file="${sdk.dir}/tools/ant/build.xml"/>

</project>
<project name="BoofCV_Applet" basedir="." default="main">


    <property name="src.dir"     value="src"/>
    <property name="srceval.dir"     value="../../evaluation/visualization/src"/>
    <property name="lib.dir"     value="../../lib"/>

    <property name="build.dir"   value="build"/>
    <property name="classes.dir" value="${build.dir}/classes"/>
    <property name="jar.dir"     value="."/>

    <property name="junit.dir"  value="lib/"/>

    <path id="project.classpath">
        <fileset dir="${lib.dir}" includes="**/*.jar"/>
    </path>

    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>

    <target name="compile">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${srceval.dir}" destdir="${classes.dir}" includeantruntime="false">
            <classpath refid="project.classpath"/>
        </javac>
        <javac srcdir="${src.dir}" destdir="${classes.dir}" includeantruntime="false">
            <classpath refid="project.classpath"/>
        </javac>
    </target>

    <target name="jar" depends="compile">
        <mkdir dir="${jar.dir}"/>
        <jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${classes.dir}">
	  <zipgroupfileset dir="${lib.dir}" includes="*.jar" excludes="junit*" />
	</jar>

    </target>


    <target name="clean-build" depends="clean,jar"/>

    <target name="main" depends="clean,jar"/>
</project>
<project name="integration" basedir="." default="main">
  <description>
    Build script for common elements (e.g. JavaDocs) of integration libraries
  </description>

    <property name="lib.dir"     value="${basedir}/../lib"/>
    <property name="jar.dir"     value="${basedir}/jar"/>
    <property name="doc.dir"     value="${basedir}/api"/>
    <property name="testreport.dir"  value="${basedir}/report"/>

    <path id="project.classpath">
        <fileset dir="${lib.dir}" includes="**/*.jar"/>
    </path>

    <path id="source.classpath">
      <pathelement path="android/src"/>
      <pathelement path="xuggler/src"/>
      <pathelement path="v4l4j/src"/>
      <pathelement path="openkinect/src"/>
    </path>


    <target name="javadocWeb">
        <javadoc
                destdir="docs/api"
                author="true"
                version="true"
                use="true"
                windowtitle="BoofCV"
	        sourcepathref="source.classpath">

            <doctitle><![CDATA[<h1>BoofCV API Specification</h1>]]></doctitle>
	    <header><![CDATA[
<script type="text/javascript"><!--
google_ad_client = "ca-pub-0419821832107208";
/* boofcv javadoc banner */
google_ad_slot = "3257872658";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
]]>
</header>
            <bottom><![CDATA[<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-10413214-5']);
  _gaq.push(['_setDomainName', 'boofcv.org']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
<br>
<b>Copyright &copy; 2011-2012 Peter Abeles</b>
]]>
</bottom>
 
        </javadoc>
    </target>

    <target name="javadoc">
        <javadoc
                destdir="docs/api"
                author="true"
                version="true"
                use="true"
                windowtitle="BoofCV"
	        sourcepathref="source.classpath">


            <doctitle><![CDATA[<h1>BoofCV API Specification</h1>]]></doctitle>
            <bottom><![CDATA[<b>Copyright &copy; 2011-2012 Peter Abeles</b>]]></bottom>
 
        </javadoc>
    </target>

    <target name="test">
	<!--ant dir="android/" target="test"/-->
	<ant dir="xuggler/" target="test"/>
    </target>

    <target name="testreport">
        <junitreport todir="${testreport.dir}">
            <fileset dir="${testreport.dir}" includes="TEST-*.xml"/>
            <report todir="${testreport.dir}"/>
        </junitreport>
    </target>

    <target name="clean">
        <delete dir="${jar.dir}"/>
	<delete dir="${testreport.dir}"/>
	<ant dir="android/" target="clean"/>
	<ant dir="xuggler/" target="clean"/>
	<ant dir="v4l4j/" target="clean"/>
	<ant dir="openkinect/" target="clean"/>
    </target>

    <target name="jar">
        <mkdir dir="${jar.dir}"/>
	<ant dir="android" inheritAll="false"/>
	<ant dir="xuggler" inheritAll="false"/>
	<ant dir="v4l4j" inheritAll="false"/>
	<ant dir="openkinect" inheritAll="false"/>
	<ant dir="applet" inheritAll="false"/>
	<!--jar destfile="${lib.dir}/${ant.project.name}.jar">
	  <zipgroupfileset dir="${jar.dir}" includes="*.jar"/> 
	</jar-->
    </target>

    <target name="main" depends="clean,jar"/>
</project>
<project name="BoofCV_OpenKinect" basedir="." default="main">
  <description>
    Build script for V4L4J integration
  </description>


  <!--  Specify where your V4L4J jar directory is here-->
  <property name="kinect.dir" value="libfreenect"/>
  <property name="src.dir" value="${kinect.dir}/wrappers/java/src/main/java/:src/"/>
  <property name="src_examples.dir" value="${kinect.dir}/wrappers/java/src/main/java/:src/:example/src"/>

  <import file="../build_common.xml"/>

  <path id="project.classpath">
    <fileset dir="${lib.dir}" includes="**/*.jar"/>
    <fileset dir="./lib" includes="**/*.jar"/>
  </path>

  <path id="example.classpath">
    <fileset dir="${lib.dir}" includes="**/*.jar"/>
    <fileset dir="./lib" includes="**/*.jar"/>
    <file file="../jar/${ant.project.name}.jar" />
  </path>

  <path id="run.classpath">
    <fileset dir="${lib.dir}" includes="**/*.jar"/>
    <fileset dir="./lib" includes="**/*.jar"/>
    <file file="../jar/${ant.project.name}.jar" />
    <file file="kinect_examples.jar" />
  </path>

  <target name="compile">
    <mkdir dir="${classes.dir}"/>
    <javac srcdir="${src.dir}" destdir="${classes.dir}" includeantruntime="false">
      <classpath refid="project.classpath"/>
    </javac>
  </target>

  <target name="examples" depends="jar">
    <delete dir="${build.dir}"/>
    <mkdir dir="${classes.dir}"/>
    <javac srcdir="${src_examples.dir}" destdir="${classes.dir}" includeantruntime="false">
      <classpath refid="project.classpath"/>
    </javac>

    <mkdir dir="${jar.dir}"/>
    <jar destfile="kinect_examples.jar" basedir="${classes.dir}"/>
  </target>

  <target name="run">
    <java classname="${which}" fork="true">
      <classpath refid="run.classpath"/>
    </java>
  </target>

</project>
<project name="BoofCV_V4L4J" basedir="." default="main">
  <description>
    Build script for V4L4J integration
  </description>

  <import file="../build_common.xml"/>

  <!--  Specify where your V4L4J jar directory is here-->
  <property name="v4l4j.dir" value="./"/>
  
  <path id="project.classpath">
    <fileset dir="${lib.dir}" includes="**/*.jar"/>
    <fileset dir="${v4l4j.dir}" includes="**/*.jar"/>
  </path>

</project>
<project name="BoofCVXuggler" basedir="." default="main">
  <description>
    Build script for Xuggler integration
  </description>

  <import file="../build_common.xml"/>

  <!--  Specify where your Xuggler jar directory is here-->
  <property name="xuggler.dir" value="./"/>
  
  <path id="project.classpath">
    <fileset dir="${lib.dir}" includes="**/*.jar"/>
    <fileset dir="${xuggler.dir}" includes="**/*.jar"/>
  </path>

</project>
<project name="BoofCV" basedir="." default="main">

    <property name="lib.dir"     value="${basedir}/../lib"/>
    <property name="jar.dir"     value="${basedir}/jar"/>
    <property name="doc.dir"     value="${basedir}/api"/>
    <property name="testreport.dir"  value="${basedir}/report"/>


    <path id="source.classpath">
      <pathelement path="ip/src"/>
      <pathelement path="io/src"/>
      <pathelement path="feature/src"/>
      <pathelement path="geo/src"/>
      <pathelement path="calibration/src"/>
      <pathelement path="sfm/src"/>
      <pathelement path="recognition/src"/>
      <pathelement path="visualize/src"/>
    </path>
    

    <target name="javadocWeb">
        <javadoc
                destdir="docs/api"
                author="true"
                version="true"
                use="true"
                windowtitle="BoofCV"
	        sourcepathref="source.classpath">

            <doctitle><![CDATA[<h1>BoofCV API Specification</h1>]]></doctitle>
	    <header><![CDATA[
<script type="text/javascript"><!--
google_ad_client = "ca-pub-0419821832107208";
/* boofcv javadoc banner */
google_ad_slot = "3257872658";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
]]>
</header>
            <bottom><![CDATA[<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-10413214-5']);
  _gaq.push(['_setDomainName', 'boofcv.org']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
<br>
<b>Copyright &copy; 2011-2013 Peter Abeles</b>
]]>
</bottom>
 
        </javadoc>
    </target>

    <target name="javadoc">
        <javadoc
                destdir="docs/api"
                author="true"
                version="true"
                use="true"
                windowtitle="BoofCV"
	        sourcepathref="source.classpath" >

            <doctitle><![CDATA[<h1>BoofCV API Specification</h1>]]></doctitle>
            <bottom><![CDATA[<b>Copyright &copy; 2011-2013 Peter Abeles</b>]]></bottom>
 
        </javadoc>
	<jar compress="true" destfile="docs/javadoc.jar" basedir="docs/api" />
    </target>

    <target name="test">
	<ant dir="ip/" target="test"/>
	<ant dir="feature/" target="test"/>
	<ant dir="geo/" target="test"/>
	<ant dir="io/" target="test"/>
	<ant dir="calibration/" target="test"/>
	<ant dir="sfm/" target="test"/>
	<ant dir="recognition/" target="test"/>
  <ant dir="visualize/" target="test"/>
    </target>

    <target name="testreport">
        <junitreport todir="${testreport.dir}">
            <fileset dir="${testreport.dir}" includes="TEST-*.xml"/>
            <report todir="${testreport.dir}"/>
        </junitreport>
    </target>

    <target name="clean">
        <delete dir="${jar.dir}"/>
	<delete dir="${testreport.dir}"/>
	<delete file="${lib.dir}/${ant.project.name}.jar"/>
	<ant dir="ip/" target="clean"/>
	<ant dir="feature/" target="clean"/>
	<ant dir="geo/" target="clean"/>
	<ant dir="io/" target="clean"/>
	<ant dir="calibration/" target="clean"/>
	<ant dir="sfm/" target="clean"/>
	<ant dir="recognition/" target="clean"/>
      <ant dir="visualize/" target="clean"/>
    </target>

    <target name="jar">
        <mkdir dir="${jar.dir}"/>
	<ant dir="ip" inheritAll="false"/>
	<ant dir="feature" inheritAll="false"/>
	<ant dir="geo" inheritAll="false"/>
	<ant dir="io" inheritAll="false"/>
	<ant dir="calibration/" inheritAll="false"/>
	<ant dir="sfm/" inheritAll="false"/>
	<ant dir="recognition/" inheritAll="false"/>
      <ant dir="visualize/" inheritAll="false"/>
	<jar destfile="${lib.dir}/${ant.project.name}.jar">
	  <zipgroupfileset dir="${jar.dir}" includes="*.jar"/> 
	</jar>
    </target>

    <!-- Creates a jar file with the project's source code -->
    <target name="srcjar">
       <jar destfile="${lib.dir}/${ant.project.name}-src.jar">
	<fileset dir="ip/src" includes="**/*.java"/>
	<fileset dir="io/src" includes="**/*.java"/>
	<fileset dir="feature/src" includes="**/*.java"/>
	<fileset dir="geo/src" includes="**/*.java"/>
	<fileset dir="calibration/src" includes="**/*.java"/>
	<fileset dir="sfm/src" includes="**/*.java"/>
	<fileset dir="recognition/src" includes="**/*.java"/>
	<fileset dir="visualize/src" includes="**/*.java"/>
      </jar>
    </target>

    <target name="main" depends="clean,jar"/>
</project>
<!--
  ~ Copyright (c) 2011-2013, Peter Abeles. All Rights Reserved.
  ~
  ~ This file is part of BoofCV (http://boofcv.org).
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project name="BoofCV_CALIB" basedir="." default="main">

  <import file="../build_common.xml"/>

</project>
<!--
  ~ Copyright (c) 2011-2013, Peter Abeles. All Rights Reserved.
  ~
  ~ This file is part of BoofCV (http://boofcv.org).
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project name="BoofCV_Feature" basedir="." default="main">

  <import file="../build_common.xml"/>

</project>
<!--
  ~ Copyright (c) 2011-2013, Peter Abeles. All Rights Reserved.
  ~
  ~ This file is part of BoofCV (http://boofcv.org).
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project name="BoofCV_Geo" basedir="." default="main">

  <import file="../build_common.xml"/>

</project>
<!--
  ~ Copyright (c) 2011-2013, Peter Abeles. All Rights Reserved.
  ~
  ~ This file is part of BoofCV (http://boofcv.org).
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project name="BoofCV_IO" basedir="." default="main">

  <import file="../build_common.xml"/>

</project>
<!--
  ~ Copyright (c) 2011-2013, Peter Abeles. All Rights Reserved.
  ~
  ~ This file is part of BoofCV (http://boofcv.org).
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project name="BoofCV_IP" basedir="." default="main">

  <import file="../build_common.xml"/>

</project>
<!--
  ~ Copyright (c) 2011-2012, Peter Abeles. All Rights Reserved.
  ~
  ~ This file is part of BoofCV (http://boofcv.org).
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project name="BoofCV_Recognition" basedir="." default="main">

  <import file="../build_common.xml"/>

</project>
<!--
  ~ Copyright (c) 2011-2012, Peter Abeles. All Rights Reserved.
  ~
  ~ This file is part of BoofCV (http://boofcv.org).
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project name="BoofCV_SFM" basedir="." default="main">

  <import file="../build_common.xml"/>

</project>
<!--
  ~ Copyright (c) 2011-2013, Peter Abeles. All Rights Reserved.
  ~
  ~ This file is part of BoofCV (http://boofcv.org).
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project name="BoofCV_Visualize" basedir="." default="main">

  <import file="../build_common.xml"/>

</project>
