<?xml version="1.0"?>

<!--
     This is a build.xml file for building the OpenFileFast plugin.

     The 'dist' target compiles the plugin and creates the JAR file.
     Before running the 'dist' target, you will need to generate the
     documentation using one of these two targets:

     - 'docs-xalan': Creates documentation using the Xalan XSLT processor
     - 'docs-xsltproc': Creates documentation using the xsltproc tool

     To use it for building your own plugin, make these changes:

     - Change definition of 'jar.name' to the name of your plugin's JAR file
     - If necessary, add any dependencies to the 'project.class.path'
       definition
     - If necessary, change the list of files in the 'dist' targtet
     - If necessary, change the 'docs-xalan' and 'docs-xsltproc' targets
       accordingly.
-->

<project name="off-jedit" default="dist" basedir=".">
	<property file="build.properties"/>
	<property file="../build.properties"/>

	<property name="jar.name"  value="${ant.project.name}.jar"/>
	<property name="version"  value="1.0.1"/>
	<property name="srcfile"  value="${ant.project.name}_src_${version}.zip"/>

	<property name="src.dir" value="."/>
	<property name="build.dir" value="build"/>

	<property name="jedit.install.dir"  value=".."/>
	<property name="jedit.jars.dir"  value="${jedit.install.dir}/jars"/>

	<path id="project.class.path">
		<pathelement location="${install.dir}/ProjectViewer.jar"/> 
		<pathelement location="${jedit.install.dir}/jedit.jar"/> 
	</path>


	<target name="init">
		<mkdir dir="${build.dir}"/>
	</target>


	<target name="compile" depends="init">
		<javac
			srcdir="${src.dir}"
			destdir="${build.dir}"
			deprecation="on"
			debug="on"
			source="5"
			target="5"
			includejavaruntime="no"
			nowarn="true"
		>
			<classpath refid="project.class.path"/>
		</javac>
	</target>


	<target name="dist" depends="compile">
		<!-- <mkdir dir="${install.dir}"/> -->
		<jar jarfile="${install.dir}/${jar.name}">
			<fileset dir="${build.dir}"/>
			<fileset dir="${src.dir}">
				<include name="actions.xml"/>
				<include name="dockables.xml"/>
				<include name="**/*.props"/>
				<include name="**/*.html"/>
			</fileset>
			<fileset dir="${src.dir}/src">
				<include name="**/*.png"/>
				<include name="**/*.gif"/>
			</fileset>
		</jar>
	</target>

	<target name="src_dist" depends="init">
		<zip zipfile="${srcfile}">
			<fileset dir="${src.dir}">
				<exclude name="build/**"/>
				<exclude name="${srcfile}"/>
				<exclude name="build.properties"/>
			</fileset>
		</zip>
	</target>

	<target name="clean">
		<delete dir="${build.dir}"/>
		<delete file="${srcfile}"/>
		<delete>
			<fileset dir="." includes="**/*~" defaultexcludes="no"/>
			<!--fileset dir="." includes="**/*.html" defaultexcludes="no"/-->
		</delete>
	</target>

	<!-- Generate tags using 'ctags' program from ctags.sourceforge.net -->
	<target name="tags">
		<exec executable="ctags">
			<arg value="-R" />
			<arg path="." />
		</exec>
	</target>
</project>
<?xml version="1.0"?>

<!--
     This is a build.xml file for building the OpenFileFast plugin.

     The 'dist' target compiles the plugin and creates the JAR file.
     Before running the 'dist' target, you will need to generate the
     documentation using one of these two targets:

     - 'docs-xalan': Creates documentation using the Xalan XSLT processor
     - 'docs-xsltproc': Creates documentation using the xsltproc tool

     To use it for building your own plugin, make these changes:

     - Change definition of 'jar.name' to the name of your plugin's JAR file
     - If necessary, add any dependencies to the 'project.class.path'
       definition
     - If necessary, change the list of files in the 'dist' targtet
     - If necessary, change the 'docs-xalan' and 'docs-xsltproc' targets
       accordingly.
-->

<project name="off-jedit" default="dist" basedir=".">
	<property file="build.properties"/>
	<property file="../build.properties"/>

	<property name="jar.name"  value="${ant.project.name}.jar"/>
	<property name="version"  value="1.0.1"/>
	<property name="srcfile"  value="${ant.project.name}_src_${version}.zip"/>

	<property name="src.dir" value="."/>
	<property name="build.dir" value="build"/>

	<property name="jedit.install.dir"  value=".."/>
	<property name="jedit.jars.dir"  value="${jedit.install.dir}/jars"/>

	<path id="project.class.path">
		<pathelement location="${install.dir}/ProjectViewer.jar"/> 
		<pathelement location="${jedit.install.dir}/jedit.jar"/> 
	</path>


	<target name="init">
		<mkdir dir="${build.dir}"/>
	</target>


	<target name="compile" depends="init">
		<javac
			srcdir="${src.dir}"
			destdir="${build.dir}"
			deprecation="on"
			debug="on"
			source="5"
			target="5"
			includejavaruntime="no"
			nowarn="true"
		>
			<classpath refid="project.class.path"/>
		</javac>
	</target>


	<target name="dist" depends="compile">
		<!-- <mkdir dir="${install.dir}"/> -->
		<jar jarfile="${install.dir}/${jar.name}">
			<fileset dir="${build.dir}"/>
			<fileset dir="${src.dir}">
				<include name="actions.xml"/>
				<include name="dockables.xml"/>
				<include name="**/*.props"/>
				<include name="**/*.html"/>
			</fileset>
			<fileset dir="${src.dir}/src">
				<include name="**/*.png"/>
				<include name="**/*.gif"/>
			</fileset>
		</jar>
	</target>

	<target name="src_dist" depends="init">
		<zip zipfile="${srcfile}">
			<fileset dir="${src.dir}">
				<exclude name="build/**"/>
				<exclude name="${srcfile}"/>
				<exclude name="build.properties"/>
			</fileset>
		</zip>
	</target>

	<target name="clean">
		<delete dir="${build.dir}"/>
		<delete file="${srcfile}"/>
		<delete>
			<fileset dir="." includes="**/*~" defaultexcludes="no"/>
			<!--fileset dir="." includes="**/*.html" defaultexcludes="no"/-->
		</delete>
	</target>

	<!-- Generate tags using 'ctags' program from ctags.sourceforge.net -->
	<target name="tags">
		<exec executable="ctags">
			<arg value="-R" />
			<arg path="." />
		</exec>
	</target>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See harness/README in the NetBeans platform -->
<!-- for some information on what you could do (e.g. targets to override). -->
<!-- If you delete this file and reopen the project it will be recreated. -->
<project name="net.sickill.off" default="netbeans" basedir=".">
    <description>Builds, tests, and runs the project net.sickill.off.</description>
    <import file="nbproject/build-impl.xml"/>
</project>
