<?xml version="1.0"?>

<project default="dist" basedir="." name="Authz DB Module">

    <description>Authz DB Module</description>

    <!-- load user nimbus.build.properties file, if it exists -->
    <property file="${user.home}/nimbus.build.properties"/>

    <!-- load some defaults from colocated build.properties file -->
    <property file="build.properties"/>


    <!-- *******************************************************************
         MODULE NAME
         ******************************************************************* -->

    <target name="disp">
        <echo message="**** Module: ${basedir}" />
    </target>


    <!-- *******************************************************************
         CHECK MINIMUM JDK
         ******************************************************************* -->

    <target name="checkjdk">
        <available property="jdk1.4+" classname="java.lang.CharSequence"/>
        <fail message="Aborting: determined you are not building with >= JDK 1.4"
              unless="jdk1.4+" />
    </target>
    

    <!-- *******************************************************************
         INITIALIZE
         ******************************************************************* -->

    <target name="init" depends="checkjdk">
        <mkdir dir="${nimbus.authz.main.build.dir}"/>
        <mkdir dir="${nimbus.authz.main.build.dest}"/>
        <mkdir dir="${nimbus.authz.main.dist.dir}"/>
    </target>


    <!-- *******************************************************************
         COMPILATION
         ******************************************************************* -->

    <path id="nimbus.authz.main.classpath">
        <fileset dir="${nimbus.authz.main.lib.dir}">
             <include name="*.jar"/>
        </fileset>
    </path>

    <target name="compile" depends="init">

        <javac srcdir="${nimbus.authz.main.src.dir}"
               destdir="${nimbus.authz.main.build.dest}"
               classpathref="nimbus.authz.main.classpath"
               source="1.5"
               target="1.5"
               includeantruntime="false"
               debug="on">

            <include name="**/*.java"/>
            <compilerarg value="${nimbus.java.compilerarg}" />
            
        </javac>

        <copy todir="${nimbus.authz.main.build.dest}" >
              <fileset dir="${nimbus.authz.main.src.dir}"
                       includes="**/*.properties" />
              <fileset dir="${nimbus.authz.main.src.dir}"
                       includes="**/*.xml" />
              <fileset dir="${nimbus.authz.main.src.dir}"
                       includes="**/*.txt" />
        </copy>

    </target>

    
    <!-- *******************************************************************
         CREATE ARCHIVE FILE
         ******************************************************************* -->

    <target name="jar" depends="compile">
        <jar destfile="${nimbus.authz.main.dist.dir}/${nimbus.authz.main.jar.name}"
             basedir="${nimbus.authz.main.build.dest}"/>
    </target>

    
    <!-- *******************************************************************
         CREATE DISTRIBUTION
         ******************************************************************* -->

    <target name="dist">
        <echo message="**** Module: ${basedir}" />
        <echo>Building: ${nimbus.authz.main.print-noun}</echo>
        <antcall target="jar" />
        <echo>Built: ${nimbus.authz.main.print-noun}
        </echo>
    </target>

    
    <!-- *******************************************************************
         CLEAN
         ******************************************************************* -->

    <target name="clean">
        <delete dir="${nimbus.authz.main.build.dir}"/>
        <delete dir="${nimbus.authz.main.dist.dir}"/>
        <delete dir="tmp"/>
        <echo message="Cleaned: ${basedir}" />
    </target>

</project>
<?xml version="1.0"?>

<project default="dist" basedir="." name="Auto Container Java Lib">

    <description>Auto Container Java Lib</description>

    <property file="build.properties"/>

    
    <!-- *******************************************************************
         CHECK JDK REQUIREMENTS
         ******************************************************************* -->

    <target name="checkjdk">
        
        <available property="jdk1.5+"
                   classname="java.lang.Readable"/>
        <fail message="Aborting: determined you are not building with >= JDK 1.5"
              unless="jdk1.5+" />

    </target>


    <!-- *******************************************************************
         INITIALIZE
         ******************************************************************* -->

    <target name="init" depends="checkjdk">

        <available file="${autocommon.lib.dir}"
                   type="dir"
                   property="libs.present" />

        <fail message="Failure, directory does not exist: ${autocommon.lib.dir}"
              unless="libs.present" />

        <mkdir dir="${autocommon.build.dir}"/>
        <mkdir dir="${autocommon.dist.dir}"/>
    </target>


    <!-- *******************************************************************
         COMPILATION
         ******************************************************************* -->

    <path id="autocommon.deps.classpath">
        <fileset dir="${autocommon.lib.dir}">
              <include name="*.jar"/>
        </fileset>
    </path>
    <path id="autocommon.all.classpath">
        <fileset dir="${autocommon.lib.dir}">
              <include name="*.jar"/>
        </fileset>
        <fileset dir="${autocommon.dist.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <target name="compile" depends="init">

        <javac srcdir="${autocommon.src.dir}"
               destdir="${autocommon.build.dir}"
               classpathref="autocommon.deps.classpath"
               includeantruntime="false"
               target="1.5"
               source="1.5"
               debug="on">

            <include name="**/*.java"/>
            <compilerarg value="${nimbus.java.compilerarg}" />

        </javac>

        <copy todir="${autocommon.build.dir}" >
              <fileset dir="${autocommon.src.dir}"
                       includes="**/*.properties" />
              <fileset dir="${autocommon.src.dir}"
                       includes="**/*.xml" />
              <fileset dir="${autocommon.src.dir}"
                       includes="**/*.txt" />
        </copy>

    </target>


    <!-- *******************************************************************
         CREATE ARCHIVE FILE
         ******************************************************************* -->

    <target name="jar" depends="compile">
        <jar destfile="${autocommon.dist.dir}/${autocommon.jar.name}"
             basedir="${autocommon.build.dir}"/>
    </target>


    <!-- *******************************************************************
         CREATE DISTRIBUTION
         ******************************************************************* -->

    <target name="dist" depends="jar">
        <delete dir="${autocommon.build.dir}"/>
    </target>


    <!-- *******************************************************************
         CREATE SPECIAL DISTRIBUTION
         ******************************************************************* -->

    <target name="webdist" depends="dist">
        
    </target>

    
    <!-- *******************************************************************
         CLEAN
         ******************************************************************* -->

    <target name="clean">
        <delete dir="${autocommon.build.dir}"/>
        <delete dir="${autocommon.dist.dir}"/>
        <echo message="Cleaned: ${basedir}" />
    </target>

</project>
<?xml version="1.0"?>

<project default="dist" basedir="." name="Nimbus auto-configuration tools">

    <description>Nimbus auto-configuration tools</description>

    <!-- load user nimbus.build.properties file, if it exists -->
    <property file="${user.home}/nimbus.build.properties"/>

    <!-- load defaults from colocated build.properties file -->
    <property file="build.properties"/>

    <!-- *******************************************************************
         MODULE NAME
         ******************************************************************* -->

    <target name="disp">
        <echo message="**** Module: ${basedir}" />
    </target>


    <!-- *******************************************************************
         LOCATE GT DEPENDENCIES
         ******************************************************************* -->

    <property environment="env"/>
    <property name="abs.deploy.dir" location="${env.GLOBUS_LOCATION}"/>
    <property name="gt4_0.lib.dir" location="${abs.deploy.dir}/lib"/>
    <property name="build.packages" location="${nimbus.autoconfig.gt4_0.build.packages.xml}"/>


    <!-- *******************************************************************
         GT RELATED NAMES
         ******************************************************************* -->

    <!-- gar.name -->
    <property name="gar.name"
              value="${nimbus.autoconfig.gt4_0.gar.garname}"/>

    <!-- garjars.id -->
    <fileset dir="${nimbus.autoconfig.gt4_0.gar.build.lib.dir}" id="garjars"/>
    <property name="garjars.id" value="garjars"/>

    <!-- garshare.id -->
    <fileset dir="${nimbus.autoconfig.gt4_0.gar.build.share.dir}" id="garshare"/>
    <property name="garshare.id" value="garshare"/>

    <!-- garetc.id -->
    <fileset dir="${nimbus.autoconfig.gt4_0.gar.build.etc.dir}" id="garEtc"/>
    <property name="garetc.id" value="garEtc"/>


    <!-- *********************
         unused GAR properties
         setting these to avoid build warning messages from GT...
         ********************* -->

    <!-- garschema.id -->
    <fileset dir="${nimbus.autoconfig.gt4_0.gar.build.schema.dir}" id="garschema"/>
    <property name="garschema.id" value="garschema"/>

    <!-- gardocs.id -->
    <fileset dir="${nimbus.autoconfig.gt4_0.gar.build.docs.dir}" id="gardocs"/>
    <property name="gardocs.id" value="gardocs"/>

    <!-- garbin.id -->
    <fileset dir="${nimbus.autoconfig.gt4_0.gar.build.bin.dir}" id="garbin"/>
    <property name="garbin.id" value="garbin"/>


    <!-- *******************************************************************
         CHECK MINIMUM JDK
         ******************************************************************* -->

    <target name="checkjdk">
        <available property="jdk1.5+"
                   classname="java.lang.Readable"/>
        <fail message="Aborting: determined you are not building with >= JDK 1.5"
              unless="jdk1.5+" />
    </target>


    <!-- *******************************************************************
         INITIALIZE
         ******************************************************************* -->

    <target name="init" depends="checkjdk">
        <mkdir dir="${nimbus.autoconfig.gt4_0.gar.dist.dir}"/>
        <mkdir dir="${nimbus.autoconfig.gt4_0.lib.dir}" />
        <mkdir dir="${nimbus.autoconfig.gt4_0.gar.build.dir}"/>
        <mkdir dir="${nimbus.autoconfig.gt4_0.build.dest}"/>
        <mkdir dir="${nimbus.autoconfig.gt4_0.gar.build.lib.dir}"/>
        <mkdir dir="${nimbus.autoconfig.gt4_0.gar.build.etc.dir}"/>
        <mkdir dir="${nimbus.autoconfig.gt4_0.gar.build.share.dir}"/>
        <mkdir dir="${nimbus.autoconfig.gt4_0.gar.build.schema.dir}"/>
        <mkdir dir="${nimbus.autoconfig.gt4_0.gar.build.docs.dir}"/>
        <mkdir dir="${nimbus.autoconfig.gt4_0.gar.build.bin.dir}"/>
    </target>


    <!-- *******************************************************************
         COPIES FOR LIB DIRECTORY
         ******************************************************************* -->

    <target name="lib_copies" depends="init">

        <copy todir="${nimbus.autoconfig.gt4_0.gar.build.lib.dir}">

            <fileset dir="${nimbus.autoconfig.gt4_0.lib.dir}">
                <include name="*.jar"/>
                <include name="*LICENSE*"/>
            </fileset>

            <fileset dir="${nimbus.autocommon.java.dist.dir}">
                <include name="*.jar"/>
                <include name="*LICENSE*"/>
            </fileset>
        </copy>
    </target>


    <!-- *******************************************************************
         COPIES FOR ETC DIRECTORY
         ******************************************************************* -->

    <target name="etc_copies" depends="init">
        <copy todir="${nimbus.autoconfig.gt4_0.gar.build.etc.dir}">
            <fileset dir="${nimbus.autoconfig.gt4_0.etc.dir}" />
        </copy>
    </target>



    <!-- *******************************************************************
         COPIES FOR SHARE DIRECTORY
         ******************************************************************* -->

    <target name="share_copies" depends="init">
        <copy todir="${nimbus.autoconfig.gt4_0.gar.build.share.dir}">
            <fileset dir="${nimbus.autoconfig.gt4_0.share.dir}" />
        </copy>
    </target>


    <!-- *******************************************************************
         COMPILATION
         ******************************************************************* -->

    <path id="nimbus.autoconfig.gt4_0.classpath">

        <fileset dir="${gt4_0.lib.dir}">
            <include name="*.jar"/>
            <exclude name="nimbus-*.jar" />
        </fileset>

        <fileset dir="${nimbus.autoconfig.gt4_0.lib.dir}">
              <include name="*.jar"/>
        </fileset>

        <fileset dir="${nimbus.autocommon.java.dist.dir}">
            <include name="*.jar"/>
        </fileset>

        <fileset dir="${nimbus.service.lib.dir}">
            <include name="*.jar"/>
        </fileset>
        
    </path>

    <target name="compile" depends="init">

        <javac srcdir="${nimbus.autoconfig.gt4_0.src.dir}"
               destdir="${nimbus.autoconfig.gt4_0.build.dest}"
               classpathref="nimbus.autoconfig.gt4_0.classpath"
               includeantruntime="false"
               source="1.5"
               target="1.5"
               debug="on">

            <include name="**/*.java"/>
            <compilerarg value="${nimbus.java.compilerarg}" />

        </javac>

        <copy todir="${nimbus.autoconfig.gt4_0.build.dest}" >

              <fileset dir="${nimbus.autoconfig.gt4_0.src.dir}"
                       includes="**/*.properties" />

              <fileset dir="${nimbus.autoconfig.gt4_0.src.dir}"
                       includes="**/*.xml" />

              <fileset dir="${nimbus.autoconfig.gt4_0.src.dir}"
                       includes="**/*.txt" />
        </copy>

    </target>


    <!-- *******************************************************************
         CREATE JAR FILE
         ******************************************************************* -->

    <target name="jar" depends="compile">
        <jar destfile="${nimbus.autoconfig.gt4_0.gar.build.lib.dir}/${nimbus.autoconfig.gt4_0.jar.name}"
             basedir="${nimbus.autoconfig.gt4_0.build.dest}"/>
    </target>


    <!-- *******************************************************************
         CLEAN
         ******************************************************************* -->

    <target name="clean">
        <delete dir="${nimbus.autoconfig.gt4_0.gar.build.dir}"/>
        <delete dir="${nimbus.autoconfig.gt4_0.gar.dist.dir}"/>
        <delete dir="tmp"/>
        <echo message="Cleaned: ${basedir}" />
    </target>


    <!-- *******************************************************************
         CREATE DISTRIBUTION
         ******************************************************************* -->

    <target name="_dist" depends="jar, lib_copies, share_copies, etc_copies">

        <ant antfile="${build.packages}" target="makeGar">

            <property name="forget.server-deploy.wsdd" value="x" />
            <property name="forget.client-deploy.wsdd" value="x" />
            <property name="forget.jndi-config-deploy.xml" value="x" />
            <reference refid="${garjars.id}"/>
            <reference refid="${garetc.id}"/>
            <reference refid="${garshare.id}"/>
            <reference refid="${garschema.id}"/>
            <reference refid="${gardocs.id}"/>
            <reference refid="${garbin.id}"/>

            <!-- makeGar is also looking at:
                 - gar.name
            -->

        </ant>

        <delete dir="tmp" />

    </target>

    <target name="dist">
        <echo message="**** Module: ${basedir}" />
        <echo>Building: ${nimbus.autoconfig.gt4_0.gar.print-noun}</echo>
        <antcall target="_dist" />
        <echo>Built: ${nimbus.autoconfig.gt4_0.gar.print-noun}
        </echo>
    </target>

    
    <!-- *******************************************************************
         DEPLOY ONLY JARS (development target)
         ******************************************************************* -->

    <target name="justjars" depends="jar, lib_copies">
        <echo message="Copying JARs: ${basedir}" />
        <copy todir="${gt4_0.lib.dir}" >
              <fileset refid="garjars" />
        </copy>
    </target>


    <!-- *******************************************************************
         DEPLOYMENT
         ******************************************************************* -->

    <target name="assessGarPresence">
        <available property="garIsPresent"
                   type="file"
                   file="${gar.name}" />
    </target>

    <target name="gar.not.present"
            depends="assessGarPresence"
            unless="garIsPresent">

        <echo>



***************** ERROR *****************

Cannot find archive to install: ${gar.name}

Did you build?  Use the build-and-install script.



        </echo>

        <fail message="Cannot find archive to install: ${gar.name}" />

    </target>

    <target name="_deploy" depends="gar.not.present">

        <ant antfile="${build.packages}" target="deployGar">
            <property name="gar.id" value="${nimbus.autoconfig.gt4_0.gar.package.name}"/>
        </ant>

        <delete dir="tmp"/>

    </target>

    <target name="deploy" depends="disp">
        <echo>Installing: ${nimbus.autoconfig.gt4_0.gar.print-noun}</echo>
        <antcall target="_deploy" />
        <echo>Installed: ${nimbus.autoconfig.gt4_0.gar.print-noun}
        </echo>
    </target>

    <target name="assessDeployed">

        <available property="isDeployed"
                   type="dir"
                   file="${abs.deploy.dir}/etc/globus_packages/${nimbus.autoconfig.gt4_0.gar.package.name}" />

        <condition property="isNotDeployed" value="true">
            <not>
                <isset property="isDeployed" />
            </not>
        </condition>

    </target>

    <target name="printDeployed"
            depends="assessDeployed"
            unless="isDeployed">

        <echo message="Already undeployed: ${nimbus.autoconfig.gt4_0.gar.package.name}"/>

    </target>

    <target name="undeploy" depends="printDeployed" unless="isNotDeployed">

        <ant antfile="${build.packages}" target="undeployGar">
            <property name="gar.id" value="${nimbus.autoconfig.gt4_0.gar.package.name}"/>
        </ant>

        <echo message="Undeployed: ${nimbus.autoconfig.gt4_0.gar.package.name}"/>

    </target>

</project>
<?xml version="1.0"?>

<project default="dist" basedir="." name="context broker">

    <description>Context Broker build file</description>

    <!-- load user nimbus.build.properties file, if it exists -->
    <property file="${user.home}/nimbus.build.properties"/>

    <!-- load defaults from colocated build.properties file -->
    <property file="build.properties"/>


    <!-- *******************************************************************
         LOCATE GT DEPENDENCIES
         ******************************************************************* -->

    <property environment="env"/>
    <property name="abs.deploy.dir"
              location="${env.GLOBUS_LOCATION}"/>
    <property name="gt4_0.lib.dir"
              location="${abs.deploy.dir}/lib"/>
    

    <!-- *******************************************************************
         CHECK MINIMUM JDK
         ******************************************************************* -->

    <target name="checkjdk">
        <available property="jdk1.5+"
                   classname="java.lang.Readable"/>
        <fail message="Aborting: determined you are not building with >= JDK 1.5"
              unless="jdk1.5+" />
    </target>

    
    <!-- *******************************************************************
         INITIALIZE
         ******************************************************************* -->

    <target name="init" depends="checkjdk">
        <mkdir dir="${nimbus.ctxbroker.build.dir}"/>
        <mkdir dir="${nimbus.ctxbroker.build.dest}"/>
        <mkdir dir="${nimbus.ctxbroker.dist.dir}"/>
    </target>


    <!-- *******************************************************************
         WSDL, STUBS ETC
         ******************************************************************* -->

    <target name="stubs" depends="init">
        <ant dir="${nimbus.ctxbroker.stubs.dir}" target="dist" />
    </target>

    <target name="stubscopyjar" depends="init">
        <ant dir="${nimbus.ctxbroker.stubs.dir}" target="copyjar" />
    </target>

    <!-- *******************************************************************
         COMPILATION
         ******************************************************************* -->

    <path id="nimbus.ctxbroker.classpath">

        <fileset dir="${gt4_0.lib.dir}">
            <include name="*.jar"/>
            <exclude name="nimbus-*.jar" />
        </fileset>

        <fileset dir="${nimbus.ctxbroker.stubs.dist}">
              <include name="*.jar"/>
        </fileset>

        <fileset dir="${nimbus.authz.dist.dir}">
            <include name="*.jar"/>
        </fileset>

        <fileset dir="${nimbus.querygeneral.dist.dir}">
              <include name="*.jar"/>
        </fileset>

        <fileset dir="${nimbus.service.api.dist.dir}">
            <include name="*.jar"/>
        </fileset>

        <fileset dir="${nimbus.ctxbroker.lib.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <target name="compile" depends="stubs">

        <javac srcdir="${nimbus.ctxbroker.src.dir}"
               destdir="${nimbus.ctxbroker.build.dest}"
               classpathref="nimbus.ctxbroker.classpath"
               classpath="${nimbus.ctxbroker.stubs.dist}/*jar"
               includeantruntime="false"
               source="1.5"
               target="1.5"
               debug="on">

            <include name="**/*.java"/>

        </javac>

        <copy todir="${nimbus.ctxbroker.build.dest}" >

              <fileset dir="${nimbus.ctxbroker.src.dir}"
                       includes="**/*.properties" />

              <fileset dir="${nimbus.ctxbroker.src.dir}"
                       includes="**/*.xml" />

              <fileset dir="${nimbus.ctxbroker.src.dir}"
                       includes="**/*.txt" />
        </copy>

    </target>


    <!-- *******************************************************************
         CREATE ARCHIVE FILE
         ******************************************************************* -->

    <target name="jar" depends="compile">
        <jar destfile="${nimbus.ctxbroker.dist.dir}/${nimbus.ctxbroker.jar.name}"
             basedir="${nimbus.ctxbroker.build.dest}"/>
    </target>

    
    <!-- *******************************************************************
         CLEAN
         ******************************************************************* -->

    <target name="clean">
        <delete file=".ant-targets-build.xml" />
        <delete dir="${nimbus.ctxbroker.build.dir}"/>
        <delete dir="${nimbus.ctxbroker.dist.dir}"/>
        <ant dir="${nimbus.ctxbroker.wsdl.compact.dir}" target="clean" />
        <ant dir="${nimbus.ctxbroker.stubs.dir}" target="clean" />
        <ant dir="${nimbus.ctxbroker.gar.dir}" target="clean" />
    </target>

    
    <!-- *******************************************************************
         CREATE DISTRIBUTION
         ******************************************************************* -->

    <target name="dist" depends="clean, jar" />


    <!-- *******************************************************************
         DEPLOY ONLY JARS (development target)
         ******************************************************************* -->

    <target name="justjars" depends="jar">
        <echo message="Copying JARs: ${basedir}" />
        <copy todir="${gt4_0.lib.dir}" >
            <fileset dir="${nimbus.ctxbroker.dist.dir}">
                  <include name="*.jar"/>
            </fileset>
        </copy>
    </target>


    <!-- *******************************************************************
         GAR RELATED
         ******************************************************************* -->

    <target name="gar-bundled">
        <ant dir="${nimbus.ctxbroker.gar.dir}" target="dist-bundled" />
    </target>

    <target name="gar-standalone">
        <ant dir="${nimbus.ctxbroker.gar.dir}" target="dist-standalone" />
    </target>

    <target name="deploy" depends="dist, gar-bundled">
        <ant dir="${nimbus.ctxbroker.gar.dir}" target="deploy" />
    </target>

    <target name="deploy-standalone" depends="dist, gar-standalone">
        <ant dir="${nimbus.ctxbroker.gar.dir}" target="deploy" />
    </target>

    <target name="undeploy">
        <ant dir="${nimbus.ctxbroker.gar.dir}" target="undeploy" />
    </target>


    <!-- *******************************************************************
         NEW WSDL
         ******************************************************************* -->

    <target name="newcompact">
        <ant dir="${nimbus.ctxbroker.wsdl.compact.dir}" target="clean" />
        <ant dir="${nimbus.ctxbroker.wsdl.compact.dir}" target="copyToDeployableComponent" />
        <ant dir="${nimbus.ctxbroker.stubs.dir}" target="clean" />
        <ant dir="${nimbus.ctxbroker.stubs.dir}" target="dist" />
    </target>

</project>
<project basedir="." default="disp" name="GT4.0 Nimbus Context Broker GAR">

    <description>GT4.0 context broker GAR builder</description>

    <!-- load user nimbus.build.properties file, if it exists -->
    <property file="${user.home}/nimbus.build.properties" />

    <!-- load defaults from colocated build.properties file -->
    <property file="build.properties" />


    <!-- *******************************************************************
         LOCATE GT DEPENDENCIES
         ******************************************************************* -->

    <property environment="env"/>
    <property name="abs.deploy.dir"
              location="${env.GLOBUS_LOCATION}"/>
    <property name="gt4_0.lib.dir"
              location="${abs.deploy.dir}/lib"/>
    <property name="build.packages"
              location="${nimbus.messaging.gt4_0.gar.build.packages.xml}"/>
    <property name="build.stubs"
              location="${abs.deploy.dir}/share/globus_wsrf_tools/build-stubs.xml"/>


    <!-- *******************************************************************
         GT RELATED PROPERTIES
         ******************************************************************* -->

    <!-- gar.name -->
    <property name="gar.name"
              value="${nimbusctx.gt4_0.gar.dist.dir}/${nimbusctx.gt4_0.gar.package.name}.gar"/>

    <!-- garjars.id -->
    <fileset dir="${nimbusctx.gt4_0.gar.build.lib.dir}" id="garjars"/>
    <property name="garjars.id" value="garjars"/>

    <!-- garetc.id -->
    <fileset dir="${nimbusctx.gt4_0.gar.build.etc.dir}" id="garEtc"/>
    <property name="garetc.id" value="garEtc"/>

    <!--
    <property name="noSchema" value="true"/>
    If we want to deploy the WSDL, we must *not* set this property at all
    -->

    <property name="garserverdeployment.file"
              location="${nimbusctx.gt4_0.gar.wsddfile}"/>

    <property name="garjndiconfigdeployment.file"
              location="${nimbusctx.gt4_0.gar.jndifile}"/>

    <!-- *********************
         unused GAR properties
         setting these to avoid build warning messages from GT...
         ********************* -->

    <!-- garshare.id -->
    <fileset dir="${nimbusctx.gt4_0.gar.build.share.dir}" id="garshare"/>
    <property name="garshare.id" value="garshare"/>

    <!-- garschema.id -->
    <fileset dir="${nimbusctx.gt4_0.gar.build.schema.dir}" id="garschema"/>
    <property name="garschema.id" value="garschema"/>

    <!-- gardocs.id -->
    <fileset dir="${nimbusctx.gt4_0.gar.build.docs.dir}" id="gardocs"/>
    <property name="gardocs.id" value="gardocs"/>

    <!-- garbin.id -->
    <fileset dir="${nimbusctx.gt4_0.gar.build.bin.dir}" id="garbin"/>
    <property name="garbin.id" value="garbin"/>



    <!-- *******************************************************************
         MODULE NAME
         ******************************************************************* -->

    <target name="disp">
        <echo message="**** Module: ${basedir}" />
    </target>


    <!-- *******************************************************************
         CHECK MINIMUM JDK
         ******************************************************************* -->

    <target name="checkjdk">
        <available property="jdk1.4+" classname="java.lang.CharSequence"/>
        <fail message="Aborting: determined you are not building with >= JDK 1.4"
              unless="jdk1.4+" />
    </target>


    <!-- *******************************************************************
         INITIALIZE
         ******************************************************************* -->

    <target name="init" depends="checkjdk">
        <mkdir dir="${nimbusctx.gt4_0.gar.build.dir}"/>
        <mkdir dir="${nimbusctx.gt4_0.gar.build.lib.dir}"/>
        <mkdir dir="${nimbusctx.gt4_0.gar.build.etc.dir}"/>
        <mkdir dir="${nimbusctx.gt4_0.gar.build.share.dir}"/>
        <mkdir dir="${nimbusctx.gt4_0.gar.build.docs.dir}"/>
        <mkdir dir="${nimbusctx.gt4_0.gar.build.bin.dir}"/>
        <mkdir dir="${nimbusctx.gt4_0.gar.dist.dir}"/>
    </target>


    <!-- *******************************************************************
         CHECK FOR COMPONENTS
         ******************************************************************* -->

    <target name="check" depends="init">

        <copy todir="${nimbusctx.gt4_0.gar.build.lib.dir}">

            <fileset dir="${nimbusctx.gt4_0.stubs.dist}">
                <include name="*.jar"/>
                <include name="*LICENSE*"/>
            </fileset>
            <fileset dir="${nimbusctx.gt4_0.service.dist}">
                <include name="*.jar"/>
                <include name="*LICENSE*"/>
            </fileset>

        </copy>

    </target>


    <!-- *******************************************************************
         COPIES FOR LIB DIRECTORY FOR STANDALONE DISTRIBUTION
         ******************************************************************* -->
    
    <target name="copy_libraries" depends="init">

        <copy todir="${nimbusctx.gt4_0.gar.build.lib.dir}">

            <fileset dir="${nimbusctx.baselibservices.dir}">
                <include name="*.jar"/>
                <include name="*LICENSE*"/>
            </fileset>
            <fileset dir="${nimbusctx.service.api.dist.dir}">
                <include name="*.jar"/>
                <include name="*LICENSE*"/>
            </fileset>
            <fileset dir="${nimbusctx.authzdbmodule.dist.dir}">
                <include name="*.jar"/>
                <include name="*LICENSE*"/>
            </fileset>
            <fileset dir="${nimbusctx.autocommon.dist.dir}">
                <include name="*.jar"/>
                <include name="*LICENSE*"/>
            </fileset>
            <fileset dir="${nimbusctx.querygeneral.dist.dir}">
                <include name="*.jar"/>
                <include name="*LICENSE*"/>
            </fileset>
        </copy>
    </target>

    
    <!-- *******************************************************************
         COPIES FOR ETC DIRECTORY
         ******************************************************************* -->

    <target name="etc_copies" depends="init">
        <copy todir="${nimbusctx.gt4_0.gar.build.etc.dir}">
            <fileset dir="${nimbusctx.gt4_0.gar.etc.dir}" />
        </copy>
    </target>

    <target name="copy-bundled-main.xml">
        <copy tofile="${nimbusctx.gt4_0.gar.etc.dir}/other/main.xml"
              file="${nimbusctx.gt4_0.gar.etc.dir}/other/bundled-main.xml" />
        <echo>Broker context: bundled-main.xml</echo>
    </target>

    <target name="copy-standalone-main.xml">
        <copy tofile="${nimbusctx.gt4_0.gar.etc.dir}/other/main.xml"
              file="${nimbusctx.gt4_0.gar.etc.dir}/other/standalone-main.xml" />
        <echo>Broker context: standalone-main.xml</echo>
    </target>

    
    <!-- *******************************************************************
         CREATE DISTRIBUTION
         ******************************************************************* -->

    <target name="_dist" depends="check, etc_copies">
        <ant antfile="${build.packages}" target="makeGar">
            <property name="forget.client-deploy.wsdd" value="x" />
            <reference refid="${garjars.id}"/>
            <reference refid="${garetc.id}"/>
            <reference refid="${garshare.id}"/>
            <reference refid="${garschema.id}"/>
            <reference refid="${gardocs.id}"/>
            <reference refid="${garbin.id}"/>
        </ant>
        <!-- makeGar is also looking at:
             - gar.name
             - garserverdeployment.file
             - garjndiconfigdeployment.file
        -->

        <delete dir="tmp"/>
    </target>

    <target name="dist-bundled" depends="disp, copy-bundled-main.xml">
        <echo>Building: ${nimbusctx.gt4_0.gar.print-noun}</echo>
        <antcall target="_dist" />
        <echo>Built: ${nimbusctx.gt4_0.gar.print-noun}
        </echo>
    </target>

    <target name="dist-standalone" depends="disp, copy_libraries, copy-standalone-main.xml">
        <echo>Building: ${nimbusctx.gt4_0.gar.print-noun}</echo>
        <antcall target="_dist" />
        <echo>Built: ${nimbusctx.gt4_0.gar.print-noun}
        </echo>
    </target>


    <!-- *******************************************************************
         DEPLOYMENT
         ******************************************************************* -->

    <target name="assessGarPresence">
        <available property="garIsPresent"
                   type="file"
                   file="${gar.name}" />
    </target>

    <target name="gar.not.present"
            depends="assessGarPresence"
            unless="garIsPresent">

        <echo>



***************** ERROR *****************

Cannot find archive to install: ${gar.name}

Did you build?



        </echo>

        <fail message="Cannot find archive to install: ${gar.name}" />

    </target>

    <target name="_deploy" depends="gar.not.present">
        <ant antfile="${build.packages}" target="deployGar">
            <property name="gar.id" value="${nimbusctx.gt4_0.gar.package.name}"/>
        </ant>
        <delete dir="tmp"/>
    </target>

    <target name="deploy" depends="disp">
        <echo>Installing: ${nimbusctx.gt4_0.gar.print-noun}</echo>
        <antcall target="_deploy" />
        <echo>Installed: ${nimbusctx.gt4_0.gar.print-noun}</echo>
    </target>

    <target name="assessDeployed">

        <available property="isDeployed"
                   type="dir"
                   file="${abs.deploy.dir}/etc/globus_packages/${nimbusctx.gt4_0.gar.package.name}" />

        <condition property="isNotDeployed" value="true">
            <not>
                <isset property="isDeployed" />
            </not>
        </condition>

    </target>

    <target name="printDeployed"
            depends="assessDeployed"
            unless="isDeployed">

        <echo message="Already undeployed: ${nimbusctx.gt4_0.gar.package.name}"/>

    </target>

    <target name="undeploy" depends="printDeployed" unless="isNotDeployed">

        <ant antfile="${build.packages}" target="undeployGar">
            <property name="gar.id" value="${nimbusctx.gt4_0.gar.package.name}"/>
        </ant>

        <echo message="Undeployed: ${nimbusctx.gt4_0.gar.package.name}"/>

    </target>



    <!-- *******************************************************************
         CLEAN
         ******************************************************************* -->

    <target name="clean">
        <delete file=".ant-targets-build.xml"/>
        <delete dir="${nimbusctx.gt4_0.gar.build.dir}"/>
        <delete dir="${nimbusctx.gt4_0.gar.dist.dir}"/>
        <echo message="Cleaned: ${basedir}" />
    </target>

</project>
<?xml version="1.0"?>

<project default="all" name="nimbusctx-gt4.0-compact" basedir=".">

    <description>
        Context broker schemas and WSDL document before pre-processing.
        Not to be deployed. Only for easy design and maintenance of
        the interfaces.
    </description>

    <property environment="env"/>
    <property file="build.properties" />

    <property name="deploy.dir" location="${env.GLOBUS_LOCATION}"/>
    <property name="build.dir"  location="build"/>
    <property name="mapping.src"
              value="${share.dir}/NStoPkg.properties"/>
    <property name="build.packages" location=
        "${deploy.dir}/share/globus_wsrf_common/build-packages.xml"/>
    <property name="build.stubs" location=
        "${deploy.dir}/share/globus_wsrf_tools/build-stubs.xml"/>
    <property name="java.debug" value="on"/>

    <!-- do not deploy -->
    <property name="noSchema" value="true"/>

    <property name="compact.wsdl.suffix" value="_compact"/>
    <property name="flat.wsdl.suffix" value=""/>

    <!-- copy all schemas from shared source... -->
    <property name="schema.src"   location="${deploy.dir}/share/schema"/>

    <!-- to local comp/build/schema dir, for local imports
         (this should be refined to only dependencies - means
         developer must maintain extra list of depedencies) -->

    <property name="schema.dest"  location="${build.dir}/schema"/>
    <property name="garschema.id" value="garschema"/>
    <fileset dir="${schema.dest}"
             includes="${schema.subdirs}/*"
             id="garschema"/>

    <target name="init">
        <!-- copy Core dependency schemas to the local dir -->
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${schema.dest}"/>
        <copy toDir="${schema.dest}">
            <fileset dir="${schema.src}" casesensitive="yes">
                <include name="wsrf/**/*"/>
                <include name="ws/**/*"/>
            </fileset>
        </copy>

        <!-- copy local component WSDL to local build dir-->
        <mkdir dir="${schema.dest}/${schema.subdirs}"/>
        <copy toDir="${schema.dest}">
            <fileset dir="${schema.dir}" casesensitive="yes">
                <include name="${schema.subdirs}/**/*"/>
            </fileset>
        </copy>
    </target>

    <target name="flatten" depends="init">
         <property name="source.flatten.dir"
             location="${schema.dest}/${schema.subdirs}"/>
         <property name="target.flatten.dir"
             location="${schema.dest}/${schema.subdirs}"/>

        <ant antfile="${build.stubs}" target="flatten">
            <property name="wsdl.source"
                value="${nimbusctx.wsdl.root}_port_type${compact.wsdl.suffix}.wsdl"/>
            <property name="wsdl.target"
                value="${nimbusctx.wsdl.root}_port_type${flat.wsdl.suffix}.wsdl"/>
            <property name="wsdl.porttype" value="${nimbusctx.porttype}"/>
        </ant>

    </target>

    <target name="bindings" unless="bindings.present" depends="flatten">
        <property name="source.binding.dir"
                  value="${schema.dest}/${schema.subdirs}"/>
        <property name="target.binding.dir"
                  value="${schema.dest}/${schema.subdirs}"/>

        <ant antfile="${build.stubs}" target="generateBinding">
            <property name="binding.root" value="${nimbusctx.wsdl.root}"/>
            <property name="porttype.wsdl"
                value="${nimbusctx.wsdl.root}_port_type.wsdl"/>
        </ant>

    </target>

    <target name="copyToDeployableComponent" depends="bindings">
        <copy toDir="../schema">
            <fileset dir="${schema.dest}"
                     casesensitive="yes">
                <include name="${schema.subdirs}/**/*"/>
                <exclude name="${schema.subdirs}/**/*${compact.wsdl.suffix}.wsdl"/>
            </fileset>
        </copy>
    </target>

    <target name="clean">
        <delete dir="tmp"/>
        <delete dir="${build.dir}"/>
        <echo message="Cleaned: ${basedir}" />
    </target>

    <target name="all" depends="copyToDeployableComponent"/>

</project>
<project basedir="." default="disp" name="GT4.0 context broker web services stubs">

    <description>GT4.0 context broker web services stubs</description>

    <!-- load user nimbus.build.properties file, if it exists -->
    <property file="${user.home}/nimbus.build.properties" />

    <!-- load defaults from colocated build.properties file -->
    <property file="./build.properties" />


    <!-- *******************************************************************
         LOCATE GT DEPENDENCIES
         ******************************************************************* -->

    <property environment="env"/>
    <property name="abs.deploy.dir"
              location="${env.GLOBUS_LOCATION}"/>
    <property name="gt4_0.lib.dir"
              location="${abs.deploy.dir}/lib"/>
    <property name="build.stubs"
              location="${abs.deploy.dir}/share/globus_wsrf_tools/build-stubs.xml"/>

    
    <!-- *******************************************************************
         GT RELATED PROPERTIES
         ******************************************************************* -->

    <!-- copy all schemas from shared source... -->
    <property name="schema.src"
              location="${abs.deploy.dir}/share/schema"/>
    <!-- to local comp/build/schema dir, for local imports
         (this should be refined to only dependencies - means
         developer would maintain extra list of depedencies)-->


    <!-- *******************************************************************
         MODULE NAME
         ******************************************************************* -->

    <target name="disp">
        <echo message="" />
        <echo message="**** Module: ${basedir}" />
    </target>
    

    <!-- *******************************************************************
         CHECK MINIMUM JDK
         ******************************************************************* -->

    <target name="checkjdk">
        <available property="jdk1.4+" classname="java.lang.CharSequence"/>
        <fail message="Aborting: determined you are not building with >= JDK 1.4"
              unless="jdk1.4+" />
    </target>


    <!-- *******************************************************************
         INITIALIZE
         ******************************************************************* -->

    <target name="init" depends="checkjdk">
        <mkdir dir="${nimbusctx.gt4_0.stubs.build.dir}"/>
        <mkdir dir="${nimbusctx.gt4_0.stubs.build.dest}"/>
        <mkdir dir="${nimbusctx.gt4_0.stubs.build.schema.dir}"/>
        <mkdir dir="${nimbusctx.gt4_0.stubs.dist.dir}"/>

        <mkdir dir="${nimbusctx.gt4_0.stubs.build.tmpschemas.dir}"/>

        <copy todir="${nimbusctx.gt4_0.stubs.build.tmpschemas.dir}">
            <fileset dir="${schema.src}"
                     includes="**/*" />
        </copy>

        <mkdir dir="${nimbusctx.gt4_0.stubs.build.tmpschemas.dir}/${schema.subdirs}"/>
        
        <copy todir="${nimbusctx.gt4_0.stubs.build.tmpschemas.dir}/${schema.subdirs}">
            <fileset dir="${nimbusctx.gt4_0.schemas.dist}/${schema.subdirs}"
                     includes="**/*" />
        </copy>

        <available property="jar.present"
                   type="file"
                   file="${nimbusctx.gt4_0.stubs.lib.generated.dir}/${nimbusctx.gt4_0.stubs.jar.name}" />
    </target>


    <!-- *******************************************************************
         GENERATE STUBS
         ******************************************************************* -->
        
    <target name="stubs" unless="jar.present" depends="init">

        <!-- merge specific mappings w/ defaults -->
        <property name="mapping.src"
                  value="NStoPkg.properties"/>
        <property name="mapping.dst"
                  location="${nimbusctx.gt4_0.stubs.build.dir}/NStoPkg.properties"/>
        <ant antfile="${build.stubs}" target="mergePackageMapping"/>

        <!-- workspace contextualization stubs -->
        <ant antfile="${build.stubs}" target="generateStubs">
            <property name="wsdl.file"
                value="${ctx.wsdl.root}_service.wsdl"/>
            <property name="mapping.file" value="${mapping.dst}"/>
            <property name="source.stubs.dir"
                      value="${nimbusctx.gt4_0.stubs.build.tmpschemas.dir}/${schema.subdirs}"/>
            <property name="target.stubs.dir"
                      location="${nimbusctx.gt4_0.stubs.build.src.dir}"/>
        </ant>

    </target>


    <!-- *******************************************************************
         COMPILATION
         ******************************************************************* -->


    <target name="compile" unless="jar.present" depends="stubs">
        <!-- clean up the duplicate junk that got generated from imports -->
        <!--<delete includeEmptyDirs="true">
            <fileset dir="${stubs.src}">
                <exclude name="**/workspace/**"/>
            </fileset>
        </delete>-->

        <javac srcdir="${nimbusctx.gt4_0.stubs.build.src.dir}"
               destdir="${nimbusctx.gt4_0.stubs.build.dest}"
               includeantruntime="false"
               source="1.5"
               target="1.5"
               debug="on">
            
            <include name="**/*.java"/>
            <compilerarg value="${nimbus.java.compilerarg}" />
            <classpath>
                <fileset dir="${gt4_0.lib.dir}">
                    <include name="*.jar"/>
                    <exclude name="nimbus-*.jar" />
                </fileset>
            </classpath>
        </javac>
    </target>


    <!-- *******************************************************************
         CREATE ARCHIVE FILE
         ******************************************************************* -->

    <target name="copyjar" depends="jar">
        <copy todir="${nimbusctx.gt4_0.stubs.dist.dir}">
            <fileset dir="${nimbusctx.gt4_0.stubs.lib.generated.dir}">
                <include name="${nimbusctx.gt4_0.stubs.jar.name}"/>
            </fileset>
        </copy>
    </target>

    <target name="jar" unless="jar.present" depends="compile">
        <echo>Creating new jar: ${nimbusctx.gt4_0.stubs.print-noun}</echo>
        <jar destfile="${nimbusctx.gt4_0.stubs.dist.dir}/${nimbusctx.gt4_0.stubs.jar.name}"
             basedir="${nimbusctx.gt4_0.stubs.build.dest}"/>
        <copy todir="${nimbusctx.gt4_0.stubs.lib.generated.dir}">
            <fileset dir="${nimbusctx.gt4_0.stubs.dist.dir}">
                <include name="${nimbusctx.gt4_0.stubs.jar.name}"/>
            </fileset>
        </copy>
    </target>

    <!-- *******************************************************************
         CLEAN
         ******************************************************************* -->

    <target name="clean">
        <delete dir="${nimbusctx.gt4_0.stubs.build.dir}"/>
        <delete dir="${nimbusctx.gt4_0.stubs.dist.dir}"/>
        <delete file=".ant-targets-build.xml" />
        <delete dir="tmp"/>
        <echo message="Cleaned: ${basedir}" />
    </target>


    <!-- *******************************************************************
         CREATE DISTRIBUTION
         ******************************************************************* -->

    <target name="dist" depends="disp">
        <echo>Building: ${nimbusctx.gt4_0.stubs.print-noun}</echo>
        <antcall target="copyjar" />
        <echo>Built: ${nimbusctx.gt4_0.stubs.print-noun}
        </echo>
    </target>


</project>
<?xml version="1.0"?>

<project default="dist" basedir="." name="GT4.0 elastic messaging bridge">

    <description>Nimbus CXF Elastic Query Interface</description>

    <!-- load user nimbus.build.properties file, if it exists -->
    <property file="${user.home}/nimbus.build.properties"/>

    <!-- load defaults from colocated build.properties file -->
    <property file="build.properties"/>


    <!-- *******************************************************************
         LOCATE GT DEPENDENCIES
         ******************************************************************* -->

    <property environment="env"/>
    <property name="abs.deploy.dir" location="${env.GLOBUS_LOCATION}"/>
    <property name="gt4_0.lib.dir" location="${abs.deploy.dir}/lib"/>


    <!-- *******************************************************************
         CHECK MINIMUM JDK
         ******************************************************************* -->

    <target name="checkjdk">
        <available property="jdk1.4+" classname="java.lang.CharSequence"/>
        <fail message="Aborting: determined you are not building with >= JDK 1.4"
              unless="jdk1.4+" />
    </target>


    <!-- *******************************************************************
         INITIALIZE
         ******************************************************************* -->

    <target name="init" depends="checkjdk">
        <mkdir dir="${nimbus.messaging.query.build.dir}"/>
        <mkdir dir="${nimbus.messaging.query.build.dest}"/>
        <mkdir dir="${nimbus.messaging.query.dist.dir}"/>
        <mkdir dir="${nimbus.messaging.query.lib.dir}" />
    </target>


    <!-- *******************************************************************
         COMPILATION
         ******************************************************************* -->

    <path id="nimbus.messaging.query.classpath">

        <fileset dir="${gt4_0.lib.dir}">
            <include name="*.jar"/>
            <exclude name="nimbus-*.jar" />
        </fileset>

        <fileset dir="${vws.gt4_0.stubs.build.lib.dir}">
            <include name="*.jar"/>
        </fileset>

        <fileset dir="${nimbus.messaging.gt4_0-elastic.dist.dir}">
            <include name="*.jar"/>
        </fileset>

        <fileset dir="${nimbus.messaging.query.lib.dir}">
            <include name="*.jar"/>
        </fileset>

        <fileset dir="${nimbus.messaging.gt4_0.common.dist.dir}">
            <include name="*.jar"/>
        </fileset>

        <fileset dir="${nimbus.service.api.dist.dir}">
              <include name="*.jar"/>
        </fileset>

        <fileset dir="${nimbus.authzdb.dist.dir}">
              <include name="*.jar"/>
        </fileset>

        <fileset dir="${nimbus.querygen.dist.dir}">
              <include name="*.jar"/>
        </fileset>

    </path>

    <target name="compile" depends="init">

        <javac srcdir="${nimbus.messaging.query.src.dir}"
               destdir="${nimbus.messaging.query.build.dest}"
               classpathref="nimbus.messaging.query.classpath"
               includeantruntime="false"
               source="1.5"
               target="1.5"
               debug="on">

            <include name="**/*.java"/>
            <compilerarg value="${nimbus.java.compilerarg}" />

        </javac>

        <copy todir="${nimbus.messaging.query.build.dest}" >

              <fileset dir="${nimbus.messaging.query.src.dir}"
                       includes="**/*.properties" />

              <fileset dir="${nimbus.messaging.query.src.dir}"
                       includes="**/*.xml" />

              <fileset dir="${nimbus.messaging.query.src.dir}"
                       includes="**/*.txt" />
        </copy>

    </target>


    <!-- *******************************************************************
         CREATE ARCHIVE FILE
         ******************************************************************* -->

    <target name="jar" depends="compile">
        <jar destfile="${nimbus.messaging.query.dist.dir}/${nimbus.messaging.query.jar.name}"
             basedir="${nimbus.messaging.query.build.dest}"/>
    </target>


    <!-- *******************************************************************
         CLEAN
         ******************************************************************* -->

    <target name="clean">
        <delete dir="${nimbus.messaging.query.build.dir}"/>
        <delete dir="${nimbus.messaging.query.dist.dir}"/>
        <echo message="Cleaned: ${basedir}" />
    </target>


    <!-- *******************************************************************
         CREATE DISTRIBUTION
         ******************************************************************* -->

    <target name="dist">
        <echo message="**** Module: ${basedir}" />
        <echo>Building: ${nimbus.messaging.query.print-noun}</echo>
        <antcall target="jar" />
        <echo>Built: ${nimbus.messaging.query.print-noun}
        </echo>
    </target>

</project>
<?xml version="1.0"?>

<project default="dist" basedir="." name="Metadata Server">

    <description>Metadata Server</description>

    <!-- load user nimbus.build.properties file, if it exists -->
    <property file="${user.home}/nimbus.build.properties"/>

    <!-- load some defaults from colocated build.properties file -->
    <property file="build.properties"/>


    <!-- *******************************************************************
         MODULE NAME
         ******************************************************************* -->

    <target name="disp">
        <echo message="**** Module: ${basedir}" />
    </target>


    <!-- *******************************************************************
         CHECK MINIMUM JDK
         ******************************************************************* -->

    <target name="checkjdk">
        <available property="jdk1.4+" classname="java.lang.CharSequence"/>
        <fail message="Aborting: determined you are not building with >= JDK 1.4"
              unless="jdk1.4+" />
    </target>


    <!-- *******************************************************************
         INITIALIZE
         ******************************************************************* -->

    <target name="init" depends="checkjdk">
        <mkdir dir="${nimbus.metadata-server.build.dir}"/>
        <mkdir dir="${nimbus.metadata-server.build.dest}"/>
        <mkdir dir="${nimbus.metadata-server.dist.dir}"/>
    </target>


    <!-- *******************************************************************
         COMPILATION
         ******************************************************************* -->

    <path id="nimbus.metadata-server.classpath">

        <fileset dir="${nimbus.metadata-server.lib.dir}">
             <include name="*.jar"/>
        </fileset>

        <fileset dir="${nimbus.metadata-server.lib2.dir}">
             <include name="*.jar"/>
        </fileset>

        <fileset dir="${nimbus.service.api.dist.dir}">
              <include name="*.jar"/>
        </fileset>
    </path>

    <target name="compile" depends="init">

        <javac srcdir="${nimbus.metadata-server.src.dir}"
               destdir="${nimbus.metadata-server.build.dest}"
               classpathref="nimbus.metadata-server.classpath"
               includeantruntime="false"
               source="1.5"
               target="1.5"
               debug="on">

            <include name="**/*.java"/>
            <compilerarg value="${nimbus.java.compilerarg}" />

        </javac>

        <copy todir="${nimbus.metadata-server.build.dest}" >
              <fileset dir="${nimbus.metadata-server.src.dir}"
                       includes="**/*.properties" />
              <fileset dir="${nimbus.metadata-server.src.dir}"
                       includes="**/*.xml" />
              <fileset dir="${nimbus.metadata-server.src.dir}"
                       includes="**/*.txt" />
        </copy>

    </target>


    <!-- *******************************************************************
         CREATE ARCHIVE FILE
         ******************************************************************* -->

    <target name="jar" depends="compile">
        <jar destfile="${nimbus.metadata-server.dist.dir}/${nimbus.metadata-server.jar.name}"
             basedir="${nimbus.metadata-server.build.dest}"/>
    </target>


    <!-- *******************************************************************
         CREATE DISTRIBUTION
         ******************************************************************* -->

    <target name="dist">
        <echo message="**** Module: ${basedir}" />
        <echo>Building: ${nimbus.metadata-server.print-noun}</echo>
        <antcall target="jar" />
        <echo>Built: ${nimbus.metadata-server.print-noun}
        </echo>
    </target>


    <!-- *******************************************************************
         CLEAN
         ******************************************************************* -->

    <target name="clean">
        <delete dir="${nimbus.metadata-server.build.dir}"/>
        <delete dir="${nimbus.metadata-server.dist.dir}"/>
        <delete dir="tmp"/>
        <delete file=".ant-targets-build.xml" />
        <echo message="Cleaned: ${basedir}" />
    </target>

</project>
<?xml version="1.0"?>

<project default="dist" basedir="." name="Query-General Module">

    <description>Query-General Module</description>

    <!-- load user nimbus.build.properties file, if it exists -->
    <property file="${user.home}/nimbus.build.properties"/>

    <!-- load some defaults from colocated build.properties file -->
    <property file="build.properties"/>


    <!-- *******************************************************************
         MODULE NAME
         ******************************************************************* -->

    <target name="disp">
        <echo message="**** Module: ${basedir}" />
    </target>


    <!-- *******************************************************************
         CHECK MINIMUM JDK
         ******************************************************************* -->

    <target name="checkjdk">
        <available property="jdk1.4+" classname="java.lang.CharSequence"/>
        <fail message="Aborting: determined you are not building with >= JDK 1.4"
              unless="jdk1.4+" />
    </target>
    

    <!-- *******************************************************************
         INITIALIZE
         ******************************************************************* -->

    <target name="init" depends="checkjdk">
        <mkdir dir="${nimbus.query.main.build.dir}"/>
        <mkdir dir="${nimbus.query.main.build.dest}"/>
        <mkdir dir="${nimbus.query.main.dist.dir}"/>
    </target>


    <!-- *******************************************************************
         COMPILATION
         ******************************************************************* -->

    <path id="nimbus.query.main.classpath">
        <fileset dir="${nimbus.query.main.lib.dir}">
             <include name="*.jar"/>
        </fileset>
    </path>

    <target name="compile" depends="init">

        <javac srcdir="${nimbus.query.main.src.dir}"
               destdir="${nimbus.query.main.build.dest}"
               classpathref="nimbus.query.main.classpath"
               source="1.5"
               target="1.5"
               includeantruntime="false"
               debug="on">

            <include name="**/*.java"/>
            <compilerarg value="${nimbus.java.compilerarg}" />
            
        </javac>

        <copy todir="${nimbus.query.main.build.dest}" >
              <fileset dir="${nimbus.query.main.src.dir}"
                       includes="**/*.properties" />
              <fileset dir="${nimbus.query.main.src.dir}"
                       includes="**/*.xml" />
              <fileset dir="${nimbus.query.main.src.dir}"
                       includes="**/*.txt" />
        </copy>

    </target>

    
    <!-- *******************************************************************
         CREATE ARCHIVE FILE
         ******************************************************************* -->

    <target name="jar" depends="compile">
        <jar destfile="${nimbus.query.main.dist.dir}/${nimbus.query.main.jar.name}"
             basedir="${nimbus.query.main.build.dest}"/>
    </target>

    
    <!-- *******************************************************************
         CREATE DISTRIBUTION
         ******************************************************************* -->

    <target name="dist">
        <echo message="**** Module: ${basedir}" />
        <echo>Building: ${nimbus.query.main.print-noun}</echo>
        <antcall target="jar" />
        <echo>Built: ${nimbus.query.main.print-noun}
        </echo>
    </target>

    
    <!-- *******************************************************************
         CLEAN
         ******************************************************************* -->

    <target name="clean">
        <delete dir="${nimbus.query.main.build.dir}"/>
        <delete dir="${nimbus.query.main.dist.dir}"/>
        <delete dir="tmp"/>
        <echo message="Cleaned: ${basedir}" />
    </target>

</project>
<?xml version="1.0"?>

<project default="dist" basedir="." name="Nimbus Service APIs">

    <description>Nimbus Service APIs</description>

    <!-- load user nimbus.build.properties file, if it exists -->
    <property file="${user.home}/nimbus.build.properties"/>

    <!-- load defaults from colocated build.properties file -->
    <property file="build.properties"/>

    
    <!-- *******************************************************************
         CHECK MINIMUM JDK
         ******************************************************************* -->

    <target name="checkjdk">
        <available property="jdk1.4+" classname="java.lang.CharSequence"/>
        <fail message="Aborting: determined you are not building with >= JDK 1.4"
              unless="jdk1.4+" />
    </target>
    

    <!-- *******************************************************************
         INITIALIZE
         ******************************************************************* -->

    <target name="init" depends="checkjdk">
        <mkdir dir="${nimbus.service.api.build.dir}"/>
        <mkdir dir="${nimbus.service.api.build.dest}"/>
        <mkdir dir="${nimbus.service.api.dist.dir}"/>
    </target>


    <!-- *******************************************************************
         COMPILATION
         ******************************************************************* -->

    <path id="nimbus.service.api.classpath">
         <fileset dir="${nimbus.service.api.lib.dir}">
              <include name="*.jar"/>
         </fileset>
    </path>

    <target name="compile" depends="init">

        <javac srcdir="${nimbus.service.api.src.dir}"
               destdir="${nimbus.service.api.build.dest}"
               includeantruntime="false"
               debug="on"
               source="1.5"
               target="1.5"
               classpathref="nimbus.service.api.classpath">

            <include name="**/*.java"/>
            <compilerarg value="${nimbus.java.compilerarg}" />
            
        </javac>

        <copy todir="${nimbus.service.api.build.dest}" >

              <fileset dir="${nimbus.service.api.src.dir}"
                       includes="**/*.properties" />

              <fileset dir="${nimbus.service.api.src.dir}"
                       includes="**/*.xml" />
            
              <fileset dir="${nimbus.service.api.src.dir}"
                       includes="**/*.txt" />
        </copy>
        
    </target>


    <!-- *******************************************************************
         CREATE ARCHIVE FILE
         ******************************************************************* -->

    <target name="jar" depends="compile">
        <jar destfile="${nimbus.service.api.dist.dir}/${nimbus.service.api.jar.name}"
             basedir="${nimbus.service.api.build.dest}"/>
    </target>


    <!-- *******************************************************************
         CLEAN
         ******************************************************************* -->

    <target name="clean">
        <delete dir="${nimbus.service.api.build.dir}"/>
        <delete dir="${nimbus.service.api.dist.dir}"/>
        <delete dir="${nimbus.service.api.javadocs.dir}"/>
        <echo message="Cleaned: ${basedir}" />
    </target>


    <!-- *******************************************************************
         CREATE DISTRIBUTION
         ******************************************************************* -->

    <target name="dist">
        <echo message="**** Module: ${basedir}" />
        <echo>Building: ${nimbus.service.api.print-noun}</echo>
        <antcall target="jar" />
        <echo>Built: ${nimbus.service.api.print-noun}
        </echo>
    </target>

    
    <!-- *******************************************************************
         CREATE DOCUMENTATION
         ******************************************************************* -->

    <target name="javadoc">

        <delete dir="${nimbus.service.api.javadocs.dir}"/>
        <mkdir dir="${nimbus.service.api.javadocs.dir}"/>

        <javadoc destdir="${nimbus.service.api.javadocs.dir}"
                 linksource="true"
                 author="false"
                 version="false"
                 use="true"
                 stylesheetfile="${nimbus.service.api.javadoc.css}"
                 windowtitle="Nimbus Services Bridge (RM API)">

            <packageset dir="src" defaultexcludes="yes">
                <include name="org/nimbustools/**"/>
            </packageset>

            <doctitle><![CDATA[<h1>Nimbus Services Bridge (RM API) - <i>TP2.2</i></h1>]]></doctitle>

            <bottom>
                <![CDATA[<i>Release: TP2.2</i> - For more information, see
                <a href="http://www.nimbustools.org"
                   target="_blank">http://www.nimbustools.org</a>]]></bottom>

            <group title="Action Interfaces">
                <package name="org.nimbustools.api.services.*" />
                <package name="org.nimbustools.api" />
                <package name="org.nimbustools.api.services" />
            </group>

            <group title="Representation Interfaces">
                <package name="org.nimbustools.api.repr" />
                <package name="org.nimbustools.api.repr.*" />
            </group>

            <group title="Instantiation / IoC">
                <package name="org.nimbustools.api.brain" />
            </group>
                        
            <group title="Read/Write Representation Interfaces">
                <package name="org.nimbustools.api._repr" />
                <package name="org.nimbustools.api._repr.*" />
            </group>

            <group title="Default Implementations">
                <package name="org.nimbustools.api.defaults.*" />
            </group>
        </javadoc>
    </target>
</project>
<?xml version="1.0"?>

<project default="dist" basedir="." name="Nimbus GT4.0 clients">

    <description>Nimbus GT4.0 clients</description>

    <!-- load user nimbus.build.properties file, if it exists -->
    <property file="${user.home}/nimbus.build.properties"/>

    <!-- load defaults from colocated build.properties file -->
    <property file="build.properties"/>

    <!-- *******************************************************************
         MODULE NAME
         ******************************************************************* -->

    <target name="disp">
        <echo message="**** Module: ${basedir}" />
    </target>


    <!-- *******************************************************************
         LOCATE GT DEPENDENCIES
         ******************************************************************* -->

    <property environment="env"/>
    <property name="abs.deploy.dir" location="${env.GLOBUS_LOCATION}"/>
    <property name="gt4_0.lib.dir" location="${abs.deploy.dir}/lib"/>
    <property name="build.packages"
              location="${nimbus.client.gt4_0.build.packages.xml}"/>


    <!-- *******************************************************************
         GT RELATED NAMES
         ******************************************************************* -->

    <!-- gar.name -->
    <property name="gar.name"
              value="${nimbus.client.gt4_0.gar.garname}"/>

    <!-- garjars.id -->
    <fileset dir="${nimbus.client.gt4_0.gar.build.lib.dir}" id="garjars"/>
    <property name="garjars.id" value="garjars"/>

    <!-- garetc.id -->
    <fileset dir="${nimbus.client.gt4_0.gar.build.etc.dir}" id="garEtc"/>
    <property name="garetc.id" value="garEtc"/>

    <!-- garshare.id -->
    <fileset dir="${nimbus.client.gt4_0.gar.build.share.dir}" id="garshare"/>
    <property name="garshare.id" value="garshare"/>

    
    <!-- *********************
         unused GAR properties
         setting these to avoid build warning messages from GT...
         ********************* -->

    <!-- garschema.id -->
    <fileset dir="${nimbus.client.gt4_0.gar.build.schema.dir}" id="garschema"/>
    <property name="garschema.id" value="garschema"/>

    <!-- gardocs.id -->
    <fileset dir="${nimbus.client.gt4_0.gar.build.docs.dir}" id="gardocs"/>
    <property name="gardocs.id" value="gardocs"/>

    <!-- garbin.id -->
    <fileset dir="${nimbus.client.gt4_0.gar.build.bin.dir}" id="garbin"/>
    <property name="garbin.id" value="garbin"/>


    <!-- *******************************************************************
         CHECK MINIMUM JDK
         ******************************************************************* -->

    <target name="checkjdk">
        <available property="jdk1.4+" classname="java.lang.CharSequence"/>
        <fail message="Aborting: determined you are not building with >= JDK 1.4"
              unless="jdk1.4+" />
    </target>


    <!-- *******************************************************************
         INITIALIZE
         ******************************************************************* -->

    <target name="init">
        <mkdir dir="${nimbus.client.gt4_0.gar.dist.dir}"/>
        <mkdir dir="${nimbus.client.gt4_0.gar.build.dir}"/>
        <mkdir dir="${nimbus.client.gt4_0.build.dest}"/>
        <mkdir dir="${nimbus.client.gt4_0.gar.build.lib.dir}"/>
        <mkdir dir="${nimbus.client.gt4_0.gar.build.etc.dir}"/>
        <mkdir dir="${nimbus.client.gt4_0.gar.build.share.dir}"/>
        <mkdir dir="${nimbus.client.gt4_0.gar.build.schema.dir}"/>
        <mkdir dir="${nimbus.client.gt4_0.gar.build.docs.dir}"/>
        <mkdir dir="${nimbus.client.gt4_0.gar.build.bin.dir}"/>
    </target>


    <!-- *******************************************************************
         COPIES FOR LIB DIRECTORY
         ******************************************************************* -->

    <target name="lib_copies" depends="init">

        <copy todir="${nimbus.client.gt4_0.gar.build.lib.dir}">

            <fileset dir="${nimbus.gt4_0.stubs.lib.generated.dir}">
                <include name="*.jar"/>
            </fileset>

            <fileset dir="${nimbus.gt4_0.stubs.lib.clients.dir}">
                <include name="*.jar"/>
            </fileset>

            <fileset dir="${nimbus.messaging.gt4_0.common.dist.dir}">
                <include name="*.jar"/>
            </fileset>

        </copy>
    </target>


    <!-- *******************************************************************
         COPIES FOR ETC DIRECTORY
         ******************************************************************* -->

    <target name="etc_copies" depends="init">
        <copy todir="${nimbus.client.gt4_0.gar.build.etc.dir}">
            <fileset dir="${nimbus.client.gt4_0.etc.dir}" />
        </copy>
    </target>



    <!-- *******************************************************************
         COPIES FOR SHARE DIRECTORY
         ******************************************************************* -->

    <target name="share_copies" depends="init">
        <copy todir="${nimbus.client.gt4_0.gar.build.share.dir}">
            <fileset dir="${nimbus.client.gt4_0.share.dir}" />
        </copy>
    </target>


    <!-- *******************************************************************
         COMPILATION
         ******************************************************************* -->

    <path id="nimbus.client.gt4_0.classpath">

        <fileset dir="${gt4_0.lib.dir}">
            <include name="*.jar"/>
            <exclude name="nimbus-*.jar" />
        </fileset>

        <fileset dir="${nimbus.gt4_0.stubs.lib.clients.dir}">
              <include name="*.jar"/>
        </fileset>

        <fileset dir="${nimbus.gt4_0.stubs.lib.generated.dir}">
            <include name="*.jar"/>
        </fileset>

        <fileset dir="${nimbus.messaging.gt4_0.common.dist.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <target name="compile" depends="init">

        <javac srcdir="${nimbus.client.gt4_0.src.dir}"
               destdir="${nimbus.client.gt4_0.build.dest}"
               classpathref="nimbus.client.gt4_0.classpath"
               includeantruntime="false"
               source="1.5"
               target="1.5"
               debug="on">

            <include name="**/*.java"/>
            <compilerarg value="${nimbus.java.compilerarg}" />

        </javac>

        <copy todir="${nimbus.client.gt4_0.build.dest}" >

              <fileset dir="${nimbus.client.gt4_0.src.dir}"
                       includes="**/*.properties" />

              <fileset dir="${nimbus.client.gt4_0.src.dir}"
                       includes="**/*.xml" />

              <fileset dir="${nimbus.client.gt4_0.src.dir}"
                       includes="**/*.txt" />
        </copy>

    </target>


    <!-- *******************************************************************
         CREATE JAR FILE
         ******************************************************************* -->

    <target name="jar" depends="compile">
        <jar destfile="${nimbus.client.gt4_0.gar.build.lib.dir}/${nimbus.client.gt4_0.jar.name}"
             basedir="${nimbus.client.gt4_0.build.dest}"/>
    </target>


    <!-- *******************************************************************
         DEPLOY ONLY JARS (development target)
         ******************************************************************* -->

    <target name="justjars" depends="jar, lib_copies">
        <echo message="Copying JARs: ${basedir}" />
        <copy todir="${gt4_0.lib.dir}" >
              <fileset refid="garjars" />
        </copy>
    </target>


    <!-- *******************************************************************
         CLEAN
         ******************************************************************* -->

    <target name="clean">
        <delete dir="${nimbus.client.gt4_0.gar.build.dir}"/>
        <delete dir="${nimbus.client.gt4_0.gar.dist.dir}"/>
        <delete dir="tmp"/>
        <echo message="Cleaned: ${basedir}" />
    </target>


    <!-- *******************************************************************
         CREATE DISTRIBUTION
         ******************************************************************* -->

    <target name="_dist" depends="jar, lib_copies, etc_copies, share_copies">

        <ant antfile="${build.packages}" target="makeGar">

            <property name="forget.server-deploy.wsdd" value="x" />
            <property name="forget.client-deploy.wsdd" value="x" />
            <property name="forget.jndi-config-deploy.xml" value="x" />
            <reference refid="${garjars.id}"/>
            <reference refid="${garetc.id}"/>
            <reference refid="${garshare.id}"/>
            <reference refid="${garschema.id}"/>
            <reference refid="${gardocs.id}"/>
            <reference refid="${garbin.id}"/>

            <!-- makeGar is also looking at:
                 - gar.name
            -->

        </ant>

        <delete dir="tmp" />

    </target>

    <target name="dist">
        <echo message="**** Module: ${basedir}" />
        <echo>Building: ${nimbus.client.gt4_0.gar.print-noun}</echo>
        <antcall target="_dist" />
        <echo>Built: ${nimbus.client.gt4_0.gar.print-noun}
        </echo>
    </target>

    
    <!-- *******************************************************************
         DEPLOYMENT
         ******************************************************************* -->

    <target name="assessGarPresence">
        <available property="garIsPresent"
                   type="file"
                   file="${gar.name}" />
    </target>

    <target name="gar.not.present"
            depends="assessGarPresence"
            unless="garIsPresent">

        <echo>



***************** ERROR *****************

Cannot find archive to install: ${gar.name}

Did you build?  Use the build-and-install script.



        </echo>

        <fail message="Cannot find archive to install: ${gar.name}" />

    </target>

    <target name="_deploy" depends="gar.not.present">

        <ant antfile="${build.packages}" target="deployGar">
            <property name="gar.id" value="${nimbus.client.gt4_0.gar.package.name}"/>
        </ant>

        <delete dir="tmp"/>

    </target>

    <target name="deploy" depends="disp">
        <echo>Installing: ${nimbus.client.gt4_0.gar.print-noun}</echo>
        <antcall target="_deploy" />
        <echo>Installed: ${nimbus.client.gt4_0.gar.print-noun}
        </echo>
    </target>

    <target name="assessDeployed">

        <available property="isDeployed"
                   type="dir"
                   file="${abs.deploy.dir}/etc/globus_packages/${nimbus.client.gt4_0.gar.package.name}" />

        <condition property="isNotDeployed" value="true">
            <not>
                <isset property="isDeployed" />
            </not>
        </condition>

    </target>

    <target name="printDeployed"
            depends="assessDeployed"
            unless="isDeployed">

        <echo message="Already undeployed: ${nimbus.client.gt4_0.gar.package.name}"/>

    </target>

    <target name="undeploy" depends="printDeployed" unless="isNotDeployed">

        <ant antfile="${build.packages}" target="undeployGar">
            <property name="gar.id" value="${nimbus.client.gt4_0.gar.package.name}"/>
        </ant>

        <echo message="Undeployed: ${nimbus.client.gt4_0.gar.package.name}"/>

    </target>

</project>
<?xml version="1.0"?>

<project default="dist" basedir="." name="Workspace Service">

    <description>Workspace Service</description>

    <!-- load user nimbus.build.properties file, if it exists -->
    <property file="${user.home}/nimbus.build.properties"/>

    <!-- load some defaults from colocated build.properties file -->
    <property file="build.properties"/>


    <!-- *******************************************************************
         MODULE NAME
         ******************************************************************* -->

    <target name="disp">
        <echo message="**** Module: ${basedir}" />
    </target>


    <!-- *******************************************************************
         CHECK MINIMUM JDK
         ******************************************************************* -->

    <target name="checkjdk">
        <available property="jdk1.4+" classname="java.lang.CharSequence"/>
        <fail message="Aborting: determined you are not building with >= JDK 1.4"
              unless="jdk1.4+" />
    </target>
    

    <!-- *******************************************************************
         INITIALIZE
         ******************************************************************* -->

    <target name="init" depends="checkjdk">
        <mkdir dir="${nimbus.service.main.build.dir}"/>
        <mkdir dir="${nimbus.service.main.build.dest}"/>
        <mkdir dir="${nimbus.service.main.dist.dir}"/>
    </target>


    <!-- *******************************************************************
         COMPILATION
         ******************************************************************* -->

    <path id="nimbus.service.main.classpath">
        <fileset dir="${nimbus.service.main.lib.dir}">
             <include name="*.jar"/>
        </fileset>
        <fileset dir="${nimbus.service.main.baselib.dir}">
             <include name="*.jar"/>
        </fileset>
        <fileset dir="${nimbus.service.api.dist.dir}">
              <include name="*.jar"/>
        </fileset>
        <fileset dir="${nimbus.authz.dist.dir}">
              <include name="*.jar"/>
        </fileset>
    </path>

    <target name="compile" depends="init">

        <javac srcdir="${nimbus.service.main.src.dir}"
               destdir="${nimbus.service.main.build.dest}"
               classpathref="nimbus.service.main.classpath"
               includeantruntime="false"
               source="1.5"
               target="1.5"
               debug="on">

            <include name="**/*.java"/>
            <compilerarg value="${nimbus.java.compilerarg}" />
            
        </javac>

        <copy todir="${nimbus.service.main.build.dest}" >
              <fileset dir="${nimbus.service.main.src.dir}"
                       includes="**/*.properties" />
              <fileset dir="${nimbus.service.main.src.dir}"
                       includes="**/*.xml" />
              <fileset dir="${nimbus.service.main.src.dir}"
                       includes="**/*.txt" />
        </copy>

    </target>

    
    <!-- *******************************************************************
         CREATE ARCHIVE FILE
         ******************************************************************* -->

    <target name="jar" depends="compile">
        <jar destfile="${nimbus.service.main.dist.dir}/${nimbus.service.main.jar.name}"
             basedir="${nimbus.service.main.build.dest}"/>
    </target>

    
    <!-- *******************************************************************
         CREATE DISTRIBUTION
         ******************************************************************* -->

    <target name="dist">
        <echo message="**** Module: ${basedir}" />
        <echo>Building: ${nimbus.service.main.print-noun}</echo>
        <antcall target="jar" />
        <echo>Built: ${nimbus.service.main.print-noun}
        </echo>
    </target>

    
    <!-- *******************************************************************
         CLEAN
         ******************************************************************* -->

    <target name="clean">
        <delete dir="${nimbus.service.main.build.dir}"/>
        <delete dir="${nimbus.service.main.dist.dir}"/>
        <delete dir="tmp"/>
        <echo message="Cleaned: ${basedir}" />
    </target>

</project>
<project basedir="." default="checkjdk" name="Nimbus for GT4.0 build file">

    <description>Internal Service Integration Test Suites</description>

    <!-- load user nimbus.build.properties file, if it exists -->
    <property file="${user.home}/nimbus.build.properties"/>

    <!-- load defaults from colocated build.properties file -->
    <property file="build.properties"/>

    
    <!-- *******************************************************************
         CLASSPATHS
         ******************************************************************* -->

    <path id="suites.deps.cp">
        <fileset dir="${nimbus.st.main.lib.dir}">
             <include name="*.jar"/>
        </fileset>
        <fileset dir="${nimbus.st.workspaceservice.lib.dir}">
              <include name="*.jar"/>
        </fileset>
        <fileset dir="${nimbus.st.test.lib.dir}">
             <include name="*.jar"/>
        </fileset>
    </path>

    <path id="suites.compile.cp">
        <path refid="suites.deps.cp"/>
        <fileset dir="${nimbus.st.authz.dist.dir}">
              <include name="*.jar"/>
        </fileset>
        <fileset dir="${nimbus.st.service.api.dist.dir}">
              <include name="*.jar"/>
        </fileset>
        <fileset dir="${nimbus.st.service.main.dist.dir}">
              <include name="*.jar"/>
        </fileset>
        <fileset dir="${nimbus.st.metadata.dist.dir}">
              <include name="*.jar"/>
        </fileset>
    </path>

    <path id="suites.run.cp">
        <path refid="suites.compile.cp"/>
        <pathelement path="${nimbus.suites.testsrc.build.dest}" />
    </path>

    
    <!-- *******************************************************************
         INIT
         ******************************************************************* -->

    <taskdef resource="testngtasks" classpathref="suites.deps.cp"/>

    <target name="checkjdk">
        <available property="jdk1.5+"
                   classname="java.lang.Readable"/>
        <fail message="Aborting: determined you are not building with >= JDK 1.5"
              unless="jdk1.5+" />
    </target>

    <target name="init" depends="checkjdk">
        <mkdir dir="${nimbus.suites.testsrc.build.dest}"/>
    </target>


    <!-- *******************************************************************
         BUILD
         ******************************************************************* -->

    <target name="depclean" depends="init">
        <ant dir="${nimbus.st.authzdb.builddir}" target="clean" />
        <ant dir="${nimbus.st.service.api.builddir}" target="clean" />
        <ant dir="${nimbus.st.service.main.builddir}" target="clean" />
        <ant dir="${nimbus.st.metadata.builddir}" target="clean" />
    </target>

    <target name="depdist" depends="init">
        <ant dir="${nimbus.st.authzdb.builddir}" target="dist" />
        <ant dir="${nimbus.st.service.api.builddir}" target="dist" />
        <ant dir="${nimbus.st.service.main.builddir}" target="dist" />
        <ant dir="${nimbus.st.metadata.builddir}" target="dist" />
    </target>

    <target name="clean" depends="init">
        <delete dir="${nimbus.suites.testsrc.build.dest}"/>
        <delete dir="tmp"/>
        <echo message="Cleaned: ${basedir}" />
    </target>

    <target name="compile-common" depends="depdist">

        <javac srcdir="${nimbus.suites.testsrc.src0.dir}"
               destdir="${nimbus.suites.testsrc.build.dest}"
               classpathref="suites.compile.cp"
               includeantruntime="false"
               source="1.5"
               target="1.5"
               debug="on">
            <include name="**/*.java"/>
            <compilerarg value="${nimbus.java.compilerarg}" />
        </javac>

    </target>

    <target name="compile-suites" depends="compile-common">

        <javac srcdir="${nimbus.suites.testsrc.src1.dir}"
               destdir="${nimbus.suites.testsrc.build.dest}"
               classpathref="suites.run.cp"
               includeantruntime="false"
               source="1.5"
               target="1.5"
               debug="on">
            <include name="**/*.java"/>
            <compilerarg value="${nimbus.java.compilerarg}" />
        </javac>

        <javac srcdir="${nimbus.suites.testsrc.src2.dir}"
               destdir="${nimbus.suites.testsrc.build.dest}"
               classpathref="suites.run.cp"
               includeantruntime="false"
               source="1.5"
               target="1.5"
               debug="on">
            <include name="**/*.java"/>
            <compilerarg value="${nimbus.java.compilerarg}" />
        </javac>

        <javac srcdir="${nimbus.suites.testsrc.src3.dir}"
               destdir="${nimbus.suites.testsrc.build.dest}"
               classpathref="suites.run.cp"
               includeantruntime="false"
               source="1.5"
               target="1.5"
               debug="on">
            <include name="**/*.java"/>
            <compilerarg value="${nimbus.java.compilerarg}" />
        </javac>
    </target>

    <target name="setup" depends="depdist,compile-suites">
        <fail unless="nimbussuites.test.reports.dir">
            You have not set the 'nimbussuites.test.reports.dir' property, are you not
            using the integration test shell script?
        </fail>
    </target>


    <!-- *******************************************************************
         ONE SUITE AT A TIME
         ******************************************************************* -->

    <!-- Derby database re-installation not working when one JVM is used for all suites.
         So we do one JVM per suite, i.e. for each database full-wipe.
         This has the unfortunate side effect of needing an html page per suite instead
         of all suites being in a nice table.
     -->

    <target name="runone" depends="setup">
        <testng classpathref="suites.run.cp"
                outputDir="${nimbussuites.test.reports.dir}/${runone.suite.report.subdir}"
                haltOnfailure="true"
                parallel="false">
            <sysproperty key="nimbus.servicetestsuites.abspath"
                         value="${nimbus.suitesdir}" />
            <sysproperty key="org.newsclub.net.unix.library.path"
                         value="${org.newsclub.net.unix.library.path}" />
            <xmlfileset file="${runone.suite.file}" />
        </testng>
    </target>

    <!-- BASIC SUITES -->

    <target name="basic01">
        <antcall target="runone">
            <param name="runone.suite.file" value="${st.basic.dir}/${st.basic01}.xml"/>
            <param name="runone.suite.report.subdir" value="basic-${st.basic01}"/>
        </antcall>
    </target>
    <target name="basic02">
        <antcall target="runone">
            <param name="runone.suite.file" value="${st.basic.dir}/${st.basic02}.xml"/>
            <param name="runone.suite.report.subdir" value="basic-${st.basic02}"/>
        </antcall>
    </target>
    <target name="basic03">
        <antcall target="runone">
            <param name="runone.suite.file" value="${st.basic.dir}/${st.basic03}.xml"/>
            <param name="runone.suite.report.subdir" value="basic-${st.basic03}"/>
        </antcall>
    </target>
    <target name="basic04">
        <antcall target="runone">
            <param name="runone.suite.file" value="${st.basic.dir}/${st.basic04}.xml"/>
            <param name="runone.suite.report.subdir" value="basic-${st.basic04}"/>
        </antcall>
    </target>
    <target name="basic05">
        <antcall target="runone">
            <param name="runone.suite.file" value="${st.basic.dir}/${st.basic05}.xml"/>
            <param name="runone.suite.report.subdir" value="basic-${st.basic05}"/>
        </antcall>
    </target>
    <target name="basic06">
        <antcall target="runone">
            <param name="runone.suite.file" value="${st.basic.dir}/${st.basic06}.xml"/>
            <param name="runone.suite.report.subdir" value="basic-${st.basic06}"/>
        </antcall>
    </target>
    <target name="basic07">
        <antcall target="runone">
            <param name="runone.suite.file" value="${st.basic.dir}/${st.basic07}.xml"/>
            <param name="runone.suite.report.subdir" value="basic-${st.basic07}"/>
        </antcall>
    </target>
    <target name="basic08">
        <antcall target="runone">
            <param name="runone.suite.file" value="${st.basic.dir}/${st.basic08}.xml"/>
            <param name="runone.suite.report.subdir" value="basic-${st.basic08}"/>
        </antcall>
    </target>
    <target name="allbasic" depends="basic01,basic02,basic03,basic04,basic05,basic06,basic07" />


    <!-- FAILURE/TERMINATION SUITES -->

    <target name="failure01">
        <antcall target="runone">
            <param name="runone.suite.file" value="${st.failure.dir}/${st.failure01}.xml"/>
            <param name="runone.suite.report.subdir" value="basic-${st.failure01}"/>
        </antcall>
    </target>
    <target name="failure02">
        <antcall target="runone">
            <param name="runone.suite.file" value="${st.failure.dir}/${st.failure02}.xml"/>
            <param name="runone.suite.report.subdir" value="basic-${st.failure02}"/>
        </antcall>
    </target>

    <target name="allfailure" depends="failure01,failure02" />


    <!-- SPOT INSTANCE SUITES -->

    <target name="spot01">
        <antcall target="runone">
            <param name="runone.suite.file" value="${st.spot.dir}/${st.spot01}.xml"/>
            <param name="runone.suite.report.subdir" value="basic-${st.spot01}"/>
        </antcall>
    </target>
    <target name="spot02">
        <antcall target="runone">
            <param name="runone.suite.file" value="${st.spot.dir}/${st.spot02}.xml"/>
            <param name="runone.suite.report.subdir" value="basic-${st.spot02}"/>
        </antcall>
    </target>
    <target name="spot03">
        <antcall target="runone">
            <param name="runone.suite.file" value="${st.spot.dir}/${st.spot03}.xml"/>
            <param name="runone.suite.report.subdir" value="basic-${st.spot03}"/>
        </antcall>
    </target>
    <target name="spot04">
        <antcall target="runone">
            <param name="runone.suite.file" value="${st.spot.dir}/${st.spot04}.xml"/>
            <param name="runone.suite.report.subdir" value="basic-${st.spot04}"/>
        </antcall>
    </target>
    <target name="spot05">
        <antcall target="runone">
            <param name="runone.suite.file" value="${st.spot.dir}/${st.spot05}.xml"/>
            <param name="runone.suite.report.subdir" value="basic-${st.spot05}"/>
        </antcall>
    </target>
    <target name="spot06">
        <antcall target="runone">
            <param name="runone.suite.file" value="${st.spot.dir}/${st.spot06}.xml"/>
            <param name="runone.suite.report.subdir" value="basic-${st.spot06}"/>
        </antcall>
    </target>

    <target name="allspot" depends="spot01,spot02,spot03,spot04,spot05,spot06" />


    <!-- *******************************************************************
         RUN ALL SUITES: FAILING
         ******************************************************************* -->

    <!-- Derby database re-installation not working when one JVM is used for all suites.
         So this is broken, see above -->

    <fileset id="allsuites.fileset" dir="${nimbus.suitesdir}">
        <include name="basic/*.xml"/>
        <include name="failure/*.xml"/>
        <include name="spotinstances/*.xml"/>
    </fileset>

    <target name="broken-runall" depends="setup">
        <testng classpathref="suites.run.cp"
                outputDir="${nimbussuites.test.reports.dir}"
                haltOnfailure="true"
                parallel="false">
            <sysproperty key="nimbus.servicetestsuites.abspath"
                         value="${nimbus.suitesdir}" />
            <xmlfileset refid="allsuites.fileset" />
        </testng>
    </target>

</project>
