<!--
 * Sourcerer: an infrastructure for large-scale source code analysis.
 * Copyright (C) by contributors. See CONTRIBUTORS.txt for full list.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.

 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.

 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 -->
<!-- @author Joel Ossher (jossher@uci.edu) -->
<!-- @author Sushil Bajracharya (bajracharya@gmail.com) -->
<project name="Sourcerer Infrastructure" basedir=".">
	<description>
    Build file for the Sourcerer Infrastructure.
  </description>
	<!-- There should be a different build location for each target,
       so that the jars don't contain unneeded files -->
	<property name="build" location="build" />
	<property name="dist" location="dist" />

	<!-- Library Project -->
	<property name="lib" location="../lib" />

	<!-- Utility Projects -->
	<property name="utilities" location="../infrastructure/utils/utilities/src" />
	<property name="database-utilities" location="../infrastructure/utils/database-utilities/src" />
	<property name="servlet-utilities" location="../infrastructure/utils/servlet-utilities/src" />

	<!-- Core Tools -->
	<property name="core-repo-manager" location="../infrastructure/tools/core/repository-manager/src" />
	<property name="build-core-repo-manager" location="${build}/core-repo-manager" />

	<property name="link-crawler" location="../infrastructure/tools/core/link-crawler/src" />
	<property name="build-link-crawler" location="${build}/link-crawler" />

	<!-- Java Tools -->
	<property name="model" location="../infrastructure/tools/java/model/src" />
	<property name="database" location="../infrastructure/tools/java/database/src" />

	<property name="java-repo-manager" location="../infrastructure/tools/java/repository-manager/src" />
	<property name="build-java-repo-manager" location="${build}/java-repo-manager" />

	<property name="component-identifier" location="../infrastructure/tools/java/component-identifier/src" />
	<property name="build-component-identifier" location="${build}/component-identifier" />

	<property name="database-importer" location="../infrastructure/tools/java/database-importer/src" />
	<property name="build-database-importer" location="${build}/database-importer" />

  <property name="db-metrics" location="../infrastructure/tools/java/db-metrics/src" />
  <property name="build-db-metrics" location="${build}/db-metrics" />
  
  <property name="component-utilization" location="../infrastructure/tools/java/component-utilization/src" />
  <property name="build-component-utilization" location="${build}/component-utilization" />
    
	<property name="bytecode-extractor" location="../infrastructure/tools/java/bytecode-extractor/src" />
	<property name="build-bytecode-extractor" location="${build}/bytecode-extractor" />
	
	<property name="extractor" location="../infrastructure/tools/java/extractor" />
	<property name="build-extractor-lib" location="${build}/extractor-lib" />
	<property name="build-extractor" location="${build}/extractor" />

	<property name="indexer" location="../infrastructure/tools/java/indexer/src" />
	<property name="build-indexer" location="${build}/indexer" />

	<!-- Services -->
	<property name="index-server" location="../infrastructure/services/index-server" />
	<property name="build-index-server" location="${build}/index-server" />
	<property name="assemble-index-server" location="${build}/index-server-assemble" />

	<property name="search-adapter" location="../infrastructure/services/search-adapter/src" />
	<property name="build-search-adapter" location="${build}/search-adapter" />

	<property name="file-adapter" location="../infrastructure/services/file-adapter/src" />
	<property name="build-file-adapter" location="${build}/file-adapter" />

	<property name="file-server" location="../infrastructure/services/file-server/src" />
	<property name="build-file-server" location="${build}/file-server" />
	
	<property name="slicer" location="../infrastructure/services/slicer/src" />
	
  <property name="slice-server" location="../infrastructure/services/slice-server/src" />
  <property name="build-slice-server" location="${build}/slice-server" />

	<!-- Applications -->
	<property name="artifact-repo-browser" location="../infrastructure/apps/artifact-repo-browser/src" />
	<property name="build-artifact-repo-browser" location="${build}/artifact-repo-browser" />

	<!-- Test Repository -->
	<property name="test-repo" location="../infrastructure/tools/java/extractor/test-repo" />

	<property name="comparison-test" location="${test-repo}/0/2/content/src" />
	<property name="build-comparison-test" location="${build}/comparison-test" />

	<!-- Website -->
	<property name="website" location="../website" />

	<target name="init">
		<mkdir dir="${build}" />
		<mkdir dir="${dist}" />
	</target>

	<target name="clean" description="Clean the build data">
		<delete dir="${build}" />
	</target>

	<!--
        CCCCCCCCCCCCC                                                              TTTTTTTTTTTTTTTTTTTTTTT                               lllllll                  
     CCC::::::::::::C                                                              T:::::::::::::::::::::T                               l:::::l                  
   CC:::::::::::::::C                                                              T:::::::::::::::::::::T                               l:::::l                  
  C:::::CCCCCCCC::::C                                                              T:::::TT:::::::TT:::::T                               l:::::l                  
 C:::::C       CCCCCC   ooooooooooo   rrrrr   rrrrrrrrr       eeeeeeeeeeee         TTTTTT  T:::::T  TTTTTTooooooooooo      ooooooooooo    l::::l     ssssssssss   
C:::::C               oo:::::::::::oo r::::rrr:::::::::r    ee::::::::::::ee               T:::::T      oo:::::::::::oo  oo:::::::::::oo  l::::l   ss::::::::::s  
C:::::C              o:::::::::::::::or:::::::::::::::::r  e::::::eeeee:::::ee             T:::::T     o:::::::::::::::oo:::::::::::::::o l::::l ss:::::::::::::s 
C:::::C              o:::::ooooo:::::orr::::::rrrrr::::::re::::::e     e:::::e             T:::::T     o:::::ooooo:::::oo:::::ooooo:::::o l::::l s::::::ssss:::::s
C:::::C              o::::o     o::::o r:::::r     r:::::re:::::::eeeee::::::e             T:::::T     o::::o     o::::oo::::o     o::::o l::::l  s:::::s  ssssss 
C:::::C              o::::o     o::::o r:::::r     rrrrrrre:::::::::::::::::e              T:::::T     o::::o     o::::oo::::o     o::::o l::::l    s::::::s      
C:::::C              o::::o     o::::o r:::::r            e::::::eeeeeeeeeee               T:::::T     o::::o     o::::oo::::o     o::::o l::::l       s::::::s   
 C:::::C       CCCCCCo::::o     o::::o r:::::r            e:::::::e                        T:::::T     o::::o     o::::oo::::o     o::::o l::::l ssssss   s:::::s 
  C:::::CCCCCCCC::::Co:::::ooooo:::::o r:::::r            e::::::::e                     TT:::::::TT   o:::::ooooo:::::oo:::::ooooo:::::ol::::::ls:::::ssss::::::s
   CC:::::::::::::::Co:::::::::::::::o r:::::r             e::::::::eeeeeeee             T:::::::::T   o:::::::::::::::oo:::::::::::::::ol::::::ls::::::::::::::s 
     CCC::::::::::::C oo:::::::::::oo  r:::::r              ee:::::::::::::e             T:::::::::T    oo:::::::::::oo  oo:::::::::::oo l::::::l s:::::::::::ss  
        CCCCCCCCCCCCC   ooooooooooo    rrrrrrr                eeeeeeeeeeeeee             TTTTTTTTTTT      ooooooooooo      ooooooooooo   llllllll  sssssssssss    
-->
	<!-- Core Repository Manager -->
	<target name="core-repo-manager" depends="init" description="Builds the Core Repository Manager tools (core-repo-tools.jar)">
		<!-- Make the build directory -->
		<mkdir dir="${build-core-repo-manager}" />

		<!-- Compile the tool -->
		<javac destdir="${build-core-repo-manager}" debug="on" includeantruntime="false">
			<classpath>
				<fileset dir="${lib}">
					<include name="**/guava-11.0.1.jar" />
				</fileset>
			</classpath>
			<src path="${utilities}" />
			<src path="${core-repo-manager}" />
		</javac>

		<!-- Copy the source -->
		<copy todir="${build-core-repo-manager}">
			<fileset dir="${utilities}" includes="**/*.java" />
		</copy>
		<copy todir="${build-core-repo-manager}">
			<fileset dir="${core-repo-manager}" includes="**/*.java" />
		</copy>

		<!-- Build the jar -->
		<jar destfile="${dist}/core-repo-tools.jar" basedir="${build-core-repo-manager}">
			<manifest>
				<attribute name="Main-Class" value="edu.uci.ics.sourcerer.tools.repo.Main" />
			</manifest>
		</jar>
	</target>

	<!-- Link Crawler -->
	<target name="link-crawler" depends="init" description="Builds the Link Crawler (link-crawler.jar)">
		<!-- Make the build directory -->
		<mkdir dir="${build-link-crawler}" />

		<!-- Compile everything -->
		<javac destdir="${build-link-crawler}" debug="on" includeantruntime="false">
			<classpath>
				<pathelement path="${classpath}" />
				<fileset dir="${lib}">
					<include name="**/guava-11.0.1.jar" />
					<include name="**/svnkit.jar" />
					<include name="**/org-netbeans-lib-cvsclient.jar" />
				</fileset>
			</classpath>
			<src path="${utilities}" />
			<src path="${database-utilities}" />
			<src path="${core-repo-manager}" />
			<src path="${link-crawler}" />
		</javac>

		<!-- Copy the source -->
		<copy todir="${build-link-crawler}">
			<fileset dir="${utilities}" includes="**/*.java" />
		</copy>
		<copy todir="${build-link-crawler}">
			<fileset dir="${database-utilities}" includes="**/*.java" />
		</copy>
		<copy todir="${build-link-crawler}">
			<fileset dir="${core-repo-manager}" includes="**/*.java" />
		</copy>
		<copy todir="${build-link-crawler}">
			<fileset dir="${link-crawler}" includes="**/*.java" />
		</copy>

		<!-- Add the required jars -->
		<unjar src="${lib}/guava-11.0.1.jar" dest="${build-link-crawler}" />
		<unjar src="${lib}/svnkit.jar" dest="${build-link-crawler}" />
		<unjar src="${lib}/org-netbeans-lib-cvsclient.jar" dest="${build-link-crawler}" />
		<unjar src="${lib}/mysql-connector-java-5.1.7-bin.jar" dest="${build-link-crawler}" />

		<!-- Build the jar -->
		<jar destfile="${dist}/link-crawler.jar" basedir="${build-link-crawler}">
			<manifest>
				<attribute name="Main-Class" value="edu.uci.ics.sourcerer.tools.link.Main" />
			</manifest>
		</jar>
	</target>
	<!--
          JJJJJJJJJJJ                                                           TTTTTTTTTTTTTTTTTTTTTTT                               lllllll                  
          J:::::::::J                                                           T:::::::::::::::::::::T                               l:::::l                  
          J:::::::::J                                                           T:::::::::::::::::::::T                               l:::::l                  
          JJ:::::::JJ                                                           T:::::TT:::::::TT:::::T                               l:::::l                  
            J:::::J  aaaaaaaaaaaaavvvvvvv           vvvvvvvaaaaaaaaaaaaa        TTTTTT  T:::::T  TTTTTTooooooooooo      ooooooooooo    l::::l     ssssssssss   
            J:::::J  a::::::::::::av:::::v         v:::::v a::::::::::::a               T:::::T      oo:::::::::::oo  oo:::::::::::oo  l::::l   ss::::::::::s  
            J:::::J  aaaaaaaaa:::::av:::::v       v:::::v  aaaaaaaaa:::::a              T:::::T     o:::::::::::::::oo:::::::::::::::o l::::l ss:::::::::::::s 
            J:::::j           a::::a v:::::v     v:::::v            a::::a              T:::::T     o:::::ooooo:::::oo:::::ooooo:::::o l::::l s::::::ssss:::::s
            J:::::J    aaaaaaa:::::a  v:::::v   v:::::v      aaaaaaa:::::a              T:::::T     o::::o     o::::oo::::o     o::::o l::::l  s:::::s  ssssss 
JJJJJJJ     J:::::J  aa::::::::::::a   v:::::v v:::::v     aa::::::::::::a              T:::::T     o::::o     o::::oo::::o     o::::o l::::l    s::::::s      
J:::::J     J:::::J a::::aaaa::::::a    v:::::v:::::v     a::::aaaa::::::a              T:::::T     o::::o     o::::oo::::o     o::::o l::::l       s::::::s   
J::::::J   J::::::Ja::::a    a:::::a     v:::::::::v     a::::a    a:::::a              T:::::T     o::::o     o::::oo::::o     o::::o l::::l ssssss   s:::::s 
J:::::::JJJ:::::::Ja::::a    a:::::a      v:::::::v      a::::a    a:::::a            TT:::::::TT   o:::::ooooo:::::oo:::::ooooo:::::ol::::::ls:::::ssss::::::s
 JJ:::::::::::::JJ a:::::aaaa::::::a       v:::::v       a:::::aaaa::::::a            T:::::::::T   o:::::::::::::::oo:::::::::::::::ol::::::ls::::::::::::::s 
   JJ:::::::::JJ    a::::::::::aa:::a       v:::v         a::::::::::aa:::a           T:::::::::T    oo:::::::::::oo  oo:::::::::::oo l::::::l s:::::::::::ss  
     JJJJJJJJJ       aaaaaaaaaa  aaaa        vvv           aaaaaaaaaa  aaaa           TTTTTTTTTTT      ooooooooooo      ooooooooooo   llllllll  sssssssssss    
-->

	<!-- Java Repository Manager -->
	<target name="java-repo-manager" depends="init" description="Builds the Java Repository Manager (java-repo-tools.jar)">
		<!-- Make the build directory -->
		<mkdir dir="${build-java-repo-manager}" />

		<!-- Compile everything -->
		<javac destdir="${build-java-repo-manager}" debug="on" includeantruntime="false">
			<src path="${utilities}" />
			<src path="${core-repo-manager}" />
			<src path="${java-repo-manager}" />
			<classpath>
				<pathelement path="${classpath}" />
				<fileset dir="${lib}">
					<include name="**/guava-11.0.1.jar" />
				</fileset>
			</classpath>
		</javac>

		<!-- Copy the source -->
		<copy todir="${build-java-repo-manager}">
			<fileset dir="${utilities}" includes="**/*.java" />
		</copy>
		<copy todir="${build-java-repo-manager}">
			<fileset dir="${core-repo-manager}" includes="**/*.java" />
		</copy>
		<copy todir="${build-java-repo-manager}">
			<fileset dir="${java-repo-manager}" includes="**/*.java" />
		</copy>

		<!-- Add the required jars -->
		<unjar src="${lib}/guava-11.0.1.jar" dest="${build-java-repo-manager}" />

		<!-- Build the jar -->
		<jar destfile="${dist}/java-repo-tools.jar" basedir="${build-java-repo-manager}">
			<manifest>
				<attribute name="Main-Class" value="edu.uci.ics.sourcerer.tools.java.repo.Main" />
			</manifest>
		</jar>
	</target>

	<!-- Component Identifier -->
	<target name="component-identifier" depends="init" description="Builds the Component Identifier (component-identifier.jar)">
		<!-- Make the build directory -->
		<mkdir dir="${build-component-identifier}" />

		<!-- Compile everything -->
		<javac destdir="${build-component-identifier}" debug="on" includeantruntime="false">
			<src path="${utilities}" />
			<src path="${core-repo-manager}" />
			<src path="${java-repo-manager}" />
			<src path="${model}" />
			<src path="${component-identifier}" />
			<classpath>
				<pathelement path="${classpath}" />
				<fileset dir="${lib}">
					<include name="**/guava-11.0.1.jar" />
					<include name="**/asm-4.0_RC2.jar" />
				</fileset>
			</classpath>
		</javac>

		<!-- Copy the source -->
		<copy todir="${build-component-identifier}">
			<fileset dir="${utilities}" includes="**/*.java" />
		</copy>
		<copy todir="${build-component-identifier}">
			<fileset dir="${core-repo-manager}" includes="**/*.java" />
		</copy>
		<copy todir="${build-component-identifier}">
			<fileset dir="${java-repo-manager}" includes="**/*.java" />
		</copy>
		<copy todir="${build-component-identifier}">
			<fileset dir="${model}" includes="**/*.java" />
		</copy>
		<copy todir="${build-component-identifier}">
			<fileset dir="${component-identifier}" includes="**/*.java" />
		</copy>

		<!-- Add the required jars -->
		<unjar src="${lib}/guava-11.0.1.jar" dest="${build-component-identifier}" />
		<unjar src="${lib}/asm-4.0_RC2.jar" dest="${build-component-identifier}" />

		<!-- Build the jar -->
		<jar destfile="${dist}/component-identifier.jar" basedir="${build-component-identifier}">
			<manifest>
				<attribute name="Main-Class" value="edu.uci.ics.sourcerer.tools.java.component.identifier.Main" />
			</manifest>
		</jar>
	</target>

	 <!-- Bytecode Extractor -->
  <target name="bytecode-extractor" depends="init" description="Builds the Bytecode Extractor (bytecode-extractor.jar)">
    <!-- Make the build directory -->
    <mkdir dir="${build-bytecode-extractor}" />

    <!-- Compile everything -->
    <javac destdir="${build-bytecode-extractor}" debug="on" includeantruntime="false">
      <src path="${utilities}" />
      <src path="${core-repo-manager}" />
      <src path="${java-repo-manager}" />
      <src path="${model}" />
      <src path="${bytecode-extractor}" />
      <classpath>
        <pathelement path="${classpath}" />
        <fileset dir="${lib}">
          <include name="**/guava-11.0.1.jar" />
          <include name="**/asm-4.0_RC2.jar" />
        </fileset>
      </classpath>
    </javac>

    <!-- Copy the source -->
    <copy todir="${build-bytecode-extractor}">
      <fileset dir="${utilities}" includes="**/*.java" />
    </copy>
    <copy todir="${build-bytecode-extractor}">
      <fileset dir="${core-repo-manager}" includes="**/*.java" />
    </copy>
    <copy todir="${build-bytecode-extractor}">
      <fileset dir="${java-repo-manager}" includes="**/*.java" />
    </copy>
    <copy todir="${build-bytecode-extractor}">
      <fileset dir="${model}" includes="**/*.java" />
    </copy>
    <copy todir="${build-bytecode-extractor}">
      <fileset dir="${bytecode-extractor}" includes="**/*.java" />
    </copy>

    <!-- Add the required jars -->
    <unjar src="${lib}/guava-11.0.1.jar" dest="${build-component-identifier}" />
    <unjar src="${lib}/asm-4.0_RC2.jar" dest="${build-component-identifier}" />

    <!-- Build the jar -->
    <jar destfile="${dist}/bytecode-extractor.jar" basedir="${build-bytecode-extractor}">
      <manifest>
        <attribute name="Main-Class" value="edu.uci.ics.sourcerer.tools.java.extractor.bytecode.Main" />
      </manifest>
    </jar>
  </target>
	
	<!-- Database Importer -->
	<target name="database-importer" depends="init" description="Builds the Database tools (db-import.jar)">
		<!-- Make the build directory -->
		<mkdir dir="${build-database-importer}" />

		<!-- Compile everything -->
		<javac destdir="${build-database-importer}" debug="on" includeantruntime="false">
			<src path="${utilities}" />
			<src path="${database-utilities}" />
			<src path="${core-repo-manager}" />
			<src path="${java-repo-manager}" />
			<src path="${model}" />
			<src path="${component-identifier}" />
			<src path="${database}" />
			<src path="${database-importer}" />
			<classpath>
				<pathelement path="${classpath}" />
				<fileset dir="${lib}">
					<include name="**/asm-4.0_RC2.jar" />
					<include name="**/guava-11.0.1.jar" />
				</fileset>
			</classpath>
		</javac>

		<!-- Copy the source -->
		<copy todir="${build-database-importer}">
			<fileset dir="${utilities}" includes="**/*.java" />
		</copy>
		<copy todir="${build-database-importer}">
			<fileset dir="${database-utilities}" includes="**/*.java" />
		</copy>
		<copy todir="${build-database-importer}">
			<fileset dir="${core-repo-manager}" includes="**/*.java" />
		</copy>
		<copy todir="${build-database-importer}">
			<fileset dir="${java-repo-manager}" includes="**/*.java" />
		</copy>
		<copy todir="${build-database-importer}">
			<fileset dir="${model}" includes="**/*.java" />
		</copy>
		<copy todir="${build-database-importer}">
			<fileset dir="${component-identifier}" includes="**/*.java" />
		</copy>
		<copy todir="${build-database-importer}">
			<fileset dir="${database}" includes="**/*.java" />
		</copy>
		<copy todir="${build-database-importer}">
			<fileset dir="${database-importer}" includes="**/*.java" />
		</copy>

		<!-- Add the required jars -->
		<unjar src="${lib}/mysql-connector-java-5.1.7-bin.jar" dest="${build-database-importer}" />
		<unjar src="${lib}/guava-11.0.1.jar" dest="${build-database-importer}" />
		<unjar src="${lib}/asm-4.0_RC2.jar" dest="${build-database-importer}" />

		<!-- Build the jar -->
		<jar destfile="${dist}/db-import.jar" basedir="${build-database-importer}">
			<manifest>
				<attribute name="Main-Class" value="edu.uci.ics.sourcerer.tools.java.db.Main" />
			</manifest>
		</jar>
	</target>

  <!-- DB Metrics -->
  <target name="db-metrics" depends="init" description="Builds the database metrics calculator tools (db-metrics.jar)">
    <!-- Make the build directory -->
    <mkdir dir="${build-db-metrics}" />

    <!-- Compile everything -->
    <javac destdir="${build-db-metrics}" debug="on" includeantruntime="false">
      <src path="${utilities}" />
      <src path="${database-utilities}" />
      <src path="${model}" />
      <src path="${database}" />
      <src path="${db-metrics}" />
      <classpath>
        <pathelement path="${classpath}" />
        <fileset dir="${lib}">
          <include name="**/guava-11.0.1.jar" />
        </fileset>
      </classpath>
    </javac>

    <!-- Copy the source -->
    <copy todir="${build-db-metrics}">
      <fileset dir="${utilities}" includes="**/*.java" />
    </copy>
    <copy todir="${build-db-metrics}">
      <fileset dir="${database-utilities}" includes="**/*.java" />
    </copy>
    <copy todir="${build-db-metrics}">
      <fileset dir="${model}" includes="**/*.java" />
    </copy>
    <copy todir="${build-db-metrics}">
      <fileset dir="${database}" includes="**/*.java" />
    </copy>
    <copy todir="${build-db-metrics}">
      <fileset dir="${db-metrics}" includes="**/*.java" />
    </copy>

    <!-- Add the required jars -->
    <unjar src="${lib}/mysql-connector-java-5.1.7-bin.jar" dest="${build-db-metrics}" />
    <unjar src="${lib}/guava-11.0.1.jar" dest="${build-db-metrics}" />

    <!-- Build the jar -->
    <jar destfile="${dist}/db-metrics.jar" basedir="${build-db-metrics}">
      <manifest>
        <attribute name="Main-Class" value="edu.uci.ics.sourcerer.tools.java.metrics.db.Main" />
      </manifest>
    </jar>
  </target>
  
  <!-- DB Metrics -->
  <target name="component-utilization" depends="init" description="Builds the component utilization calculator tools (component-utilization.jar)">
    <!-- Make the build directory -->
    <mkdir dir="${build-component-utilization}" />

    <!-- Compile everything -->
    <javac destdir="${build-component-utilization}" debug="on" includeantruntime="false">
      <src path="${utilities}" />
      <src path="${database-utilities}" />
      <src path="${model}" />
      <src path="${database}" />
      <src path="${java-repo-manager}" />
      <src path="${core-repo-manager}" />
      <src path="${component-identifier}" />
      <src path="${component-utilization}" />
      <classpath>
        <pathelement path="${classpath}" />
        <fileset dir="${lib}">
          <include name="**/guava-11.0.1.jar" />
          <include name="**/asm-4.0_RC2.jar" />
        </fileset>
      </classpath>
    </javac>

    <!-- Copy the source -->
    <copy todir="${build-component-utilization}">
      <fileset dir="${utilities}" includes="**/*.java" />
    </copy>
    <copy todir="${build-component-utilization}">
      <fileset dir="${database-utilities}" includes="**/*.java" />
    </copy>
    <copy todir="${build-component-utilization}">
      <fileset dir="${model}" includes="**/*.java" />
    </copy>
    <copy todir="${build-component-utilization}">
      <fileset dir="${database}" includes="**/*.java" />
    </copy>
    <copy todir="${build-component-utilization}">
      <fileset dir="${java-repo-manager}" includes="**/*.java" />
    </copy>
    <copy todir="${build-component-utilization}">
      <fileset dir="${core-repo-manager}" includes="**/*.java" />
    </copy>
    <copy todir="${build-component-utilization}">
      <fileset dir="${component-identifier}" includes="**/*.java" />
    </copy>
    <copy todir="${build-component-utilization}">
      <fileset dir="${component-utilization}" includes="**/*.java" />
    </copy>

    <!-- Add the required jars -->
    <unjar src="${lib}/mysql-connector-java-5.1.7-bin.jar" dest="${build-component-utilization}" />
    <unjar src="${lib}/guava-11.0.1.jar" dest="${build-component-utilization}" />

    <!-- Build the jar -->
    <jar destfile="${dist}/component-utilization.jar" basedir="${build-component-utilization}">
      <manifest>
        <attribute name="Main-Class" value="edu.uci.ics.sourcerer.tools.java.component.utilization.Main" />
      </manifest>
    </jar>
  </target>

	<!-- Compile the extractor's required libraries -->
	<target name="compile-extractor-lib" depends="init">
		<!-- Make the build directory -->
		<mkdir dir="${build-extractor-lib}" />

		<!-- Compile everything -->
		<javac destdir="${build-extractor-lib}" debug="on" includeantruntime="false">
			<src path="${utilities}" />
			<src path="${database-utilities}" />
			<src path="${core-repo-manager}" />
			<src path="${java-repo-manager}" />
			<src path="${model}" />
			<src path="${component-identifier}" />
			<src path="${database}" />
      <src path="${bytecode-extractor}" />
			<classpath>
				<pathelement path="${classpath}" />
				<fileset dir="${lib}">
					<include name="**/guava-11.0.1.jar" />
					<include name="**/asm-4.0_RC2.jar" />
				</fileset>
			</classpath>
		</javac>

		<!-- Copy the source -->
		<copy todir="${build-extractor-lib}">
			<fileset dir="${utilities}" includes="**/*.java" />
		</copy>
		<copy todir="${build-extractor-lib}">
			<fileset dir="${database-utilities}" includes="**/*.java" />
		</copy>
		<copy todir="${build-extractor-lib}">
			<fileset dir="${core-repo-manager}" includes="**/*.java" />
		</copy>
		<copy todir="${build-extractor-lib}">
			<fileset dir="${java-repo-manager}" includes="**/*.java" />
		</copy>
		<copy todir="${build-extractor-lib}">
			<fileset dir="${model}" includes="**/*.java" />
		</copy>
		<copy todir="${build-extractor-lib}">
			<fileset dir="${component-identifier}" includes="**/*.java" />
		</copy>
		<copy todir="${build-extractor-lib}">
			<fileset dir="${database}" includes="**/*.java" />
		</copy>
		<copy todir="${build-extractor-lib}">
      <fileset dir="${bytecode-extractor}" includes="**/*.java" />
    </copy>
	</target>

	<!-- Populate the extractor's lib directory -->
	<target name="extractor-lib" depends="compile-extractor-lib" description="Build and populate the necessary libraries for the Extractor">
		<!-- Build the jar -->
		<jar destfile="${extractor}/lib/sourcerer-lib.jar" basedir="${build-extractor-lib}" />

		<!-- Copy the library jars -->
		<copy file="${lib}/asm-4.0_RC2.jar" todir="${extractor}/lib/" />
		<copy file="${lib}/guava-11.0.1.jar" todir="${extractor}/lib/" />
		<copy file="${lib}/mysql-connector-java-5.1.7-bin.jar" todir="${extractor}/lib/" />
    <copy file="${lib}/juniversalchardet-1.0.3.jar" todir="${extractor}/lib/" />
	</target>

	<!-- Build the extractor plugin - is asynchronous -->
	<target name="extractor" description="Build the extractor plugin">
		<pde.exportPlugins destination="${build}" exportSource="true" exportType="directory" plugins="Extractor" useJARFormat="true" />
	</target>

	<!-- Repackage the plugin jar file - run after the extractor target -->
	<target name="repackage-extractor" depends="compile-extractor-lib" description="Repackages the extractor for use">
		<unjar src="${build}/plugins/Extractor_1.0.0.jar" dest="${build-extractor}" />
		<copy todir="${build-extractor}">
			<fileset dir="${build-extractor-lib}" includes="**/*" />
		</copy>
		<jar destfile="${dist}/Extractor_1.0.0.jar" basedir="${build-extractor}" manifest="${build-extractor}/META-INF/MANIFEST.MF" />
	</target>

	<!-- Indexer -->
	<target name="indexer" depends="init" description="Builds the Indexer (indexer.jar)">
		<!-- Make the build directory -->
		<mkdir dir="${build-indexer}" />

		<!-- Compile everything -->
		<javac destdir="${build-indexer}" debug="on" includeantruntime="false">
			<src path="${utilities}" />
			<src path="${database-utilities}" />
			<src path="${model}" />
			<src path="${database}" />
			<src path="${indexer}" />
			<classpath>
				<pathelement path="${classpath}" />
				<fileset dir="${lib}">
					<include name="**/guava-11.0.1.jar" />
					<include name="**/apache-solr-solrj-3.6.0.jar" />
					<include name="**/httpclient-4.2.jar" />
					<include name="**/httpcore-4.2.1.jar" />
					<include name="**/httpmime-4.2.jar" />
					<include name="**/jcl-over-slf4j-1.6.6.jar" />
					<include name="**/slf4j-api-1.6.6.jar" />
					<include name="**/slf4j-jdk14-1.6.6.jar" />
				</fileset>
			</classpath>
		</javac>

		<!-- Copy the source -->
		<copy todir="${build-indexer}">
			<fileset dir="${utilities}" includes="**/*.java" />
		</copy>
		<copy todir="${build-indexer}">
			<fileset dir="${database-utilities}" includes="**/*.java" />
		</copy>
		<copy todir="${build-indexer}">
			<fileset dir="${model}" includes="**/*.java" />
		</copy>
		<copy todir="${build-indexer}">
			<fileset dir="${database}" includes="**/*.java" />
		</copy>
		<copy todir="${build-indexer}">
			<fileset dir="${indexer}" includes="**/*.java" />
		</copy>

		<!-- Add the required jars -->
		<unjar src="${lib}/guava-11.0.1.jar" dest="${build-indexer}" />
		<unjar src="${lib}/apache-solr-solrj-3.6.0.jar" dest="${build-indexer}" />
		<unjar src="${lib}/httpclient-4.2.jar" dest="${build-indexer}" />
		<unjar src="${lib}/httpcore-4.2.1.jar" dest="${build-indexer}" />
		<unjar src="${lib}/httpmime-4.2.jar" dest="${build-indexer}" />
		<unjar src="${lib}/jcl-over-slf4j-1.6.6.jar" dest="${build-indexer}" />
		<unjar src="${lib}/slf4j-api-1.6.6.jar" dest="${build-indexer}" />
		<unjar src="${lib}/slf4j-jdk14-1.6.6.jar" dest="${build-indexer}" />
		<unjar src="${lib}/mysql-connector-java-5.1.7-bin.jar" dest="${build-indexer}" />
		<unjar src="${lib}/juniversalchardet-1.0.3.jar" dest="${build-indexer}" />

		<!-- Build the jar -->
		<jar destfile="${dist}/indexer.jar" basedir="${build-indexer}">
			<manifest>
				<attribute name="Main-Class" value="edu.uci.ics.sourcerer.tools.java.indexer.Main" />
			</manifest>
		</jar>
	</target>
	<!--
	   SSSSSSSSSSSSSSS                                                                 iiii                                                           
	 SS:::::::::::::::S                                                               i::::i                                                          
	S:::::SSSSSS::::::S                                                                iiii                                                           
	S:::::S     SSSSSSS                                                                                                                               
	S:::::S                eeeeeeeeeeee    rrrrr   rrrrrrrrrvvvvvvv           vvvvvvviiiiiii     cccccccccccccccc    eeeeeeeeeeee        ssssssssss   
	S:::::S              ee::::::::::::ee  r::::rrr:::::::::rv:::::v         v:::::v i:::::i   cc:::::::::::::::c  ee::::::::::::ee    ss::::::::::s  
	 S::::SSSS          e::::::eeeee:::::eer:::::::::::::::::rv:::::v       v:::::v   i::::i  c:::::::::::::::::c e::::::eeeee:::::eess:::::::::::::s 
	  SS::::::SSSSS    e::::::e     e:::::err::::::rrrrr::::::rv:::::v     v:::::v    i::::i c:::::::cccccc:::::ce::::::e     e:::::es::::::ssss:::::s
	    SSS::::::::SS  e:::::::eeeee::::::e r:::::r     r:::::r v:::::v   v:::::v     i::::i c::::::c     ccccccce:::::::eeeee::::::e s:::::s  ssssss 
	       SSSSSS::::S e:::::::::::::::::e  r:::::r     rrrrrrr  v:::::v v:::::v      i::::i c:::::c             e:::::::::::::::::e    s::::::s      
	            S:::::Se::::::eeeeeeeeeee   r:::::r               v:::::v:::::v       i::::i c:::::c             e::::::eeeeeeeeeee        s::::::s   
	            S:::::Se:::::::e            r:::::r                v:::::::::v        i::::i c::::::c     ccccccce:::::::e           ssssss   s:::::s 
	SSSSSSS     S:::::Se::::::::e           r:::::r                 v:::::::v        i::::::ic:::::::cccccc:::::ce::::::::e          s:::::ssss::::::s
	S::::::SSSSSS:::::S e::::::::eeeeeeee   r:::::r                  v:::::v         i::::::i c:::::::::::::::::c e::::::::eeeeeeee  s::::::::::::::s 
	S:::::::::::::::SS   ee:::::::::::::e   r:::::r                   v:::v          i::::::i  cc:::::::::::::::c  ee:::::::::::::e   s:::::::::::ss  
	 SSSSSSSSSSSSSSS       eeeeeeeeeeeeee   rrrrrrr                    vvv           iiiiiiii    cccccccccccccccc    eeeeeeeeeeeeee    sssssssssss  
-->

	<!-- Index Server -->
	<target name="index-server" description="Builds the solr index server (index/)">
		<!-- Make the build directory -->
		<mkdir dir="${build-index-server}" />

		<!-- Compile everything -->
		<javac destdir="${build-index-server}" debug="on" includeantruntime="false">
			<src path="${index-server}" />
			<classpath>
				<pathelement path="${classpath}" />
				<fileset dir="${lib}">
					<include name="**/apache-solr-core-3.6.0.jar" />
					<include name="**/lucene-core-3.6.0.jar" />
					<include name="**/lucene-analyzers-3.6.0.jar" />
				</fileset>
			</classpath>
		</javac>


		<!-- Assemble the contents of solr.war -->
		<unjar src="${index-server}/solr.war" dest="${assemble-index-server}" />
		<jar destfile="${assemble-index-server}/WEB-INF/lib/sourcerer-index.jar" basedir="${build-index-server}" />

		<!-- Assemble dist/index -->
		<mkdir dir="${dist}/index" />
		<copy todir="${dist}/index">
			<fileset dir="${index-server}">
				<exclude name="bin/" />
				<exclude name="src/" />
				<exclude name="solr.war" />
				<exclude name=".project" />
				<exclude name=".classpath" />
			</fileset>
		</copy>
		<jar destfile="${dist}/index/solr.war" basedir="${assemble-index-server}" />
	</target>

	<!-- Search Adapter -->
	<target name="search-adapter" description="Builds the Search Adapter (sourcerer-search.jar)">
		<!-- Make the build directory -->
		<mkdir dir="${build-search-adapter}" />

		<!-- Compile everything -->
		<javac destdir="${build-search-adapter}" debug="on" includeantruntime="false">
			<src path="${utilities}" />
			<src path="${search-adapter}" />
			<classpath>
				<pathelement path="${classpath}" />
				<fileset dir="${lib}">
					<include name="**/guava-11.0.1.jar" />
				</fileset>
			</classpath>
		</javac>

		<!-- Copy the source -->
		<copy todir="${build-search-adapter}">
			<fileset dir="${utilities}" includes="**/*.java" />
		</copy>
		<copy todir="${build-search-adapter}">
			<fileset dir="${search-adapter}" includes="**/*.java" />
		</copy>

		<!-- Add the required jars -->
		<unjar src="${lib}/guava-11.0.1.jar" dest="${build-search-adapter}" />

		<!-- Build the jar -->
		<jar destfile="${dist}/sourcerer-search.jar" basedir="${build-search-adapter}" />
	</target>

	<!-- File Adapter -->
	<target name="file-adapter" description="Builds the File Adapter (sourcerer-file.jar)">
		<!-- Make the build directory -->
		<mkdir dir="${build-file-adapter}" />

		<!-- Compile everything -->
		<javac destdir="${build-file-adapter}" debug="on" includeantruntime="false">
			<src path="${utilities}" />
			<src path="${database-utilities}" />
			<src path="${core-repo-manager}" />
			<src path="${java-repo-manager}" />
			<src path="${model}" />
			<src path="${database}" />
			<src path="${file-adapter}" />
			<classpath>
				<pathelement path="${classpath}" />
				<fileset dir="${lib}">
					<include name="**/guava-11.0.1.jar" />
				</fileset>
			</classpath>
		</javac>

		<!-- Copy the source -->
		<copy todir="${build-file-adapter}">
			<fileset dir="${utilities}" includes="**/*.java" />
		</copy>
		<copy todir="${build-file-adapter}">
			<fileset dir="${database-utilities}" includes="**/*.java" />
		</copy>
		<copy todir="${build-file-adapter}">
			<fileset dir="${core-repo-manager}" includes="**/*.java" />
		</copy>
		<copy todir="${build-file-adapter}">
			<fileset dir="${java-repo-manager}" includes="**/*.java" />
		</copy>
		<copy todir="${build-file-adapter}">
			<fileset dir="${database}" includes="**/*.java" />
		</copy>
		<copy todir="${build-file-adapter}">
			<fileset dir="${model}" includes="**/*.java" />
		</copy>
		<copy todir="${build-file-adapter}">
			<fileset dir="${file-adapter}" includes="**/*.java" />
		</copy>

		<!-- Add the required jars -->
		<unjar src="${lib}/mysql-connector-java-5.1.7-bin.jar" dest="${build-file-adapter}" />
		<unjar src="${lib}/guava-11.0.1.jar" dest="${build-file-adapter}" />

		<!-- Build the jar -->
		<jar destfile="${dist}/sourcerer-file.jar" basedir="${build-file-adapter}" />
	</target>

	<target name="file-server" depends="init" description="Build the File Server (file-server.war)">
		<!-- Make the build directory -->
		<mkdir dir="${build-file-server}" />

		<!-- Compile everything -->
		<javac destdir="${build-file-server}" debug="on" includeantruntime="false">
			<src path="${utilities}" />
			<src path="${database-utilities}" />
			<src path="${servlet-utilities}" />
			<src path="${core-repo-manager}" />
			<src path="${java-repo-manager}" />
			<src path="${model}" />
			<src path="${database}" />
			<src path="${file-adapter}" />
			<src path="${file-server}" />
			<classpath>
				<pathelement path="${classpath}" />
				<fileset dir="${lib}">
					<include name="**/guava-11.0.1.jar" />
					<include name="**/servlet-api.jar" />
				</fileset>
			</classpath>
		</javac>

		<!-- Add the required jars -->
		<unjar src="${lib}/mysql-connector-java-5.1.7-bin.jar" dest="${build-file-server}" />
		<unjar src="${lib}/guava-11.0.1.jar" dest="${build-file-server}" />

		<!-- Create the war file -->
		<war destfile="${dist}/file-server.war" webxml="${file-server}/edu/uci/ics/sourcerer/services/file/web.xml">
			<lib dir="${file-server}/edu/uci/ics/sourcerer/services/file">
				<include name="*.properties" />
			</lib>
			<classes dir="${build-file-server}" />
		</war>
	</target>
	
  <target name="slice-server" depends="init" description="Build the Slice Server (slice-server.war)">
    <!-- Make the build directory -->
    <mkdir dir="${build-slice-server}" />

    <!-- Compile everything -->
    <javac destdir="${build-slice-server}" debug="on" includeantruntime="false">
      <src path="${utilities}" />
      <src path="${database-utilities}" />
      <src path="${servlet-utilities}" />
      <src path="${core-repo-manager}" />
      <src path="${java-repo-manager}" />
      <src path="${model}" />
      <src path="${database}" />
    	<src path="${file-adapter}" />
      <src path="${slicer}" />
      <src path="${slice-server}" />
      <classpath>
        <pathelement path="${classpath}" />
        <fileset dir="${lib}">
          <include name="**/guava-11.0.1.jar" />
          <include name="**/servlet-api.jar" />
        </fileset>
      </classpath>
    </javac>

    <!-- Add the required jars -->
    <unjar src="${lib}/mysql-connector-java-5.1.7-bin.jar" dest="${build-slice-server}" />
    <unjar src="${lib}/guava-11.0.1.jar" dest="${build-slice-server}" />

    <!-- Create the war file -->
    <war destfile="${dist}/slice-server.war" webxml="${slice-server}/edu/uci/ics/sourcerer/services/slice/web.xml">
      <lib dir="${slice-server}/edu/uci/ics/sourcerer/services/slice">
        <include name="*.properties" />
      </lib>
      <classes dir="${build-slice-server}" />
    </war>
  </target>
	<!--
               AAA                                                                       
              A:::A                                                                      
             A:::::A                                                                     
            A:::::::A                                                                    
           A:::::::::A          ppppp   ppppppppp   ppppp   ppppppppp       ssssssssss   
          A:::::A:::::A         p::::ppp:::::::::p  p::::ppp:::::::::p    ss::::::::::s  
         A:::::A A:::::A        p:::::::::::::::::p p:::::::::::::::::p ss:::::::::::::s 
        A:::::A   A:::::A       pp::::::ppppp::::::ppp::::::ppppp::::::ps::::::ssss:::::s
       A:::::A     A:::::A       p:::::p     p:::::p p:::::p     p:::::p s:::::s  ssssss 
      A:::::AAAAAAAAA:::::A      p:::::p     p:::::p p:::::p     p:::::p   s::::::s      
     A:::::::::::::::::::::A     p:::::p     p:::::p p:::::p     p:::::p      s::::::s   
    A:::::AAAAAAAAAAAAA:::::A    p:::::p    p::::::p p:::::p    p::::::pssssss   s:::::s 
   A:::::A             A:::::A   p:::::ppppp:::::::p p:::::ppppp:::::::ps:::::ssss::::::s
  A:::::A               A:::::A  p::::::::::::::::p  p::::::::::::::::p s::::::::::::::s 
 A:::::A                 A:::::A p::::::::::::::pp   p::::::::::::::pp   s:::::::::::ss  
AAAAAAA                   AAAAAAAp::::::pppppppp     p::::::pppppppp      sssssssssss    
                                 p:::::p             p:::::p                             
                                 p:::::p             p:::::p                             
                                p:::::::p           p:::::::p                            
                                p:::::::p           p:::::::p                            
                                p:::::::p           p:::::::p                            
                                ppppppppp           ppppppppp                            
-->

	<!-- Artifact Repo Browser -->
	<target name="artifact-repo-browser" depends="init" description="Build the Artifact Repo Browser (artifact-repo-browser.war)">
		<!-- Make the build directory -->
		<mkdir dir="${build-artifact-repo-browser}" />

		<!-- Compile everything -->
		<javac destdir="${build-artifact-repo-browser}" debug="on" includeantruntime="false">
			<src path="${utilities}" />
			<src path="${database-utilities}" />
			<src path="${servlet-utilities}" />
			<src path="${core-repo-manager}" />
			<src path="${java-repo-manager}" />
			<src path="${model}" />
			<src path="${component-identifier}" />
			<src path="${database}" />
			<src path="${artifact-repo-browser}" />
			<classpath>
				<pathelement path="${classpath}" />
				<fileset dir="${lib}">
					<include name="**/guava-11.0.1.jar" />
					<include name="**/asm-4.0_RC2.jar" />
					<include name="**/servlet-api.jar" />
				</fileset>
			</classpath>
		</javac>

		<!-- Add the required jars -->
		<unjar src="${lib}/mysql-connector-java-5.1.7-bin.jar" dest="${build-artifact-repo-browser}" />
		<unjar src="${lib}/guava-11.0.1.jar" dest="${build-artifact-repo-browser}" />
		<unjar src="${lib}/asm-4.0_RC2.jar" dest="${build-artifact-repo-browser}" />

		<!-- Create the war file -->
		<war destfile="${dist}/artifact-repo-browser.war" webxml="${artifact-repo-browser}/edu/uci/ics/sourcerer/apps/artifactbrowser/web.xml">
			<lib dir="${artifact-repo-browser}/edu/uci/ics/sourcerer/apps/artifactbrowser">
				<include name="*.properties" />
			</lib>
			<classes dir="${build-artifact-repo-browser}" />
		</war>
	</target>

	<!--
TTTTTTTTTTTTTTTTTTTTTTT                                          tttt               RRRRRRRRRRRRRRRRR                                                            
T:::::::::::::::::::::T                                       ttt:::t               R::::::::::::::::R                                                           
T:::::::::::::::::::::T                                       t:::::t               R::::::RRRRRR:::::R                                                          
T:::::TT:::::::TT:::::T                                       t:::::t               RR:::::R     R:::::R                                                         
TTTTTT  T:::::T  TTTTTTeeeeeeeeeeee        ssssssssss   ttttttt:::::ttttttt           R::::R     R:::::R    eeeeeeeeeeee    ppppp   ppppppppp      ooooooooooo   
        T:::::T      ee::::::::::::ee    ss::::::::::s  t:::::::::::::::::t           R::::R     R:::::R  ee::::::::::::ee  p::::ppp:::::::::p   oo:::::::::::oo 
        T:::::T     e::::::eeeee:::::eess:::::::::::::s t:::::::::::::::::t           R::::RRRRRR:::::R  e::::::eeeee:::::eep:::::::::::::::::p o:::::::::::::::o
        T:::::T    e::::::e     e:::::es::::::ssss:::::stttttt:::::::tttttt           R:::::::::::::RR  e::::::e     e:::::epp::::::ppppp::::::po:::::ooooo:::::o
        T:::::T    e:::::::eeeee::::::e s:::::s  ssssss       t:::::t                 R::::RRRRRR:::::R e:::::::eeeee::::::e p:::::p     p:::::po::::o     o::::o
        T:::::T    e:::::::::::::::::e    s::::::s            t:::::t                 R::::R     R:::::Re:::::::::::::::::e  p:::::p     p:::::po::::o     o::::o
        T:::::T    e::::::eeeeeeeeeee        s::::::s         t:::::t                 R::::R     R:::::Re::::::eeeeeeeeeee   p:::::p     p:::::po::::o     o::::o
        T:::::T    e:::::::e           ssssss   s:::::s       t:::::t    tttttt       R::::R     R:::::Re:::::::e            p:::::p    p::::::po::::o     o::::o
      TT:::::::TT  e::::::::e          s:::::ssss::::::s      t::::::tttt:::::t     RR:::::R     R:::::Re::::::::e           p:::::ppppp:::::::po:::::ooooo:::::o
      T:::::::::T   e::::::::eeeeeeee  s::::::::::::::s       tt::::::::::::::t     R::::::R     R:::::R e::::::::eeeeeeee   p::::::::::::::::p o:::::::::::::::o
      T:::::::::T    ee:::::::::::::e   s:::::::::::ss          tt:::::::::::tt     R::::::R     R:::::R  ee:::::::::::::e   p::::::::::::::pp   oo:::::::::::oo 
      TTTTTTTTTTT      eeeeeeeeeeeeee    sssssssssss              ttttttttttt       RRRRRRRR     RRRRRRR    eeeeeeeeeeeeee   p::::::pppppppp       ooooooooooo   
                                                                                                                             p:::::p                             
                                                                                                                             p:::::p                             
                                                                                                                            p:::::::p                            
                                                                                                                            p:::::::p                            
                                                                                                                            p:::::::p                            
                                                                                                                            ppppppppp                            
-->
	<!-- Construct the test repository -->
	<target name="create-test-repo" depends="compile-extractor-lib, java-repo-manager" description="Construct the test repository.">
		<!-- Clear 0/1 -->
		<delete dir="${test-repo}/0/1/content" />

		<!-- Setup 0/1 with the extractor -->
		<copy todir="${test-repo}/0/1/content">
			<fileset dir="${extractor}" includes="**/*.java" excludes="**/test-repo/**" />
		</copy>
		<copy todir="${test-repo}/0/1/content">
			<fileset dir="${extractor}/lib" includes="sourcerer-lib.jar" />
		</copy>

		<!-- Build the comparison test jar -->
		<mkdir dir="${build-comparison-test}" />
		<javac destdir="${build-comparison-test}" debug="on" includeantruntime="false">
			<src path="${comparison-test}" />
		</javac>

		<copy todir="${build-comparison-test}">
			<fileset dir="${comparison-test}" includes="**/*.java" />
		</copy>

		<jar destfile="${dist}/comparison-test.jar" basedir="${build-comparison-test}" />

		<copy todir="${test-repo}/0/2/content">
			<fileset dir="${dist}" includes="comparison-test.jar" />
		</copy>

		<!-- Clear the old output -->
		<delete dir="${test-repo}/output" />
		<delete dir="${test-repo}/jars" />

		<!-- Aggregate the jar repository -->
		<java jar="${dist}/java-repo-tools.jar" fork="true">
			<arg value="--aggregate-jar-files" />
			<arg value="--input-repo" />
			<arg value="${test-repo}" />
			<arg value="--output" />
			<arg value="${test-repo}/output" />
			<arg value="--clear-caches" />
		</java>
	</target>

	<!--
WWWWWWWW                           WWWWWWWW               b::::::b                               iiii          tttt                              
W::::::W                           W::::::W               b::::::b                              i::::i      ttt:::t                              
W::::::W                           W::::::W               b::::::b                               iiii       t:::::t                              
W::::::W                           W::::::W                b:::::b                                          t:::::t                              
 W:::::W           WWWWW           W:::::W eeeeeeeeeeee    b:::::bbbbbbbbb        ssssssssss   iiiiiiittttttt:::::ttttttt        eeeeeeeeeeee    
  W:::::W         W:::::W         W:::::Wee::::::::::::ee  b::::::::::::::bb    ss::::::::::s  i:::::it:::::::::::::::::t      ee::::::::::::ee  
   W:::::W       W:::::::W       W:::::We::::::eeeee:::::eeb::::::::::::::::b ss:::::::::::::s  i::::it:::::::::::::::::t     e::::::eeeee:::::ee
    W:::::W     W:::::::::W     W:::::We::::::e     e:::::eb:::::bbbbb:::::::bs::::::ssss:::::s i::::itttttt:::::::tttttt    e::::::e     e:::::e
     W:::::W   W:::::W:::::W   W:::::W e:::::::eeeee::::::eb:::::b    b::::::b s:::::s  ssssss  i::::i      t:::::t          e:::::::eeeee::::::e
      W:::::W W:::::W W:::::W W:::::W  e:::::::::::::::::e b:::::b     b:::::b   s::::::s       i::::i      t:::::t          e:::::::::::::::::e 
       W:::::W:::::W   W:::::W:::::W   e::::::eeeeeeeeeee  b:::::b     b:::::b      s::::::s    i::::i      t:::::t          e::::::eeeeeeeeeee  
        W:::::::::W     W:::::::::W    e:::::::e           b:::::b     b:::::bssssss   s:::::s  i::::i      t:::::t    tttttte:::::::e           
         W:::::::W       W:::::::W     e::::::::e          b:::::bbbbbb::::::bs:::::ssss::::::si::::::i     t::::::tttt:::::te::::::::e          
          W:::::W         W:::::W       e::::::::eeeeeeee  b::::::::::::::::b s::::::::::::::s i::::::i     tt::::::::::::::t e::::::::eeeeeeee  
           W:::W           W:::W         ee:::::::::::::e  b:::::::::::::::b   s:::::::::::ss  i::::::i       tt:::::::::::tt  ee:::::::::::::e  
            WWW             WWW            eeeeeeeeeeeeee  bbbbbbbbbbbbbbbb     sssssssssss    iiiiiiii         ttttttttttt      eeeeeeeeeeeeee
-->

	<target name="package-website" description="Package the website">
		<zip destfile="${dist}/website.zip" basedir="${website}" />
	</target>

	<!--
DDDDDDDDDDDDD      EEEEEEEEEEEEEEEEEEEEEEPPPPPPPPPPPPPPPPP   RRRRRRRRRRRRRRRRR   EEEEEEEEEEEEEEEEEEEEEE       CCCCCCCCCCCCC               AAA         TTTTTTTTTTTTTTTTTTTTTTTEEEEEEEEEEEEEEEEEEEEEEDDDDDDDDDDDDD        
D::::::::::::DDD   E::::::::::::::::::::EP::::::::::::::::P  R::::::::::::::::R  E::::::::::::::::::::E    CCC::::::::::::C              A:::A        T:::::::::::::::::::::TE::::::::::::::::::::ED::::::::::::DDD     
D:::::::::::::::DD E::::::::::::::::::::EP::::::PPPPPP:::::P R::::::RRRRRR:::::R E::::::::::::::::::::E  CC:::::::::::::::C             A:::::A       T:::::::::::::::::::::TE::::::::::::::::::::ED:::::::::::::::DD   
DDD:::::DDDDD:::::DEE::::::EEEEEEEEE::::EPP:::::P     P:::::PRR:::::R     R:::::REE::::::EEEEEEEEE::::E C:::::CCCCCCCC::::C            A:::::::A      T:::::TT:::::::TT:::::TEE::::::EEEEEEEEE::::EDDD:::::DDDDD:::::D  
  D:::::D    D:::::D E:::::E       EEEEEE  P::::P     P:::::P  R::::R     R:::::R  E:::::E       EEEEEEC:::::C       CCCCCC           A:::::::::A     TTTTTT  T:::::T  TTTTTT  E:::::E       EEEEEE  D:::::D    D:::::D 
  D:::::D     D:::::DE:::::E               P::::P     P:::::P  R::::R     R:::::R  E:::::E            C:::::C                        A:::::A:::::A            T:::::T          E:::::E               D:::::D     D:::::D
  D:::::D     D:::::DE::::::EEEEEEEEEE     P::::PPPPPP:::::P   R::::RRRRRR:::::R   E::::::EEEEEEEEEE  C:::::C                       A:::::A A:::::A           T:::::T          E::::::EEEEEEEEEE     D:::::D     D:::::D
  D:::::D     D:::::DE:::::::::::::::E     P:::::::::::::PP    R:::::::::::::RR    E:::::::::::::::E  C:::::C                      A:::::A   A:::::A          T:::::T          E:::::::::::::::E     D:::::D     D:::::D
  D:::::D     D:::::DE:::::::::::::::E     P::::PPPPPPPPP      R::::RRRRRR:::::R   E:::::::::::::::E  C:::::C                     A:::::A     A:::::A         T:::::T          E:::::::::::::::E     D:::::D     D:::::D
  D:::::D     D:::::DE::::::EEEEEEEEEE     P::::P              R::::R     R:::::R  E::::::EEEEEEEEEE  C:::::C                    A:::::AAAAAAAAA:::::A        T:::::T          E::::::EEEEEEEEEE     D:::::D     D:::::D
  D:::::D     D:::::DE:::::E               P::::P              R::::R     R:::::R  E:::::E            C:::::C                   A:::::::::::::::::::::A       T:::::T          E:::::E               D:::::D     D:::::D
  D:::::D    D:::::D E:::::E       EEEEEE  P::::P              R::::R     R:::::R  E:::::E       EEEEEEC:::::C       CCCCCC    A:::::AAAAAAAAAAAAA:::::A      T:::::T          E:::::E       EEEEEE  D:::::D    D:::::D 
DDD:::::DDDDD:::::DEE::::::EEEEEEEE:::::EPP::::::PP          RR:::::R     R:::::REE::::::EEEEEEEE:::::E C:::::CCCCCCCC::::C   A:::::A             A:::::A   TT:::::::TT      EE::::::EEEEEEEE:::::EDDD:::::DDDDD:::::D  
D:::::::::::::::DD E::::::::::::::::::::EP::::::::P          R::::::R     R:::::RE::::::::::::::::::::E  CC:::::::::::::::C  A:::::A               A:::::A  T:::::::::T      E::::::::::::::::::::ED:::::::::::::::DD   
D::::::::::::DDD   E::::::::::::::::::::EP::::::::P          R::::::R     R:::::RE::::::::::::::::::::E    CCC::::::::::::C A:::::A                 A:::::A T:::::::::T      E::::::::::::::::::::ED::::::::::::DDD     
DDDDDDDDDDDDD      EEEEEEEEEEEEEEEEEEEEEEPPPPPPPPPP          RRRRRRRR     RRRRRRREEEEEEEEEEEEEEEEEEEEEE       CCCCCCCCCCCCCAAAAAAA                   AAAAAAATTTTTTTTTTT      EEEEEEEEEEEEEEEEEEEEEEDDDDDDDDDDDDD        
-->
	<!--
    <property name="build-file-server" location="${build}/file-server" />
  <property name="build-code-browser" location="${build}/code-browser" />
  <property name="build-search-eval" location="${build}/search-eval" />
  <property name="build-search-server" location="${build}/search-server" />
  <property name="build-codecrawler" location="${build}/codecrawler" />
  <property name="build-machine-learning" location="${build}/machine-learning" />
  
    <property name="component-clusterer" location="../infrastructure/tools/java/component-clusterer/src" />
  <property name="syntax-highlighter" location="../infrastructure/tools/java/syntax-highlighter/src" />
  <property name="search-eval" location="../infrastructure/apps/codesearch/src" />
  <property name="search-server" location="../infrastructure/services/search-server/src" />
  <property name="solr-root" location="../infrastructure/services/solr" />
  <property name="codecrawler" location="../infrastructure/tools/core/codecrawler/src" />
  <property name="file-server" location="../infrastructure/services/file-server/src" />
  <property name="famix-server" location="../infrastructure/services/famix-server/src" />
  <property name="code-browser" location="../infrastructure/apps/code-browser/src" />
  <property name="similarity-server" location="../infrastructure/services/similarity-server/src" />
  <property name="extractor-bin" location="../infrastructure/tools/java/extractor/bin" />
  <property name="machine-learning" location="../infrastructure/tools/core/machine-learning/src" />
  
  <!- File Server ->
  <target name="init-file-server" depends="init">
    <mkdir dir="${build-file-server}" />
  </target>
       
  <target name="compile-file-server" depends="init-file-server">
    <!- Compile everything ->
    <javac destdir="${build-file-server}" debug="on" includeantruntime="false">
      <src path="${utilities}" />
      <src path="${core-repo-manager}" />
      <src path="${java-repo-manager}" />
      <src path="${model}" />
      <src path="${component-identifier}" />
      <src path="${database}" />
      <src path="${database-utilities}" />
      <src path="${file-server}" />
      <src path="${servlet-utilities}" />
      <classpath>
        <pathelement path="${classpath}" />
        <fileset dir="${lib}">
          <include name="**/guava-11.0.1.jar" />
          <include name="**/asm-4.0_RC2.jar" />
          <include name="**/servlet-api.jar" />
        </fileset>
      </classpath>
    </javac>
    <unjar src="${lib}/mysql-connector-java-5.1.7-bin.jar" dest="${build-file-server}" />
    <unjar src="${lib}/guava-11.0.1.jar" dest="${build-file-server}" />
    <unjar src="${lib}/asm-4.0_RC2.jar" dest="${build-file-server}" />
  </target>
  
  <target name="file-server" depends="compile-file-server" description="Builds the file server.">
    <war destfile="${dist}/file-server.war" webxml="${file-server}/edu/uci/ics/sourcerer/services/file/web.xml">
      <lib dir="${file-server}/edu/uci/ics/sourcerer/services/file">
        <include name="*.properties" />
      </lib>
      <classes dir="${build-file-server}" />
    </war>
  </target>
  
  <!- Code Browser ->
  <target name="init-code-browser" depends="init">
    <mkdir dir="${build-code-browser}" />
  </target>
       
  <target name="compile-code-browser" depends="init-code-browser">
    <!- Compile everything ->
    <javac destdir="${build-code-browser}" debug="on" includeantruntime="false">
      <src path="${utilities}" />
      <src path="${core-repo-manager}" />
      <src path="${java-repo-manager}" />
      <src path="${model}" />
      <src path="${component-identifier}" />
      <src path="${database}" />
      <src path="${database-utilities}" />
      <src path="${code-browser}" />
      <src path="${syntax-highlighter}" />
      <src path="${servlet-utilities}" />
      <classpath>
        <pathelement path="${classpath}" />
        <fileset dir="${lib}">
          <include name="**/guava-11.0.1.jar" />
          <include name="**/asm-4.0_RC2.jar" />
          <include name="**/servlet-api.jar" />
        </fileset>
      </classpath>
    </javac>
    <unjar src="${lib}/mysql-connector-java-5.1.7-bin.jar" dest="${build-code-browser}" />
    <unjar src="${lib}/guava-11.0.1.jar" dest="${build-code-browser}" />
    <unjar src="${lib}/asm-4.0_RC2.jar" dest="${build-code-browser}" />
  </target>
  
  <target name="code-browser" depends="compile-code-browser" description="Builds the code browser.">
    <war destfile="${dist}/code-browser.war" webxml="${code-browser}/edu/uci/ics/sourcerer/apps/codebrowser/web.xml">
      <lib dir="${code-browser}/edu/uci/ics/sourcerer/apps/codebrowser">
        <include name="*.properties" />
      </lib>
      <classes dir="${build-code-browser}" />
    </war>
  </target>
  
  <target name="famix-server" depends="compile-java-tools-core">
    <war destfile="${dist}/famix-server.war" webxml="${famix-server}/edu/uci/ics/sourcerer/server/famix/web.xml">
      <lib dir="${famix-server}/edu/uci/ics/sourcerer/server/famix">
        <include name="*.properties" />
      </lib>
      <classes dir="${build-java-tools-core}" />
    </war>
  </target>
	

	
	<target name="component-clusterer" depends="compile-java-tools-core">
		<jar destfile="${dist}/component-clusterer.jar" basedir="${build-java-tools-core}">
		  <manifest>
		  	 <attribute name ="Main-Class" value="edu.uci.ics.sourcerer.clusterer.Main" />
			</manifest>
		</jar>
	</target>
	
	  <target name="clean-java-tools">
    <delete dir="${build-java-tools-core}" />
    <delete>
      <fileset dir="${dist}">
        <include name="sourcerer-lib.jar" />
        <include name="repo-tools.jar" />
        <include name="sourcerer-db.jar" />
        <include name="file-server.war" />
        <include name="famix-server.war" />
      </fileset>
    </delete>
  </target>

  <!- Talk to sushil about how this works ->
  <target name="similarity-server" depends="compile-machine-learning">
    <war destfile="${dist}/similarity-server.war" webxml="${similarity-server}/edu/uci/ics/sourcerer/server/similarity/web.xml">
      <lib dir="${similarity-server}/edu/uci/ics/sourcerer/server/similarity">
      </lib>
      <lib dir="${lib}">
        <include name="**/mahout-core-*.jar" />
        <include name="**/slf4j-jdk14-1.5.5.jar" />
        <include name="**/slf4j-api-1.5.5.jar" />
        <include name="**/commons-*.jar" />
        <include name="**/uncommons-*.jar" />
        <include name="**/j2ee-*.jar" />
      </lib>
      <lib dir="${build-java-tools-core}">
        <include name="sourcerer-lib.jar" />
      </lib>
      <classes dir="${build-machine-learning}" />
    </war>
  </target>

  <target name="scs">
    <war destfile="${dist}/scs.war" webxml="../infrastructure/apps/codesearch/war/WEB-INF/web.xml" basedir="../infrastructure/apps/codesearch/war">
      <lib dir="${lib}">
        <include name="mysql*.jar" />
        <include name="smartgwt*.jar" />
        <include name="commons*.jar" />
        <include name="gwt*.jar" />
      </lib>
      <exclude name="**/.gitignore" />
      <exclude name="evaluation/results/**/*" />
    </war>
  </target>

  <target name="init-search-eval" depends="init">
    <mkdir dir="${build-search-eval}" />
  </target>

  <target name="compile-search-eval" depends="init-search-eval">
    <javac destdir="${build-search-eval}" debug="on" excludes="**/sourcerer/db/**/*.java,**/sourcerer/scs/**/*.java,**/sourcerer/eval/client/**/*.java,**/sourcerer/eval/server/**/*.java" includeantruntime="false">
      <src path="${utilities}" />
      <src path="${repository-manager}" />
      <src path="${model}" />
      <src path="${search-eval}" />
    </javac>
    <copy todir="${build-search-eval}">
      <fileset dir="${utilities}" includes="**/*.java" />
    </copy>
    <copy todir="${build-search-eval}">
      <fileset dir="${repository-manager}" includes="**/*.java" />
    </copy>
    <copy todir="${build-search-eval}">
      <fileset dir="${model}" includes="**/*.java" />
    </copy>
    <copy todir="${build-search-eval}">
      <fileset dir="${search-eval}" includes="**/*.java" />
    </copy>
  </target>

  <target name="search-eval" depends="compile-search-eval">
    <jar destfile="${dist}/search-eval.jar" basedir="${build-search-eval}">
      <manifest>
        <attribute name="Main-Class" value="edu.uci.ics.sourcerer.eval.CalculateTopStats" />
      </manifest>
    </jar>
  </target>

  <target name="clean-search-eval">
    <delete dir="${build-search-eval}" />
    <delete>
      <fileset dir="${dist}">
        <include name="search-eval.jar" />
      </fileset>
    </delete>
  </target>

  <target name="init-search-server" depends="init">
    <mkdir dir="${build-search-server}" />
  </target>

  <target name="compile-search-server" depends="init-search-server, sourcerer-db">
    <javac destdir="${build-search-server}" debug="on" includeantruntime="false">
      <classpath>
        <pathelement path="${classpath}" />
        <fileset dir="${lib}">
          <include name="**/apache-solr-core-1.4.0.jar" />
          <include name="**/apache-solr-solrj-1.4.0.jar" />
          <include name="**/apache-solr-dataimporthandler-1.4.0.jar" />
          <include name="**/lucene-core-2.9.1.jar" />
          <include name="**/lucene-snowball-2.9.1.jar" />
          <include name="**/commons-httpclient-*.jar" />
          <include name="**/commons-cli-*.jar" />
          <include name="**/servlet-api.jar" />
          <!- ml dependencies ->
          <include name="**/mahout-core-0.3-SNAPSHOT.jar" />
          <include name="**/slf4j-api-1.5.5.jar" />
          <include name="**/slf4j-jdk14-1.5.5.jar" />
          <include name="**/commons-*.jar" />
          <include name="**/uncommons-*.jar" />
          <include name="**/mysql-*.jar" />
          <include name="**/j2ee-*.jar" />
        </fileset>
        <fileset dir=".">
          <include name="**/sourcerer-db.jar" />
        </fileset>
      </classpath>
      <src path="${search-server}" />
      <src path="${utilities}" />
      <src path="${machine-learning}" />

    </javac>
    <!-
		<copy todir="${build-search-server}">
			<fileset dir="${utilities}" includes="**/*.java" />
		</copy>
		<copy todir="${build-search-server}">
			<fileset dir="${search-server}" includes="**/*.java" />
		</copy>
		->
  </target>

  <target name="search-server" depends="compile-search-server">
    <jar destfile="${dist}/sourcerer-search.jar" basedir="${build-search-server}" />
  </target>

  <target name="clean-search-server">
    <delete dir="${build-search-server}" />
    <delete>
      <fileset dir="${dist}">
        <include name="sourcerer-search.jar" />
      </fileset>
    </delete>
  </target>

  <target name="init-core-repomanager" depends="init">
    <mkdir dir="${build-core-repomanager}" />
  </target>

  <target name="compile-core-repomanager" depends="init-core-repomanager">
    <javac destdir="${build-core-repomanager}" debug="on" includeantruntime="false">
      <classpath>
        <pathelement path="${classpath}" />
        <fileset dir="${lib}">
          <include name="**/ant-*.jar" />
          <include name="**/commons-cli-*.jar" />
          <include name="**/guice-*.jar" />
          <include name="**/svnclientadapter-*.jar" />
        </fileset>
      </classpath>
      <src path="${core-repo-manager}" />
    </javac>
    <copy todir="${build-core-repomanager}">
      <fileset dir="${core-repo-manager}" includes="**/*.java" />
    </copy>
  </target>

  <target name="core-repomanager" depends="compile-core-repomanager">
    <jar destfile="${dist}/core-repomanager.jar" basedir="${build-core-repomanager}" />
    <copy file="${core-repo-manager}/../scripts/content-fetcher.sh" todir="${dist}" />
    <copy file="${core-repo-manager}/../scripts/repo-folder-creator.sh" todir="${dist}" />
  </target>

  <target name="clean-core-repomanager">
    <delete dir="${build-core-repomanager}" />
    <delete>
      <fileset dir="${dist}">
        <include name="core-repomanager.jar" />
        <include name="content-fetcher.sh" />
        <include name="repo-folder-creator.sh" />
      </fileset>
    </delete>
  </target>

  <target name="init-codecrawler" depends="init">
    <mkdir dir="${build-codecrawler}" />
  </target>

  <target name="compile-codecrawler" depends="init-codecrawler">
    <javac destdir="${build-codecrawler}" debug="on" source="1.5" includeantruntime="false">
      <classpath>
        <pathelement path="${classpath}" />
        <fileset dir="${lib}">
          <include name="**/htmlparser-*.jar" />
          <include name="**/log4j-*.jar" />
        </fileset>
      </classpath>
      <src path="${codecrawler}" />
    </javac>
    <copy todir="${build-codecrawler}">
      <fileset dir="${codecrawler}" includes="**/*.java" />
    </copy>
  </target>

  <target name="codecrawler" depends="compile-codecrawler">
    <jar destfile="${dist}/codecrawler.jar" basedir="${build-codecrawler}" />
    <copy file="${codecrawler}/../scripts/run-codecrawler.sh" todir="." />
  </target>

  <target name="clean-codecrawler">
    <delete dir="${build-codecrawler}" />
    <delete>
      <fileset dir="${dist}">
        <include name="codecrawler.jar" />
      </fileset>
    </delete>
  </target>

  <target name="fetch-solr" depends="init" description="Download Solr">
    <get src="http://www.apache.org/dist/lucene/solr/3.6.0/apache-solr-3.6.0.tgz" dest="${build}/apache-solr-3.6.0.tgz" />
    <untar src="${build}/apache-solr-3.6.0.tgz" dest="${build}" compression="gzip" />
    <move todir="${solr-root}">
      <fileset dir="${build}/apache-solr-3.6.0">
        <include name="**/*" />
      </fileset>
    </move>
  </target>

  

  <target name="clean" description="clean up">
    <delete dir="${build}" />
    <delete dir="${dist}" />
  </target>

  <target name="init-machine-learning" depends="init">
    <mkdir dir="${build-machine-learning}" />
  </target>

  <target name="compile-machine-learning" depends="init-machine-learning, sourcerer-db">
    <javac destdir="${build-machine-learning}" debug="on" includeantruntime="false">
      <src path="${machine-learning}" />
      <src path="${similarity-server}" />
      <src path="${utilities}" />
      <!-
			<src path="${database}" />
			->
      <classpath>
        <pathelement path="${classpath}" />
        <fileset dir="${lib}">
          <include name="**/mahout-core-*.jar" />
          <include name="**/slf4j-*.jar" />
          <include name="**/commons-*.jar" />
          <include name="**/mahout-core-*.jar" />
          <include name="**/uncommons-*.jar" />
          <include name="**/mysql-*.jar" />
          <include name="**/j2ee-*.jar" />
          <include name="**/servlet-api.jar" />

        </fileset>
        <fileset dir=".">
          <include name="**/sourcerer-db.jar" />
        </fileset>
      </classpath>
    </javac>
    <copy todir="${build-machine-learning}">
      <fileset dir="${machine-learning}" includes="**/*.java" />
    </copy>

    <!-
		<copy todir="${build-machine-learning}">
		      <fileset dir="${database}" includes="**/*.java" />
		 </copy>
		<copy todir="${build-machine-learning}">
		      <fileset dir="${utilities}" includes="**/*.java" />
		</copy>
		->

  </target>

  <target name="machine-learning" depends="compile-machine-learning">
    <jar destfile="${dist}/sourcerer-ml.jar" basedir="${build-machine-learning}">
    </jar>
  </target>

  <target name="clean-machine-learning">
    <delete dir="${build-machine-learning}" />
    <delete>
      <fileset dir="${dist}">
        <include name="sourcerer-ml.jar" />
      </fileset>
    </delete>
  </target>

  -->
</project>
