<?xml version="1.0"?>
<project xmlns:ivy="antlib:org.apache.ivy.ant" name="sample">
    <target name="ivyConfigure">
         <ivy:configure/>
    </target>
    <target name="retrieveFromAnt" depends="ivyConfigure">
        <ivy:retrieve conf="default" pattern="${buildDir}/antRetrieve/[artifact].[ext]"/>
    </target>
</project>
<project>
    <target name="hello">
        <echo>Hello, from Ant</echo>
    </target>
</project><project>
    <target name="hello">
        <echo>Hello, from Ant</echo>
    </target>
</project><project>
    <target name="hello" depends="intro">
        <echo>Hello, from Ant</echo>
    </target>
</project><project>
    <target name="hello">
        <echo>Hello, from Ant</echo>
    </target>
</project><project>
<!-- START SNIPPET set-property -->
<echo>buildDir = ${buildDir}</echo>
<!-- END SNIPPET set-property -->

<!-- START SNIPPET get-property -->
<property name="antProp" value="a property defined in an Ant build"/>
<!-- END SNIPPET get-property -->

<!-- START SNIPPET set-reference -->
<path refid="classpath"/>
<!-- END SNIPPET set-reference -->

<!-- START SNIPPET get-reference -->
<path id="antPath" location="libs"/>
<!-- END SNIPPET get-reference -->
</project><project>
    <property name="lib.dir" location="lib/test"/>

    <property name="build.dir" location="ant-build"/>
    <property name="src.dir" location="src/main/java"/>
    <property name="test.src.dir" location="src/test/java"/>
    <property name="classes.dir" location="\${build.dir}/classes"/>
    <property name="test.classes.dir" location="\${build.dir}/test-classes"/>
    <property name="test.reports.dir" location="\${build.dir}/test-reports"/>

    <target name="clean">
        <delete dir="\${build.dir}"/>
    </target>

    <target name="compile">
        <mkdir dir="\${classes.dir}"/>
        <javac srcdir="\${src.dir}" destdir="\${classes.dir}"/>
    </target>

    <target name="compileTest" depends="compile">
        <mkdir dir="\${test.classes.dir}"/>
        <javac srcdir="\${test.src.dir}" destdir="\${test.classes.dir}">
            <classpath>
                <path location="\${classes.dir}"/>
                <fileset dir="\${lib.dir}"/>
            </classpath>
        </javac>
    </target>

    <target name="test" depends="compile, compileTest">
        <mkdir dir="\${test.reports.dir}"/>
        <junit>
            <classpath>
                <path location="\${test.classes.dir}"/>
                <path location="\${classes.dir}"/>
                <fileset dir="\${lib.dir}"/>
            </classpath>
            <batchtest todir="\${test.reports.dir}">
                <fileset dir="\${test.classes.dir}" includes="**/*Test*.class"/>
            </batchtest>
            <formatter type="xml"/>
        </junit>
        <!--<junitreport toDir="\${build.dir}">-->
            <!--<fileset dir="\${test.reports.dir}" includes="*.xml"/>-->
            <!--<report todir="\${test.reports.dir}"/>-->
        <!--</junitreport>-->
    </target>

    <target name="jar" depends="compile">
        <jar destfile="\${build.dir}/production.jar">
            <fileset dir="\${classes.dir}"/>
        </jar>
    </target>

    <target name="build" depends="jar, test"/>
</project>
<project>
    <property name="lib.dir" location="lib/test"/>

<% ['clean', 'jar', 'build'].each { target -> %>
    <target name="$target">
        <% subprojects.each { subproject -> %>
            <ant dir="$subproject" target="$target">
                <property name="lib.dir" location="\${lib.dir}"/>
            </ant>
        <%  } %>
    </target>
<% } %>
</project>
