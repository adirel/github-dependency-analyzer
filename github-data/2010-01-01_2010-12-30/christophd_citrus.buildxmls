<project name="citrus-build" default="sayHello">
	<property name="welcomeText" value="Welcome to Citrus!"></property>
	
    <target name="sayHello">
    	<echo message="${welcomeText}"></echo>
    </target>
	
	<target name="sayGoodbye">
        <echo message="Goodbye!"></echo>
    </target>
	
	<target name="checkMe">
		<fail unless="${checked}" message="Failed with missing property"/>
	</target>
</project><project name="citrus-build" default="sayHello">
	<property name="welcomeText" value="Welcome to Citrus!"></property>
	
    <target name="sayHello">
    	<echo message="${welcomeText}"></echo>
    </target>
	
	<target name="sayGoodbye">
        <echo message="Goodbye!"></echo>
    </target>
	
	<target name="checkMe">
		<fail unless="${checked}" message="Failed with missing property"/>
	</target>
</project><project name="citrus-samples" basedir="." default="citrus.run.tests" xmlns:artifact="antlib:org.apache.maven.artifact.ant">
		
	<property file="src/citrus/resources/citrus.properties"/>

	<path id="maven-ant-tasks.classpath" path="../../lib/maven-ant-tasks-2.1.3.jar" />
	<typedef resource="org/apache/maven/artifact/ant/antlib.xml"
	         uri="antlib:org.apache.maven.artifact.ant"
	         classpathref="maven-ant-tasks.classpath" />
	
	<artifact:pom id="citrus-pom" file="pom.xml" />
	<artifact:dependencies filesetId="citrus-dependencies" pomRefId="citrus-pom" />
	
    <path id="citrus-classpath">
        <pathelement path="src/citrus/java"/>
        <fileset refid="citrus-dependencies"/>
    </path>
    
	<typedef resource="citrustasks" classpath="../../../dist/citrus-ant-tasks-1.4.jar"/>
	
	<target name="compile.tests">
	    <javac srcdir="src/citrus/java" classpathref="citrus-classpath"/>
		<javac srcdir="src/citrus/tests" classpathref="citrus-classpath"/>
	</target>
	
	<target name="citrus.run.tests" depends="compile.tests" description="Runs all Citrus tests">
		<citrus package="com.consol.citrus.samples.*"/>
	</target>
	
	<target name="citrus.run.single.test" depends="compile.tests" description="Runs a single test by name">
   	 	<touch file="test.history"/>
    	
    	<loadproperties srcfile="test.history"/>
    	
    	<echo message="Last test executed: ${last.test.executed}"/>

    	<input message="Enter test name:" addproperty="testclass" defaultvalue="${last.test.executed}"/>
    	
    	<propertyfile file="test.history">
			<entry key="last.test.executed" type="string" value="${testclass}"/>
		</propertyfile>

		<citrus test="${testclass}"/>
    </target>
	
	<target name="create.test" description="Creates a new empty test case">
		<input message="Enter test name:" addproperty="test.name"/>
        <input message="Enter test description:" addproperty="test.description" defaultvalue="TODO: Description"/>
        <input message="Enter author's name:" addproperty="test.author" defaultvalue="${default.test.author}"/>
        <input message="Enter package:" addproperty="test.package" defaultvalue="${default.test.package}"/>
		<input message="Enter framework:" addproperty="test.framework" defaultvalue="testng"/>
	    
		<java classname="com.consol.citrus.util.TestCaseCreator">
            <classpath refid="citrus-classpath"/>
			<arg line="-name ${test.name} -author ${test.author} -description ${test.description} -package ${test.package} -framework ${test.framework}"/>
        </java>
    </target>
	
	<target name="create.html.doc" description="Creates test documentation in html">
        <mkdir dir="target"/>
        
        <java classname="com.consol.citrus.doc.HtmlTestDocGenerator">
            <classpath refid="citrus-classpath" />    
            
            <arg value="src/citrus/tests"/>
            <arg value="target/CitrusTests.html"/>
            <arg value="Citrus Test Documentation"/>
            <arg value="logo.png"/>
            <arg value="Overview"/>
        </java>
        
        <copy todir="target" file="src/citrus/resources/logo.png"/>
        
        <zip destfile="target/CitrusTests.zip">
            <fileset dir="target">
                <include name="CitrusTests.html"/>
                <include name="logo.png"/>
            </fileset>
        </zip>
    </target>
    
    <target name="create.xls.doc" description="Creates test documentation in excel">
        <mkdir dir="target"/>
        
        <java classname="com.consol.citrus.doc.ExcelTestDocGenerator">
            <classpath refid="citrus-classpath" />
            
            <arg value="src/citrus/tests"/>
            <arg value="CitrusTests"/>
            <arg value="Citrus Test Documentation"/>
            <arg value="Citrus Testframework"/>
            <arg value="ConSol* Software GmbH"/>
        </java>
    </target>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project name="Citrus release" basedir="." default="instructions">
    <description>Citrus release helpers</description>

    <property name="library.folder" value="lib"/>

    <taskdef resource="org/apache/maven/artifact/ant/antlib.xml">
        <classpath>
            <pathelement location="${library.folder}/maven-ant-tasks-2.1.3.jar"/>
        </classpath>
    </taskdef>
    
    <taskdef resource="net/sf/antcontrib/antcontrib.properties">
        <classpath>
            <pathelement location="${library.folder}/ant-contrib-1.0b3.jar"/>
        </classpath>
    </taskdef>

    <taskdef resource="net/sf/antcontrib/antlib.xml">
        <classpath>
            <pathelement location="${library.folder}/ant-contrib-1.0b3.jar"/>
        </classpath>
    </taskdef>
	
	<target name="instructions" description="Delivery walkthrough.">
        <echo message="Instructions:"/>
        <echo message="1) ant check-release"/>
        <echo message="2) commit all local changes to github"/>
        <echo message="3) ant prepare"/>
        <echo message="4) ant perform-release"/>
        <echo message="5) create tag in git and push to github"/>
        <echo message="6) ant update-version and commit"/>
    </target>
	
	<target name="check-release" depends="set-release-version">
        <input message="Enter the version you want to release: " addproperty="new.version" defaultvalue="${release.version}"/>

        <if>
            <equals arg1="${release.version}" arg2="${new.version}"/>
            <then>
            </then>
            <else>
                <replaceregexp match="(${release.version}-SNAPSHOT)"
                       replace="${new.version}-SNAPSHOT"
                       byline="false"
                       flags="g">
                    <fileset dir="../../" includes="**/pom.xml"/>
                </replaceregexp>

                <input message="Please commit the new version to Subversion and press [ENTER]"/>

                <fail message="Stopping now. Please start freshly with target prepare-dist."/>
            </else>
        </if>
    </target>
	
	<target name="update-version" depends="set-release-version">
        <input message="If you want to create a branch/tag in git for the old version, do it now! Press [ENTER] to continue ..."/>

        <input message="Enter new version that will be set in all Maven pom.xml (without '-SNPASHOT'):" addproperty="new.version" />
        <replaceregexp match="(${release.version}-SNAPSHOT)"
                   replace="${new.version}-SNAPSHOT"
                   byline="false"
                   flags="g">
            <fileset dir="../../" includes="**/pom.xml"/>
        </replaceregexp>
    </target>
	
	<target name="set-release-version">
        <pom id="citrus-parent-pom" file="../../../pom.xml"/>
        <echo message="Current project version: ${citrus-parent-pom.version}"/>
        <propertyregex property="release.version" input="${citrus-parent-pom.version}"
                   regexp="(.*)(-SNAPSHOT)" select="\1" global="true" override="true"/>
    
        <echo message="Release version: ${release.version}"/>
    </target>
    
</project>