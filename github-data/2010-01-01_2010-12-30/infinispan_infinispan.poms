<?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../parent/pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-as-modules</artifactId>
   <name>Infinispan AS/EAP modules</name>
   <packaging>pom</packaging>

   <dependencies>
      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-core</artifactId>
      </dependency>

      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-client-hotrod</artifactId>
      </dependency>

      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-cachestore-jdbc</artifactId>
      </dependency>

      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-cachestore-remote</artifactId>
      </dependency>

      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-tree</artifactId>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
               <execution>
                  <id>build-dist-dir</id>
                  <goals>
                     <goal>run</goal>
                  </goals>
                  <phase>package</phase>
                  <configuration>
                     <target>
                        <ant antfile="build.xml" inheritRefs="true">
                           <target name="all" />
                        </ant>
                     </target>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
               <execution>
                  <id>assemble</id>
                  <phase>package</phase>
                  <goals>
                     <goal>single</goal>
                  </goals>
               </execution>
            </executions>
            <configuration>
               <descriptors>
                  <descriptor>src/main/assembly/dist.xml</descriptor>
               </descriptors>
               <finalName>${project.artifactId}-${project.version}</finalName>
               <outputDirectory>${buildDirectory}/distribution</outputDirectory>
               <workDirectory>${buildDirectory}/assembly/work</workDirectory>
               <appendAssemblyId>false</appendAssemblyId>
            </configuration>
         </plugin>
      </plugins>
   </build>
</project><?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>
   <groupId>org.infinispan</groupId>
   <artifactId>infinispan-bom</artifactId>
   <version>7.0.0-SNAPSHOT</version>
   <packaging>pom</packaging>
   <name>Infinispan BOM</name>
   <description>Infinispan BOM module</description>
   <url>http://www.infinispan.org</url>
   <organization>
      <name>JBoss, a division of Red Hat</name>
      <url>http://www.jboss.org</url>
   </organization>
   <licenses>
      <license>
         <name>Apache License</name>
         <url>http://www.apache.org/licenses/LICENSE-2.0</url>
         <distribution>repo</distribution>
      </license>
   </licenses>
   <developers>
      <developer>
         <id>placeholder</id>
         <name>See http://www.infinispan.org for a complete list of contributors</name>
      </developer>
   </developers>
   <mailingLists>
      <mailingList>
         <name>Infinispan Issues</name>
         <subscribe>https://lists.jboss.org/mailman/listinfo/infinispan-issues</subscribe>
         <unsubscribe>https://lists.jboss.org/mailman/listinfo/infinispan-issues</unsubscribe>
         <post>infinispan-issues@lists.jboss.org</post>
         <archive>http://lists.jboss.org/pipermail/infinispan-issues/</archive>
      </mailingList>
      <mailingList>
         <name>Infinispan Developers</name>
         <subscribe>https://lists.jboss.org/mailman/listinfo/infinispan-dev</subscribe>
         <unsubscribe>https://lists.jboss.org/mailman/listinfo/infinispan-dev</unsubscribe>
         <post>infinispan-dev@lists.jboss.org</post>
         <archive>http://lists.jboss.org/pipermail/infinispan-dev/</archive>
      </mailingList>
   </mailingLists>
   <scm>
      <connection>scm:git:git@github.com:infinispan/infinispan.git</connection>
      <developerConnection>scm:git:git@github.com:infinispan/infinispan.git</developerConnection>
      <url>https://github.com/infinispan/infinispan</url>
   </scm>
   <issueManagement>
      <system>jira</system>
      <url>https://issues.jboss.org/browse/ISPN</url>
   </issueManagement>

   <properties>
      <!-- Versions for dependencies -->
      <version.protostream>1.0.0.Final</version.protostream>
      <version.protobuf>2.5.0</version.protobuf>
      <version.aesh>0.33.7</version.aesh>
      <version.antlr>3.4</version.antlr>
      <version.commons.pool>1.6</version.commons.pool>
      <version.gnu.getopt>1.0.13</version.gnu.getopt>
      <version.hibernate.search>4.5.0.Final</version.hibernate.search>
      <version.jboss.marshalling>1.4.4.Final</version.jboss.marshalling>
      <version.jboss.logging>3.1.2.GA</version.jboss.logging>
      <version.jgroups>3.5.0.Beta3</version.jgroups>
      <version.json>20090211</version.json>
      <version.jta>1.0.1.Final</version.jta>
      <version.netty>4.0.18.Final</version.netty>
      <version.osgi>4.3.0</version.osgi>
      <version.rhq>4.4.0</version.rhq>
      <version.scala>2.10.2</version.scala>
      <version.xstream>1.4.7</version.xstream>
   </properties>

   <distributionManagement>
      <repository>
         <id>jboss-releases-repository</id>
         <name>JBoss Release Repository</name>
         <url>https://repository.jboss.org/nexus/service/local/staging/deploy/maven2/</url>
      </repository>
      <snapshotRepository>
         <id>jboss-snapshots-repository</id>
         <name>JBoss Snapshot Repository</name>
         <url>https://repository.jboss.org/nexus/content/repositories/snapshots/</url>
      </snapshotRepository>
   </distributionManagement>

   <dependencyManagement>
      <dependencies>
         <!-- Infinispan module versions -->
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-cachestore-jdbc</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-cachestore-remote</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-persistence-cli</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-cachestore-leveldb</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-cdi</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-client-hotrod</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-commons</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-core</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-lucene-directory</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-lucene-v3</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-lucene-v4</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-query</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-query-dsl</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-remote-query-client</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-remote-query-server</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-server-core</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-server-hotrod</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-server-memcached</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-server-rest</artifactId>
            <classifier>classes</classifier>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-tools</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-tree</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-jcache</artifactId>
            <version>${project.version}</version>
         </dependency>
         <!-- Infinispan core modules dependencies -->
         <dependency>
            <groupId>gnu-getopt</groupId>
            <artifactId>getopt</artifactId>
            <version>${version.gnu.getopt}</version>
         </dependency>
         <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>antlr-runtime</artifactId>
            <version>${version.antlr}</version>
         </dependency>
         <dependency>
            <groupId>org.jboss.spec.javax.transaction</groupId>
            <artifactId>jboss-transaction-api_1.1_spec</artifactId>
            <version>${version.jta}</version>
         </dependency>
         <dependency>
            <groupId>org.jboss.logging</groupId>
            <artifactId>jboss-logging</artifactId>
            <version>${version.jboss.logging}</version>
         </dependency>
         <dependency>
            <groupId>org.jboss.marshalling</groupId>
            <artifactId>jboss-marshalling</artifactId>
            <version>${version.jboss.marshalling}</version>
         </dependency>
         <dependency>
            <groupId>org.jboss.marshalling</groupId>
            <artifactId>jboss-marshalling-river</artifactId>
            <version>${version.jboss.marshalling}</version>
         </dependency>
         <dependency>
            <groupId>org.jgroups</groupId>
            <artifactId>jgroups</artifactId>
            <version>${version.jgroups}</version>
         </dependency>
         <dependency>
             <groupId>org.jboss.aesh</groupId>
             <artifactId>aesh</artifactId>
             <version>${version.aesh}</version>
         </dependency>
         <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>${version.json}</version>
         </dependency>
         <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.core</artifactId>
            <version>${version.osgi}</version>
         </dependency>
         <!-- Infinispan RHQ module dependencies -->
         <dependency>
            <groupId>org.rhq</groupId>
            <artifactId>rhq-core-domain</artifactId>
            <version>${version.rhq}</version>
         </dependency>
         <dependency>
            <groupId>org.rhq</groupId>
            <artifactId>rhq-core-plugin-api</artifactId>
            <version>${version.rhq}</version>
            <exclusions>
               <exclusion>
                  <groupId>com.sun.xml.bind</groupId>
                  <artifactId>jaxb-impl</artifactId>
               </exclusion>
            </exclusions>
         </dependency>
         <dependency>
            <groupId>org.rhq</groupId>
            <artifactId>rhq-jmx-plugin</artifactId>
            <version>${version.rhq}</version>
         </dependency>
         <dependency>
            <groupId>org.rhq</groupId>
            <artifactId>rhq-jboss-as-7-plugin</artifactId>
            <version>${version.rhq}</version>
         </dependency>
         <dependency>
            <groupId>org.rhq</groupId>
            <artifactId>rhq-core-native-system</artifactId>
            <version>${version.rhq}</version>
         </dependency>
         <!-- Infinispan Query module dependencies -->
         <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-search-engine</artifactId>
            <version>${version.hibernate.search}</version>
         </dependency>
         <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-search-infinispan</artifactId>
            <version>${version.hibernate.search}</version>
         </dependency>
         <!-- Infinispan Remote Query module dependencies -->
         <dependency>
            <groupId>org.infinispan.protostream</groupId>
            <artifactId>protostream</artifactId>
            <version>${version.protostream}</version>
         </dependency>
         <dependency>
            <groupId>org.infinispan.protostream</groupId>
            <artifactId>sample-domain-implementation</artifactId>
            <version>${version.protostream}</version>
         </dependency>
         <!-- Infinispan Protocols module dependencies -->
         <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-all</artifactId>
            <version>${version.netty}</version>
         </dependency>
         <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${version.scala}</version>
         </dependency>
         <dependency>
            <groupId>com.thoughtworks.xstream</groupId>
            <artifactId>xstream</artifactId>
            <version>${version.xstream}</version>
         </dependency>
         <dependency>
            <groupId>commons-pool</groupId>
            <artifactId>commons-pool</artifactId>
            <version>${version.commons.pool}</version>
         </dependency>
      </dependencies>
   </dependencyManagement>
</project>
<?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../../parent/pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-cdi</artifactId>
   <packaging>bundle</packaging>
   <name>Infinispan CDI support</name>
   <description>Infinispan CDI support module</description>

   <developers>
      <developer>
         <name>Pete Muir</name>
         <email>pete DOT muir AT jboss DOT org</email>
         <organization>Red Hat, Inc.</organization>
         <url>http://in.relation.to/Bloggers/Pete</url>
      </developer>
      <developer>
         <name>Kevin Pollet</name>
         <email>kevin DOT pollet AT serli DOT com</email>
         <organization>SERLI</organization>
         <url>http://www.serli.com</url>
      </developer>
   </developers>

   <dependencies>
      <dependency>
         <groupId>javax.enterprise</groupId>
         <artifactId>cdi-api</artifactId>
         <scope>provided</scope>
      </dependency>
      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-core</artifactId>
      </dependency>
      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-client-hotrod</artifactId>
      </dependency>

      <!-- Logging dependency -->
      <dependency>
         <groupId>org.jboss.logging</groupId>
         <artifactId>jboss-logging</artifactId>
      </dependency>

      <!-- Test dependencies -->
      <dependency>
         <groupId>org.testng</groupId>
         <artifactId>testng</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-client-hotrod</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-core</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-hotrod</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-hotrod</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.jboss.arquillian.testng</groupId>
         <artifactId>arquillian-testng-container</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.jboss.shrinkwrap.resolver</groupId>
         <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>javax.cache</groupId>
         <artifactId>cache-api</artifactId>
         <scope>test</scope>
      </dependency>
   </dependencies>
   <build>
      <plugins>
         <!-- Disable parallel execution of tests ARQ-127 -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
               <reuseForks>true</reuseForks>
               <forkCount>1</forkCount>
               <parallel>false</parallel>
               <groups>${defaultTestGroup}</groups>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <configuration>
               <instructions>
                  <Export-Package>
                     ${project.groupId}.cdi.*;version=${project.version};-split-package:=error
                  </Export-Package>
               </instructions>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <configuration>
               <archive>
                  <manifest>
                     <mainClass>org.infinispan.cdi.util.Version</mainClass>
                  </manifest>
               </archive>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.jboss.maven.plugins</groupId>
            <artifactId>maven-injection-plugin</artifactId>
            <executions>
               <execution>
                  <id>inject-project-version</id>
                  <phase>compile</phase>
                  <goals>
                     <goal>bytecode</goal>
                  </goals>
               </execution>
            </executions>
            <configuration>
               <bytecodeInjections>
                  <bytecodeInjection>
                     <expression>${project.version}</expression>
                     <targetMembers>
                        <methodBodyReturn>
                           <className>org.infinispan.cdi.util.Version</className>
                           <methodName>getVersion</methodName>
                        </methodBodyReturn>
                     </targetMembers>
                  </bytecodeInjection>
               </bytecodeInjections>
            </configuration>
         </plugin>
      </plugins>
   </build>
   <profiles>
      <profile>
         <id>default</id>
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <dependencies>
            <dependency>
               <groupId>org.jboss.arquillian.container</groupId>
               <artifactId>arquillian-weld-ee-embedded-1.1</artifactId>
               <scope>test</scope>
            </dependency>
            <dependency>
               <groupId>org.jboss.weld</groupId>
               <artifactId>weld-core</artifactId>
               <scope>test</scope>
            </dependency>
            <dependency>
               <groupId>org.jboss.spec</groupId>
               <artifactId>jboss-javaee-6.0</artifactId>
               <type>pom</type>
               <scope>test</scope>
            </dependency>
            <dependency>
               <groupId>org.jboss.logmanager</groupId>
               <artifactId>jboss-logmanager</artifactId>
               <scope>test</scope>
            </dependency>
            <dependency>
               <groupId>org.slf4j</groupId>
               <artifactId>slf4j-jdk14</artifactId>
               <scope>test</scope>
            </dependency>
         </dependencies>
      </profile>
   </profiles>
</project>
<?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../parent/pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-checkstyle</artifactId>
   <name>Infinispan Checkstyle Rules</name>
   <description>Contains the definitions for the Infinispan commons code style and conventions</description>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>5.6</version>
            <exclusions>
                
                <exclusion>
                    <groupId>com.sun</groupId>
                    <artifactId>tools</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>
</project><?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../../parent/pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-cli-client</artifactId>
   <packaging>bundle</packaging>
   <name>Infinispan CLI Client</name>
   <description>Infinispan CLI Client module</description>

   <dependencies>
      <dependency>
         <groupId>org.jboss.aesh</groupId>
         <artifactId>aesh</artifactId>
      </dependency>
      <dependency>
         <groupId>org.jboss.logging</groupId>
         <artifactId>jboss-logging</artifactId>
      </dependency>
      <dependency>
         <groupId>gnu-getopt</groupId>
         <artifactId>getopt</artifactId>
      </dependency>
      <dependency>
          <groupId>org.infinispan</groupId>
          <artifactId>infinispan-client-hotrod</artifactId>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
                <reuseForks>false</reuseForks>
                <forkCount>1</forkCount>
                <parallel>false</parallel>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <configuration>
               <instructions>
                  <Export-Package>
                     ${project.groupId}.cli.*;version=${project.version};-split-package:=error
                  </Export-Package>
               </instructions>
            </configuration>
         </plugin>
      </plugins>
   </build>
</project><?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../../parent/pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-cli-server</artifactId>
   <packaging>bundle</packaging>
   <name>Infinispan CLI Server</name>
   <description>Infinispan CLI Server module</description>

   <!-- This module declares components that either has lifecycle (@Start or @Stop) or uses @Inject to retrieve dependencies -->
   <properties>
      <module.skipComponentMetaDataProcessing>false</module.skipComponentMetaDataProcessing>
   </properties>

   <dependencies>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-memcached</artifactId>
         <optional>true</optional>
      </dependency>
      <dependency>
         <groupId>org.antlr</groupId>
         <artifactId>antlr-runtime</artifactId>
      </dependency>
      <dependency>
         <groupId>org.codehaus.jackson</groupId>
         <artifactId>jackson-mapper-asl</artifactId>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-client-hotrod</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-cachestore-remote</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-hotrod</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-hotrod</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-memcached</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-rest</artifactId>
         <classifier>classes</classifier>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-rest</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>spy</groupId>
         <artifactId>memcached</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.mortbay.jetty</groupId>
         <artifactId>jetty-embedded</artifactId>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.antlr</groupId>
            <artifactId>antlr3-maven-plugin</artifactId>
         </plugin>
         <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <configuration>
               <instructions>
                  <Export-Package>
                     ${project.groupId}.cli.interpreter.*;version=${project.version};-split-package:=error
                  </Export-Package>
               </instructions>
            </configuration>
         </plugin>
      </plugins>
   </build>
</project>
<?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../../parent/pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-client-hotrod</artifactId>
   <packaging>bundle</packaging>
   <name>Infinispan Hot Rod Client</name>
   <description>Infinispan Hot Rod Client</description>

   <dependencies>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-commons</artifactId>
      </dependency>

      <dependency>
         <groupId>org.jboss.marshalling</groupId>
         <artifactId>jboss-marshalling-river</artifactId>
      </dependency>

      <dependency>
         <groupId>commons-pool</groupId>
         <artifactId>commons-pool</artifactId>
      </dependency>

      <dependency>
         <groupId>org.apache.avro</groupId>
         <artifactId>avro</artifactId>
         <scope>provided</scope>
      </dependency>

      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-remote-query-server</artifactId>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-hotrod</artifactId>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-hotrod</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-core</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>org.scala-lang</groupId>
         <artifactId>scala-library</artifactId>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-query-dsl</artifactId>
         <optional>true</optional>
      </dependency>

      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-remote-query-client</artifactId>
         <optional>true</optional>
      </dependency>

      <dependency>
         <groupId>org.infinispan.protostream</groupId>
         <artifactId>sample-domain-implementation</artifactId>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <build>
      <resources>
         <resource>
            <directory>${project.basedir}/src/main/resources</directory>
            <filtering>true</filtering>
            <includes>
               <include>**/*</include>
            </includes>
         </resource>
      </resources>
      <plugins>
         <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <configuration>
               <instructions>
                  <Export-Package>
                     ${project.groupId}.client.hotrod.*;version=${project.version};-split-package:=error
                  </Export-Package>
                  <Import-Package>
                     javax.net.ssl,
                     net.jcip.annotations;resolution:=optional,
                     org.apache.avro;resolution:=optional,
                     org.apache.avro.generic;resolution:=optional,
                     org.apache.avro.io;resolution:=optional,
                     org.apache.avro.util;resolution:=optional,
                     org.apache.commons.pool;version=${version.commons.pool},
                     org.apache.commons.pool.impl;version=${version.commons.pool},
                     org.infinispan.commons;version=${project.version},
                     org.infinispan.commons.api;version=${project.version},
                     org.infinispan.commons.configuration;version=${project.version},
                     org.infinispan.commons.executors;version=${project.version},
                     org.infinispan.commons.hash;version=${project.version},
                     org.infinispan.commons.io;version=${project.version},
                     org.infinispan.commons.logging;version=${project.version},
                     org.infinispan.commons.marshall;version=${project.version},
                     org.infinispan.commons.marshall.jboss;version=${project.version},
                     org.infinispan.commons.util;version=${project.version},
                     org.infinispan.commons.util.concurrent;version=${project.version},
                     org.infinispan.protostream;resolution:=optional,
                     org.infinispan.query.dsl;resolution:=optional,
                     org.infinispan.query.dsl.impl;resolution:=optional,
                     org.infinispan.query.remote.client;resolution:=optional,
                     org.jboss.logging;version=${version.jboss.logging}
                  </Import-Package>
               </instructions>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <executions>
               <execution>
                  <id>attach-artifacts</id>
                  <phase>package</phase>
                  <goals>
                     <goal>attach-artifact</goal>
                  </goals>
                  <configuration>
                     <artifacts>
                        <artifact>
                           <file>target/classes/features.xml</file>
                           <type>xml</type>
                           <classifier>features</classifier>
                        </artifact>
                     </artifacts>
                  </configuration>
               </execution>
            </executions>
         </plugin>
      </plugins>
   </build>
</project>
<?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../parent/pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-commons</artifactId>
   <packaging>bundle</packaging>
   <name>Infinispan Commons</name>
   <description>Infinispan Commons</description>

   <dependencies>
      <dependency>
         <groupId>org.jboss.logging</groupId>
         <artifactId>jboss-logging</artifactId>
      </dependency>
      <dependency>
         <groupId>org.jboss.marshalling</groupId>
         <artifactId>jboss-marshalling</artifactId>
         <optional>true</optional>
      </dependency>
      <dependency>
         <groupId>org.jboss.marshalling</groupId>
         <artifactId>jboss-marshalling-river</artifactId>
         <optional>true</optional>
      </dependency>

      <dependency>
         <groupId>org.osgi</groupId>
         <artifactId>org.osgi.core</artifactId>
         <optional>true</optional>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <!-- compiler to use -XDignore.symbol.file to suppress warnings regarding the use of sun.misc.Unsafe -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.0</version>
            <configuration>
               <source>1.6</source>
               <target>1.6</target>
               <encoding>UTF-8</encoding>
               <compilerArgument>-AtranslationFilesPath=${project.basedir}/target/generated-translation-files
               </compilerArgument>
               <compilerArgument>-XDignore.symbol.file</compilerArgument>
               <!-- Forking is necessary to allow for the compiler args to be picked up. -->
               <fork>true</fork>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <configuration>
               <instructions>
                  <Export-Package>
                     ${project.groupId}.commons.*;version=${project.version};-split-package:=error
                  </Export-Package>
                  <Import-Package>
                     javax.naming,
                     javax.net.ssl,
                     net.jcip.annotations;resolution:=optional,
                     org.jboss.logging;version=${version.jboss.logging},
                     org.jboss.marshalling;version=${version.jboss.marshalling};resolution:=optional,
                     org.jboss.marshalling.reflect;version=${version.jboss.marshalling};resolution:=optional,
                     org.jboss.marshalling.river;version=${version.jboss.marshalling};resolution:=optional,
                     org.osgi.framework;version=${version.jboss.marshalling};resolution:=optional,
                     sun.misc;resolution:=optional
                  </Import-Package>
               </instructions>
            </configuration>
         </plugin>
      </plugins>
   </build>
</project>
<?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../parent/pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-core</artifactId>
   <packaging>bundle</packaging>
   <name>Infinispan Core</name>
   <description>Infinispan core module</description>

   <properties>
      <module.skipComponentMetaDataProcessing>false</module.skipComponentMetaDataProcessing>
   </properties>
   <dependencies>
   
      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-commons</artifactId>
      </dependency>

      <dependency>
         <groupId>org.jgroups</groupId>
         <artifactId>jgroups</artifactId>
      </dependency>

      <!--
         For the JTA 1.1 API; consuming projects can safely
         exclude this and replace with any valid source of this API, such as a Java EE app server.
         -->
      <dependency>
         <groupId>org.jboss.spec.javax.transaction</groupId>
         <artifactId>jboss-transaction-api_1.1_spec</artifactId>
      </dependency>

      <dependency>
         <groupId>org.jboss.marshalling</groupId>
         <artifactId>jboss-marshalling-river</artifactId>
      </dependency>

      <dependency>
         <groupId>org.jboss.marshalling</groupId>
         <artifactId>jboss-marshalling</artifactId>
      </dependency>

      <dependency>
         <groupId>org.jboss.logging</groupId>
         <artifactId>jboss-logging</artifactId>
      </dependency>

      <dependency>
         <groupId>org.jboss.naming</groupId>
         <artifactId>jnp-client</artifactId>
         <scope>test</scope>
         <exclusions>
            <exclusion>
               <groupId>org.jboss.logging</groupId>
               <artifactId>jboss-logging-spi</artifactId>
            </exclusion>
         </exclusions>
      </dependency>

      <dependency>
         <groupId>org.jboss.naming</groupId>
         <artifactId>jnpserver</artifactId>
         <scope>test</scope>
         <exclusions>
            <exclusion>
               <groupId>org.jboss.logging</groupId>
               <artifactId>jboss-logging-spi</artifactId>
            </exclusion>
         </exclusions>
      </dependency>

      <dependency>
         <groupId>org.apache.commons</groupId>
         <artifactId>commons-math</artifactId>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>org.javassist</groupId>
         <artifactId>javassist</artifactId>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <build>
      <pluginManagement>
         <plugins>
            <plugin>
               <!-- This plugin's configuration is used in m2e only. -->
               <groupId>org.eclipse.m2e</groupId>
               <artifactId>lifecycle-mapping</artifactId>
               <version>1.0.0</version>
               <configuration>
                  <lifecycleMappingMetadata>
                     <pluginExecutions>
                        <pluginExecution>
                           <pluginExecutionFilter>
                              <groupId>org.codehaus.mojo</groupId>
                              <artifactId>exec-maven-plugin</artifactId>
                              <versionRange>[1.0.2,)</versionRange>
                              <goals>
                                 <goal>java</goal>
                              </goals>
                           </pluginExecutionFilter>
                           <action>
                              <ignore />
                           </action>
                        </pluginExecution>
                        <pluginExecution>
                            <pluginExecutionFilter>
                                <groupId>
                                    org.apache.maven.plugins
                                </groupId>
                                <artifactId>
                                    maven-antrun-plugin
                                </artifactId>
                                <versionRange>[1.3,)</versionRange>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </pluginExecutionFilter>
                            <action>
                                <ignore />
                            </action>
                        </pluginExecution>
                     </pluginExecutions>
                  </lifecycleMappingMetadata>
               </configuration>
            </plugin>
         </plugins>
      </pluginManagement>
      <plugins>
         <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <configuration>
               <instructions>
                  <Export-Package>
                     !${project.groupId}.commons.*,${project.groupId}.*;version=${project.version};-split-package:=error
                  </Export-Package>
               </instructions>
            </configuration>
         </plugin>
      </plugins>
   </build>

</project>
<?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../../parent/pom.xml</relativePath>
   </parent>

   <build>
      <plugins>
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <configuration>
               <mainClass>org.infinispan.demos.directory.FilesystemDirectory</mainClass>
               <systemProperties>
                  <systemProperty>
                     <key>jgroups.bind_addr</key>
                     <value>127.0.0.1</value>
                  </systemProperty>
                  <systemProperty>
                     <key>java.net.preferIPv4Stack</key>
                     <value>true</value>
                  </systemProperty>
               </systemProperties>
            </configuration>
         </plugin>
      </plugins>
   </build>

   <artifactId>infinispan-directory-demo</artifactId>   
   <name>Infinispan Directory Demo</name>
   <description>Infinispan - Directory Demo</description>
   <dependencies>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
      </dependency>
   </dependencies>

</project><?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../../parent/pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-distexec-demo</artifactId>
   <name>Infinispan Distributed Executors and Map/Reduce Demo</name>
   <description>Infinispan Distributed Executors and Map/Reduce Demo</description>
   <packaging>jar</packaging>

   <dependencies>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
      </dependency>
      <dependency>
         <groupId>com.martiansoftware</groupId>
         <artifactId>jsap</artifactId>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <configuration>
               <archive>
                  <manifest>
                     <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                     <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                     <mainClass>org.infinispan.demo.distexec.PiApproximationDemo</mainClass>
                  </manifest>
               </archive>
            </configuration>
            <executions>
               <execution>
                  <phase>package</phase>
                  <goals>
                     <goal>jar</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
      </plugins>
   </build>
</project><?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../../parent/pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-ec2-demoui</artifactId>
   <name>Infinispan EC2 Demo UI</name>
   <description>Infinispan - EC2 Demo</description>
   <packaging>war</packaging>

   <dependencies>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-ec2-demo</artifactId>
         <exclusions>
            <exclusion>
               <groupId>xerces</groupId>
               <artifactId>xercesImpl</artifactId>
            </exclusion>
         </exclusions>
      </dependency>
      <dependency>
         <groupId>javax.servlet</groupId>
         <artifactId>servlet-api</artifactId>
         <scope>provided</scope>
      </dependency>
      <dependency>
         <groupId>javax.servlet</groupId>
         <artifactId>jstl</artifactId>
         <scope>provided</scope>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <artifactId>maven-war-plugin</artifactId>
         </plugin>
      </plugins>
   </build>
</project><?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../../parent/pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-ec2-demo</artifactId>
   <name>Infinispan EC2 Demo</name>
   <description>Infinispan - EC2 Demo</description>
   <packaging>jar</packaging>
   <dependencies>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
      </dependency>
      <dependency>
         <groupId>com.martiansoftware</groupId>
         <artifactId>jsap</artifactId>
      </dependency>
      <dependency>
         <groupId>org.milyn</groupId>
         <artifactId>milyn-smooks-javabean</artifactId>
      </dependency>
      <dependency>
         <groupId>org.milyn</groupId>
         <artifactId>milyn-smooks-csv</artifactId>
      </dependency>
   </dependencies>
   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <configuration>
               <archive>
                  <manifest>
                     <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                     <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                     <mainClass>org.infinispan.ec2demo.InfinispanFluDemo</mainClass>
                  </manifest>
               </archive>
               <excludes>
                  <exclude>**/*.dat.gz</exclude>
               </excludes>
            </configuration>
            <executions>
               <execution>
                  <phase>package</phase>
                  <goals>
                     <goal>jar</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
      </plugins>
   </build>
</project><?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../../parent/pom.xml</relativePath>
   </parent>
   <artifactId>infinispan-gridfs-webdav</artifactId>
   <packaging>war</packaging>
   <name>Infinispan GridFileSystem WebDAV interface</name>
   <description>WebDAV interface for Infinispan's GridFileSystem, packaged as a WAR file for deployment in a servlet container</description>
   <dependencies>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
      </dependency>
      <dependency>
         <groupId>net.sf.webdav-servlet</groupId>
         <artifactId>webdav-servlet</artifactId>
      </dependency>
      <!-- required by Webdav-Servlet -->
      <dependency>
         <groupId>javax.servlet</groupId>
         <artifactId>servlet-api</artifactId>
         <scope>provided</scope>
      </dependency>
      <dependency>
         <groupId>log4j</groupId>
         <artifactId>log4j</artifactId>
      </dependency>
   </dependencies>
</project>
<?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../../parent/pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-gui-demo</artifactId>
   <name>Infinispan GUI Demo</name>
   <description>Infinispan - GUI Demo</description>

   <dependencies>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
      </dependency>
      <dependency>
         <groupId>jgoodies</groupId>
         <artifactId>forms</artifactId>
      </dependency>
      <dependency>
         <groupId>com.intellij</groupId>
         <artifactId>forms_rt</artifactId>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>ideauidesigner-maven-plugin</artifactId>
            <executions>
               <execution>
                  <goals>
                     <goal>javac2</goal>
                  </goals>
               </execution>
            </executions>
            <configuration>
               <fork>true</fork>
               <debug>true</debug>
               <failOnError>true</failOnError>
            </configuration>
         </plugin>
      </plugins>
   </build>
</project><?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../../parent/pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-lucene-demo</artifactId>
   <name>Infinispan Lucene Directory Demo</name>
   <description>Infinispan - Lucene Directory Demo</description>

   <dependencies>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-lucene-directory</artifactId>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
      <!-- Hack to make Eclipse happy when opening multiple modules at once:
         the eclipse project related to infinispan-lucene-directory does not
         contain the actual classes packaged in its jar -->
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-lucene-v3</artifactId>
         <scope>provided</scope>
      </dependency>
   </dependencies>

   <build>
      <plugins>
      
         <!-- Creates executable scripts -->
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>appassembler-maven-plugin</artifactId>
            <configuration>
               <programs>
                  <program>
                     <mainClass>org.infinispan.lucenedemo.DemoDriver</mainClass>
                     <name>lucene-demo</name>
                  </program>
               </programs>
               <extraJvmArguments>-Djava.net.preferIPv4Stack=true -Dprotocol.stack=udp</extraJvmArguments>
               <assembleDirectory>${project.build.directory}/assembly</assembleDirectory>
            </configuration>
         </plugin>
         
         <!-- Testing Configuration -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
               <parallel>false</parallel>
               <threadCount>1</threadCount>
               <trimStackTrace>false</trimStackTrace>
            </configuration>
         </plugin>
         
      </plugins>
   </build>

</project>
<?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../../parent/pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-nearcache-client</artifactId>
   <name>Infinispan Near Cache Demo Client</name>
   <description>Infinispan - Near Cache Demo Client</description>
   <packaging>war</packaging>

   <properties>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <maven.test.skip>true</maven.test.skip>
      <version.hornetq>2.2.7.Final</version.hornetq>
   </properties>

   <dependencies>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-cdi</artifactId>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-cachestore-remote</artifactId>
      </dependency>

      <dependency>
         <groupId>javax.cache</groupId>
         <artifactId>cache-api</artifactId>
      </dependency>
      <dependency>
         <groupId>javax.enterprise</groupId>
         <artifactId>cdi-api</artifactId>
         <scope>provided</scope>
      </dependency>

      <dependency>
         <groupId>org.jboss.spec.javax.jms</groupId>
         <artifactId>jboss-jms-api_1.1_spec</artifactId>
         <version>1.0.0.Final</version>
      </dependency>
      <dependency>
         <groupId>org.hornetq</groupId>
         <artifactId>hornetq-jms-client</artifactId>
         <version>${version.hornetq}</version>
      </dependency>
      <dependency>
         <groupId>org.hornetq</groupId>
         <artifactId>hornetq-core-client</artifactId>
         <version>${version.hornetq}</version>
      </dependency>
      <dependency>
         <groupId>org.jboss.naming</groupId>
         <artifactId>jnp-client</artifactId>
         <version>5.0.3.GA</version>
         <exclusions>
            <exclusion>
               <groupId>org.jboss.logging</groupId>
               <artifactId>jboss-logging-spi</artifactId>
            </exclusion>
         </exclusions>
      </dependency>
      <dependency>
         <groupId>io.netty</groupId>
         <artifactId>netty-all</artifactId>
      </dependency>

   </dependencies>

      <dependencyManagement>
      <dependencies>
         <!-- Define the version of JBoss' Java EE 6 APIs we want to use -->
         <!-- JBoss distributes a complete set of Java EE 6 APIs including
            a Bill of Materials (BOM). A BOM specifies the versions of a "stack" (or
            a collection) of artifacts. We use this here so that we always get the correct
            versions of artifacts. Here we use the jboss-javaee-web-6.0 stack (you can
            read this as the JBoss stack of the Java EE 6 Web Profile APIs), and we use
            version 2.0.0.Final which is the latest release of the stack. You can actually
            use this stack with any version of JBoss AS that implements Java EE 6, not
            just JBoss AS 7! -->
         <dependency>
            <groupId>org.jboss.spec</groupId>
            <artifactId>jboss-javaee-web-6.0</artifactId>
            <version>2.0.0.Final</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>

         <!-- Define the versions of Arquillian dependencies we want to use -->
         <dependency>
            <groupId>org.jboss.arquillian</groupId>
            <artifactId>arquillian-bom</artifactId>
            <version>1.0.0.CR4</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
      </dependencies>
   </dependencyManagement>

   <build>
      <!-- Set the name of the war, used as the context root when the app
         is deployed -->
      <finalName>infinispan-nearcache</finalName>
      <plugins>
         <plugin>
            <artifactId>maven-war-plugin</artifactId>
            <configuration>
               <!-- No web.xml needed in Java EE 6 -->
               <failOnMissingWebXml>false</failOnMissingWebXml>
               <archive>
                  <manifest>
                     <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                  </manifest>
               </archive>
            </configuration>
         </plugin>

         <!-- JBoss AS plugin to deploy war -->
         <plugin>
            <groupId>org.jboss.as.plugins</groupId>
            <artifactId>jboss-as-maven-plugin</artifactId>
            <version>7.1.0.Beta1b</version>
         </plugin>

         <!-- Compiler plugin enforces Java 1.6 compatibility and activates
            annotation processors -->
         <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>2.3.2</version>
            <configuration>
               <source>1.6</source>
               <target>1.6</target>
            </configuration>
         </plugin>
      </plugins>
   </build>

</project>
<?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../../parent/pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-nearcache-demo</artifactId>
   <name>Infinispan Near Cache Demo</name>
   <description>Infinispan - Near Cache Demo</description>

   <properties>
      <version.hornetq>2.2.7.Final</version.hornetq>
   </properties>

   <dependencies>

      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-core</artifactId>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-hotrod</artifactId>
      </dependency>

      <dependency>
         <groupId>io.netty</groupId>
         <artifactId>netty-all</artifactId>
      </dependency>

      <!-- HornetQ dependencies -->
      <dependency>
          <groupId>org.hornetq</groupId>
          <artifactId>hornetq-bootstrap</artifactId>
          <version>${version.hornetq}</version>
      </dependency>
      <dependency>
          <groupId>org.hornetq</groupId>
          <artifactId>hornetq-core</artifactId>
          <version>${version.hornetq}</version>
      </dependency>
      <dependency>
         <groupId>org.hornetq</groupId>
         <artifactId>hornetq-jms</artifactId>
         <version>${version.hornetq}</version>
      </dependency>
      <dependency>
         <groupId>org.hornetq</groupId>
         <artifactId>hornetq-logging</artifactId>
         <version>${version.hornetq}</version>
      </dependency>
      <dependency>
         <groupId>org.jboss.microcontainer</groupId>
         <artifactId>jboss-kernel</artifactId>
         <version>2.0.6.GA</version>
      </dependency>
      <dependency>
         <groupId>org.jboss.naming</groupId>
         <artifactId>jnpserver</artifactId>
      </dependency>
      <dependency>
         <groupId>org.jboss.spec.javax.jms</groupId>
         <artifactId>jboss-jms-api_1.1_spec</artifactId>
         <version>1.0.0.Final</version>
      </dependency>

      <dependency>
         <groupId>log4j</groupId>
         <artifactId>log4j</artifactId>
      </dependency>

   </dependencies>

</project>
<?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

    <modelVersion>4.0.0</modelVersion>

    <parent>
       <groupId>org.infinispan</groupId>
       <artifactId>infinispan-parent</artifactId>
       <version>7.0.0-SNAPSHOT</version>
       <relativePath>../parent/pom.xml</relativePath>
    </parent>

    <artifactId>infinispan-docs</artifactId>

    <name>Infinispan Documentation</name>
    <description>The Infinispan Documentation</description>

    <properties>
        <infinispan.version>6.0.x</infinispan.version>
        <!-- Skip artifact deployment -->
        <maven.deploy.skip>true</maven.deploy.skip>
		<skipTests>true</skipTests>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctor-maven-plugin</artifactId>
                <version>0.1.3.1</version> 
                <executions>
                    <execution>
                        <id>create-html</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>process-asciidoc</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <toc>true</toc>
                    <backend>html5</backend>
                    <doctype>book</doctype>
                    <goalPrefix>asciidoctor</goalPrefix>
                    <sourceHighlighter>coderay</sourceHighlighter>
                    <attributes>
                        <idprefix />
                        <sectanchors>true</sectanchors>
                        <toclevels>3</toclevels>
                        <numbered>true</numbered>
                        <icons>font</icons>
                        <docinfo>true</docinfo>
                        <experimental>true</experimental>
                        <infinispan-version>${infinispan.version}</infinispan-version>
                    </attributes>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
<?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.infinispan</groupId>
        <artifactId>infinispan-parent</artifactId>
        <version>7.0.0-SNAPSHOT</version>
        <relativePath>../parent/pom.xml</relativePath>
    </parent>

    <artifactId>infinispan-extended-statistics</artifactId>
    <packaging>jar</packaging>
    <name>Infinispan Extended Statistics</name>
    <description>Infinispan Extended Statistics module</description>

    <!-- This module declares components that either has lifecycle (@Start or @Stop) or uses @Inject to retrieve dependencies -->
    <properties>
        <module.skipComponentMetaDataProcessing>false</module.skipComponentMetaDataProcessing>
    </properties>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-core</artifactId>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-core</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.clearspring.analytics</groupId>
            <artifactId>stream</artifactId>
            <version>2.2.0</version>
        </dependency>
    </dependencies>
</project>
<?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../../parent/pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-as-module-integrationtests</artifactId>
   <name>Integration tests: AS Module Integration Tests</name>
   <description>Integration tests: AS Module Integration Tests</description>
   
   <properties>
      <eap.dir></eap.dir>
   </properties>

   <dependencies>
      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-cdi</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-core</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-core</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-cachestore-jdbc</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-jcache</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-query</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-tree</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.jboss.arquillian.junit</groupId>
         <artifactId>arquillian-junit-container</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.jboss.shrinkwrap.resolver</groupId>
         <artifactId>shrinkwrap-resolver-depchain</artifactId>
         <type>pom</type>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.jboss.shrinkwrap.resolver</groupId>
         <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.jboss.shrinkwrap.descriptors</groupId>
         <artifactId>shrinkwrap-descriptors-impl-javaee</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.wildfly</groupId>
         <artifactId>wildfly-arquillian-container-managed</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>javax.enterprise</groupId>
         <artifactId>cdi-api</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>javax.cache</groupId>
         <artifactId>cache-api</artifactId>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <build>
      <testResources>
         <testResource>
            <filtering>true</filtering>
            <directory>src/test/resources</directory>
         </testResource>
      </testResources>

      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-deploy-plugin</artifactId>
            <configuration>
               <skip>true</skip>
            </configuration>
         </plugin>

         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
               <!-- Force use of JUnit, since TestNG+Arquillian break in wonderful ways -->
               <testNGArtifactName>none:none</testNGArtifactName>
               <excludedGroups>org.infinispan.test.integration.as.category.UnstableTest</excludedGroups>
            </configuration>
            <executions>
               <execution>
                  <goals>
                     <goal>integration-test</goal>
                     <goal>verify</goal>
                  </goals>
                  <configuration>
                     <redirectTestOutputToFile>true</redirectTestOutputToFile>
                  </configuration>
               </execution>
            </executions>
         </plugin>


         <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
               <execution>
                  <id>unpack</id>
                  <phase>pre-integration-test</phase>
                  <goals>
                     <goal>unpack</goal>
                  </goals>
                  <configuration>
                     <artifactItems>
                        <artifactItem>
                           <groupId>org.wildfly</groupId>
                           <artifactId>wildfly-dist</artifactId>
                           <version>${version.wildfly}</version>
                           <type>zip</type>
                           <overWrite>false</overWrite>
                           <outputDirectory>${project.build.directory}</outputDirectory>
                        </artifactItem>
                        <artifactItem>
                           <groupId>org.infinispan</groupId>
                           <artifactId>infinispan-as-modules</artifactId>
                           <version>${project.version}</version>
                           <type>zip</type>
                           <overWrite>false</overWrite>
                           <outputDirectory>${project.build.directory}/wildfly-${version.wildfly}/modules</outputDirectory>
                        </artifactItem>
                     </artifactItems>
                  </configuration>
               </execution>
            </executions>
         </plugin>

         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
               <!-- Copy the AS configuration files so we can use our custom configurations -->
               <execution>
                  <id>configure-as-node</id>
                  <phase>pre-integration-test</phase>
                  <goals>
                     <goal>copy-resources</goal>
                  </goals>
                  <configuration>
                     <outputDirectory>${project.build.directory}/wildfly-${version.wildfly}</outputDirectory>
                     <overwrite>true</overwrite>
                     <resources>
                        <resource>
                           <directory>${basedir}/src/as-config</directory>
                        </resource>
                     </resources>
                  </configuration>
               </execution>
            </executions>
         </plugin>
      </plugins>
   </build>

   <profiles>
      <profile>
         <id>test-unstable</id>
         <activation>
             <activeByDefault>false</activeByDefault>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-failsafe-plugin</artifactId>
                  <configuration>
                     <groups combine.self="override">org.infinispan.test.integration.as.category.UnstableTest</groups>
                     <!-- empty since we are not going to exclude any group -->
                     <excludedGroups combine.self="override"></excludedGroups>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>
    </profiles>

</project>
<?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../../parent/pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-cdi-jcache-it</artifactId>
   <name>Integration tests: Infinispan CDI/JCache interactions</name>
   <description>Integration tests for Infinispan's CDI and JCache modules</description>

   <dependencies>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-cdi</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-cdi</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>javax.enterprise</groupId>
         <artifactId>cdi-api</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-jcache</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.jboss.logging</groupId>
         <artifactId>jboss-logging</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.jboss.arquillian.testng</groupId>
         <artifactId>arquillian-testng-container</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.jboss.shrinkwrap.resolver</groupId>
         <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
         <scope>test</scope>
      </dependency>
   </dependencies>
   
   <build>
      <plugins>
         <!-- Disable parallel execution of tests ARQ-127 -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
               <reuseForks>true</reuseForks>
               <forkCount>1</forkCount>
               <parallel>false</parallel>
               <groups>${defaultTestGroup}</groups>
            </configuration>
         </plugin>
      </plugins>
   </build>

   <profiles>
      <profile>
         <id>default</id>
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <dependencies>
            <dependency>
               <groupId>org.jboss.arquillian.container</groupId>
               <artifactId>arquillian-weld-ee-embedded-1.1</artifactId>
               <scope>test</scope>
            </dependency>
            <dependency>
               <groupId>org.jboss.weld</groupId>
               <artifactId>weld-core</artifactId>
               <scope>test</scope>
            </dependency>
            <dependency>
               <groupId>org.jboss.spec</groupId>
               <artifactId>jboss-javaee-6.0</artifactId>
               <type>pom</type>
               <scope>test</scope>
            </dependency>
            <dependency>
               <groupId>org.jboss.logmanager</groupId>
               <artifactId>jboss-logmanager</artifactId>
               <scope>test</scope>
            </dependency>
            <dependency>
               <groupId>org.slf4j</groupId>
               <artifactId>slf4j-jdk14</artifactId>
               <scope>test</scope>
            </dependency>
         </dependencies>
      </profile>
   </profiles>

</project>
<?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../../parent/pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-compatibility-mode-it</artifactId>
   <name>Integration tests: Infinispan compatibility mode</name>
   <description>Integration tests for inter-server and in-VM compatibility</description>

   <dependencies>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-core</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-hotrod</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-hotrod</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-client-hotrod</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-client-hotrod</artifactId>
         <scope>test</scope>
         <type>test-jar</type>
      </dependency>

      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-rest</artifactId>
         <classifier>classes</classifier>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.mortbay.jetty</groupId>
         <artifactId>jetty-embedded</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>commons-httpclient</groupId>
         <artifactId>commons-httpclient</artifactId>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-memcached</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-memcached</artifactId>
         <scope>test</scope>
         <type>test-jar</type>
      </dependency>
      <dependency>
         <groupId>spy</groupId>
         <artifactId>memcached</artifactId>
         <scope>test</scope>
      </dependency>
   </dependencies>

</project><?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../../parent/pom.xml</relativePath>
   </parent>

   <artifactId>integrationtests-lucenedirectory-query</artifactId>
   <name>Integration tests: Lucene Directory with Infinispan Query</name>
   <description>Integration tests using both the Lucene Directory module and Infinispan Query</description>

   <dependencies>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-lucene-directory</artifactId>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-lucene-v3</artifactId>
         <version>${project.version}</version>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-query</artifactId>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
   </dependencies>

</project><?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
   xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../../parent/pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-security-integrationtests</artifactId>
   <name>Integration tests: Security Tests</name>
   <description>Integration tests: Security Tests</description>

   <dependencies>
      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-core</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.apache.directory.server</groupId>
         <artifactId>apacheds-all</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.jboss.arquillian.junit</groupId>
         <artifactId>arquillian-junit-container</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.wildfly</groupId>
         <artifactId>wildfly-arquillian-container-managed</artifactId>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <build>
      <testResources>
         <testResource>
            <filtering>true</filtering>
            <directory>src/test/resources</directory>
         </testResource>
      </testResources>

      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
               <!-- Force use of JUnit, since TestNG+Arquillian break in wonderful ways -->
               <testNGArtifactName>none:none</testNGArtifactName>
            </configuration>
            <executions>
               <execution>
                  <goals>
                     <goal>integration-test</goal>
                     <goal>verify</goal>
                  </goals>
                  <configuration> <redirectTestOutputToFile>true</redirectTestOutputToFile> </configuration>
               </execution>
            </executions>
         </plugin>

         <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
               <execution>
                  <id>copy-test-libs</id>
                  <phase>process-test-resources</phase>
                  <configuration>
                     <includeScope>test</includeScope>
                     <outputDirectory>${project.build.directory}/test-libs</outputDirectory>
                     <stripVersion>true</stripVersion>
                  </configuration>
                  <goals>
                     <goal>copy-dependencies</goal>
                  </goals>
               </execution>
               <execution>
                  <id>unpack</id>
                  <phase>pre-integration-test</phase>
                  <goals>
                     <goal>unpack</goal>
                  </goals>
                  <configuration>
                     <artifactItems>
                        <artifactItem>
                           <groupId>org.wildfly</groupId>
                           <artifactId>wildfly-dist</artifactId>
                           <version>${version.wildfly}</version>
                           <type>zip</type>
                           <overWrite>false</overWrite>
                           <outputDirectory>${project.build.directory}</outputDirectory>
                        </artifactItem>
                     </artifactItems>
                  </configuration>
               </execution>
            </executions>
         </plugin>

         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
               <!-- Copy the AS configuration files so we can use our custom configurations -->
               <execution>
                  <id>configure-as-node</id>
                  <phase>pre-integration-test</phase>
                  <goals>
                     <goal>copy-resources</goal>
                  </goals>
                  <configuration>
                     <outputDirectory>${project.build.directory}/wildfly-${version.wildfly}</outputDirectory>
                     <overwrite>true</overwrite>
                     <resources>
                        <resource>
                           <directory>${basedir}/src/as-config</directory>
                        </resource>
                     </resources>
                  </configuration>
               </execution>
            </executions>
         </plugin>

      </plugins>
   </build>
</project>
<?xml version='1.0' encoding='UTF-8'?>
<project
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
   xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../../parent/pom.xml</relativePath>
   </parent>

   <artifactId>integrationtests-security-manager</artifactId>
   <name>Integration tests: SecurityManager tests</name>
   <description>Integration tests which need to run under a SecurityManager</description>

   <dependencies>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-lucene-directory</artifactId>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-lucene-v3</artifactId>
         <version>${project.version}</version>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-query</artifactId>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-query</artifactId>
         <version>${project.version}</version>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
               <groups>${defaultTestGroup}</groups>
               <excludedGroups>${defaultExcludedTestGroup}</excludedGroups>
               <systemPropertyVariables>
                  <infinispan.test.jgroups.protocol>${infinispan.test.jgroups.protocol}</infinispan.test.jgroups.protocol>
                  <jgroups.bind_addr>127.0.0.1</jgroups.bind_addr>
                  <java.net.preferIPv4Stack>true</java.net.preferIPv4Stack>
                  <infinispan.unsafe.allow_jdk8_chm>true</infinispan.unsafe.allow_jdk8_chm>
                  <log4j.configuration>${log4j.configuration}</log4j.configuration>
                  <build.directory>${project.build.directory}</build.directory>
               </systemPropertyVariables>
               <trimStackTrace>false</trimStackTrace>
               <properties>
                  <property>
                     <name>listener</name>
                     <value>${testNGListener}</value>
                  </property>
               </properties>
               <!-- -Dsun.nio.ch.bugLevel needed because of http://bugs.sun.com/view_bug.do?bug_id=6427854 -->
               <argLine>-Xmx1024m -XX:MaxPermSize=256m
                  -Dsun.nio.ch.bugLevel</argLine>
            </configuration>
         </plugin>
      </plugins>
   </build>
</project>
<?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../parent/pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-jcache</artifactId>
   <packaging>bundle</packaging>
   <name>Infinispan JCACHE (JSR-107) implementation</name>
   <description>JCACHE (JSR-107) implementation using Infinispan</description>

   <!-- This module declares components that either has lifecycle (@Start or
      @Stop) or uses @Inject to retrieve dependencies -->
   <properties>
      <module.skipComponentMetaDataProcessing>false</module.skipComponentMetaDataProcessing>
   </properties>

   <dependencies>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
      </dependency>

      <dependency>
         <groupId>javax.cache</groupId>
         <artifactId>cache-api</artifactId>
      </dependency>

      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-cdi</artifactId>
      </dependency>

      <dependency>
         <groupId>javax.enterprise</groupId>
         <artifactId>cdi-api</artifactId>
      </dependency>

      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>org.jboss.arquillian.testng</groupId>
         <artifactId>arquillian-testng-container</artifactId>
         <scope>test</scope>
      </dependency>

   </dependencies>

   <repositories>
      <repository>
         <releases>
            <enabled>true</enabled>
         </releases>
         <snapshots>
            <enabled>true</enabled>
         </snapshots>
         <id>sonatype-snapshot-repository</id>
         <name>Sonatype snapshot to be removed once everything becomes stable
         </name>
         <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      </repository>
   </repositories>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <configuration>
               <instructions>
                  <Export-Package>
                     ${project.groupId}.jcache.*;version=${project.version};-split-package:=error
                  </Export-Package>
               </instructions>
            </configuration>
         </plugin>

         <!-- Disable parallel execution of tests ARQ-127 -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
               <parallel>false</parallel>
               <groups>${defaultTestGroup}</groups>
            </configuration>
         </plugin>

         <!-- Use invoker plugin to run TCK tests once Infinispan JSR-107
              implementation has been built and installed in the repo -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-invoker-plugin</artifactId>
            <version>${version.maven.invoker}</version>
            <configuration>
               <addTestClassPath>true</addTestClassPath>
               <cloneProjectsTo>${project.build.directory}/it</cloneProjectsTo>
               <pomIncludes>
                  <pomInclude>*/pom.xml</pomInclude>
               </pomIncludes>
               <postBuildHookScript>verify</postBuildHookScript>
               <streamLogs>true</streamLogs>
               <goals>
                  <goal>clean</goal>
                  <goal>package</goal>
               </goals>
               <properties>
                  <!-- Skip tests parent's tests are skipped -->
                  <maven.test.skip.exec>${maven.test.skip.exec}</maven.test.skip.exec>
                  <skipTests>${skipTests}</skipTests>
                  <!-- maven.surefire.debug>-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005 -Xnoagent -Djava.compiler=NONE</maven.surefire.debug -->
                  <!-- If logging enabled by client, pass it on -->
                  <log4j.configuration>${log4j.configuration}</log4j.configuration>
               </properties>
            </configuration>
            <executions>
               <execution>
                  <id>integration-test</id>
                  <goals>
                     <goal>install</goal>
                     <goal>run</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>

      </plugins>
   </build>

   <profiles>
      <profile>
         <id>default</id>
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <dependencies>
            <dependency>
               <groupId>org.jboss.arquillian.container</groupId>
               <artifactId>arquillian-weld-ee-embedded-1.1</artifactId>
               <scope>test</scope>
            </dependency>
            <dependency>
               <groupId>org.jboss.weld</groupId>
               <artifactId>weld-core</artifactId>
               <scope>test</scope>
            </dependency>
            <dependency>
               <groupId>org.jboss.spec</groupId>
               <artifactId>jboss-javaee-6.0</artifactId>
               <type>pom</type>
               <scope>test</scope>
            </dependency>
            <dependency>
               <groupId>org.jboss.logmanager</groupId>
               <artifactId>jboss-logmanager</artifactId>
               <scope>test</scope>
            </dependency>
            <dependency>
               <groupId>org.slf4j</groupId>
               <artifactId>slf4j-jdk14</artifactId>
               <scope>test</scope>
            </dependency>
         </dependencies>
      </profile>
   </profiles>

</project>
<?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../../../../parent/pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-jcache-tck-runner</artifactId>
   <packaging>bundle</packaging>
   <name>Infinispan JCACHE (JSR-107) TCK Runner</name>
   <description>JCACHE (JSR-107) TCK runner for Infinispan implementation</description>

   <properties>
      <domain-lib-dir>${project.build.directory}/domainlib</domain-lib-dir>
      <domain-jar>domain.jar</domain-jar>

      <CacheManagerImpl>org.infinispan.jcache.JCacheManager</CacheManagerImpl>
      <CacheImpl>org.infinispan.jcache.JCache</CacheImpl>
      <CacheEntryImpl>org.infinispan.jcache.JCacheEntry</CacheEntryImpl>
      <CacheInvocationContextImpl>org.infinispan.jcache.annotation.CacheKeyInvocationContextImpl</CacheInvocationContextImpl>
      <javax.management.builder.initial>org.infinispan.jcache.test.tck.TckMbeanServerBuilder</javax.management.builder.initial>
      <org.jsr107.tck.management.agentId>TckMbeanServer</org.jsr107.tck.management.agentId>
   </properties>

   <dependencies>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-jcache</artifactId>
         <scope>test</scope>
      </dependency>

      <!--
         Order is important here! hamcrest-library needs to be defined before cache-tests:
         http://stackoverflow.com/questions/7869711/getting-nosuchmethoderror-org-hamcrest-matcher-describemismatch-when-running
      -->
      <dependency>
         <groupId>org.hamcrest</groupId>
         <artifactId>hamcrest-library</artifactId>
         <version>1.2</version>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>javax.cache</groupId>
         <artifactId>cache-tests</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>javax.cache</groupId>
         <artifactId>cache-tests</artifactId>
         <classifier>tests</classifier>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.jboss.weld.se</groupId>
         <artifactId>weld-se</artifactId>
         <scope>test</scope>
      </dependency>

   </dependencies>

   <build>
      <testResources>
         <testResource>
            <directory>src/test/resources</directory>
            <filtering>true</filtering>
         </testResource>
      </testResources>

      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
               <!--Required because JUnit will not detect tests simply included in a dep-->
               <execution>
                  <id>copy-cache-tests</id>
                  <goals>
                     <goal>unpack-dependencies</goal>
                  </goals>
                  <configuration>
                     <outputDirectory>${project.build.testOutputDirectory}</outputDirectory>
                     <includeArtifactIds>cache-tests</includeArtifactIds>
                     <includeScope>test</includeScope>
                     <excludes>**/unwrap.properties</excludes>
                  </configuration>
               </execution>
               <execution>
                  <id>copy-domain</id>
                  <goals>
                     <goal>copy</goal>
                  </goals>
                  <configuration>
                     <artifactItems>
                        <artifactItem>
                           <groupId>javax.cache</groupId>
                           <artifactId>app-domain</artifactId>
                           <version>${version.javax.cache.cache-tests}</version>
                           <outputDirectory>${domain-lib-dir}</outputDirectory>
                           <destFileName>${domain-jar}</destFileName>
                        </artifactItem>
                     </artifactItems>
                  </configuration>
               </execution>
            </executions>
         </plugin>

         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
               <systemPropertyVariables>
                  <domainJar>${domain-lib-dir}/${domain-jar}</domainJar>
                 <javax.cache.Cache>${CacheImpl}</javax.cache.Cache>
                 <javax.cache.Cache.Entry>${CacheEntryImpl}</javax.cache.Cache.Entry>
                 <javax.management.builder.initial>${javax.management.builder.initial}</javax.management.builder.initial>
                 <org.jsr107.tck.management.agentId>${org.jsr107.tck.management.agentId}</org.jsr107.tck.management.agentId>
                 <log4j.configuration>${log4j.configuration}</log4j.configuration>
               </systemPropertyVariables>
               <properties>
                  <property>
                     <name>listener</name>
                     <value>org.infinispan.jcache.test.tck.DummyTestListener</value>
                  </property>
               </properties>
               <excludes>
                  <exclude>**/ClientServerTest.java</exclude>
               </excludes>
            </configuration>
            <dependencies>
               <dependency>
                  <groupId>org.apache.maven.surefire</groupId>
                  <artifactId>surefire-junit4</artifactId>
                  <version>${version.maven.surefire}</version>
               </dependency>
            </dependencies>
         </plugin>

      </plugins>
   </build>

   <repositories>
      <repository>
         <releases>
            <enabled>true</enabled>
         </releases>
         <snapshots>
            <enabled>true</enabled>
         </snapshots>
         <id>sonatype-snapshot-repository</id>
         <name>Sonatype snapshot to be removed once everything becomes stable</name>
         <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      </repository>
   </repositories>

   <profiles>

      <!--To run all tests do not specify any profile-->

      <!-- Profile for running basic tests.
           Use mvn -P test-basic-cache clean install -->
      <profile>
         <id>test-basic-cache</id>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <configuration>
                     <excludes>
                        <exclude>**/interceptor/*Test.java</exclude>
                     </excludes>
                     <systemPropertyVariables>
                        <domainJar>${domain-lib-dir}/${domain-jar}</domainJar>
                     </systemPropertyVariables>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>

      <!-- Profile for running optional tests.
           Use mvn -P test-optional-cache clean install -->
      <profile>
         <id>test-optional-cache</id>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <configuration>
                     <includes>
                        <include>**/interceptor/*Test.java</include>
                     </includes>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>

   </profiles>

</project>
<?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <version>7.0.0-SNAPSHOT</version>
   <modelVersion>4.0.0</modelVersion>
   <groupId>org.infinispan</groupId>
   <artifactId>infinispan-license</artifactId>
   <name>Infinispan License Bundle</name>
   
   <properties>
      <jboss.releases.repo.url>https://repository.jboss.org/nexus/service/local/staging/deploy/maven2/</jboss.releases.repo.url>
      <jboss.snapshots.repo.url>https://repository.jboss.org/nexus/content/repositories/snapshots/</jboss.snapshots.repo.url>
   </properties>

   <build>
      <plugins>
         <plugin>
            <artifactId>maven-remote-resources-plugin</artifactId>
            <version>1.1</version>
            <executions>
               <execution>
                  <id>generate-license-bundle</id>
                  <goals>
                     <goal>bundle</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
      </plugins>
      <pluginManagement>
         <plugins>
            <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
            <plugin>
               <groupId>org.eclipse.m2e</groupId>
               <artifactId>lifecycle-mapping</artifactId>
               <version>1.0.0</version>
               <configuration>
                  <lifecycleMappingMetadata>
                     <pluginExecutions>
                        <pluginExecution>
                           <pluginExecutionFilter>
                              <groupId>
                                 org.apache.maven.plugins
                              </groupId>
                              <artifactId>
                                 maven-remote-resources-plugin
                              </artifactId>
                              <versionRange>[1.1,)</versionRange>
                              <goals>
                                 <goal>bundle</goal>
                              </goals>
                           </pluginExecutionFilter>
                           <action>
                              <ignore />
                           </action>
                        </pluginExecution>
                     </pluginExecutions>
                  </lifecycleMappingMetadata>
               </configuration>
            </plugin>
         </plugins>
      </pluginManagement>
   </build>
   
   <!-- SCM and Distribution Management -->

   <scm>
      <connection>scm:git:git://github.com/infinispan/infinispan.git</connection>
      <developerConnection>scm:git:git://github.com/infinispan/infinispan.git</developerConnection>
      <url>scm:git:git://github.com/infinispan/infinispan.git</url>
   </scm>

   <distributionManagement>
      <repository>
         <id>jboss-releases-repository</id>
         <name>JBoss Releases Repository</name>
         <url>${jboss.releases.repo.url}</url>
      </repository>
      <snapshotRepository>
         <id>jboss-snapshots-repository</id>
         <name>JBoss Snapshots Repository</name>
         <url>${jboss.snapshots.repo.url}</url>
      </snapshotRepository>
   </distributionManagement>
   

</project>
<?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.infinispan</groupId>
        <artifactId>infinispan-lucene-parent</artifactId>
        <version>7.0.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>infinispan-lucene-directory</artifactId>
    <packaging>bundle</packaging>
    <name>Infinispan Lucene Directory Implementation</name>
    <description>A Lucene directory implementation based on Infinispan</description>

    <dependencies>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-core</artifactId>
            <version>${version.lucene.v3}</version>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-lucene-v3</artifactId>
            <!-- Not actually needed: we just want to make sure the reactor builds it first -->
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-lucene-v4</artifactId>
            <!-- Not actually needed: we just want to make sure the reactor builds it first -->
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <configuration>
                    <instructions>
                        <Export-Package>
                            ${project.groupId}.lucene.*;version=${project.version};-split-package:=error
                        </Export-Package>
                       <Include-Resource>
                          META-INF/services/org.infinispan.lifecycle.ModuleLifecycle=target/classes/META-INF/services/org.infinispan.lifecycle.ModuleLifecycle
                       </Include-Resource>
                    </instructions>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.infinispan</groupId>
                                    <artifactId>infinispan-lucene-v4</artifactId>
                                    <overWrite>false</overWrite>
                                    <outputDirectory>${project.build.outputDirectory}</outputDirectory>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.infinispan</groupId>
                                    <artifactId>infinispan-lucene-v3</artifactId>
                                    <overWrite>false</overWrite>
                                    <outputDirectory>${project.build.outputDirectory}</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
<?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-lucene-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-lucene-v3</artifactId>
   <name>Infinispan integration with Lucene v.3.x</name>
   <description>Support to store and encode Lucene v3 indexes in Infinispan</description>

   <dependencies>
      <dependency>
         <groupId>org.apache.lucene</groupId>
         <artifactId>lucene-core</artifactId>
         <version>${version.lucene.v3}</version>
      </dependency>

      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-cachestore-jdbc</artifactId>
         <optional>true</optional>
      </dependency>

      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-cachestore-jdbc</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>c3p0</groupId>
         <artifactId>c3p0</artifactId>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>com.h2database</groupId>
         <artifactId>h2</artifactId>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
         </plugin>
      </plugins>
   </build>

</project><?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-lucene-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-lucene-v4</artifactId>
   <name>Infinispan integration with Lucene v.4.x</name>
   <description>Support to store and encode Lucene v4 indexes in Infinispan</description>

   <dependencies>
      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-lucene-v3</artifactId>
         <exclusions>
            <exclusion>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-core</artifactId>
            </exclusion>
         </exclusions>
      </dependency>

      <dependency>
         <groupId>org.apache.lucene</groupId>
         <artifactId>lucene-core</artifactId>
         <version>${version.lucene.v4}</version>
      </dependency>

      <dependency>
         <groupId>org.apache.lucene</groupId>
         <artifactId>lucene-analyzers-common</artifactId>
         <version>${version.lucene.v4}</version>
      </dependency>

      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-cachestore-jdbc</artifactId>
         <optional>true</optional>
      </dependency>

      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-cachestore-jdbc</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>c3p0</groupId>
         <artifactId>c3p0</artifactId>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>com.h2database</groupId>
         <artifactId>h2</artifactId>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
         </plugin>
      </plugins>
   </build>

</project><?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../parent/pom.xml</relativePath>
   </parent>
   <artifactId>infinispan-lucene-parent</artifactId>
   <name>Parent pom for the Lucene integration modules</name>
   <packaging>pom</packaging>

   <dependencies>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
      </dependency>

      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
               <parallel>tests</parallel>
               <threadCount>${infinispan.test.parallel.threads}</threadCount>
               <forkCount>1</forkCount>
               <reuseForks>true</reuseForks>
               <groups>${defaultTestGroup}</groups>
               <systemPropertyVariables>
                  <log4j.configuration>custom-lucene-log4j.xml</log4j.configuration>
               </systemPropertyVariables>
            </configuration>
         </plugin>
      </plugins>
   </build>

</project><?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-bom</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../bom/pom.xml</relativePath>
   </parent>
   <artifactId>infinispan-parent</artifactId>
   <packaging>pom</packaging>
   <name>Infinispan Common Parent</name>
   <description>Infinispan common parent POM module</description>
   <url>http://www.infinispan.org</url>
   <organization>
      <name>JBoss, a division of Red Hat</name>
      <url>http://www.jboss.org</url>
   </organization>
   <licenses>
      <license>
         <name>Apache License</name>
         <url>http://www.apache.org/licenses/LICENSE-2.0</url>
         <distribution>repo</distribution>
      </license>
   </licenses>
   <developers>
      <developer>
         <id>placeholder</id>
         <name>See http://www.infinispan.org for a complete list of contributors</name>
      </developer>
   </developers>
   <mailingLists>
      <mailingList>
         <name>Infinispan Issues</name>
         <subscribe>https://lists.jboss.org/mailman/listinfo/infinispan-issues</subscribe>
         <unsubscribe>https://lists.jboss.org/mailman/listinfo/infinispan-issues</unsubscribe>
         <post>infinispan-issues@lists.jboss.org</post>
         <archive>http://lists.jboss.org/pipermail/infinispan-issues/</archive>
      </mailingList>
      <mailingList>
         <name>Infinispan Developers</name>
         <subscribe>https://lists.jboss.org/mailman/listinfo/infinispan-dev</subscribe>
         <unsubscribe>https://lists.jboss.org/mailman/listinfo/infinispan-dev</unsubscribe>
         <post>infinispan-dev@lists.jboss.org</post>
         <archive>http://lists.jboss.org/pipermail/infinispan-dev/</archive>
      </mailingList>
   </mailingLists>
   <scm>
      <connection>scm:git:git@github.com:infinispan/infinispan.git</connection>
      <developerConnection>scm:git:git@github.com:infinispan/infinispan.git</developerConnection>
      <url>https://github.com/infinispan/infinispan</url>
   </scm>
   <issueManagement>
      <system>jira</system>
      <url>https://issues.jboss.org/browse/ISPN</url>
   </issueManagement>
   <ciManagement>
      <system>TeamCity</system>
      <url>http://ci.infinispan.org</url>
      <notifiers>
         <notifier>
            <type>mail</type>
            <address>infinispan-commits@lists.jboss.org</address>
         </notifier>
      </notifiers>
   </ciManagement>
   <distributionManagement>
      <repository>
         <id>jboss-releases-repository</id>
         <name>JBoss Release Repository</name>
         <url>${jboss.releases.repo.url}</url>
      </repository>
      <snapshotRepository>
         <id>jboss-snapshots-repository</id>
         <name>JBoss Snapshot Repository</name>
         <url>${jboss.snapshots.repo.url}</url>
      </snapshotRepository>
   </distributionManagement>
   <properties>
      <buildDirectory>target</buildDirectory>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
      <defaultTestGroup>functional,unit,arquillian</defaultTestGroup>
      <!-- unstable and stress because we can have them inside a functional class, for example -->
      <defaultExcludedTestGroup>unstable,stress,unstable_xsite</defaultExcludedTestGroup>
      <testNGListener>org.infinispan.test.fwk.UnitTestTestNGListener</testNGListener>
      <infinispan.test.parallel.threads>15</infinispan.test.parallel.threads>
      <infinispan.test.jgroups.protocol>tcp</infinispan.test.jgroups.protocol>
      <jboss.releases.repo.url>https://repository.jboss.org/nexus/service/local/staging/deploy/maven2/</jboss.releases.repo.url>
      <jboss.snapshots.repo.url>https://repository.jboss.org/nexus/content/repositories/snapshots/</jboss.snapshots.repo.url>
      <packaging>jar</packaging>
      <module.skipComponentMetaDataProcessing>true</module.skipComponentMetaDataProcessing>
      <module.metadata.isCoreModule>false</module.metadata.isCoreModule>
      <!-- Versions for dependencies -->
      <version.antlr>3.4</version.antlr>
      <version.apache.ds>2.0.0-M15</version.apache.ds>
      <version.arquillian>1.0.3.Final</version.arquillian>
      <version.arquillian.container.managed>8.0.0.Beta1</version.arquillian.container.managed>
      <version.arquillian.container.weld>1.0.0.CR3</version.arquillian.container.weld>
      <version.avro>1.7.6</version.avro>
      <version.c3p0>0.9.1.2</version.c3p0>
      <version.cdi>1.0-SP4</version.cdi>
      <version.com.intellij.forms_rt>6.0.5</version.com.intellij.forms_rt>
      <version.commons.compress>1.4</version.commons.compress>
      <version.commons.codec>1.4</version.commons.codec>
      <version.commons.collections>3.2.1</version.commons.collections>
      <version.commons.dbcp>1.4</version.commons.dbcp>
      <version.commons.httpclient>3.1</version.commons.httpclient>
      <version.commons.io>1.3.2</version.commons.io>
      <version.commons.logging>1.1</version.commons.logging>
      <version.commons.math>2.2</version.commons.math>
      <version.guava>11.0.2</version.guava>
      <version.h2.driver>1.3.166</version.h2.driver>
      <version.hibernate.annotations>3.5.6-Final</version.hibernate.annotations>
      <version.hibernate.core>4.2.11.Final</version.hibernate.core>
      <version.hibernate.entitymanager>${version.hibernate.core}</version.hibernate.entitymanager>
      <version.hibernate.hql.parser>1.0.0.Alpha6</version.hibernate.hql.parser>
      <version.hibernate.javax.persistence>1.0.1.Final</version.hibernate.javax.persistence>
      <version.httpclient>4.2.4</version.httpclient>
      <version.jackson>1.9.2</version.jackson>
      <version.javax.cache>1.0.0</version.javax.cache>
      <version.javax.cache.cache-tests>${version.javax.cache}</version.javax.cache.cache-tests>
      <version.javax.servlet>2.5</version.javax.servlet>
      <version.jbossjta>4.17.13.Final</version.jbossjta>
      <version.jboss.logging.processor>1.1.0.Final</version.jboss.logging.processor>
      <version.jboss.logmanager>1.3.1.Final</version.jboss.logmanager>
      <version.jboss.spec>1.0.0.Final</version.jboss.spec>
      <version.jcipannotations>1.0</version.jcipannotations>
      <version.jetty>6.1.25</version.jetty>
      <version.jgoodies.forms>1.0.5</version.jgoodies.forms>
      <version.jsap>2.1</version.jsap>
      <version.jstl>1.2</version.jstl>
      <version.junit>4.11</version.junit>
      <version.leveldb>0.5</version.leveldb>
      <version.leveldbjni>1.7</version.leveldbjni>
      <version.log4j>1.2.16</version.log4j>
      <version.lucene.v3>3.6.2</version.lucene.v3>
      <version.lucene.v4>4.7.1</version.lucene.v4>
      <version.mc4j>1.2.6</version.mc4j>
      <version.milyn.smooks>1.2.2</version.milyn.smooks>
      <version.mockito>1.9.5</version.mockito>
      <version.mysql.driver>5.1.19</version.mysql.driver>
      <version.org.jboss.naming>5.0.6.CR1</version.org.jboss.naming>
      <version.postgresql.driver>9.3-1101-jdbc41</version.postgresql.driver>
      <version.resteasy>3.0.7.Final</version.resteasy>
      <version.shrinkwrapResolver>2.0.0-alpha-6</version.shrinkwrapResolver>
      <version.slf4j>1.6.4</version.slf4j>
      <version.solder>3.1.0.Final</version.solder>
      <version.spring>3.1.0.RELEASE</version.spring>
      <version.spymemcached>2.5</version.spymemcached>
      <version.testng>6.8</version.testng>
      <version.testng.arquillian>6.5.2</version.testng.arquillian>
      <version.webdav.servlet>2.0.1</version.webdav.servlet>
      <version.weld>1.1.13.Final</version.weld>
      <version.wildfly>8.0.0.Final</version.wildfly>
      <version.javassist>3.18.0-GA</version.javassist>
      <version.maven.animal.sniffer>1.9</version.maven.animal.sniffer>
      <version.maven.buildhelper>1.8</version.maven.buildhelper>
      <version.maven.bundle>2.4.0</version.maven.bundle>
      <version.maven.source>2.2.1</version.maven.source>
      <version.maven.genjavadoc>0.5</version.maven.genjavadoc>
      <version.maven.scala>2.15.2</version.maven.scala>
      <version.maven.surefire>2.14.1</version.maven.surefire>
      <version.maven.invoker>1.8</version.maven.invoker>
      <version.jacoco>0.5.10.201208310627</version.jacoco>
      <version.asm>3.3.1</version.asm>
      <reportTitle>Infinispan JaCoCo Report</reportTitle>
      <dir.ispn>../</dir.ispn>
      <dir.report>../jacoco-html</dir.report>
   </properties>
   
   <dependencyManagement>
      <dependencies>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-cachestore-jdbc</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-cachestore-jdbc</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-cachestore-remote</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-cdi</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-cdi</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-client-hotrod</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-client-hotrod</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
         </dependency>
         
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-core</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-core</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-ec2-demo</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-lucene-directory</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-lucene-directory</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-lucene-v3</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-lucene-v4</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-server-core</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-server-core</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-server-hotrod</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-server-hotrod</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-server-memcached</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-server-memcached</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-server-rest</artifactId>
            <classifier>classes</classifier>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-server-rest</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-tools</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-tree</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-jcache</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-cli-client</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-cli-server</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>c3p0</groupId>
            <artifactId>c3p0</artifactId>
            <version>${version.c3p0}</version>
         </dependency>
         <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${version.h2.driver}</version>
         </dependency>
         <dependency>
            <groupId>com.intellij</groupId>
            <artifactId>forms_rt</artifactId>
            <version>${version.com.intellij.forms_rt}</version>
         </dependency>
         <dependency>
            <groupId>com.martiansoftware</groupId>
            <artifactId>jsap</artifactId>
            <version>${version.jsap}</version>
         </dependency>
         <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>${version.commons.dbcp}</version>
         </dependency>
         <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
            <version>${version.commons.httpclient}</version>
         </dependency>
         <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${version.commons.io}</version>
         </dependency>
         <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>${version.commons.logging}</version>
            <scope>runtime</scope>
         </dependency>
         <dependency>
            <groupId>org.javassist</groupId>
            <artifactId>javassist</artifactId>
            <version>${version.javassist}</version>
         </dependency>
         <dependency>
            <groupId>javax.cache</groupId>
            <artifactId>cache-api</artifactId>
            <version>${version.javax.cache}</version>
         </dependency>
         <dependency>
            <groupId>javax.cache</groupId>
            <artifactId>cache-tests</artifactId>
            <version>${version.javax.cache.cache-tests}</version>
         </dependency>
         <dependency>
            <groupId>javax.cache</groupId>
            <artifactId>cache-tests</artifactId>
            <version>${version.javax.cache.cache-tests}</version>
            <classifier>tests</classifier>
         </dependency>
         <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <version>${version.cdi}</version>
         </dependency>
         <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>${version.jstl}</version>
         </dependency>
         <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>${version.javax.servlet}</version>
         </dependency>
         <dependency>
            <groupId>jgoodies</groupId>
            <artifactId>forms</artifactId>
            <version>${version.jgoodies.forms}</version>
         </dependency>
         <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${version.log4j}</version>
         </dependency>
         <dependency>
            <groupId>mc4j</groupId>
            <artifactId>org-mc4j-ems</artifactId>
            <version>${version.mc4j}</version>
         </dependency>
         <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${version.mysql.driver}</version>
         </dependency>
         <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${version.postgresql.driver}</version>
         </dependency>
         <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${version.junit}</version>
         </dependency>
         <dependency>
            <groupId>net.sf.webdav-servlet</groupId>
            <artifactId>webdav-servlet</artifactId>
            <version>${version.webdav.servlet}</version>
         </dependency>
         <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>antlr-runtime</artifactId>
            <version>${version.antlr}</version>
         </dependency>
         <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-compress</artifactId>
            <version>${version.commons.compress}</version>
         </dependency>
         <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>${version.commons.codec}</version>
         </dependency>
         <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>${version.commons.collections}</version>
         </dependency>
         <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-math</artifactId>
            <version>${version.commons.math}</version>
         </dependency>
         <dependency>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro</artifactId>
            <version>${version.avro}</version>
         </dependency>
         <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-core-asl</artifactId>
            <version>${version.jackson}</version>
         </dependency>
         <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>${version.jackson}</version>
         </dependency>
         <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-annotations</artifactId>
            <version>${version.hibernate.annotations}</version>
         </dependency>
         <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${version.hibernate.core}</version>
         </dependency>
         <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${version.hibernate.entitymanager}</version>
         </dependency>
         <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.0-api</artifactId>
            <version>${version.hibernate.javax.persistence}</version>
         </dependency>
         <dependency>
            <groupId>org.hibernate.hql</groupId>
            <artifactId>hibernate-hql-parser</artifactId>
            <version>${version.hibernate.hql.parser}</version>
         </dependency>
         <dependency>
            <groupId>org.hibernate.hql</groupId>
            <artifactId>hibernate-hql-lucene</artifactId>
            <version>${version.hibernate.hql.parser}</version>
         </dependency>
         <dependency>
            <groupId>org.jboss.arquillian</groupId>
            <artifactId>arquillian-bom</artifactId>
            <version>${version.arquillian}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
         <dependency>
            <groupId>org.wildfly</groupId>
            <artifactId>wildfly-arquillian-container-managed</artifactId>
            <version>${version.arquillian.container.managed}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.jboss.arquillian.container</groupId>
            <artifactId>arquillian-weld-ee-embedded-1.1</artifactId>
            <version>${version.arquillian.container.weld}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-bom</artifactId>
            <version>${version.shrinkwrapResolver}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
         <dependency>
            <groupId>org.jboss.spec</groupId>
            <artifactId>jboss-javaee-6.0</artifactId>
            <version>${version.jboss.spec}</version>
            <type>pom</type>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.jboss.naming</groupId>
            <artifactId>jnp-client</artifactId>
            <version>${version.org.jboss.naming}</version>
            <exclusions>
               <exclusion>
                  <artifactId>jboss-logging-spi</artifactId>
                  <groupId>org.jboss.logging</groupId>
               </exclusion>
            </exclusions>
         </dependency>
         <dependency>
            <groupId>org.jboss.naming</groupId>
            <artifactId>jnpserver</artifactId>
            <version>${version.org.jboss.naming}</version>
            <exclusions>
               <exclusion>
                  <artifactId>jboss-logging-spi</artifactId>
                  <groupId>org.jboss.logging</groupId>
               </exclusion>
            </exclusions>
         </dependency>
         <dependency>
            <groupId>org.jboss.logmanager</groupId>
            <artifactId>jboss-logmanager</artifactId>
            <version>${version.jboss.logmanager}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jaxrs</artifactId>
            <version>${version.resteasy}</version>
         </dependency>
         <dependency>
            <groupId>org.jboss.solder</groupId>
            <artifactId>solder-impl</artifactId>
            <version>${version.solder}</version>
         </dependency>
         <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-core</artifactId>
            <version>${version.weld}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.jboss.weld.se</groupId>
            <artifactId>weld-se</artifactId>
            <version>${version.weld}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.milyn</groupId>
            <artifactId>milyn-smooks-javabean</artifactId>
            <version>${version.milyn.smooks}</version>
         </dependency>
         <dependency>
            <groupId>org.milyn</groupId>
            <artifactId>milyn-smooks-csv</artifactId>
            <version>${version.milyn.smooks}</version>
         </dependency>
         <dependency>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty-embedded</artifactId>
            <version>${version.jetty}</version>
         </dependency>
         <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${version.slf4j}</version>
         </dependency>
         <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
            <version>${version.slf4j}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${version.slf4j}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${version.spring}</version>
         </dependency>
         <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${version.spring}</version>
         </dependency>
         <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${version.spring}</version>
         </dependency>
         <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${version.testng}</version>
            <scope>test</scope>
            <exclusions>
              <exclusion>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
              </exclusion>
            </exclusions>
         </dependency>
         <dependency>
            <groupId>spy</groupId>
            <artifactId>memcached</artifactId>
            <version>${version.spymemcached}</version>
         </dependency>
         <dependency>
            <groupId>org.fusesource.leveldbjni</groupId>
            <artifactId>leveldbjni-all</artifactId>
            <version>${version.leveldbjni}</version>
         </dependency>
         <dependency>
            <groupId>org.iq80.leveldb</groupId>
            <artifactId>leveldb</artifactId>
            <version>${version.leveldb}</version>
         </dependency>
         <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${version.httpclient}</version>
         </dependency>
         <dependency>
            <groupId>org.jboss.jbossts.jta</groupId>
            <artifactId>narayana-jta</artifactId>
            <version>${version.jbossjta}</version>
            <exclusions>
               <exclusion>
                  <artifactId>commons-httpclient</artifactId>
                  <groupId>commons-httpclient</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>ironjacamar-spec-api</artifactId>
                  <groupId>org.jboss.ironjacamar</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jbogging-spi</artifactId>
                  <groupId>org.jboss.logging</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jboss-logging</artifactId>
                  <groupId>org.jboss.logging</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jboss-logging-processor</artifactId>
                  <groupId>org.jboss.logging</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jboss-logging-generator</artifactId>
                  <groupId>org.jboss.logging</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jbossws-native-core</artifactId>
                  <groupId>org.jboss.ws.native</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>emma</artifactId>
                  <groupId>emma</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>emma_ant</artifactId>
                  <groupId>emma</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>hornetq-core</artifactId>
                  <groupId>org.hornetq</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>netty</artifactId>
                  <groupId>io.netty</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>wrapper</artifactId>
                  <groupId>tanukisoft</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jacorb</artifactId>
                  <groupId>jacorb</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jfreechart</artifactId>
                  <groupId>jfree</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jboss-corba-ots-spi</artifactId>
                  <groupId>org.jboss.integration</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jboss-server-manager</artifactId>
                  <groupId>org.jboss.jbossas</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jboss-ejb-api_3.1_spec</artifactId>
                  <groupId>org.jboss.spec.javax.ejb</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jnp-client</artifactId>
                  <groupId>org.jboss.naming</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jboss-servlet-api_3.0_spec</artifactId>
                  <groupId>org.jboss.spec.javax.servlet</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jbossws-common</artifactId>
                  <groupId>org.jboss.ws</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jcl-over-slf4j</artifactId>
                  <groupId>org.slf4j</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>stax-api</artifactId>
                  <groupId>stax</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>idl</artifactId>
                  <groupId>jacorb</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jboss-logging-tools</artifactId>
                  <groupId>org.jboss.logging</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jboss-connector-api_1.5_spec</artifactId>
                  <groupId>org.jboss.spec.javax.resource</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jboss-transaction-spi</artifactId>
                  <groupId>org.jboss.integration</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jboss-remoting</artifactId>
                  <groupId>org.jboss.remoting</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>slf4j-api</artifactId>
                  <groupId>org.slf4j</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>dom4j</artifactId>
                  <groupId>dom4j</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>commons-codec</artifactId>
                  <groupId>commons-codec</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jboss-logmanager</artifactId>
                  <groupId>org.jboss.logmanager</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>hibernate-jpa-2.0-api</artifactId>
                  <groupId>org.hibernate.javax.persistence</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>commons-logging</artifactId>
                  <groupId>commons-logging</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jcommon</artifactId>
                  <groupId>jfree</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jboss-transaction-api_1.1_spec</artifactId>
                  <groupId>org.jboss.spec.javax.transaction</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>byteman</artifactId>
                  <groupId>org.jboss.byteman</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>byteman-submit</artifactId>
                  <groupId>org.jboss.byteman</groupId>
               </exclusion>
            </exclusions>
         </dependency>
         <dependency>
            <groupId>org.apache.directory.server</groupId>
            <artifactId>apacheds-all</artifactId>
            <version>${version.apache.ds}</version>
            <scope>test</scope>
         </dependency>
      </dependencies>
   </dependencyManagement>
   <dependencies>
      <!-- used to serialize non-serializable objects for a dummy marshaller -->
      <dependency>
         <groupId>com.thoughtworks.xstream</groupId>
         <artifactId>xstream</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>commons-logging</groupId>
         <artifactId>commons-logging</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>log4j</groupId>
         <artifactId>log4j</artifactId>
         <optional>true</optional>
      </dependency>
      <dependency>
         <groupId>net.jcip</groupId>
         <artifactId>jcip-annotations</artifactId>
         <version>${version.jcipannotations}</version>
         <optional>true</optional>
      </dependency>
      <dependency>
         <groupId>org.mockito</groupId>
         <artifactId>mockito-all</artifactId>
         <version>${version.mockito}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
            <groupId>org.jboss.jbossts.jta</groupId>
            <artifactId>narayana-jta</artifactId>
            <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.jboss.logging</groupId>
         <artifactId>jboss-logging-processor</artifactId>
         <version>${version.jboss.logging.processor}</version>
         <scope>provided</scope>
      </dependency>
      <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
          <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.testng</groupId>
         <artifactId>testng</artifactId>
         <scope>test</scope>
      </dependency>
   </dependencies>
   <repositories>
      <repository>
         <releases>
            <enabled>true</enabled>
         </releases>
         <snapshots>
            <enabled>true</enabled>
         </snapshots>
         <id>jboss-public-repository</id>
         <name>JBoss Public Repository and Proxy for third party repositories</name>
         <url>https://repository.jboss.org/nexus/content/groups/public</url>
      </repository>
   </repositories>
   <pluginRepositories>
      <pluginRepository>
         <releases>
            <enabled>true</enabled>
         </releases>
         <snapshots>
            <enabled>true</enabled>
         </snapshots>
         <id>jboss-public-plugin-repository</id>
         <name>JBoss Public Plugin Repository and Proxy for third party plugin repositories</name>
         <url>https://repository.jboss.org/nexus/content/groups/public</url>
      </pluginRepository>
      <pluginRepository>
         <releases>
            <enabled>true</enabled>
         </releases>
         <snapshots>
            <enabled>true</enabled>
         </snapshots>
         <id>jboss-public-thirdparty-snapshots</id>
         <name>JBoss Public third party snapshots plugin repositories</name>
         <url>https://repository.jboss.org/nexus/content/groups/public-thirdparty-snapshots</url>
      </pluginRepository>
   </pluginRepositories>
   <build>
      <directory>${buildDirectory}</directory>
      <finalName>${project.artifactId}</finalName>
      <pluginManagement>
         <plugins>
            <plugin>
               <groupId>org.antlr</groupId>
               <artifactId>antlr3-maven-plugin</artifactId>
               <version>${version.antlr}</version>
               <executions>
                 <execution>
                     <goals>
                         <goal>antlr</goal>
                     </goals>
                 </execution>
             </executions>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-clean-plugin</artifactId>
               <version>2.5</version>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-install-plugin</artifactId>
               <version>2.4</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-help-plugin</artifactId>
                <version>2.1.1</version>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-deploy-plugin</artifactId>
               <version>2.7</version>
            </plugin>
            <plugin>
               <groupId>org.apache.felix</groupId>
               <artifactId>maven-bundle-plugin</artifactId>
               <version>${version.maven.bundle}</version>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-assembly-plugin</artifactId>
               <version>2.4</version>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-dependency-plugin</artifactId>
               <version>2.6</version>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-failsafe-plugin</artifactId>
               <version>${version.maven.surefire}</version>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-javadoc-plugin</artifactId>
               <version>2.9</version>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-pmd-plugin</artifactId>
               <!-- See also reporting plugins -->
               <version>2.7.1</version>
               <configuration>
                  <minimumTokens>100</minimumTokens>
                  <targetJdk>1.6</targetJdk>
                  <linkXref>false</linkXref>
                  <sourceEncoding>utf-8</sourceEncoding>
               </configuration>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-surefire-plugin</artifactId>
               <version>${version.maven.surefire}</version>
            </plugin>
            <plugin>
               <artifactId>maven-war-plugin</artifactId>
               <version>2.1.1</version>
               <configuration>
                  <attachClasses>false</attachClasses>
               </configuration>
            </plugin>
            <plugin>
               <groupId>org.codehaus.mojo</groupId>
               <artifactId>appassembler-maven-plugin</artifactId>
               <version>1.0</version>
            </plugin>
            <plugin>
               <groupId>org.codehaus.mojo</groupId>
               <artifactId>build-helper-maven-plugin</artifactId>
               <version>${version.maven.buildhelper}</version>
            </plugin>
            <plugin>
               <groupId>org.codehaus.mojo</groupId>
               <artifactId>exec-maven-plugin</artifactId>
               <version>1.2.1</version>
            </plugin>
            <plugin>
               <groupId>org.codehaus.mojo</groupId>
               <artifactId>ideauidesigner-maven-plugin</artifactId>
               <version>1.0-beta-1</version>
            </plugin>
            <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
            <plugin>
               <groupId>org.eclipse.m2e</groupId>
               <artifactId>lifecycle-mapping</artifactId>
               <version>1.0.0</version>
               <configuration>
                  <lifecycleMappingMetadata>
                     <pluginExecutions>
                        <pluginExecution>
                           <pluginExecutionFilter>
                              <groupId>org.apache.maven.plugins</groupId>
                              <artifactId>maven-dependency-plugin</artifactId>
                              <versionRange>[2.0,)</versionRange>
                              <goals>
                                 <goal>copy</goal>
                                 <goal>unpack</goal>
                              </goals>
                           </pluginExecutionFilter>
                           <action>
                              <ignore />
                           </action>
                        </pluginExecution>
                        <pluginExecution>
                           <pluginExecutionFilter>
                              <groupId>org.apache.maven.plugins</groupId>
                              <artifactId>maven-javadoc-plugin</artifactId>
                              <versionRange>[2.8,)</versionRange>
                              <goals>
                                 <goal>javadoc</goal>
                              </goals>
                           </pluginExecutionFilter>
                           <action>
                              <ignore />
                           </action>
                        </pluginExecution>
                        <pluginExecution>
                           <pluginExecutionFilter>
                              <groupId>org.apache.maven.plugins</groupId>
                              <artifactId>maven-antrun-plugin</artifactId>
                              <versionRange>[1.7,)</versionRange>
                              <goals>
                                 <goal>run</goal>
                              </goals>
                           </pluginExecutionFilter>
                           <action>
                              <ignore />
                           </action>
                        </pluginExecution>
                        <pluginExecution>
                           <pluginExecutionFilter>
                              <groupId>org.codehaus.mojo</groupId>
                              <artifactId>exec-maven-plugin</artifactId>
                              <versionRange>[1.2.1,)</versionRange>
                              <goals>
                                 <goal>java</goal>
                              </goals>
                           </pluginExecutionFilter>
                           <action>
                              <ignore />
                           </action>
                        </pluginExecution>
                        <pluginExecution>
                           <pluginExecutionFilter>
                              <groupId>org.scala-tools</groupId>
                              <artifactId>maven-scala-plugin</artifactId>
                              <versionRange>[2.15.2,)</versionRange>
                              <goals>
                                 <goal>testCompile</goal>
                                 <goal>compile</goal>
                              </goals>
                           </pluginExecutionFilter>
                           <action>
                              <ignore />
                           </action>
                        </pluginExecution>
                        <pluginExecution>
                           <pluginExecutionFilter>
                              <groupId>org.codehaus.mojo</groupId>
                              <artifactId>ideauidesigner-maven-plugin</artifactId>
                              <versionRange>[1.0-beta-1,)</versionRange>
                              <goals>
                                 <goal>javac2</goal>
                              </goals>
                           </pluginExecutionFilter>
                           <action>
                              <ignore />
                           </action>
                        </pluginExecution>
                     </pluginExecutions>
                  </lifecycleMappingMetadata>
               </configuration>
            </plugin>
            <plugin>
               <groupId>org.jboss.maven.plugins</groupId>
               <artifactId>maven-injection-plugin</artifactId>
               <version>1.0.2</version>
            </plugin>
            <plugin>
               <groupId>org.mortbay.jetty</groupId>
               <artifactId>jetty-maven-plugin</artifactId>
               <version>8.0.0.M3</version>
            </plugin>
            <plugin>
               <groupId>org.jacoco</groupId>
               <artifactId>jacoco-maven-plugin</artifactId>
               <version>${version.jacoco}</version>
               <configuration>
                  <includes>
                     <include>org.infinispan.*</include>
                  </includes>
               </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.10</version>
                <dependencies>
                   <dependency>
                      <groupId>org.infinispan</groupId>
                      <artifactId>infinispan-checkstyle</artifactId>
                      <version>${project.version}</version>
                   </dependency>
                </dependencies>
                <configuration>
                   
                   <configLocation>checkstyle.xml</configLocation>
                   <consoleOutput>true</consoleOutput>
                   <failsOnError>true</failsOnError>
                   <violationSeverity>error</violationSeverity>
                   <includeTestSourceDirectory>true</includeTestSourceDirectory>
                </configuration>
                <executions>
                   <execution>
                      <id>check-style</id>
                      <phase>verify</phase>
                      <goals>
                         <goal>checkstyle</goal>
                      </goals>
                   </execution>
                </executions>
             </plugin>
             <plugin>
                <groupId>org.scala-tools</groupId>
                <artifactId>maven-scala-plugin</artifactId>
                <executions>
                   <execution>
                      <id>compile</id>
                      <phase>compile</phase>
                      <goals>
                         <goal>compile</goal>
                      </goals>
                   </execution>
                   <execution>
                      <id>test-compile</id>
                      <phase>test-compile</phase>
                      <goals>
                         <goal>testCompile</goal>
                      </goals>
                      <configuration>
                         <args>
                            <arg>-P:genjavadoc:out=${project.build.directory}/genjavadoctest</arg>
                         </args>
                      </configuration>
                   </execution>
                   <execution>
                      <phase>process-resources</phase>
                      <goals>
                         <goal>compile</goal>
                      </goals>
                   </execution>
                </executions>
                <configuration>
                   <jvmArgs>
                      <jvmArg>-Xmx256m</jvmArg>
                   </jvmArgs>
                   <args>
                      <arg>-P:genjavadoc:out=${project.parent.build.directory}/genjavadoc</arg>
                   </args>
                   <compilerPlugins>
                      <compilerPlugin>
                         <groupId>com.typesafe.genjavadoc</groupId>
                         <artifactId>genjavadoc-plugin_2.10.2</artifactId>
                         <version>${version.maven.genjavadoc}</version>
                      </compilerPlugin>
                   </compilerPlugins>
                </configuration>
             </plugin>
         </plugins>
      </pluginManagement>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <version>1.0</version>
            <executions>
               <execution>
                  <id>enforce-java</id>
                  <goals>
                     <goal>enforce</goal>
                  </goals>
                  <configuration>
                     <rules>
                        <requireJavaVersion>
                           <version>[1.7,)</version>
                        </requireJavaVersion>
                        <requireMavenVersion>
                           <version>[3.0.3,)</version>
                        </requireMavenVersion>
                     </rules>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <artifactId>maven-remote-resources-plugin</artifactId>
            <version>1.1</version>
            <executions>
               <execution>
                  <id>attach-license</id>
                  <goals>
                     <goal>process</goal>
                  </goals>
                  <inherited>true</inherited>
                  <configuration>
                     <resourceBundles>
                        <resourceBundle>org.infinispan:infinispan-license:1</resourceBundle>
                     </resourceBundles>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <extensions>true</extensions>
            <configuration>
               <instructions>
                  <Bundle-DocURL>http://www.infinispan.org/</Bundle-DocURL>
                  <Export-Package>${project.groupId}.*;version=${project.version};-split-package:=error</Export-Package>
               </instructions>
            </configuration>
         </plugin>
         <!-- Copy the resulting persisted metadata into the build directory for packaging into the jar -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.7</version>
            <executions>
               <execution>
                  <id>copy_serialized_metadata</id>
                  <phase>process-test-resources</phase>
                  <goals>
                     <goal>run</goal>
                  </goals>
                  <configuration>
                     <skip>${module.skipComponentMetaDataProcessing}</skip>
                     <target>
                        <copy file="${basedir}/src/main/resources/${project.artifactId}-component-metadata.dat" todir="${project.build.outputDirectory}" />
                     </target>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <!-- by default, compile to JDK 1.6 compatibility (individual modules and/or user can override) -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.0</version>
            <configuration>
               <source>1.6</source>
               <target>1.6</target>
               <encoding>UTF-8</encoding>
               <compilerArgument>-AtranslationFilesPath=${project.basedir}/target/generated-translation-files</compilerArgument>
            </configuration>
         </plugin>
         <!-- eclipse project file generation -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-eclipse-plugin</artifactId>
            <version>2.7</version>
            <configuration>
               <downloadSources>true</downloadSources>
               <buildOutputDirectory>${basedir}/eclipse-output</buildOutputDirectory>
            </configuration>
         </plugin>
         <!-- IntelliJ project file generation -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-idea-plugin</artifactId>
            <version>2.2</version>
            <configuration>
               <downloadSources>true</downloadSources>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <version>2.4</version>
            <executions>
               <execution>
                  <id>build-test-jar</id>
                  <goals>
                     <goal>test-jar</goal>
                  </goals>
                  <configuration>
                     <archive>
                        <manifest>
                           <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                           <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                     </archive>
                     <excludes>
                        <excludes>**/jbossts-properties.xml</excludes>
                     </excludes>
                  </configuration>
               </execution>
            </executions>
            <configuration>
               <archive>
                  <manifest>
                     <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                     <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                     <mainClass>org.infinispan.Version</mainClass>
                  </manifest>
               </archive>
               <excludes>
                  <exclude>**/log4j.xml</exclude>
                  <exclude>**/*.bat</exclude>
                  <exclude>**/*.sh</exclude>
                  <exclude>**/*.txt</exclude>
               </excludes>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-release-plugin</artifactId>
            <version>2.2.2</version>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <version>2.6</version>
            <configuration>
               <encoding>UTF-8</encoding>
            </configuration>
         </plugin>
         <!-- ensure parallel test execution -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
               <parallel>tests</parallel>
               <threadCount>${infinispan.test.parallel.threads}</threadCount>
               <forkCount>1</forkCount>
               <reuseForks>true</reuseForks>
               <groups>${defaultTestGroup}</groups>
               <excludedGroups>${defaultExcludedTestGroup}</excludedGroups>
               <systemPropertyVariables>
                  <infinispan.test.jgroups.protocol>${infinispan.test.jgroups.protocol}</infinispan.test.jgroups.protocol>
                  <jgroups.bind_addr>127.0.0.1</jgroups.bind_addr>
                  <java.net.preferIPv4Stack>true</java.net.preferIPv4Stack>
                  <infinispan.unsafe.allow_jdk8_chm>true</infinispan.unsafe.allow_jdk8_chm>
                  <log4j.configuration>${log4j.configuration}</log4j.configuration>
                  <build.directory>${project.build.directory}</build.directory>
               </systemPropertyVariables>
               <trimStackTrace>false</trimStackTrace>
               <properties>
                  <property>
                     <name>listener</name>
                     <value>${testNGListener}</value>
                  </property>
               </properties>
               <!-- -Dsun.nio.ch.bugLevel needed because of http://bugs.sun.com/view_bug.do?bug_id=6427854 -->
               <argLine>-Xmx1024m -XX:MaxPermSize=256m -Dsun.nio.ch.bugLevel</argLine>
            </configuration>
         </plugin>
         <!-- Scan module for components and persist these into a data file, for use at runtime -->
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
               <execution>
                  <id>serialize_component_metadata</id>
                  <phase>process-classes</phase>
                  <goals>
                     <goal>java</goal>
                  </goals>
                  <configuration>
                     <skip>${module.skipComponentMetaDataProcessing}</skip>
                     <mainClass>org.infinispan.factories.components.ComponentMetadataPersister</mainClass>
                     <arguments>
                        <argument>${project.build.outputDirectory}</argument>
                        <argument>${basedir}/src/main/resources/${project.artifactId}-component-metadata.dat</argument>
                     </arguments>
                     <systemProperties>
                        <systemProperty>
                           <key>infinispan.isCoreModule</key>
                           <value>${module.metadata.isCoreModule}</value>
                        </systemProperty>
                     </systemProperties>
                  </configuration>
               </execution>
            </executions>
         </plugin>
      </plugins>
   </build>
   <reporting>
      <plugins>
         <!-- PMD report -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-pmd-plugin</artifactId>
            <!-- Needs to be re-defined and configured in pluginManagement section -->
            <version>2.7.1</version>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-report-plugin</artifactId>
            <version>2.12.2</version>
         </plugin>
         <!-- Findbugs report -->
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>findbugs-maven-plugin</artifactId>
            <version>2.5.2</version>
            <configuration>
               <onlyAnalyze>org.infinispan.*</onlyAnalyze>
               <xmlOutput>true</xmlOutput>
               <xmlOutputDirectory>target</xmlOutputDirectory>
            </configuration>
         </plugin>
      </plugins>
   </reporting>
   <profiles>
      <profile>
         <id>distribution</id>
         <properties>
            <skipTests>true</skipTests>
         </properties>

         <build>
            <plugins>
               <!-- generate target/runtime-classpath.txt, to be included in bundle -->
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-dependency-plugin</artifactId>
                  <executions>
                     <execution>
                        <id>create-classpath</id>
                        <phase>package</phase>
                        <goals>
                           <goal>build-classpath</goal>
                        </goals>
                        <configuration>
                           <includeScope>runtime</includeScope>
                           <excludeScope>test</excludeScope>
                           <prefix>$ISPN_HOME/lib</prefix>
                           <outputFile>${project.build.directory}/runtime-classpath.txt</outputFile>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>

      <profile>
         <id>extras</id>
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <build>
            <plugins>
               <!-- Make sure we generate src jars too -->
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-source-plugin</artifactId>
                  <version>${version.maven.source}</version>
                  <executions>
                     <execution>
                        <id>attach-sources</id>
                        <goals>
                           <goal>jar</goal>
                           <goal>test-jar</goal>
                        </goals>
                     </execution>
                  </executions>
                  <inherited>true</inherited>
               </plugin>
            </plugins>
         </build>
         <properties>
            <!-- By default create OSGI bundles -->
            <packaging>bundle</packaging>
         </properties>
      </profile>
      <profile>
         <id>test-CI</id>
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <properties>
            <defaultTestGroup>functional,unit,arquillian</defaultTestGroup>
            <infinispan.test.jgroups.protocol>tcp</infinispan.test.jgroups.protocol>
         </properties>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <configuration>
                     <systemPropertyVariables>
                           <!-- this is picked up in the log4j xml which prepends it to each module's log file-->
                           <infinispan.module-name>${project.artifactId}</infinispan.module-name>
                     </systemPropertyVariables>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>
      <profile>
         <id>test-functional</id>
         <properties>
            <defaultTestGroup>functional</defaultTestGroup>
            <infinispan.test.jgroups.protocol>tcp</infinispan.test.jgroups.protocol>
         </properties>
      </profile>
      <profile>
         <id>test-xsite</id>
         <properties>
            <defaultTestGroup>xsite</defaultTestGroup>
            <infinispan.test.jgroups.protocol>tcp</infinispan.test.jgroups.protocol>
         </properties>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <configuration>
                     <threadCount>1</threadCount>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>
      <profile>
         <id>test-unstable</id>
         <properties>
            <defaultTestGroup>unstable</defaultTestGroup>
             <!-- empty since we are not going to exclude any group -->
            <defaultExcludedTestGroup></defaultExcludedTestGroup>
            <infinispan.test.jgroups.protocol>tcp</infinispan.test.jgroups.protocol>
         </properties>
       </profile>
      <profile>
         <id>test-unit</id>
         <properties>
            <defaultTestGroup>unit</defaultTestGroup>
         </properties>
      </profile>
      <profile>
         <id>test-jgroups</id>
         <properties>
            <defaultTestGroup>jgroups</defaultTestGroup>
         </properties>
      </profile>
      <profile>
         <id>test-transaction</id>
         <properties>
            <defaultTestGroup>transaction</defaultTestGroup>
         </properties>
      </profile>
      <profile>
         <id>debug-tests</id>
         <properties>
            <testNGListener>org.infinispan.test.fwk.DebuggingUnitTestNGListener</testNGListener>
            <infinispan.test.jgroups.protocol>tcp</infinispan.test.jgroups.protocol>
         </properties>
      </profile>
      <profile>
         <id>nonParallel</id>
         <activation>
            <activeByDefault>false</activeByDefault>
         </activation>
         <properties>
            <infinispan.test.parallel.threads>1</infinispan.test.parallel.threads>
            <infinispan.test.jgroups.protocol>tcp</infinispan.test.jgroups.protocol>
         </properties>
      </profile>
      <profile>
         <id>traceTests</id>
         <activation>
            <activeByDefault>false</activeByDefault>
         </activation>
         <build>
            <plugins>
               <!-- Redefine surefire plugin to avoid external log4j settings
               not being discovered when passed as command line arguments -->
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <configuration>
                     <systemPropertyVariables>
                        <log4j.configuration>log4j-trace.xml</log4j.configuration>
                     </systemPropertyVariables>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>
      <profile>
         <id>coverage</id>

         <activation>
            <activeByDefault>false</activeByDefault>
         </activation>

         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-dependency-plugin</artifactId>
                  <executions>
                     <!-- Copy the ant tasks jar. Needed for ts.jacoco.report-ant . -->
                     <execution>
                        <id>jacoco-dependency-ant</id>
                        <goals>
                           <goal>copy</goal>
                        </goals>
                        <phase>process-test-resources</phase>
                        <inherited>false</inherited>
                        <configuration>
                           <artifactItems>
                              <artifactItem>
                                 <groupId>org.jacoco</groupId>
                                 <artifactId>org.jacoco.ant</artifactId>
                                 <version>${version.jacoco}</version>
                              </artifactItem>
                              <artifactItem>
                                 <groupId>org.jacoco</groupId>
                                 <artifactId>org.jacoco.core</artifactId>
                                 <version>${version.jacoco}</version>
                              </artifactItem>
                              <artifactItem>
                                 <groupId>org.jacoco</groupId>
                                 <artifactId>org.jacoco.report</artifactId>
                                 <version>${version.jacoco}</version>
                              </artifactItem>
                              <artifactItem>
                                 <groupId>asm</groupId>
                                 <artifactId>asm-all</artifactId>
                                 <version>${version.asm}</version>
                              </artifactItem>
                           </artifactItems>
                           <stripVersion>true</stripVersion>
                           <outputDirectory>${basedir}/target/jacoco-jars</outputDirectory>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>

               <!-- Starting jacoco agent for recording code coverage. -->
               <plugin>
                  <groupId>org.jacoco</groupId>
                  <artifactId>jacoco-maven-plugin</artifactId>
                  <executions>
                     <execution>
                        <goals>
                           <goal>prepare-agent</goal>
                        </goals>
                     </execution>
                  </executions>
                  <configuration>
                     <propertyName>jacocoAgent</propertyName>
                  </configuration>
               </plugin>

               <!-- Overriding surefire configuration, for attaching jacoco agent to command line. -->
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <configuration>
                     <argLine combine.self="override">-Xmx1024m -XX:MaxPermSize=1024m ${jacocoAgent}</argLine>
                     <parallel combine.self="override">tests</parallel>
                     <threadCount combine.self="override">${infinispan.test.parallel.threads}</threadCount>
                     <groups combine.self="override">${defaultTestGroup}</groups>
                     <systemPropertyVariables combine.self="override">
                           <infinispan.test.jgroups.protocol>${infinispan.test.jgroups.protocol}</infinispan.test.jgroups.protocol>
                           <jgroups.bind_addr>127.0.0.1</jgroups.bind_addr>
                           <java.net.preferIPv4Stack>true</java.net.preferIPv4Stack>
                           <infinispan.unsafe.allow_jdk8_chm>true</infinispan.unsafe.allow_jdk8_chm>
                     </systemPropertyVariables>
                     <trimStackTrace combine.self="override">false</trimStackTrace>
                     <properties combine.self="override">
                        <property>
                           <name>listener</name>
                           <value>${testNGListener}</value>
                        </property>
                     </properties>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>

      <profile>
         <id>jacocoReport</id>

         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-antrun-plugin</artifactId>
                  <version>1.7</version>
                  <executions>
                     <execution>
                        <phase>install</phase>
                        <goals>
                           <goal>run</goal>
                        </goals>
                        <configuration combine.self="override">
                           <target>
                              <!-- Execute an ant task within maven -->
                              <taskdef classname="org.jacoco.ant.ReportTask" name="report">
                                 <classpath path="${basedir}/target/jacoco-jars/org.jacoco.ant.jar" />
                                 <classpath path="target/jacoco-jars/org.jacoco.core.jar" />
                                 <classpath path="target/jacoco-jars/org.jacoco.report.jar" />
                                 <classpath path="target/jacoco-jars/asm-all.jar" />
                              </taskdef>

                              <echo message="Deleting previous report" />
                              <delete dir="${dir.report}" />

                              <echo message="Creating report directory" />
                              <mkdir dir="${dir.report}" />

                              <echo message="Generating JaCoCo Reports" />
                              <report>
                                 <!-- Specifying the execution data files locations. -->
                                 <executiondata>
                                    <fileset dir="${dir.ispn}" includes="**/target/jacoco.exec" />
                                 </executiondata>

                                 <!-- Defining the report structure with class and source files. -->
                                 <structure name="${reportTitle}">
                                    <classfiles>
                                       <fileset dir="${dir.ispn}">
                                          <include name="**/target/classes/" />
                                       </fileset>
                                    </classfiles>
                                    <sourcefiles encoding="UTF-8">
                                       <mappedresources>
                                          <fileset dir="${dir.ispn}" includes="**/src/main/java/**/*.java" />
                                          <mapper from="^(.*/java/)(.*)$" to="\2" type="regexp" />
                                       </mappedresources>
                                    </sourcefiles>

                                 </structure>

                                 <!-- Only HTML report is generated with specified path. -->
                                 <html destdir="${dir.report}" />
                              </report>
                           </target>
                        </configuration>
                     </execution>
                  </executions>
                  <dependencies>
                     <dependency>
                        <groupId>org.jacoco</groupId>
                        <artifactId>org.jacoco.ant</artifactId>
                        <version>${version.jacoco}</version>
                     </dependency>
                  </dependencies>
               </plugin>
            </plugins>
         </build>
      </profile>

      <profile>
         <id>jdk6testsuite</id>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <configuration>
                     <jvm>${env.JAVA_HOME_16}/bin/java</jvm>
                     <parallel>tests</parallel>
                     <threadCount>${infinispan.test.parallel.threads}</threadCount>
                     <forkCount>1</forkCount>
                     <reuseForks>true</reuseForks>
                     <groups>${defaultTestGroup}</groups>
                     <excludedGroups>${defaultExcludedTestGroup}</excludedGroups>
                     <systemPropertyVariables>
                        <infinispan.test.jgroups.protocol>${infinispan.test.jgroups.protocol}</infinispan.test.jgroups.protocol>
                        <jgroups.bind_addr>127.0.0.1</jgroups.bind_addr>
                        <java.net.preferIPv4Stack>true</java.net.preferIPv4Stack>
                        <infinispan.unsafe.allow_jdk8_chm>true</infinispan.unsafe.allow_jdk8_chm>
                        <log4j.configuration>${log4j.configuration}</log4j.configuration>
                     </systemPropertyVariables>
                     <trimStackTrace>false</trimStackTrace>
                     <properties>
                        <property>
                           <name>listener</name>
                           <value>${testNGListener}</value>
                        </property>
                     </properties>
                     <!-- -Dsun.nio.ch.bugLevel needed because of http://bugs.sun.com/view_bug.do?bug_id=6427854 -->
                     <argLine>-Xmx1024m -XX:MaxPermSize=256m -Dsun.nio.ch.bugLevel</argLine>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>
      <profile>
         <activation>
            <jdk>1.7</jdk>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.codehaus.mojo</groupId>
                  <artifactId>animal-sniffer-maven-plugin</artifactId>
                  <version>${version.maven.animal.sniffer}</version>
                  <configuration>
                     <signature>
                        <groupId>org.codehaus.mojo.signature</groupId>
                        <artifactId>java16</artifactId>
                        <version>1.0</version>
                     </signature>
                     <ignores>
                        <ignore>sun.misc.Unsafe</ignore>
                        <ignore>org.apache.lucene.store.IOContext</ignore>
                     </ignores>
                  </configuration>
                  <executions>
                     <execution>
                        <phase>process-classes</phase>
                        <goals>
                        <goal>check</goal>
                        </goals>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>
   </profiles>
</project>
<?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-persistence-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../pom.xml</relativePath>
   </parent>
   <artifactId>infinispan-persistence-cli</artifactId>
   <packaging>bundle</packaging>
   <name>Infinispan Command Line Interface persistence</name>
   <description>Infinispan Command Line Interface persistence</description>
   <properties>
   </properties>

   <dependencies>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-cli-client</artifactId>
      </dependency>
      <dependency>
         <groupId>org.codehaus.jackson</groupId>
         <artifactId>jackson-mapper-asl</artifactId>
      </dependency>

      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-cli-server</artifactId>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <configuration>
               <instructions>
                  <Export-Package>
                     ${project.groupId}.persistence.cli.*;version=${project.version};-split-package:=error
                  </Export-Package>
               </instructions>
            </configuration>
         </plugin>

         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
               <!-- Remote JMX properties will only be properly applied when
               passed via argLine. If passed via systemPropertyVariables,
               they're applied too late for them to have an effect on the JVM
               -->
               <argLine>
                  -Dcom.sun.management.jmxremote=true
                  -Djava.rmi.server.hostname=localhost
                  -Dcom.sun.management.jmxremote.port=2626
                  -Dcom.sun.management.jmxremote.authenticate=false
                  -Dcom.sun.management.jmxremote.ssl=false
               </argLine>
               <forkMode>once</forkMode>
            </configuration>
         </plugin>

      </plugins>
   </build>
</project>
<?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-persistence-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-cachestore-jdbc</artifactId>
   <packaging>bundle</packaging>
   <name>Infinispan JDBC CacheStore</name>
   <description>Infinispan JDBC CacheStore module</description>

   <dependencies>
      <dependency>
         <groupId>c3p0</groupId>
         <artifactId>c3p0</artifactId>
         <optional>true</optional>
      </dependency>

      <dependency>
         <groupId>com.h2database</groupId>
         <artifactId>h2</artifactId>
         <scope>test</scope>
      </dependency>

      <!-- for testing against MySQL -->
      <dependency>
         <groupId>mysql</groupId>
         <artifactId>mysql-connector-java</artifactId>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <build>     
      <plugins>
         <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <configuration>
               <instructions>
                  <Export-Package>
                     ${project.groupId}.persistence.jdbc.*;version=${project.version};-split-package:=error
                  </Export-Package>
               </instructions>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <!-- Run the test with a single thread, otherwise the suite might hang due to a
            concurrency issue in c3p0: https://sourceforge.net/p/c3p0/bugs/119/. Once this is fixed
             this can be switched back to parallel execution -->
            <configuration>
               <threadCount>1</threadCount>
            </configuration>
         </plugin>
      </plugins>
   </build>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-persistence-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-cachestore-jpa</artifactId>
   <packaging>bundle</packaging>
   <name>Infinispan JPA CacheStore</name>
   <description>Infinispan JPA CacheStore module</description>

   <properties>
      <!-- Tests against single database cannot be executed in paralllel -->
      <infinispan.test.parallel.threads>1</infinispan.test.parallel.threads>
   </properties>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <configuration>
               <instructions>
                  <Export-Package>
                     ${project.groupId}.persistence.jpa.*;version=${project.version};-split-package:=error
                  </Export-Package>
               </instructions>
            </configuration>
         </plugin>
      </plugins>
   </build>
   <dependencies>
      <dependency>
         <groupId>org.hibernate</groupId>
         <artifactId>hibernate-core</artifactId>
         <scope>provided</scope>
      </dependency>
      <dependency>
         <groupId>org.hibernate.javax.persistence</groupId>
         <artifactId>hibernate-jpa-2.0-api</artifactId>
         <scope>provided</scope>
      </dependency>
      <dependency>
         <groupId>org.slf4j</groupId>
         <artifactId>slf4j-simple</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.hibernate</groupId>
         <artifactId>hibernate-entitymanager</artifactId>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <profiles>
      <profile>
         <id>h2</id>
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <dependencies>
            <dependency>
               <groupId>com.h2database</groupId>
               <artifactId>h2</artifactId>
               <scope>test</scope>
            </dependency>
         </dependencies>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <configuration>
                     <systemPropertyVariables>
                        <connection.url>jdbc:h2:mem:test;DB_CLOSE_DELAY=-1</connection.url>
                        <driver.class>org.h2.Driver</driver.class>
                     </systemPropertyVariables>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>
      <profile>
         <id>mysql</id>
         <dependencies>
            <dependency>
               <groupId>mysql</groupId>
               <artifactId>mysql-connector-java</artifactId>
               <scope>test</scope>
            </dependency>
         </dependencies>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <configuration>
                     <systemPropertyVariables>
                        <connection.url>jdbc:mysql://localhost:3306/ispn_jpa_test</connection.url>
                        <driver.class>com.mysql.jdbc.Driver</driver.class>
                        <db.username>${db.username}</db.username>
                        <db.password>${db.password}</db.password>
                     </systemPropertyVariables>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>
      <profile>
         <id>postgres</id>
         <dependencies>
            <dependency>
               <groupId>org.postgresql</groupId>
               <artifactId>postgresql</artifactId>
            </dependency>
         </dependencies>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <configuration>
                     <systemPropertyVariables>
                        <connection.url>jdbc:postgresql://localhost:5432/ispn_jpa_test</connection.url>
                        <driver.class>org.postgresql.Driver</driver.class>
                        <db.username>${db.username}</db.username>
                        <db.password>${db.password}</db.password>
                     </systemPropertyVariables>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>
   </profiles>
</project>

<?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-persistence-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../pom.xml</relativePath>
   </parent>
   <artifactId>infinispan-cachestore-leveldb</artifactId>
   <packaging>bundle</packaging>
   <name>Infinispan LevelDB CacheStore</name>
   <description>Infinispan LevelDB CacheStore module</description>

   <dependencies>
      <dependency>
         <groupId>org.fusesource.leveldbjni</groupId>
         <artifactId>leveldbjni-all</artifactId>
      </dependency>
      <dependency>
         <groupId>org.iq80.leveldb</groupId>
         <artifactId>leveldb</artifactId>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <configuration>
               <instructions>
                  <Export-Package>
                     ${project.groupId}.persistence.leveldb.*;version=${project.version};-split-package:=error
                  </Export-Package>
               </instructions>
            </configuration>
         </plugin>
      </plugins>
   </build>
</project><?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../parent/pom.xml</relativePath>
   </parent>
   <artifactId>infinispan-persistence-parent</artifactId>
   <name>Parent pom for cachestore modules</name>
   <packaging>pom</packaging>

   <dependencies>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
      </dependency>

      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
   </dependencies>
</project><?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-persistence-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../pom.xml</relativePath>
   </parent>
   <artifactId>infinispan-cachestore-remote</artifactId>
   <packaging>bundle</packaging>
   <name>Infinispan Remote CacheStore</name>
   <description>Infinispan remote CacheStore based on Hot Rod protocol</description>

   <dependencies>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-client-hotrod</artifactId>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-client-hotrod</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-hotrod</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-hotrod</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <configuration>
               <instructions>
                  <Export-Package>
                     ${project.groupId}.persistence.remote.*;version=${project.version};-split-package:=error
                  </Export-Package>
               </instructions>
            </configuration>
         </plugin>
      </plugins>
   </build>
</project><?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-persistence-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../pom.xml</relativePath>
   </parent>
   <artifactId>infinispan-cachestore-rest</artifactId>
   <packaging>bundle</packaging>
   <name>Infinispan REST CacheStore</name>
   <description>Infinispan REST CacheStore</description>
   
   <dependencies>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
      </dependency>
      <dependency>
         <groupId>org.apache.httpcomponents</groupId>
         <artifactId>httpclient</artifactId>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-rest</artifactId>
         <classifier>classes</classifier>
         <optional>true</optional>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-rest</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.mortbay.jetty</groupId>
         <artifactId>jetty-embedded</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>commons-httpclient</groupId>
         <artifactId>commons-httpclient</artifactId>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty-maven-plugin</artifactId>
         </plugin>
         <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <configuration>
               <instructions>
                  <Export-Package>
                     ${project.groupId}.persistence.rest.*;version=${project.version};-split-package:=error
                  </Export-Package>
               </instructions>
            </configuration>
         </plugin>
      </plugins>
   </build>
</project><?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>parent/pom.xml</relativePath>
   </parent>

   <artifactId>infinispan</artifactId>

   <name>Infinispan Distribution</name>
   <description>Builds the complete Infinispan distribution bundles</description>
   <packaging>pom</packaging>

   <modules>
      <module>bom</module>
      <module>checkstyle</module>
      <module>parent</module>
      <module>commons</module>
      <module>core</module>
      <module>extended-statistics</module>
      <module>tools</module>
      <module>query</module>
      <module>query-dsl</module>
      <module>remote-query/remote-query-client</module>
      <module>remote-query/remote-query-server</module>
      <module>tree</module>
      <module>lucene</module>
      <module>lucene/lucene-directory</module>
      <module>lucene/lucene-v4</module>
      <module>lucene/lucene-v3</module>
      <module>persistence</module>
      <module>persistence/jdbc</module>
      <module>persistence/jpa</module>
      <module>persistence/remote</module>
      <module>persistence/cli</module>
      <module>persistence/leveldb</module>
      <module>persistence/rest</module>
      <module>server</module>
      <module>server/core</module>
      <module>server/memcached</module>
      <module>server/hotrod</module>
      <module>server/websocket</module>
      <module>server/rest</module>
      <module>client/hotrod-client</module>
      <module>rhq-plugin</module>
      <module>spring</module>
      <module>cli/cli-server</module>
      <module>cli/cli-client</module>
      <module>demos/gui</module>
      <module>demos/ec2</module>
      <module>demos/distexec</module>
      <module>demos/ec2-ui</module>
      <module>demos/directory</module>
      <module>demos/lucene-directory-demo</module>
      <module>demos/gridfs-webdav</module>
      <module>demos/nearcache</module>
      <module>demos/nearcache-client</module>
      <module>cdi/extension</module>
      <module>as-modules</module>
      <module>integrationtests/luceneintegration</module>
      <module>integrationtests/as-integration</module>
      <module>integrationtests/compatibility-mode-it</module>
      <module>integrationtests/cdi-jcache-it</module>
      <module>integrationtests/security-it</module>
      <module>integrationtests/security-manager-it</module>
      <module>jcache</module>
      <module>server/integration</module>
   </modules>

   <profiles>
      <profile>
         <id>distribution</id>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-javadoc-plugin</artifactId>
                  <executions>
                     <execution>
                        <id>javadoc</id>
                        <phase>prepare-package</phase>
                        <goals>
                           <goal>aggregate</goal>
                        </goals>
                        <configuration>
                           <doclet>org.infinispan.tools.doclet.PublicAPI</doclet>
                           <docletArtifact>
                              <groupId>org.infinispan</groupId>
                              <artifactId>infinispan-tools</artifactId>
                              <version>${project.version}</version>
                           </docletArtifact>
                           <doctitle>Infinispan ${project.version} API</doctitle>
                           <quiet>true</quiet>
                           <!-- In case anyone needs to trace javadoc issues
                           <additionalJOption>-J-Xrunjdwp:transport=dt_socket,address=8787,server=y,suspend=y</additionalJOption>
                           -->
                           <stylesheetfile>${basedir}/src/javadoc/stylesheet.css</stylesheetfile>
                           <javadocDirectory>${basedir}/src/javadoc</javadocDirectory>
                           <docfilessubdirs>true</docfilessubdirs>
                           <links>
                              <link>http://docs.oracle.com/javase/6/docs/api/</link>
                              <link>http://docs.oracle.com/javaee/5/api/</link>
                           </links>
                           <footer><![CDATA[
-->
                      <!-- Google Analytics -->
<!--
<script type='text/javascript'>
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type='text/javascript'>
try {
var pageTracker = _gat._getTracker("UA-8601422-4");
pageTracker._trackPageview();
} catch(err) {}</script>
                     ]]></footer>
                           <excludePackageNames>org.jboss.as:org.infinispan.server.endpoint:org.infinispan.server.rhq</excludePackageNames>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-jar-plugin</artifactId>
                  <executions>
                     <execution>
                        <id>build-test-jar</id>
                        <phase>none</phase>
                     </execution>
                  </executions>
               </plugin>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-assembly-plugin</artifactId>
                  <executions>
                     <execution>
                        <id>assemble</id>
                        <phase>package</phase>
                        <goals>
                           <goal>single</goal>
                        </goals>
                     </execution>
                  </executions>
                  <configuration>
                     <descriptors>
                        <descriptor>src/main/resources/assemblies/bin.xml</descriptor>
                        <descriptor>src/main/resources/assemblies/all.xml</descriptor>
                        <descriptor>src/main/resources/assemblies/src.xml</descriptor>
                     </descriptors>
                     <finalName>${project.artifactId}-${project.version}</finalName>
                     <outputDirectory>${buildDirectory}/distribution</outputDirectory>
                     <workDirectory>${buildDirectory}/assembly/work</workDirectory>

                     <!-- Do not attach ZIP files to the Maven repository -->
                     <attach>false</attach>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>

      <!-- This profile is an scaled down version of the distribution profile which should only be used to speed up
      testing of distribution zip files. It doesn't generate any documentation and only generates the -all.zip distribution -->
      <profile>
         <id>minimal-distribution</id>
         <activation>
            <activeByDefault>false</activeByDefault>
         </activation>
         <properties>
            <maven.test.skip.exec>true</maven.test.skip.exec>
         </properties>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-jar-plugin</artifactId>
                  <executions>
                     <execution>
                        <id>build-test-jar</id>
                        <phase>none</phase>
                     </execution>
                  </executions>
               </plugin>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-assembly-plugin</artifactId>
                  <executions>
                     <execution>
                        <id>assemble</id>
                        <phase>package</phase>
                        <goals>
                           <goal>single</goal>
                        </goals>
                     </execution>
                  </executions>
                  <configuration>
                     <descriptors>
                        <descriptor>src/main/resources/assemblies/all.xml</descriptor>
                     </descriptors>
                     <finalName>${project.artifactId}-${project.version}</finalName>
                     <outputDirectory>${buildDirectory}/distribution</outputDirectory>
                     <workDirectory>${buildDirectory}/assembly/work</workDirectory>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>

      <!-- TODO somehow combine this with the 'distribution' profile so all docs are built together -->
      <profile>
         <id>jmxdoc</id>
         <activation>
            <activeByDefault>false</activeByDefault>
         </activation>
         <properties>
            <maven.test.skip.exec>true</maven.test.skip.exec>
         </properties>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-javadoc-plugin</artifactId>
                  <configuration>
                     <doclet>org.infinispan.tools.doclet.jmx.JmxDoclet</doclet>
                     <docletArtifact>
                        <groupId>org.infinispan</groupId>
                        <artifactId>infinispan-tools</artifactId>
                        <version>${project.version}</version>
                     </docletArtifact>
                     <footer><![CDATA[
                <!-- Google Analytics -->
<script type='text/javascript'>
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type='text/javascript'>
try {
var pageTracker = _gat._getTracker("UA-8601422-4");
pageTracker._trackPageview();
} catch(err) {}</script>
               ]]></footer>
                  </configuration>
                  <executions>
                     <execution>
                        <id>javadoc</id>
                        <phase>package</phase>
                        <goals>
                           <goal>aggregate</goal>
                        </goals>
                     </execution>
                  </executions>
               </plugin>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-antrun-plugin</artifactId>
                  <executions>
                     <execution>
                        <id>xsdocgen</id>
                        <phase>package</phase>
                        <goals>
                           <goal>run</goal>
                        </goals>
                        <configuration>
                           <target>
                              <property name="plugin_classpath" refid="maven.plugin.classpath" />
                              <path id="xsd.fileset.path">
                                 <fileset casesensitive="yes" dir="${basedir}">
                                    <include name="core/src/main/resources/schema/*.xsd" /> <!-- make sure core comes first -->
                                    <include name="cachestore/*/src/main/resources/schema/*.xsd" />
                                 </fileset>
                              </path>
                              <pathconvert pathsep=" " property="xsd.fileset" refid="xsd.fileset.path" />
                              <echo message="xsds ${xsd.fileset}" />
                              <java classname="org.infinispan.tools.xsd.XSDoc">
                                 <arg value="-o" />
                                 <arg value="${project.build.directory}/site/configdocs" />
                                 <arg line="${xsd.fileset}" />
                                 <classpath>
                                    <pathelement path="${plugin_classpath}" />
	                             </classpath>
                              </java>
                           </target>
                        </configuration>
                     </execution>
                  </executions>
                  <dependencies>
                     <dependency>
                        <groupId>org.infinispan</groupId>
                        <artifactId>infinispan-tools</artifactId>
                        <version>${project.version}</version>
                     </dependency>
                  </dependencies>
               </plugin>
            </plugins>
         </build>
      </profile>
   </profiles>
</project>
<?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../parent/pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-query-dsl</artifactId>
   <packaging>bundle</packaging>
   <name>Infinispan Query DSL API</name>
   <description>Infinispan Query DSL API module</description>

   <dependencies>
      <dependency>
         <groupId>org.jboss.logging</groupId>
         <artifactId>jboss-logging</artifactId>
         <scope>provided</scope>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <configuration>
               <instructions>
                  <Export-Package>
                     ${project.groupId}.query.dsl.*;version=${project.version};-split-package:=error
                  </Export-Package>
               </instructions>
            </configuration>
         </plugin>
      </plugins>
   </build>
</project><?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../parent/pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-query</artifactId>
   <packaging>bundle</packaging>
   <name>Infinispan Query API</name>
   <description>Infinispan Query API module</description>

   <!-- This module declares components that either has lifecycle (@Start or @Stop) or uses @Inject to retrieve dependencies -->
   <properties>
      <module.skipComponentMetaDataProcessing>false</module.skipComponentMetaDataProcessing>
   </properties>

   <dependencies>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
      </dependency>

      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-query-dsl</artifactId>
      </dependency>

      <dependency>
         <groupId>org.hibernate.hql</groupId>
         <artifactId>hibernate-hql-parser</artifactId>
      </dependency>

      <dependency>
         <groupId>org.hibernate.hql</groupId>
         <artifactId>hibernate-hql-lucene</artifactId>
      </dependency>

      <dependency>
         <groupId>org.hibernate</groupId>
         <artifactId>hibernate-search-engine</artifactId>
      </dependency>

      <dependency>
         <groupId>org.hibernate</groupId>
         <artifactId>hibernate-search-infinispan</artifactId>
      </dependency>

      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-lucene-directory</artifactId>
      </dependency>

      <!-- Hack to make Eclipse happy when opening multiple modules at once:
         the eclipse project related to infinispan-lucene-directory does not
         contain the actual classes packaged in its jar -->
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-lucene-v3</artifactId>
         <scope>provided</scope>
      </dependency>

      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>

       <dependency>
           <groupId>${project.groupId}</groupId>
           <artifactId>infinispan-cachestore-jdbc</artifactId>
           <scope>test</scope>
       </dependency>

       <dependency>
           <groupId>com.h2database</groupId>
           <artifactId>h2</artifactId>
           <scope>test</scope>
       </dependency>

       <dependency>
           <groupId>c3p0</groupId>
           <artifactId>c3p0</artifactId>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <configuration>
               <instructions>
                  <Export-Package>
                     ${project.groupId}.query.*;version=${project.version};-split-package:=merge-last
                  </Export-Package>
               </instructions>
            </configuration>
         </plugin>
      </plugins>
   </build>
</project>
<?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../../parent/pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-remote-query-client</artifactId>
   <packaging>bundle</packaging>
   <name>Infinispan Remote Query Client</name>
   <description>Infinispan Remote Query common classes between client and server</description>

   <dependencies>
      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-commons</artifactId>
      </dependency>

      <dependency>
         <groupId>org.infinispan.protostream</groupId>
         <artifactId>protostream</artifactId>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <configuration>
               <instructions>
                  <Export-Package>
                     ${project.groupId}.query.remote.client.*;version=${project.version};-split-package:=error,
                  </Export-Package>
               </instructions>
            </configuration>
         </plugin>
      </plugins>
   </build>
</project><?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../../parent/pom.xml</relativePath>
   </parent>
   <artifactId>infinispan-remote-query-server</artifactId>
   <packaging>bundle</packaging>
   <name>Infinispan Remote Query Server</name>
   <description>Infinispan Remote Query Server module</description>

   <!-- This module declares components that either has lifecycle (@Start or @Stop) or uses @Inject to retrieve dependencies -->
   <properties>
      <module.skipComponentMetaDataProcessing>false</module.skipComponentMetaDataProcessing>
   </properties>

   <dependencies>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-query</artifactId>
      </dependency>

      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-remote-query-client</artifactId>
      </dependency>

      <dependency>
         <groupId>org.hibernate</groupId>
         <artifactId>hibernate-search-engine</artifactId>
      </dependency>

      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-core</artifactId>
      </dependency>

      <dependency>
         <groupId>org.infinispan.protostream</groupId>
         <artifactId>sample-domain-implementation</artifactId>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <configuration>
               <instructions>
                  <Export-Package>
                     ${project.groupId}.remote-query-server.*;version=${project.version};-split-package:=error
                  </Export-Package>
               </instructions>
            </configuration>
         </plugin>
      </plugins>
   </build>
</project>
<?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../parent/pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-rhq-plugin</artifactId>
   <packaging>jar</packaging>

   <name>Infinispan RHQ Plugin</name>
   <description>The Infinispan RHQ Plugin</description>

   <properties>
      <scm.module.path>plugin/infinispan</scm.module.path>
      <rhq.defaultDevContainerPath>/jon/dev-container</rhq.defaultDevContainerPath>
   </properties>

   <dependencies>
      <dependency>
         <groupId>org.rhq</groupId>
         <artifactId>rhq-core-domain</artifactId>
         <scope>provided</scope>
         <exclusions>
            <exclusion>
               <groupId>hibernate</groupId>
               <artifactId>hibernate3</artifactId>
            </exclusion>
         </exclusions>
      </dependency>
      <dependency>
         <groupId>org.rhq</groupId>
         <artifactId>rhq-core-plugin-api</artifactId>
         <exclusions>
            <exclusion>
               <groupId>com.sun.xml.bind</groupId>
               <artifactId>jaxb-impl</artifactId>
            </exclusion>
         </exclusions>
         <scope>provided</scope>
      </dependency>

      <dependency>
         <groupId>org.rhq</groupId>
         <artifactId>rhq-jmx-plugin</artifactId>
         <scope>provided</scope>
      </dependency>

      <dependency>
         <groupId>mc4j</groupId>
         <artifactId>org-mc4j-ems</artifactId>
         <scope>provided</scope>
      </dependency>

      <dependency>
         <groupId>commons-logging</groupId>
         <artifactId>commons-logging</artifactId>
         <scope>provided</scope>
      </dependency>

      <!-- We need to force the version defined in parent pom for this indirect dependency -->
      <dependency>
         <groupId>commons-collections</groupId>
         <artifactId>commons-collections</artifactId>
         <scope>runtime</scope>
      </dependency>

      <dependency>
         <groupId>org.jboss.logging</groupId>
         <artifactId>jboss-logging</artifactId>
         <scope>provided</scope>
      </dependency>
      
      <!-- Dependencies for plugin descriptor generation -->
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
         <scope>provided</scope>
      </dependency>
      
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-core</artifactId>
         <scope>provided</scope>
      </dependency>
      
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-query</artifactId>
         <scope>provided</scope>
      </dependency>

      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>

   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <configuration>
               <archive>
                  <manifest>
                     <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                     <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                     <mainClass>org.infinispan.Version</mainClass>
                  </manifest>
               </archive>
            </configuration>
            <executions>
               <execution>
                  <id>build-test-jar</id>
                  <goals>
                     <goal>test-jar</goal>
                  </goals>
                  <configuration>
                     <archive>
                        <manifest>
                           <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                           <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                     </archive>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         
         <!-- <plugin>
             <artifactId>maven-dependency-plugin</artifactId>
             <executions>
                 <execution>
                     <id>copy-infinispan-rhq-plugin-jar</id>
                     <phase>process-resources</phase>
                     <goals>
                         <goal>copy</goal>
                     </goals>
                     <configuration>
                         <artifactItems>
                             TODO include other needed external jars that should go into your jar file
                             <artifactItem>
                                 <groupId>org.infinispan</groupId>
                                 <artifactId>infinispan-core</artifactId>
                                 <version>${project.version}</version>
                             </artifactItem>
                             <artifactItem>
                                <groupId>org.jboss.logging</groupId>
                                <artifactId>jboss-logging</artifactId>
                                <version>${version.jboss.logging}</version>
                             </artifactItem>
                         </artifactItems>
                         <outputDirectory>${project.build.outputDirectory}/lib</outputDirectory>
                     </configuration>
                 </execution>
             </executions>
         </plugin> -->

         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <configuration>
               <doclet>org.infinispan.tools.rhq.RhqPluginXmlGenerator</doclet>
               <!--<additionalJOption>-J-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=y</additionalJOption>-->
               <docletArtifact>
                  <groupId>org.infinispan</groupId>
                  <artifactId>infinispan-tools</artifactId>
                  <version>${project.version}</version>
               </docletArtifact>
               <useStandardDocletOptions>false</useStandardDocletOptions>
            </configuration>
            <executions>
               <execution>
                  <phase>process-classes</phase>
                  <goals>
                     <goal>javadoc</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>

      </plugins>
   </build>

   <profiles>
      <profile>
         <id>dev</id>

         <properties>
            <rhq.rootDir>../../..</rhq.rootDir>
            <rhq.containerDir>${rhq.rootDir}/${rhq.defaultDevContainerPath}</rhq.containerDir>
            <rhq.deploymentDir>
               ${rhq.containerDir}/jbossas/server/default/deploy/${rhq.earName}/rhq-downloads/rhq-plugins
            </rhq.deploymentDir>
         </properties>

         <build>
            <plugins>

               <plugin>
                  <artifactId>maven-antrun-plugin</artifactId>
                  <executions>

                     <execution>
                        <id>deploy</id>
                        <phase>compile</phase>
                        <configuration>
                           <tasks>
                              <mkdir dir="${rhq.deploymentDir}" />
                              <property location="${rhq.deploymentDir}/${project.build.finalName}.jar" name="deployment.file" />
                              <echo>*** Updating ${deployment.file}...</echo>
                              <jar basedir="${project.build.outputDirectory}" destfile="${deployment.file}" />
                           </tasks>
                        </configuration>
                        <goals>
                           <goal>run</goal>
                        </goals>
                     </execution>

                     <execution>
                        <id>deploy-jar-meta-inf</id>
                        <phase>package</phase>
                        <configuration>
                           <tasks>
                              <property location="${rhq.deploymentDir}/${project.build.finalName}.jar" name="deployment.file" />
                              <echo>*** Updating META-INF dir in ${deployment.file}...</echo>
                              <unjar dest="${project.build.outputDirectory}" src="${project.build.directory}/${project.build.finalName}.jar">
                                 <patternset>
                                    <include name="META-INF/**" />
                                 </patternset>
                              </unjar>
                              <jar destfile="${deployment.file}" manifest="${project.build.outputDirectory}/META-INF/MANIFEST.MF" update="true">
                              </jar>
                           </tasks>
                        </configuration>
                        <goals>
                           <goal>run</goal>
                        </goals>
                     </execution>

                     <execution>
                        <id>undeploy</id>
                        <phase>clean</phase>
                        <configuration>
                           <tasks>
                              <property location="${rhq.deploymentDir}/${project.build.finalName}.jar" name="deployment.file" />
                              <echo>*** Deleting ${deployment.file}...</echo>
                              <delete file="${deployment.file}" />
                           </tasks>
                        </configuration>
                        <goals>
                           <goal>run</goal>
                        </goals>
                     </execution>

                  </executions>
               </plugin>

            </plugins>
         </build>

      </profile>
   </profiles>
</project>
<?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-server-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-server-core</artifactId>
   <packaging>bundle</packaging>
   <name>Infinispan Server - Core Components</name>
   <description>Infinispan Server - Core Components</description>

   <!-- This module declares components that either has lifecycle (@Start or @Stop) or uses @Inject to retrieve dependencies -->
   <properties>
      <module.skipComponentMetaDataProcessing>false</module.skipComponentMetaDataProcessing>
   </properties>

   <dependencies>
      <dependency>
         <groupId>io.netty</groupId>
         <artifactId>netty-all</artifactId>
      </dependency>

      <dependency>
         <groupId>gnu-getopt</groupId>
         <artifactId>getopt</artifactId>
      </dependency>

   </dependencies>

   <build>
      <finalName>infinispan</finalName>
      <sourceDirectory>src/main/scala</sourceDirectory>
      <testSourceDirectory>src/test/scala</testSourceDirectory>

      <plugins>
         <plugin>
            <groupId>org.scala-tools</groupId>
            <artifactId>maven-scala-plugin</artifactId>
         </plugin>
         <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <configuration>
               <instructions>
                  <Export-Package>
                     ${project.groupId}.server.core.*;version=${project.version};-split-package:=error
                  </Export-Package>
               </instructions>
            </configuration>
         </plugin>
      </plugins>
   </build>
</project>
<?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-server-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-server-hotrod</artifactId>
   <packaging>bundle</packaging>
   <name>Infinispan Hot Rod Server</name>
   <description>Infinispan Hot Rod Server</description>

   <dependencies>
       <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-core</artifactId>
      </dependency>
      <dependency>
         <groupId>io.netty</groupId>
         <artifactId>netty-all</artifactId>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-core</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-remote-query-server</artifactId>
         <optional>true</optional>
      </dependency>
   </dependencies>

   <build>
      <finalName>infinispan</finalName>
      <sourceDirectory>src/main/scala</sourceDirectory>
      <testSourceDirectory>src/test/scala</testSourceDirectory>

      <plugins>
         <plugin>
            <groupId>org.scala-tools</groupId>
            <artifactId>maven-scala-plugin</artifactId>
         </plugin>
         <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <configuration>
               <instructions>
                  <Export-Package>
                     ${project.groupId}.server.hotrod.*;version=${project.version};-split-package:=error
                  </Export-Package>
               </instructions>
            </configuration>
         </plugin>
      </plugins>
   </build>
</project><?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.infinispan.server</groupId>
      <artifactId>infinispan-server-versions</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../versions/pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-server-build</artifactId>

   <name>Infinispan Server - Build</name>
   <description>Infinispan Server - Build</description>

   <packaging>pom</packaging>

   <properties>
      
      <generated.configs>${basedir}/target/generated-configs</generated.configs>
      <generated.configs.standalone>${generated.configs}/standalone/configuration</generated.configs.standalone>
      <generated.configs.domain>${generated.configs}/domain/configuration</generated.configs.domain>
      <generated.configs.examples>${generated.configs}/docs/examples/configs</generated.configs.examples>
      <generated.configs.src.dir>${basedir}/src/main/resources-ispn</generated.configs.src.dir>
   </properties>

   <dependencies>
      <dependency>
         <groupId>org.antlr</groupId>
         <artifactId>antlr-runtime</artifactId>
      </dependency>
      
      <dependency>
         <groupId>org.fusesource.jansi</groupId>
         <artifactId>jansi</artifactId>
      </dependency>
      
      <dependency>
         <groupId>org.jboss.as</groupId>
         <artifactId>jboss-as-build</artifactId>
         <type>pom</type>
      </dependency>

      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-infinispan</artifactId>
      </dependency>

      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-jgroups</artifactId>
      </dependency>

      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-security</artifactId>
      </dependency>

      <dependency>
         <groupId>org.jboss.aesh</groupId>
         <artifactId>aesh</artifactId>
      </dependency>

      <dependency>
         <groupId>org.jgroups</groupId>
         <artifactId>jgroups</artifactId>
      </dependency>

      

      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-endpoints</artifactId>
      </dependency>

      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-core</artifactId>
      </dependency>

      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-lucene-directory</artifactId>
      </dependency>

      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-lucene-v3</artifactId>
      </dependency>

      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-remote-query-client</artifactId>
      </dependency>

      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-remote-query-server</artifactId>
      </dependency>

      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-server-core</artifactId>
      </dependency>

      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-server-hotrod</artifactId>
      </dependency>

      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-server-memcached</artifactId>
      </dependency>

      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-server-rest</artifactId>
         <classifier>classes</classifier>
      </dependency>

      <dependency>
         <groupId>org.jboss.resteasy</groupId>
         <artifactId>resteasy-jaxrs</artifactId>
      </dependency>

      <dependency>
         <groupId>org.jboss.resteasy</groupId>
         <artifactId>jaxrs-api</artifactId>
      </dependency>

      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-server-websocket</artifactId>
      </dependency>

      <dependency>
         <groupId>com.thoughtworks.xstream</groupId>
         <artifactId>xstream</artifactId>
      </dependency>

      <dependency>
         <groupId>org.scala-lang</groupId>
         <artifactId>scala-library</artifactId>
      </dependency>

      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-cachestore-jdbc</artifactId>
      </dependency>

      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-cachestore-remote</artifactId>
      </dependency>
      
      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-cachestore-rest</artifactId>
      </dependency>
      
      <dependency>
         <groupId>org.infinispan.protostream</groupId>
         <artifactId>protostream</artifactId>
      </dependency>

      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-client-hotrod</artifactId>
      </dependency>
      
      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-cli-client</artifactId>
      </dependency>
      
      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-cli-server</artifactId>
      </dependency>
 
      <dependency>
         <groupId>org.xerial.snappy</groupId>
         <artifactId>snappy-java</artifactId>
      </dependency>

      <dependency>
         <groupId>xpp3</groupId>
         <artifactId>xpp3</artifactId>
      </dependency>
      
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
               <execution>
                  <id>generate-configs</id>
                  <goals>
                     <goal>run</goal>
                  </goals>
                  <phase>generate-resources</phase>
                  <configuration>
                     <target>
                        <ant antfile="build-configs.xml" inheritRefs="true">
                           <target name="all" />
                        </ant>
                     </target>
                  </configuration>
               </execution>
               <execution>
                  <id>build-dist-dir</id>
                  <goals>
                     <goal>run</goal>
                  </goals>
                  <phase>package</phase>
                  <configuration>
                     <target>
                        <ant antfile="build.xml" inheritRefs="true">
                           <target name="all" />
                        </ant>
                     </target>
                  </configuration>
               </execution>
            </executions>
            <dependencies>
               <dependency>
                  <groupId>org.jboss</groupId>
                  <artifactId>jandex</artifactId>
                  <version>${version.org.jboss.jandex}</version>
               </dependency>
            </dependencies>
         </plugin>
      </plugins>
   </build>
</project><?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>

    <parent>
       <groupId>org.infinispan.server</groupId>
       <artifactId>infinispan-server-versions</artifactId>
       <version>7.0.0-SNAPSHOT</version>
       <relativePath>../versions/pom.xml</relativePath>
    </parent>

    <artifactId>infinispan-server-infinispan</artifactId>
    <packaging>jar</packaging>

    <name>Infinispan Server - Infinispan Subsystem</name>

    <dependencies>
        <dependency>
            <groupId>org.jboss.as</groupId>
            <artifactId>jboss-as-clustering-api</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-server-jgroups</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.as</groupId>
            <artifactId>jboss-as-ee</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.as</groupId>
            <artifactId>jboss-as-jmx</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.as</groupId>
            <artifactId>jboss-as-threads</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.as</groupId>
            <artifactId>jboss-as-transactions</artifactId>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-query</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-cachestore-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-cachestore-remote</artifactId>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-cachestore-leveldb</artifactId>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-cachestore-rest</artifactId>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-client-hotrod</artifactId>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-remote-query-server</artifactId>
        </dependency>
        <dependency>
            <groupId>net.jcip</groupId>
            <artifactId>jcip-annotations</artifactId>
        </dependency>
        
        <dependency>
            <groupId>org.jboss.byteman</groupId>
            <artifactId>byteman-bmunit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.as</groupId>
            <artifactId>jboss-as-clustering-common</artifactId>
            <scope>test</scope>
            <classifier>tests</classifier>
        </dependency>
        <dependency>
            <groupId>org.jboss.as</groupId>
            <artifactId>jboss-as-subsystem-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.marshalling</groupId>
            <artifactId>jboss-marshalling-river</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.logging</groupId>
            <artifactId>jboss-logging</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.logging</groupId>
            <artifactId>jboss-logging-processor</artifactId>
            
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
                    <useManifestOnlyJar>false</useManifestOnlyJar>
                    <parallel>false</parallel>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <compilerArgument>
                        -AgeneratedTranslationFilesPath=${project.basedir}/target/generated-translation-files
                    </compilerArgument>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <description>Infinispan Server - Infinispan Subsystem</description>
</project><?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.infinispan.server</groupId>
      <artifactId>infinispan-server-versions</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../versions/pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-server-endpoints</artifactId>
   <name>Infinispan Server - Endpoints Subsystem</name>
   <description>Infinispan Server - Endpoints Subsystem</description>

   <build>
      <plugins>
         
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
               <execution>
                  <id>ban-bad-dependencies</id>
                  <goals>
                     <goal>enforce</goal>
                  </goals>
                  <configuration>
                     <rules>
                        <bannedDependencies>
                           <searchTransitive>true</searchTransitive>
                           <excludes>
                              <exclude>args4j:args4j</exclude>
                              <exclude>biz.aQute:bnd</exclude>
                              <exclude>com.fasterxml:classmate</exclude>
                              <exclude>com.google.gwt.inject:gin</exclude>
                              <exclude>com.google.inject:guice</exclude>
                              <exclude>com.gwtplatform:gwtp-all</exclude>
                              <exclude>concurrent:concurrent</exclude>
                              <exclude>javax.xml.soap:saaj-api</exclude>
                              <exclude>javax.xml.stream:stax-api</exclude>
                              <exclude>jboss:jboss-logging-spi</exclude>
                              <exclude>jboss:jboss-serialization</exclude>
                              <exclude>jboss.web:el-api</exclude>
                              <exclude>jboss.web:jsp-api</exclude>
                              <exclude>jboss.web:servlet-api</exclude>
                              <exclude>net.sf.kxml:kxml2</exclude>
                              <exclude>org.apache.aries.jmx:org.apache.aries.jmx.api</exclude>
                              <exclude>org.apache.xalan:serializer</exclude>
                              <exclude>org.apache.xalan:xalan</exclude>
                              <exclude>org.hibernate:ejb3-persistence</exclude>
                              <exclude>org.hibernate.java-persistence:jpa-api</exclude>
                              <exclude>org.jboss.as:jboss-as-clustering-infinispan</exclude>
                              <exclude>org.jboss.as:jboss-as-clustering-jgroups</exclude>
                              <exclude>org.jboss.as:jboss-as-security</exclude>
                              <exclude>org.jboss.integration:jboss-jca-spi</exclude>
                              <exclude>org.jboss.interceptor:jboss-interceptor-api</exclude>
                              <exclude>org.jboss.javaee:jboss-javaee</exclude>
                              <exclude>org.jboss.javaee:jboss-ejb-api</exclude>
                              <exclude>org.jboss.javaee:jboss-ejb-api_3.1</exclude>
                              <exclude>org.jboss.javaee:jboss-jacc-api</exclude>
                              <exclude>org.jboss.javaee:jboss-jad-api</exclude>
                              <exclude>org.jboss.javaee:jboss-jaspi-api</exclude>
                              <exclude>org.jboss.javaee:jboss-jca-api</exclude>
                              <exclude>org.jboss.javaee:jboss-jms-api</exclude>
                              <exclude>org.jboss.javaee:servlet-api</exclude>
                              <exclude>org.jboss.javaee:jsp-api</exclude>
                              <exclude>org.jboss.logging:jboss-logging-spi</exclude>
                              <exclude>org.jboss.logging:jboss-logging-log4j</exclude>
                              <exclude>org.jboss.logging:jboss-logging-jdk</exclude>
                              <exclude>org.jboss.logging:jboss-logging-logmanager</exclude>
                              <exclude>org.jboss.slf4j:slf4j-jboss-logging</exclude>
                              <exclude>org.jboss.spec.javax.resource:jboss-connector-api_1.5_spec</exclude>
                              <exclude>org.opensaml:opensaml</exclude>
                              <exclude>org.ops4j.base</exclude>
                              <exclude>org.ops4j.pax.swissbox</exclude>
                              <exclude>org.ops4j.pax.web</exclude>
                              <exclude>org.rhq.helpers:rhq-pluginAnnotations</exclude>
                              <exclude>org.slf4j:slf4j-nop</exclude>
                              <exclude>org.slf4j:slf4j-jdk14</exclude>
                              <exclude>org.slf4j:slf4j-log4j12</exclude>
                              <exclude>org.slf4j:slf4j-log4j13</exclude>
                              <exclude>oro:oro</exclude>
                              <exclude>sun-jaxb:jaxb-api</exclude>
                              <exclude>trove:trove</exclude>
                              <exclude>xml-apis:xml-apis</exclude>
                              <exclude>xml-resolver:xml-resolver</exclude>
                           </excludes>
                        </bannedDependencies>
                     </rules>
                  </configuration>
               </execution>
            </executions>
         </plugin>
      </plugins>
   </build>

   <dependencies>

      <dependency>
         <groupId>org.jboss.msc</groupId>
         <artifactId>jboss-msc</artifactId>
      </dependency>

      <dependency>
         <groupId>org.jboss.as</groupId>
         <artifactId>jboss-as-server</artifactId>
      </dependency>
      
      <dependency>
         <groupId>org.infinispan.server</groupId>
         <artifactId>infinispan-server-infinispan</artifactId>
      </dependency>

      <dependency>
         <groupId>org.infinispan.server</groupId>
         <artifactId>infinispan-server-security</artifactId>
      </dependency>

      <dependency>
         <groupId>org.jboss.as</groupId>
         <artifactId>jboss-as-web</artifactId>
         <exclusions>
            <exclusion>
               <groupId>org.jboss.as</groupId>
               <artifactId>jboss-as-security</artifactId>
            </exclusion>
            <exclusion>
               <groupId>org.jboss.as</groupId>
               <artifactId>jboss-as-transactions</artifactId>
            </exclusion>
            <exclusion>
               <groupId>org.jboss.as</groupId>
               <artifactId>jboss-as-clustering-registry</artifactId>
            </exclusion>
            <exclusion>
               <groupId>org.jboss.as</groupId>
               <artifactId>jboss-as-clustering-web-spi</artifactId>
            </exclusion>
         </exclusions>
      </dependency>

      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-server-hotrod</artifactId>
      </dependency>

      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-server-memcached</artifactId>
      </dependency>

      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-server-rest</artifactId>
         <classifier>classes</classifier>
      </dependency>
      
      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-server-websocket</artifactId>
      </dependency>

      <dependency>
         <groupId>junit</groupId>
         <artifactId>junit</artifactId>
         <scope>test</scope>
      </dependency>
      
      <dependency>
         <groupId>org.jboss.as</groupId>
         <artifactId>jboss-as-subsystem-test</artifactId>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>org.jboss.as</groupId>
         <artifactId>jboss-as-clustering-common</artifactId>
         <scope>test</scope>
         <classifier>tests</classifier>
      </dependency>

   </dependencies>
</project><?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>

    <parent>
       <groupId>org.infinispan.server</groupId>
       <artifactId>infinispan-server-versions</artifactId>
       <version>7.0.0-SNAPSHOT</version>
       <relativePath>../versions/pom.xml</relativePath>
    </parent>


    <artifactId>infinispan-server-jgroups</artifactId>
    <packaging>jar</packaging>

    <name>Infinispan Server - JGroups Subsystem</name>

    <dependencies>
        <dependency>
            <groupId>org.jboss.as</groupId>
            <artifactId>jboss-as-clustering-common</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.as</groupId>
            <artifactId>jboss-as-jmx</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.as</groupId>
            <artifactId>jboss-as-network</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.as</groupId>
            <artifactId>jboss-as-server</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.as</groupId>
            <artifactId>jboss-as-threads</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jgroups</groupId>
            <artifactId>jgroups</artifactId>
        </dependency>
        
        <dependency>
            <groupId>org.jboss.byteman</groupId>
            <artifactId>byteman-bmunit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.as</groupId>
            <artifactId>jboss-as-clustering-common</artifactId>
            <scope>test</scope>
            <classifier>tests</classifier>
        </dependency>
        <dependency>
            <groupId>org.jboss.as</groupId>
            <artifactId>jboss-as-subsystem-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.logging</groupId>
            <artifactId>jboss-logging-processor</artifactId>
            
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
                    <useManifestOnlyJar>false</useManifestOnlyJar>
                    <parallel>false</parallel>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <compilerArgument>
                        -AgeneratedTranslationFilesPath=${project.basedir}/target/generated-translation-files
                    </compilerArgument>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <description>Infinispan Server - JGroups Subsystem</description>
</project><?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.infinispan.server</groupId>
      <artifactId>infinispan-server-versions</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../../versions/pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-server-rhq-plugin</artifactId>
   <name>Infinispan Server - RHQ/JON plugin</name>
   <description>Infinispan Server - RHQ/JON plugin</description>

   <dependencies>
      <dependency>
         <groupId>commons-logging</groupId>
         <artifactId>commons-logging</artifactId>
         <scope>provided</scope>
      </dependency>
      <dependency>
         <groupId>org.rhq</groupId>
         <artifactId>rhq-core-domain</artifactId>
         <scope>provided</scope>
         <exclusions>
            <exclusion>
               <groupId>hibernate</groupId>
               <artifactId>hibernate3</artifactId>
            </exclusion>
            <exclusion>
               <groupId>com.sun.xml.bind</groupId>
               <artifactId>jaxb-impl</artifactId>
            </exclusion>
            <exclusion>
               <groupId>javax.xml.bind</groupId>
               <artifactId>jaxb-api</artifactId>
            </exclusion>
            <exclusion>
               <groupId>net.sourceforge.cobertura</groupId>
               <artifactId>cobertura</artifactId>
            </exclusion>
            <exclusion>
               <groupId>org.jboss.arquillian</groupId>
               <artifactId>arquillian-bom</artifactId>
            </exclusion>
         </exclusions>
      </dependency>
      <dependency>
         <groupId>org.rhq</groupId>
         <artifactId>rhq-core-plugin-api</artifactId>
         <exclusions>
            <exclusion>
               <groupId>com.sun.xml.bind</groupId>
               <artifactId>jaxb-impl</artifactId>
            </exclusion>
            <exclusion>
               <groupId>javax.xml.bind</groupId>
               <artifactId>jaxb-api</artifactId>
            </exclusion>
            <exclusion>
               <groupId>net.sourceforge.cobertura</groupId>
               <artifactId>cobertura</artifactId>
            </exclusion>
            <exclusion>
               <groupId>org.jboss.arquillian</groupId>
               <artifactId>arquillian-bom</artifactId>
            </exclusion>
         </exclusions>
         <scope>provided</scope>
      </dependency>
      <dependency>
         <groupId>org.rhq</groupId>
         <artifactId>rhq-jboss-as-7-plugin</artifactId>
         <exclusions>
            <exclusion>
               <groupId>com.sun.xml.bind</groupId>
               <artifactId>jaxb-impl</artifactId>
            </exclusion>
            <exclusion>
               <groupId>javax.xml.bind</groupId>
               <artifactId>jaxb-api</artifactId>
            </exclusion>
            <exclusion>
               <groupId>net.sourceforge.cobertura</groupId>
               <artifactId>cobertura</artifactId>
            </exclusion>
            <exclusion>
               <groupId>org.jboss.arquillian</groupId>
               <artifactId>arquillian-bom</artifactId>
            </exclusion>
         </exclusions>
         <scope>provided</scope>
      </dependency>
      <dependency>
         <groupId>org.rhq</groupId>
         <artifactId>rhq-core-native-system</artifactId>
         <exclusions>
            <exclusion>
               <groupId>org.hyperic</groupId>
               <artifactId>sigar</artifactId>
            </exclusion>
            <exclusion>
               <groupId>org.hyperic</groupId>
               <artifactId>sigar-dist</artifactId>
            </exclusion>
            <exclusion>
               <groupId>net.sourceforge.cobertura</groupId>
               <artifactId>cobertura</artifactId>
            </exclusion>
            <exclusion>
               <groupId>org.jboss.arquillian</groupId>
               <artifactId>arquillian-bom</artifactId>
            </exclusion>
         </exclusions>
         <scope>provided</scope>
      </dependency>
      
      <dependency>
         <groupId>org.hibernate.javax.persistence</groupId>
         <artifactId>hibernate-jpa-2.0-api</artifactId>
         <scope>provided</scope>
      </dependency>
      
      <dependency>
         <groupId>org.hibernate</groupId>
         <artifactId>hibernate-core</artifactId>
         <scope>provided</scope>
      </dependency>
   </dependencies>
   
   <profiles>
      <profile>
         <id>distribution</id>
         <activation>
            <activeByDefault>false</activeByDefault>
         </activation>
         <properties>
            <maven.test.skip.exec>true</maven.test.skip.exec>
         </properties>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-assembly-plugin</artifactId>
                  <executions>
                     <execution>
                        <id>assemble</id>
                        <phase>package</phase>
                        <goals>
                           <goal>single</goal>
                        </goals>
                     </execution>
                  </executions>
                  <configuration>
                     <descriptors>
                        <descriptor>${project.basedir}/src/main/assemblies/plugin.xml</descriptor>
                     </descriptors>
                     <finalName>${product.name}-server-rhq-plugin-${product.version}</finalName>
                     <outputDirectory>${project.build.directory}</outputDirectory>
                     <workDirectory>${project.build.directory}/assembly/work</workDirectory>
                     <appendAssemblyId>false</appendAssemblyId>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>
   </profiles>
</project>
<?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.infinispan.server</groupId>
      <artifactId>infinispan-server-versions</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>versions/pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-server</artifactId>

   <name>Infinispan Server</name>
   <description>Infinispan Server</description>

   <packaging>pom</packaging>

   <modules>
      <module>versions</module>
      <module>jgroups</module>
      <module>infinispan</module>
      <module>integration</module>
      <module>build</module>
      <module>management/server-rhq-plugin</module>
   </modules>

   <profiles>
      <profile>
         <id>normal</id>
         <activation>
            <property>
               <name>!no.tests</name>
            </property>
         </activation>
         <modules>
            <module>versions</module>
            <module>jgroups</module>
            <module>infinispan</module>
            <module>security</module>
            <module>integration</module>
            <module>build</module>
            <module>management/server-rhq-plugin</module>
            <module>testsuite</module>
         </modules>
      </profile>
      <profile>
         <id>distribution</id>
         <activation>
            <activeByDefault>false</activeByDefault>
         </activation>
         <properties>
            <maven.test.skip.exec>true</maven.test.skip.exec>
         </properties>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-assembly-plugin</artifactId>
                  <executions>
                     <execution>
                        <id>assemble</id>
                        <phase>package</phase>
                        <goals>
                           <goal>single</goal>
                        </goals>
                     </execution>
                  </executions>
                  <configuration>
                     <descriptors>
                        <descriptor>${project.basedir}/src/main/assemblies/bin.xml</descriptor>
                        <descriptor>${project.basedir}/src/main/assemblies/source.xml</descriptor>
                     </descriptors>
                     <finalName>${product.name}-${product.version}</finalName>
                     <outputDirectory>${project.build.directory}/distribution</outputDirectory>
                     <workDirectory>${project.build.directory}/assembly/work</workDirectory>
                     <attach>false</attach>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>
   </profiles>
</project><?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>

    <parent>
       <groupId>org.infinispan.server</groupId>
       <artifactId>infinispan-server-versions</artifactId>
       <version>7.0.0-SNAPSHOT</version>
       <relativePath>../versions/pom.xml</relativePath>
    </parent>

    <artifactId>infinispan-server-security</artifactId>
    <packaging>jar</packaging>

    <name>Infinispan Server - Security Subsystem</name>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <includes>
                        <include>**/*TestCase.java</include>
                    </includes>
                    <enableAssertions>false</enableAssertions>
                </configuration>
            </plugin>

            
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>org.jboss.as.security.vault.VaultTool</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <compilerArgument>
                        -AgeneratedTranslationFilesPath=${project.build.directory}/generated-translation-files
                    </compilerArgument>
                </configuration>
            </plugin>
            
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-enforcer-plugin</artifactId>
               <executions>
                  <execution>
                     <id>ban-bad-dependencies</id>
                     <goals>
                        <goal>enforce</goal>
                     </goals>
                     <configuration>
                        <rules>
                           <bannedDependencies>
                              <searchTransitive>true</searchTransitive>
                              <excludes>
                                 <exclude>args4j:args4j</exclude>
                                 <exclude>biz.aQute:bnd</exclude>
                                 <exclude>com.fasterxml:classmate</exclude>
                                 <exclude>com.google.gwt.inject:gin</exclude>
                                 <exclude>com.google.inject:guice</exclude>
                                 <exclude>com.gwtplatform:gwtp-all</exclude>
                                 <exclude>concurrent:concurrent</exclude>
                                 <exclude>javax.xml.soap:saaj-api</exclude>
                                 <exclude>javax.xml.stream:stax-api</exclude>
                                 <exclude>jboss:jboss-logging-spi</exclude>
                                 <exclude>jboss:jboss-serialization</exclude>
                                 <exclude>jboss.web:el-api</exclude>
                                 <exclude>jboss.web:jsp-api</exclude>
                                 <exclude>jboss.web:servlet-api</exclude>
                                 <exclude>net.sf.kxml:kxml2</exclude>
                                 <exclude>org.apache.aries.jmx:org.apache.aries.jmx.api</exclude>
                                 <exclude>org.apache.xalan:serializer</exclude>
                                 <exclude>org.apache.xalan:xalan</exclude>
                                 <exclude>org.hibernate:ejb3-persistence</exclude>
                                 <exclude>org.hibernate.java-persistence:jpa-api</exclude>
                                 <exclude>org.jboss.as:jboss-as-clustering-infinispan</exclude>
                                 <exclude>org.jboss.as:jboss-as-clustering-jgroups</exclude>
                                 <exclude>org.jboss.as:jboss-as-security</exclude>
                                 <exclude>org.jboss.integration:jboss-jca-spi</exclude>
                                 <exclude>org.jboss.interceptor:jboss-interceptor-api</exclude>
                                 <exclude>org.jboss.javaee:jboss-javaee</exclude>
                                 <exclude>org.jboss.javaee:jboss-ejb-api</exclude>
                                 <exclude>org.jboss.javaee:jboss-ejb-api_3.1</exclude>
                                 <exclude>org.jboss.javaee:jboss-jacc-api</exclude>
                                 <exclude>org.jboss.javaee:jboss-jad-api</exclude>
                                 <exclude>org.jboss.javaee:jboss-jaspi-api</exclude>
                                 <exclude>org.jboss.javaee:jboss-jca-api</exclude>
                                 <exclude>org.jboss.javaee:jboss-jms-api</exclude>
                                 <exclude>org.jboss.javaee:servlet-api</exclude>
                                 <exclude>org.jboss.javaee:jsp-api</exclude>
                                 <exclude>org.jboss.logging:jboss-logging-spi</exclude>
                                 <exclude>org.jboss.logging:jboss-logging-log4j</exclude>
                                 <exclude>org.jboss.logging:jboss-logging-jdk</exclude>
                                 <exclude>org.jboss.logging:jboss-logging-logmanager</exclude>
                                 <exclude>org.jboss.slf4j:slf4j-jboss-logging</exclude>
                                 <exclude>org.jboss.spec.javax.resource:jboss-connector-api_1.5_spec</exclude>
                                 <exclude>org.opensaml:opensaml</exclude>
                                 <exclude>org.ops4j.base</exclude>
                                 <exclude>org.ops4j.pax.swissbox</exclude>
                                 <exclude>org.ops4j.pax.web</exclude>
                                 <exclude>org.rhq.helpers:rhq-pluginAnnotations</exclude>
                                 <exclude>org.slf4j:slf4j-nop</exclude>
                                 <exclude>org.slf4j:slf4j-jdk14</exclude>
                                 <exclude>org.slf4j:slf4j-log4j12</exclude>
                                 <exclude>org.slf4j:slf4j-log4j13</exclude>
                                 <exclude>oro:oro</exclude>
                                 <exclude>sun-jaxb:jaxb-api</exclude>
                                 <exclude>trove:trove</exclude>
                                 <exclude>xml-apis:xml-apis</exclude>
                                 <exclude>xml-resolver:xml-resolver</exclude>
                              </excludes>
                           </bannedDependencies>
                        </rules>
                     </configuration>
                  </execution>
               </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.msc</groupId>
            <artifactId>jboss-msc</artifactId>
        </dependency>

        <dependency>
	        <groupId>org.jboss.as</groupId>
	        <artifactId>jboss-as-domain-management</artifactId>
        </dependency>
        
        <dependency>
            <groupId>org.jboss.as</groupId>
            <artifactId>jboss-as-server</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jboss.as</groupId>
            <artifactId>jboss-as-naming</artifactId>
        </dependency>

        <dependency>
            <groupId>org.infinispan.server</groupId>
            <artifactId>infinispan-server-infinispan</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jboss.as</groupId>
            <artifactId>jboss-as-transactions</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jboss.logging</groupId>
            <artifactId>jboss-logging</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jboss.logging</groupId>
            <artifactId>jboss-logging-processor</artifactId>
            
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.jboss.security</groupId>
            <artifactId>jboss-negotiation-extras</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jboss.security</groupId>
            <artifactId>jboss-negotiation-spnego</artifactId>
        </dependency>

        <dependency>
        	<groupId>org.picketbox</groupId>
        	<artifactId>picketbox</artifactId>
        </dependency>

        <dependency>
        	<groupId>org.jboss.spec.javax.security.jacc</groupId>
        	<artifactId>jboss-jacc-api_1.4_spec</artifactId>
        </dependency>

        <dependency>
          <groupId>org.picketbox</groupId>
          <artifactId>picketbox-infinispan</artifactId>
        </dependency>

        <dependency>
          <groupId>org.picketbox</groupId>
          <artifactId>picketbox-commons</artifactId>
        </dependency>
        <dependency>
          <groupId>commons-cli</groupId>
          <artifactId>commons-cli</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jboss.as</groupId>
            <artifactId>jboss-as-subsystem-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project><?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.infinispan.server</groupId>
        <artifactId>infinispan-server-versions</artifactId>
        <version>7.0.0-SNAPSHOT</version>
        <relativePath>../versions/pom.xml</relativePath>
    </parent>

    <artifactId>test-suite</artifactId>
    <packaging>jar</packaging>
    <name>Infinispan Server - Test Suite</name>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.as</groupId>
            <artifactId>jboss-as-arquillian-container-managed</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.jboss.logmanager</groupId>
                    <artifactId>jboss-logmanager</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.jboss.logmanager</groupId>
                    <artifactId>log4j-jboss-logmanager</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.infinispan.arquillian.container</groupId>
            <artifactId>infinispan-arquillian-impl</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.jboss.logmanager</groupId>
                    <artifactId>jboss-logmanager</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-client-hotrod</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.jboss.logmanager</groupId>
                    <artifactId>jboss-logmanager</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-core</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.jboss.logmanager</groupId>
                    <artifactId>jboss-logmanager</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-commons</artifactId>
        </dependency>
        <dependency>
            <groupId>net.jcip</groupId>
            <artifactId>jcip-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.infinispan.protostream</groupId>
            <artifactId>sample-domain-implementation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-query-dsl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-remote-query-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.iq80.leveldb</groupId>
            <artifactId>leveldb</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-pool</groupId>
            <artifactId>commons-pool</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.as</groupId>
            <artifactId>jboss-as-controller</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.as</groupId>
            <artifactId>jboss-as-controller-client</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.infinispan.server</groupId>
            <artifactId>infinispan-server-infinispan</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ant-contrib</groupId>
            <artifactId>ant-contrib</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>ant</groupId>
                    <artifactId>ant</artifactId>
                </exclusion>
            </exclusions>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
        </dependency>
        <dependency>
            <groupId>org.picketbox</groupId>
            <artifactId>jbosssx-bare</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>javax.transaction</groupId>
                    <artifactId>jta</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- TODO: Make it possible to use a different version of Karaf -->
        <dependency>
            <groupId>org.apache.karaf</groupId>
            <artifactId>apache-karaf</artifactId>
            <type>zip</type>
        </dependency>
        <dependency>
            <groupId>org.ops4j.pax.exam</groupId>
            <artifactId>pax-exam-container-karaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.ops4j.pax.exam</groupId>
            <artifactId>pax-exam-junit4</artifactId>
        </dependency>
        <dependency>
            <groupId>org.ops4j.pax.exam</groupId>
            <artifactId>pax-exam</artifactId>
        </dependency>
        <dependency>
            <groupId>org.ops4j.pax.exam</groupId>
            <artifactId>pax-exam-inject</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
        </dependency>

        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>
    </dependencies>

    <properties>
        <h2.server.ip>127.0.0.1</h2.server.ip>
        <h2.server.address>tcp://${h2.server.ip}:9092</h2.server.address>
        <database>h2</database>
        <driver.dir>${project.build.directory}/test-libs</driver.dir>
        <driver.jar>h2.jar</driver.jar>
        <driver.class>org.h2.jdbcx.JdbcDataSource</driver.class>

        <connection.url>jdbc:h2:${h2.server.address}/mem:test;DB_CLOSE_DELAY=-1</connection.url>
        <connection.url.other>jdbc:h2:${h2.server.address}/mem:test_other;DB_CLOSE_DELAY=-1</connection.url.other>

        <password>sa</password>
        <username>sa</username>

        <password.other>sa</password.other>
        <username.other>sa</username.other>

        <ispnserver.project.dir>${basedir}/..</ispnserver.project.dir>
        <server.build.dist>${ispnserver.project.dir}/build/target/infinispan-server-${project.version}</server.build.dist>

        <server1.dist>${basedir}/target/server/node1</server1.dist>
        <server2.dist>${basedir}/target/server/node2</server2.dist>
        <server3.dist>${basedir}/target/server/node3</server3.dist>
        <server.old.dist>${basedir}/target/server/node_old</server.old.dist>

        <server.jvm>${env.JAVA_HOME}</server.jvm>
        <resources.dir>${basedir}/src/test/resources</resources.dir>

        <jvm.memory.args>-Xmx512m -XX:MaxPermSize=128m</jvm.memory.args>
        <jvm.x64.args></jvm.x64.args>
        <default.transport.stack>udp</default.transport.stack>
        <transport.stack>-Djboss.default.jgroups.stack=${default.transport.stack}</transport.stack>

        <jvm.ip.stack>-Djava.net.preferIPv4Stack=true</jvm.ip.stack>
        <node0.ip>127.0.0.1</node0.ip>
        <node1.ip>127.0.0.1</node1.ip>
        <node2.ip>127.0.0.1</node2.ip>
        <mcast.ip>234.99.54.14</mcast.ip> <!-- Default multicast address. -->
        <jvm.ip.stack>-Djava.net.preferIPv4Stack=true -Djava.net.preferIPv6Addresses=false -Djboss.default.multicast.address=${mcast.ip}</jvm.ip.stack>
        <server.jvm.args>${jvm.ip.stack} ${jvm.memory.args} ${transport.stack} ${jvm.x64.args}</server.jvm.args>
        <log4j.configuration>log4j.xml</log4j.configuration>
        <suite.manual.phase>test</suite.manual.phase>
        <suite.rollups.manual.phase>none</suite.rollups.manual.phase>
        <suite.client.local.phase>test</suite.client.local.phase>
        <suite.client.dist.phase>test</suite.client.dist.phase>
        <suite.client.repl.phase>test</suite.client.repl.phase>

        <suite.manual.include>**/*.java</suite.manual.include>
        <suite.manual.exclude.groups>
            org.infinispan.server.test.category.ClientLocal,org.infinispan.server.test.category.ClientClustered,org.infinispan.server.test.category.RollingUpgrades,org.infinispan.server.test.category.UnstableTest,org.infinispan.server.test.category.Osgi
        </suite.manual.exclude.groups>
        <suite.client.local.config>testsuite/standalone-default-local.xml</suite.client.local.config>
        <suite.client.dist.config>testsuite/clustered-default-dist.xml</suite.client.dist.config>
        <suite.client.repl.config>testsuite/clustered-default-repl.xml</suite.client.repl.config>
        <groups.client.local>org.infinispan.server.test.category.ClientLocal</groups.client.local>
        <groups.client.clustered>org.infinispan.server.test.category.ClientClustered</groups.client.clustered>
        <groups.unstable>org.infinispan.server.test.category.UnstableTest,org.infinispan.server.test.category.UnstableClientLocalTest,org.infinispan.server.test.category.UnstableClientClusteredTest</groups.unstable>
    </properties>

    <build>
        <testResources>
            <testResource>
                <directory>${project.basedir}/src/test/resources</directory>
                <filtering>true</filtering>
                <excludes>
                    <exclude>*.jks</exclude>
                    <exclude>*.keystore</exclude>
                </excludes>
            </testResource>
            <testResource>
                <directory>${project.basedir}/src/test/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>*.jks</include>
                    <include>*.keystore</include>
                </includes>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- IMPORTANT: generates META-INF/maven/dependencies.properties required by PAX-EXAM framework -->
            <plugin>
                <groupId>org.apache.servicemix.tooling</groupId>
                <artifactId>depends-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-depends-file</id>
                        <goals>
                            <goal>generate-depends-file</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-test-libs</id>
                        <phase>process-test-resources</phase>
                        <configuration>
                            <outputDirectory>${project.build.directory}/test-libs</outputDirectory>
                            <stripVersion>true</stripVersion>

                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.h2database</groupId>
                                    <artifactId>h2</artifactId>
                                    <type>jar</type>
                                    <overWrite>true</overWrite>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-distros-and-configs</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <target>
                                <ant antfile="build-testsuite.xml" inheritRefs="true" target="create-all-distros">
                                    <!--redefine uses properties to be propagated to ant build file, should be plugin bug-->
                                    <property name="test_classpath" refid="maven.test.classpath"/>

                                    <property name="database" value="${database}"/>
                                    <property name="driver.dir" value="${driver.dir}"/>
                                    <property name="driver.jar" value="${driver.jar}"/>
                                    <property name="driver.class" value="${driver.class}"/>

                                    <property name="connection.url" value="${connection.url}"/>
                                    <property name="connection.url.other" value="${connection.url.other}"/>

                                    <property name="password" value="${password}"/>
                                    <property name="username" value="${username}"/>

                                    <property name="password.other" value="${password.other}"/>
                                    <property name="username.other" value="${username.other}"/>
                                </ant>
                                <!-- It happens when you do not specify namespaces in the XSLT templates for the newly added nodes
                                     then the IBM jdk transformation is adding empty namespace there - not possible to influence this
                                     behaviour by any environmental property - this is a bit workaround for it -->
                                <echo message="Removing empty xmlns attributes (xmlns='') which IBM JDK could produce" />
                                <replace dir="target" value="">
                                    <include name="server/node*/standalone/configuration/**/*.xml"/>
                                    <replacetoken><![CDATA[xmlns=""]]></replacetoken>
                                </replace>
                            </target>
                        </configuration>
                    </execution>
                    <!-- we need to start a special H2 TCP server because we need to be able to connect to it with a
                    specific jdbc connection and verify what is in the DB, this is not possible with default
                    H2 setting -->
                    <execution>
                        <id>check-h2-db-property</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <condition property="run.h2.server">
                                    <equals arg1="${database}" arg2="h2"/>
                                </condition>
                            </target>
                            <exportAntProperties>true</exportAntProperties>
                        </configuration>
                    </execution>

                    <execution>
                        <id>start-h2-tcp-server</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target if="run.h2.server">
                                <java classname="org.h2.tools.Server" fork="true" spawn="true">
                                    <arg value="-tcp"/>
                                    <arg value="-tcpPort"/>
                                    <arg value="9092"/>
                                    <arg value="-tcpAllowOthers"/>
                                    <classpath>
                                        <pathelement location="${driver.dir}/${driver.jar}"/>
                                    </classpath>
                                    <jvmarg value="-Dh2.bindAddress=${h2.server.ip}"/>
                                </java>
                            </target>
                        </configuration>
                    </execution>
                    <!-- stop previously started H2 server -->
                    <execution>
                        <id>stop-h2-tcp-server</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target if="run.h2.server">
                                <java classname="org.h2.tools.Server">
                                    <arg value="-tcpShutdown"/>
                                    <arg value="${h2.server.address}"/>
                                    <arg value="-tcpShutdownForce"/>
                                    <classpath>
                                        <pathelement location="${driver.dir}/${driver.jar}"/>
                                    </classpath>
                                </java>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <forkMode>once</forkMode>
                    <excludedGroups>${groups.unstable}</excludedGroups>
                    <systemPropertyVariables>
                        <server1.dist>${server1.dist}</server1.dist>
                        <server2.dist>${server2.dist}</server2.dist>
                        <server3.dist>${server3.dist}</server3.dist>
                        <server.old.dist>${server.old.dist}</server.old.dist>
                        <server.jvm>${server.jvm}</server.jvm>
                        <server.jvm.args>${server.jvm.args}</server.jvm.args>
                        <log4j.configuration>${log4j.configuration}</log4j.configuration>
                        <java.util.logging.config.file>${resources.dir}/jul.properties</java.util.logging.config.file>
                        <suite.client.local.config>${suite.client.local.config}</suite.client.local.config>
                        <suite.client.dist.config>${suite.client.dist.config}</suite.client.dist.config>
                        <suite.client.repl.config>${suite.client.repl.config}</suite.client.repl.config>
                        <resources.dir>${project.build.directory}/test-classes</resources.dir>
                        <version.karaf>${version.karaf}</version.karaf>

                        <!--redefine jdbc properties-->
                        <database>${database}</database>
                        <driver.dir>${driver.dir}</driver.dir>
                        <driver.jar>${driver.jar}</driver.jar>
                        <driver.class>${driver.class}</driver.class>

                        <connection.url>${connection.url}</connection.url>
                        <connection.url.other>${connection.url.other}</connection.url.other>

                        <username>${username}</username>
                        <password>${password}</password>

                        <username.other>${username.other}</username.other>
                        <password.other>${password.other}</password.other>

                        <!--add for testing rebalancing-->
                        <node0.ip>${node0.ip}</node0.ip>
                        <node1.ip>${node1.ip}</node1.ip>
                        <node2.ip>${node2.ip}</node2.ip>
                    </systemPropertyVariables>
                    <!--add jdbc driver to classpath-->
                    <additionalClasspathElements>
                        <element>${driver.dir}/${driver.jar}</element>
                    </additionalClasspathElements>
                    <properties>
                        <property>
                            <name>listener</name>
                            <value>org.infinispan.server.test.util.TestsuiteListener</value>
                        </property>
                    </properties>
                </configuration>
                <executions>
                    <execution>
                        <id>default-test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <phase>none</phase>
                    </execution>
                    <execution>
                        <id>suite-manual</id>
                        <phase>${suite.manual.phase}</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>${suite.manual.include}</include>
                            </includes>
                            <excludedGroups>${suite.manual.exclude.groups}</excludedGroups>
                            <groups>${suite.manual.include.groups}</groups>
                            <systemPropertyVariables>
                                <arquillian.launch>suite-manual</arquillian.launch>
                            </systemPropertyVariables>
                        </configuration>
                    </execution>
                    <execution>
                        <id>suite-rollups-manual</id>
                        <phase>${suite.rollups.manual.phase}</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <groups>org.infinispan.server.test.category.RollingUpgrades</groups>
                            <excludedGroups>${groups.unstable}</excludedGroups>
                            <systemPropertyVariables>
                                <arquillian.launch>suite-rollups-manual</arquillian.launch>
                            </systemPropertyVariables>
                        </configuration>
                    </execution>
                    <execution>
                        <id>suite-client-local</id>
                        <phase>${suite.client.local.phase}</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <reportNameSuffix>localmode-${default.transport.stack}</reportNameSuffix>
                            <groups>${groups.client.local}</groups>
                            <excludedGroups>${groups.unstable}</excludedGroups>
                            <systemPropertyVariables>
                                <clustering.mode>local</clustering.mode>
                                <arquillian.launch>suite-client-local</arquillian.launch>
                            </systemPropertyVariables>
                        </configuration>
                    </execution>
                    <execution>
                        <id>suite-client-dist</id>
                        <phase>${suite.client.dist.phase}</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <reportNameSuffix>distmode-${default.transport.stack}</reportNameSuffix>
                            <groups>${groups.client.clustered}</groups>
                            <excludedGroups>${groups.unstable}</excludedGroups>
                            <systemPropertyVariables>
                                <clustering.mode>dist</clustering.mode>
                                <arquillian.launch>suite-client-dist</arquillian.launch>
                            </systemPropertyVariables>
                        </configuration>
                    </execution>
                    <execution>
                        <id>suite-client-repl</id>
                        <phase>${suite.client.repl.phase}</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <reportNameSuffix>replmode-${default.transport.stack}</reportNameSuffix>
                            <groups>${groups.client.clustered}</groups>
                            <excludedGroups>${groups.unstable}</excludedGroups>
                            <systemPropertyVariables>
                                <clustering.mode>repl</clustering.mode>
                                <arquillian.launch>suite-client-repl</arquillian.launch>
                            </systemPropertyVariables>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>suite.client</id>
            <properties>
                <suite.manual.phase>none</suite.manual.phase>
                <suite.client.local.phase>test</suite.client.local.phase>
                <suite.client.dist.phase>test</suite.client.dist.phase>
                <suite.client.repl.phase>test</suite.client.repl.phase>
            </properties>
        </profile>
        <profile>
            <id>suite.client.local</id>
            <properties>
                <suite.manual.phase>none</suite.manual.phase>
                <suite.client.local.phase>test</suite.client.local.phase>
                <suite.client.dist.phase>none</suite.client.dist.phase>
                <suite.client.repl.phase>none</suite.client.repl.phase>
            </properties>
        </profile>
        <profile>
            <id>suite.client.dist</id>
            <properties>
                <suite.manual.phase>none</suite.manual.phase>
                <suite.client.local.phase>none</suite.client.local.phase>
                <suite.client.dist.phase>test</suite.client.dist.phase>
                <suite.client.repl.phase>none</suite.client.repl.phase>
            </properties>
        </profile>
        <profile>
            <id>suite.client.repl</id>
            <properties>
                <suite.manual.phase>none</suite.manual.phase>
                <suite.client.local.phase>none</suite.client.local.phase>
                <suite.client.dist.phase>none</suite.client.dist.phase>
                <suite.client.repl.phase>test</suite.client.repl.phase>
            </properties>
        </profile>
        <profile>
            <id>suite.examples</id>
            <properties>
                <suite.manual.phase>test</suite.manual.phase>
                <suite.client.local.phase>none</suite.client.local.phase>
                <suite.client.dist.phase>none</suite.client.dist.phase>
                <suite.client.repl.phase>none</suite.client.repl.phase>
                <suite.manual.include>org/infinispan/server/test/configs/ExampleConfigsTest.java</suite.manual.include>
            </properties>
        </profile>
        <profile>
            <id>suite.others</id>
            <properties>
                <suite.manual.phase>test</suite.manual.phase>
                <suite.client.local.phase>none</suite.client.local.phase>
                <suite.client.dist.phase>none</suite.client.dist.phase>
                <suite.client.repl.phase>none</suite.client.repl.phase>
            </properties>
        </profile>
        <profile>
            <id>suite.leveldb-client</id>
            <properties>
                <suite.client.local.phase>test</suite.client.local.phase>
                <suite.client.dist.phase>test</suite.client.dist.phase>
                <suite.client.repl.phase>test</suite.client.repl.phase>
                <suite.client.local.config>testsuite/standalone-leveldb-local.xml</suite.client.local.config>
                <suite.client.dist.config>testsuite/clustered-leveldb-dist.xml</suite.client.dist.config>
                <suite.client.repl.config>testsuite/clustered-leveldb-repl.xml</suite.client.repl.config>
            </properties>
        </profile>
        <profile>
            <id>suite.cachestore</id>
            <properties>
                <suite.manual.phase>test</suite.manual.phase>
                <suite.manual.include.groups>org.infinispan.server.test.category.CacheStore</suite.manual.include.groups>
                <suite.client.local.phase>none</suite.client.local.phase>
                <suite.client.dist.phase>none</suite.client.dist.phase>
                <suite.client.repl.phase>none</suite.client.repl.phase>
            </properties>
        </profile>
        <profile>
            <id>suite.rolling.upgrades</id>
            <properties>
                <suite.manual.phase>none</suite.manual.phase>
                <suite.rollups.manual.phase>test</suite.rollups.manual.phase>
                <suite.client.local.phase>none</suite.client.local.phase>
                <suite.client.dist.phase>none</suite.client.dist.phase>
                <suite.client.repl.phase>none</suite.client.repl.phase>
            </properties>
        </profile>
        <profile>
            <id>client.rest</id>
            <properties>
                <suite.manual.phase>none</suite.manual.phase>
                <suite.client.local.phase>test</suite.client.local.phase>
                <suite.client.dist.phase>test</suite.client.dist.phase>
                <suite.client.repl.phase>test</suite.client.repl.phase>
                <groups.client.local>org.infinispan.server.test.category.RESTLocal</groups.client.local>
                <groups.client.clustered>org.infinispan.server.test.category.RESTClustered</groups.client.clustered>
            </properties>
        </profile>
        <profile>
            <id>client.hotrod</id>
            <properties>
                <suite.manual.phase>none</suite.manual.phase>
                <suite.client.local.phase>test</suite.client.local.phase>
                <suite.client.dist.phase>test</suite.client.dist.phase>
                <suite.client.repl.phase>test</suite.client.repl.phase>
                <groups.client.local>org.infinispan.server.test.category.HotRodLocal</groups.client.local>
                <groups.client.clustered>org.infinispan.server.test.category.HotRodClustered</groups.client.clustered>
            </properties>
        </profile>
        <profile>
            <id>client.memcached</id>
            <properties>
                <suite.manual.phase>none</suite.manual.phase>
                <suite.client.local.phase>test</suite.client.local.phase>
                <suite.client.dist.phase>test</suite.client.dist.phase>
                <suite.client.repl.phase>test</suite.client.repl.phase>
                <groups.client.local>org.infinispan.server.test.category.MemcachedLocal</groups.client.local>
                <groups.client.clustered>org.infinispan.server.test.category.MemcachedClustered</groups.client.clustered>
            </properties>
        </profile>
        <profile>
            <id>client.hotrod.osgi</id>
            <properties>
                <suite.manual.phase>test</suite.manual.phase>
                <suite.client.local.phase>none</suite.client.local.phase>
                <suite.client.dist.phase>none</suite.client.dist.phase>
                <suite.client.repl.phase>none</suite.client.repl.phase>
                <suite.manual.exclude.groups></suite.manual.exclude.groups>
                <suite.manual.include.groups>org.infinispan.server.test.category.Osgi</suite.manual.include.groups>
                <suite.manual.include>org/infinispan/server/test/client/hotrod/osgi/RemoteCacheOsgiTest.java</suite.manual.include>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>infinispan-server-startup</id>
                                <phase>generate-test-resources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <exec dir="${server1.dist}/bin" spawn="true" executable="chmod" osfamily="unix">
                                            <arg value="+x"/>
                                            <arg value="../bin"/>
                                            <arg value="standalone.sh"/>
                                        </exec>
                                        <exec executable="${server1.dist}/bin/standalone.sh" osfamily="unix" spawn="true">
                                            <arg line="-c testsuite/standalone-with-indexing.xml"/>
                                            <env key="JAVA_OPTS" value="${server.jvm.args} -Djboss.socket.binding.port-offset=0 -Djboss.node.name=jdg"/>
                                        </exec>
                                        <exec executable="${server1.dist}/bin/standalone.bat" osfamily="windows" spawn="true">
                                            <arg line="-c testsuite/standalone-with-indexing.xml"/>
                                            <env key="JAVA_OPTS" value="${server.jvm.args} -Djboss.socket.binding.port-offset=0 -Djboss.node.name=jdg"/>
                                        </exec>
                                        <echo>Waiting for Infinispan server to start</echo>
                                        <waitfor maxwait="15" maxwaitunit="second" checkevery="1" checkeveryunit="second">
                                            <and>
                                                <socket server="127.0.0.1" port="9999"/>
                                                <socket server="127.0.0.1" port="11222"/>
                                            </and>
                                        </waitfor>
                                        <echo message="Infinispan server started"/>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>infinispan-server-shutdown</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <exec executable="${server.jvm}/bin/jps" output="jps.pid" osfamily="unix"/>
                                        <loadfile srcfile="jps.pid" property="pid" failonerror="false">
                                            <filterchain>
                                                <linecontains>
                                                    <contains value="jboss-modules.jar"/>
                                                </linecontains>
                                                <tokenfilter>
                                                    <deletecharacters chars="jboss-modules.jar"/>
                                                    <ignoreblank/>
                                                </tokenfilter>
                                                <striplinebreaks/>
                                            </filterchain>
                                        </loadfile>
                                        <exec executable="netstat" output="jps.pid" osfamily="windows">
                                            <arg line="-aon"/>
                                        </exec>
                                        <loadfile srcfile="jps.pid" property="pid" failonerror="false">
                                            <filterchain>
                                                <linecontains>
                                                    <contains value="LISTENING"/>
                                                    <contains value=":11222"/>
                                                </linecontains>
                                                <tokenfilter>
                                                    <replaceregex pattern=".*LISTENING([ \t]+)([0-9]+)" replace="\2" flags="gi"/>
                                                    <ignoreblank/>
                                                </tokenfilter>
                                                <striplinebreaks/>
                                            </filterchain>
                                        </loadfile>
                                        <echo message="Killing Infinispan server with PID - ${pid}"/>
                                        <exec executable="kill" osfamily="unix">
                                            <arg line="-9 ${pid}"/>
                                        </exec>
                                        <exec executable="taskkill" osfamily="windows">
                                            <arg line="/F /T /PID ${pid}"/>
                                        </exec>
                                        <delete file="jps.pid"/>
                                    </target>
                                </configuration>
                            </execution>
                            <!-- Register Protofile on the server before the test starts.
                                 TODO: Do it directly from the test. The remoting-jmx implementation for
                                 JMX is normally loaded via ServiceLoader and this is not working out-of-box in OSGi. -->
                            <execution>
                                <id>register-protofile-with-server</id>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <phase>test</phase>
                                <configuration>
                                    <target>
                                        <property name="test_classpath" refid="maven.test.classpath"/>
                                        <java classname="org.infinispan.server.test.util.ProtofileRegistrar"
                                              fork="false"
                                              failonerror="true">
                                            <arg value="/sample_bank_account/bank.protobin"/>
                                            <arg value="localhost"/>
                                            <arg value="9999"/>
                                            <classpath>
                                                <pathelement path="${project.build.directory}/test-classes"/>
                                                <pathelement path="${test_classpath}"/>
                                            </classpath>
                                        </java>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>ipv6</id>
            <activation>
                <property><name>ts.ipv6</name></property>
            </activation>
            <properties>
                <!-- Override IPv4 defaults from the top. -->
                <h2.server.ip>[::1]</h2.server.ip>
                <!--<h2.server.address>tcp://${h2.server.ip}:9092</h2.server.address>-->

                <node0.ip>[::1]</node0.ip>
                <node1.ip>[::1]</node1.ip>
                <node2.ip>[::1]</node2.ip>
                <mcast.ip>[ff01::1]</mcast.ip>      <!-- ff01::1  is IPv6 Node-Local scope mcast addr. -->
                <jvm.ip.stack>-Djava.net.preferIPv4Stack=false -Djava.net.preferIPv6Addresses=true -Djboss.default.multicast.address=${mcast.ip}</jvm.ip.stack>
            </properties>
        </profile>

        <profile>
            <id>testsuite-jdk6</id>
            <properties>
                <server.jvm>${env.JAVA_HOME_16}</server.jvm>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <jvm>${env.JAVA_HOME_16}/bin/java</jvm>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>test-unstable</id>
            <properties>
                <groups.unstable></groups.unstable>
                <suite.manual.exclude.groups></suite.manual.exclude.groups>
                <suite.manual.include.groups>org.infinispan.server.test.category.UnstableTest</suite.manual.include.groups>
                <groups.client.local>org.infinispan.server.test.category.UnstableClientLocalTest</groups.client.local>
                <groups.client.clustered>org.infinispan.server.test.category.UnstableClientClusteredTest</groups.client.clustered>
            </properties>
            <!-- don't fail if there are no unstable tests (applies to all surefire executions) -->
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <failIfNoTests>false</failIfNoTests>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
<?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.jboss</groupId>
      <artifactId>jboss-parent</artifactId>
      <version>10</version>
      <relativePath />
   </parent>

   <groupId>org.infinispan.server</groupId>
   <artifactId>infinispan-server-versions</artifactId>
   <version>7.0.0-SNAPSHOT</version>
   <packaging>pom</packaging>

   <name>Infinispan Server - BOM</name>
   <description>Infinispan Server - BOM</description>

   <properties>
      
      <product.version>${project.version}</product.version>
      <product.name>infinispan-server</product.name>

      <version.ant-contrib>1.0b3</version.ant-contrib>
      <version.com.github.relaxng.relaxngDatatype>2011.1</version.com.github.relaxng.relaxngDatatype>
      <version.commons.logging>1.1.1</version.commons.logging>
      <version.net.jcip.annotations>1.0</version.net.jcip.annotations>
      <version.org.jboss.as>7.2.0.Final</version.org.jboss.as>
      <version.org.jboss.jandex>1.0.3.Final</version.org.jboss.jandex>
      <version.org.jboss.jbossts.jbossjts>4.16.2.Final</version.org.jboss.jbossts.jbossjts>
      <version.junit>4.11</version.junit>
      <version.org.infinispan>${project.version}</version.org.infinispan>
      <version.org.infinispan.arquillian.container>1.1.0.Alpha2</version.org.infinispan.arquillian.container>
      <version.org.iq80.leveldb>0.6</version.org.iq80.leveldb>
      <version.org.slf4j>1.7.2</version.org.slf4j>
      <version.org.xerial.snappy>1.0.5</version.org.xerial.snappy>
      <version.xml.maven.plugin>1.0</version.xml.maven.plugin>
      <version.org.infinispan.protostream>1.0.0.Final</version.org.infinispan.protostream>
      <version.http.client>4.3</version.http.client>
      <version.org.picketbox>4.0.17.SP2</version.org.picketbox>
      <version.xpp3>1.1.4c</version.xpp3>
      <version.pax.url>1.3.7</version.pax.url>
      <version.karaf>2.3.3</version.karaf>
      <version.pax.exam>3.4.0</version.pax.exam>
      <version.javax.inject>1</version.javax.inject>
      <version.h2.database>1.3.168</version.h2.database>
      <version.resteasy>3.0.7.Final</version.resteasy>
      <relocations />

   </properties>

   <dependencyManagement>
      <dependencies>
         <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-bom</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>

         <dependency>
            <groupId>com.github.relaxng</groupId>
            <artifactId>relaxngDatatype</artifactId>
            <version>${version.com.github.relaxng.relaxngDatatype}</version>
         </dependency>

         <dependency>
            <groupId>org.jboss.marshalling</groupId>
            <artifactId>jboss-marshalling-parent</artifactId>
            <version>${version.org.jboss.marshalling.jboss-marshalling}</version>
            <type>pom</type>
         </dependency>

         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-server-jgroups</artifactId>
            <version>${project.version}</version>
         </dependency>

         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-server-infinispan</artifactId>
            <version>${project.version}</version>
         </dependency>

         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-server-security</artifactId>
            <version>${project.version}</version>
         </dependency>

         <dependency>
            <groupId>org.jboss.jbossts</groupId>
            <artifactId>jbossjta</artifactId>
            <version>${version.org.jboss.jbossts.jbossjts}</version>
         </dependency>

         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-server-common</artifactId>
            <version>${project.version}</version>
         </dependency>

         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-server-endpoints</artifactId>
            <version>${project.version}</version>
         </dependency>

         <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>${version.commons.logging}</version>
         </dependency>

         <dependency>
            <groupId>net.jcip</groupId>
            <artifactId>jcip-annotations</artifactId>
            <version>${version.net.jcip.annotations}</version>
         </dependency>

         <dependency>
            <groupId>org.jboss.as</groupId>
            <artifactId>jboss-as-parent</artifactId>
            <version>${version.org.jboss.as}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>

         <dependency>
            <groupId>org.jboss.as</groupId>
            <artifactId>jboss-as-clustering-common</artifactId>
            <version>${version.org.jboss.as}</version>
            <scope>test</scope>
            <classifier>tests</classifier>
         </dependency>

         <dependency>
            <groupId>org.jboss.logmanager</groupId>
            <artifactId>jboss-logmanager-log4j</artifactId>
            <version>${version.org.jboss.logmanager.jboss-logmanager-log4j}</version>
         </dependency>

         <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan</artifactId>
            <version>${version.org.infinispan}</version>
            <classifier>javadoc</classifier>
         </dependency>

         <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-parent</artifactId>
            <version>${version.org.infinispan}</version>
            <type>pom</type>
         </dependency>

         <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-core</artifactId>
            <version>${version.org.infinispan}</version>
         </dependency>

         <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-cachestore-parent</artifactId>
            <version>${version.org.infinispan}</version>
            <type>pom</type>
         </dependency>

         <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-cachestore-remote</artifactId>
            <version>${version.org.infinispan}</version>
         </dependency>

         <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-cachestore-rest</artifactId>
            <version>${version.org.infinispan}</version>
         </dependency>

         <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-cachestore-jdbc</artifactId>
            <version>${version.org.infinispan}</version>
         </dependency>

         <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-cachestore-leveldb</artifactId>
            <version>${version.org.infinispan}</version>
         </dependency>

         <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-client-hotrod</artifactId>
            <version>${version.org.infinispan}</version>
         </dependency>

         <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-client-hotrod</artifactId>
            <classifier>javadoc</classifier>
            <version>${version.org.infinispan}</version>
         </dependency>

         <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-server-core</artifactId>
            <version>${version.org.infinispan}</version>
         </dependency>

         <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-server-hotrod</artifactId>
            <version>${version.org.infinispan}</version>
         </dependency>

         <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-server-memcached</artifactId>
            <version>${version.org.infinispan}</version>
         </dependency>

         <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-server-rest</artifactId>
            <version>${version.org.infinispan}</version>
            <classifier>classes</classifier>
         </dependency>

         <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jaxrs</artifactId>
            <version>${version.resteasy}</version>
         </dependency>

         <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>jaxrs-api</artifactId>
            <version>${version.resteasy}</version>
         </dependency>

         <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-server-websocket</artifactId>
            <version>${version.org.infinispan}</version>
         </dependency>

         <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-cli-server</artifactId>
            <version>${version.org.infinispan}</version>
         </dependency>

         <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-cli-client</artifactId>
            <version>${version.org.infinispan}</version>
         </dependency>

         <dependency>
            <groupId>org.sonatype.oss</groupId>
            <artifactId>oss-parent</artifactId>
            <version>${version.org.sonatype.oss.parent}</version>
            <type>pom</type>
         </dependency>

         <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${version.junit}</version>
            <scope>test</scope>
         </dependency>

         <dependency>
            <groupId>org.jboss.as</groupId>
            <artifactId>jboss-as-arquillian-container-managed</artifactId>
            <version>${version.org.jboss.as}</version>
            <scope>test</scope>
         </dependency>

         <dependency>
            <groupId>org.infinispan.arquillian.container</groupId>
            <artifactId>infinispan-arquillian-container-managed</artifactId>
            <version>${version.org.infinispan.arquillian.containern}</version>
            <scope>test</scope>
         </dependency>

         <dependency>
            <groupId>org.infinispan.arquillian.container</groupId>
            <artifactId>infinispan-arquillian-impl</artifactId>
            <version>${version.org.infinispan.arquillian.container}</version>
            <scope>test</scope>
         </dependency>

         <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
            <version>${version.org.slf4j}</version>
            <scope>test</scope>
         </dependency>

         <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${version.org.slf4j}</version>
            <scope>test</scope>
         </dependency>

         <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${version.org.slf4j}</version>
            <scope>test</scope>
         </dependency>

         <dependency>
            <groupId>org.xerial.snappy</groupId>
            <artifactId>snappy-java</artifactId>
            <version>${version.org.xerial.snappy}</version>
         </dependency>

         <dependency>
             <groupId>org.infinispan.protostream</groupId>
             <artifactId>sample-domain-implementation</artifactId>
             <version>${version.org.infinispan.protostream}</version>
             <scope>test</scope>
         </dependency>

         <dependency>
             <groupId>org.infinispan</groupId>
             <artifactId>infinispan-query-dsl</artifactId>
             <version>${version.org.infinispan}</version>
             <scope>test</scope>
         </dependency>

         <dependency>
             <groupId>org.infinispan</groupId>
             <artifactId>infinispan-remote-query-client</artifactId>
             <version>${version.org.infinispan}</version>
         </dependency>

         <dependency>
            <groupId>org.iq80.leveldb</groupId>
            <artifactId>leveldb</artifactId>
            <version>${version.org.iq80.leveldb}</version>
         </dependency>

         <dependency>
            <groupId>ant-contrib</groupId>
            <artifactId>ant-contrib</artifactId>
            <version>${version.ant-contrib}</version>
            <scope>test</scope>
         </dependency>

         <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${version.http.client}</version>
            <scope>test</scope>
         </dependency>

         <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
            <version>${version.http.client}</version>
            <scope>test</scope>
         </dependency>

         <dependency>
            <groupId>org.picketbox</groupId>
            <artifactId>jbosssx-bare</artifactId>
            <version>${version.org.picketbox}</version>
            <scope>test</scope>
         </dependency>

         <dependency>
            <groupId>xpp3</groupId>
            <artifactId>xpp3</artifactId>
            <version>${version.xpp3}</version>
         </dependency>

         <dependency>
            <groupId>org.apache.karaf</groupId>
            <artifactId>apache-karaf</artifactId>
            <version>${version.karaf}</version>
            <type>zip</type>
            <scope>test</scope>
         </dependency>

         <dependency>
            <groupId>org.ops4j.pax.exam</groupId>
            <artifactId>pax-exam-container-karaf</artifactId>
            <version>${version.pax.exam}</version>
            <scope>test</scope>
         </dependency>

         <dependency>
            <groupId>org.ops4j.pax.exam</groupId>
            <artifactId>pax-exam-junit4</artifactId>
            <version>${version.pax.exam}</version>
            <scope>test</scope>
         </dependency>

         <dependency>
            <groupId>org.ops4j.pax.exam</groupId>
            <artifactId>pax-exam</artifactId>
            <version>${version.pax.exam}</version>
            <scope>test</scope>
         </dependency>

         <dependency>
            <groupId>org.ops4j.pax.exam</groupId>
            <artifactId>pax-exam-inject</artifactId>
            <version>${version.pax.exam}</version>
            <scope>test</scope>
         </dependency>

         <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>${version.javax.inject}</version>
            <scope>test</scope>
         </dependency>

         <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>test</scope>
            <version>${version.h2.database}</version>
         </dependency>
      </dependencies>

   </dependencyManagement>

   <build>
      <pluginManagement>
         <plugins>
            <plugin>
               <groupId>org.codehaus.mojo</groupId>
               <artifactId>xml-maven-plugin</artifactId>
               <version>${version.xml.maven.plugin}</version>
            </plugin>
         </plugins>
      </pluginManagement>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
               <execution>
                  <id>enforce-java</id>
                  <goals>
                     <goal>enforce</goal>
                  </goals>
                  <configuration>
                     <rules>
                        <requireJavaVersion>
                           <version>[1.7,)</version>
                        </requireJavaVersion>
                        <requireMavenVersion>
                           <version>[3.0.3,)</version>
                        </requireMavenVersion>
                     </rules>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.apache.servicemix.tooling</groupId>
            <artifactId>depends-maven-plugin</artifactId>
            <version>1.2</version>
          </plugin>
      </plugins>
   </build>

   <profiles>
      <profile>
         <id>distribution</id>
         <activation>
            <activeByDefault>false</activeByDefault>
         </activation>
         <properties>
            <maven.test.skip.exec>true</maven.test.skip.exec>
         </properties>
      </profile>
      <profile>
         <activation>
            <jdk>1.7</jdk>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.codehaus.mojo</groupId>
                  <artifactId>animal-sniffer-maven-plugin</artifactId>
                  <version>1.9</version>
                  <configuration>
                     <signature>
                        <groupId>org.codehaus.mojo.signature</groupId>
                        <artifactId>java16</artifactId>
                        <version>1.0</version>
                     </signature>
                     <ignores>
                        <ignore>sun.misc.Unsafe</ignore>
                        <ignore>org.apache.lucene.store.IOContext</ignore>
                     </ignores>
                  </configuration>
                  <executions>
                     <execution>
                        <phase>process-classes</phase>
                        <goals>
                           <goal>check</goal>
                        </goals>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>
   </profiles>

</project>
<?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-server-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-server-memcached</artifactId>
   <packaging>bundle</packaging>
   <name>Infinispan Memcached Server</name>
   <description>Infinispan Memcached Server</description>

   <dependencies>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-core</artifactId>
      </dependency>

      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-core</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>spy</groupId>
         <artifactId>memcached</artifactId>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <build>
      <finalName>infinispan</finalName>
      <sourceDirectory>src/main/scala</sourceDirectory>
      <testSourceDirectory>src/test/scala</testSourceDirectory>

      <plugins>
         <plugin>
            <groupId>org.scala-tools</groupId>
            <artifactId>maven-scala-plugin</artifactId>
         </plugin>
         <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <configuration>
               <instructions>
                  <Export-Package>
                     ${project.groupId}.server.memcached.*;version=${project.version};-split-package:=error
                  </Export-Package>
               </instructions>
            </configuration>
         </plugin>
      </plugins>
   </build>
</project><?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../parent/pom.xml</relativePath>
   </parent>
   
   <artifactId>infinispan-server-parent</artifactId>
   <name>Parent pom for server modules</name>
   <packaging>pom</packaging>

   <dependencies>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
         <version>${project.version}</version>
      </dependency>
      
      <dependency>
         <groupId>org.scala-lang</groupId>
         <artifactId>scala-library</artifactId>
      </dependency>

      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
         <version>${project.version}</version>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
   </dependencies>
   
   <profiles>
      <profile>
         <id>distribution</id>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.codehaus.mojo</groupId>
                  <artifactId>build-helper-maven-plugin</artifactId>
                  <executions>
                     <execution>
                        <phase>prepare-package</phase>
                        <goals>
                           <goal>add-source</goal>
                        </goals>
                        <configuration>
                           <sources>
                              <source>${project.build.directory}/genjavadoc</source>
                           </sources>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>
   </profiles>
</project><?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-server-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-server-rest</artifactId>
   <packaging>war</packaging>
   <name>Infinispan REST Server</name>
   <description>REST interface for Infinispan, packaged as a WAR file for deployment in a servlet container
   </description>

   <build>
      <finalName>infinispan</finalName>
      <sourceDirectory>src/main/scala</sourceDirectory>
      <testSourceDirectory>src/test/scala</testSourceDirectory>

      <plugins>
         <plugin>
            <groupId>org.scala-tools</groupId>
            <artifactId>maven-scala-plugin</artifactId>
         </plugin>
         <plugin>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty-maven-plugin</artifactId>
         </plugin>
         <plugin>
            <artifactId>maven-war-plugin</artifactId>
            <configuration>
               <!-- we also pack WEB-INF/classes separately so JDG can use infinispan-server-rest-x.y.z-classes.jar
               to build a custom server war rather than use the war generated here -->
               <attachClasses>true</attachClasses>
            </configuration>
         </plugin>
      </plugins>

   </build>

   <dependencies>
      <dependency>
         <groupId>org.jboss.resteasy</groupId>
         <artifactId>resteasy-jaxrs</artifactId>
      </dependency>

      <dependency>
         <groupId>org.codehaus.jackson</groupId>
         <artifactId>jackson-mapper-asl</artifactId>
      </dependency>

      <dependency>
         <groupId>com.thoughtworks.xstream</groupId>
         <artifactId>xstream</artifactId>
      </dependency>

      <dependency>
         <groupId>javax.servlet</groupId>
         <artifactId>servlet-api</artifactId>
         <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>infinispan-server-core</artifactId>
      </dependency>

      <!-- and now for unit and integration tests -->
      <dependency>
         <groupId>org.mortbay.jetty</groupId>
         <artifactId>jetty-embedded</artifactId>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>commons-httpclient</groupId>
         <artifactId>commons-httpclient</artifactId>
         <scope>test</scope>
      </dependency>

   </dependencies>
</project>
<?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-server-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-server-websocket</artifactId>
   <packaging>bundle</packaging>
   <name>Infinispan WebSocket Server</name>
   <description>WebSocket interface for Infinispan</description>

   <dependencies>

      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-core</artifactId>
      </dependency>

      <dependency>
         <groupId>org.json</groupId>
         <artifactId>json</artifactId>
      </dependency>

   </dependencies>

   <build>     
      <plugins>
         <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <configuration>
               <instructions>
                  <Export-Package>
                     ${project.groupId}.server.websocket.*;version=${project.version};-split-package:=error
                  </Export-Package>
               </instructions>
            </configuration>
         </plugin>
      </plugins>
   </build>
</project><?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../parent/pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-spring</artifactId>
   <packaging>bundle</packaging>

   <name>Infinispan Spring Integration</name>
   <description>
        <![CDATA[
                 The Infinispan Spring Integration project provides Spring 
                 integration for Infinispan, a high performance distributed cache.
                 Its primary features are
                 
                  * An implementation of org.springframework.cache.CacheManager,
                    Spring's central caching abstraction, backed by Infinispan's
                    EmbeddedCacheManager. To be used if your Spring-powered
                    application and Infinispan are colocated, i.e. running within
                    the same VM.
                  * An implementation of org.springframework.cache.CacheManager
                    backed by Infinispan's RemoteCacheManager. To bes used if your
                    Spring-powered application accesses Infinispan remotely, i.e.
                    over the network.
                  * An implementation of org.springframework.cache.CacheManager
                    backed by a CacheContainer reference. To be used if your Spring-
                    powered application needs access to a CacheContainer defined
                    outside the application (e.g. retrieved from JNDI)
                  * Spring namespace support allowing shortcut definitions for all the
                    components above

                 In addition, Infinispan Spring Integration offers various FactoryBeans
                 for facilitating creation of Infinispan core classes - Cache, CacheManager,
                 ... - within a Spring context.
        ]]>
    </description>

	<!-- =================================================== -->
	<!-- Developers section -->
	<!-- =================================================== -->

   <developers>
      <developer>
         <id>obergner</id>
         <name>Olaf Bergner</name>
         <email>olaf DOT bergner AT gmx DOT de</email>
         <roles>
            <role>Project Admin</role>
            <role>Developer</role>
         </roles>
         <timezone>0</timezone>
      </developer>
      <developer>
         <id>marius.bogoevici</id>
         <name>Marius Bogoevici</name>
         <email>marius.bogoevici AT gmail.com</email>
         <roles>
            <role>Developer</role>
         </roles>
         <timezone>-5</timezone>
      </developer>
   </developers>

   <!-- =================================================== -->
   <!-- Project Dependencies -->
   <!-- =================================================== -->

   <dependencies>
      <!--Compile time dependencies -->
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-context</artifactId>
         <scope>compile</scope>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
         <scope>compile</scope>
      </dependency>
      <!-- Made the RHQ dependency non-transitive in case we only need the remote cache -->
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-client-hotrod</artifactId>
         <scope>compile</scope>
         <optional>true</optional>
         <exclusions>
            <exclusion>
               <groupId>org.apache.avro</groupId>
               <artifactId>avro</artifactId>
            </exclusion>
         </exclusions>
      </dependency>

      <!--Runtime dependencies -->
      <dependency>
         <groupId>commons-pool</groupId>
         <artifactId>commons-pool</artifactId>
         <scope>runtime</scope>
      </dependency>
      <dependency>
         <groupId>commons-logging</groupId>
         <artifactId>commons-logging</artifactId>
         <scope>runtime</scope>
      </dependency>
      <dependency>
         <groupId>log4j</groupId>
         <artifactId>log4j</artifactId>
         <scope>runtime</scope>
         <optional>true</optional>
      </dependency>
      <dependency>
         <groupId>org.jgroups</groupId>
         <artifactId>jgroups</artifactId>
         <scope>runtime</scope>
      </dependency>
      <dependency>
         <groupId>org.jboss.marshalling</groupId>
         <artifactId>jboss-marshalling</artifactId>
         <scope>runtime</scope>
      </dependency>
      <dependency>
         <groupId>org.jboss.marshalling</groupId>
         <artifactId>jboss-marshalling-river</artifactId>
         <scope>runtime</scope>
      </dependency>

      <!--Test Dependencies -->
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-test</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-client-hotrod</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-hotrod</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-hotrod</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-jdbc</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>com.h2database</groupId>
         <artifactId>h2</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>commons-dbcp</groupId>
         <artifactId>commons-dbcp</artifactId>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <!-- =================================================== -->
   <!-- Project Plugins -->
   <!-- =================================================== -->

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <configuration>
               <instructions>
                  <Export-Package>
                     ${project.groupId}.spring.*;version=${project.version};-split-package:=error
                  </Export-Package>
               </instructions>
            </configuration>
         </plugin>
      </plugins>
   </build>

</project>
<?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../parent/pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-tools</artifactId>
   <packaging>bundle</packaging>
   <name>Infinispan Tools</name>
   <description>Infinispan - Tools for project</description>

   <dependencies>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
      </dependency>

      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
      
      <dependency>
         <groupId>gnu-getopt</groupId>
         <artifactId>getopt</artifactId>
      </dependency>

      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-core</artifactId>
         <scope>provided</scope>
      </dependency>
      
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-query</artifactId>
         <scope>provided</scope>
      </dependency>

      <dependency>
         <groupId>org.javassist</groupId>
         <artifactId>javassist</artifactId>
      </dependency>

      <dependency>
         <groupId>commons-logging</groupId>
         <artifactId>commons-logging</artifactId>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <profiles>
      <profile>
         <id>default-tools.jar</id>
         <activation>
            <file>
              <exists>${java.home}/../lib/tools.jar</exists>
            </file>
         </activation>
         <dependencies>
            <dependency>
               <groupId>com.sun</groupId>
               <artifactId>tools</artifactId>
               <version>1.4.2</version>
               <scope>system</scope>
               <systemPath>${java.home}/../lib/tools.jar</systemPath>
            </dependency>
         </dependencies>
      </profile>
   </profiles>

   <build>     
      <plugins>
         <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <configuration>
               <instructions>
                  <Export-Package>
                     ${project.groupId}.tools.*;version=${project.version};-split-package:=error
                  </Export-Package>
               </instructions>
            </configuration>
         </plugin>
      </plugins>
   </build>
</project><?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>7.0.0-SNAPSHOT</version>
      <relativePath>../parent/pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-tree</artifactId>
   <packaging>bundle</packaging>
   <name>Infinispan Tree API</name>
   <description>Infinispan tree API module</description>
   <dependencies>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
      </dependency>

      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>

   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <configuration>
               <instructions>
                  <Export-Package>
                     ${project.groupId}.tree.*;version=${project.version};-split-package:=error
                  </Export-Package>
               </instructions>
            </configuration>
         </plugin>
      </plugins>
   </build>
</project>