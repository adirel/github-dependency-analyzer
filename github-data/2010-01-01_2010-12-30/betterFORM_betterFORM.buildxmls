<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2012. betterFORM Project - http://www.betterform.de
  ~ Licensed under the terms of BSD License
  -->

<!-- $Id: build.xml,v 1.90 2006/11/16 23:55:43 joernt Exp $ -->
<project id="betterform-project" name="betterForm Project" default="package" basedir=".">

    <property name="core.dir" value="${basedir}/core"/>
    <xmlproperty file="build.properties.xml"
                 semanticAttributes="true" keepRoot="false"/>

    <property name="web.dir" value="${basedir}/web"/>
    <property name="server.dir" value="${basedir}/tools/server"/>
    <property name="target.dir" value="${basedir}/target"/>
    <property name="src.target.dir" value="${basedir}/target"/>


    <antversion property="antversion" atleast="${properties.antversion}"/>

    <target name="check-ant-version" unless="antversion">
        <fail>Apache Ant 1.8.2 or higher is required for this target. Please upgrade your Apache Ant version (${ant.version}) to minimum version 1.8.2 You can retreive the latest Ant here: http://ant.apache.org/bindownload.cgi</fail>
    </target>


    <!-- local Web properties -->

    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <target name="clean" description="clean build target directory">
        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="cleaning up project target, to clean up core, and web call 'ant clean-all'"/>
        <echo message="************************************************************************************"/>
        <echo/>
        <delete dir="${target.dir}"/>
    </target>


    <target name="clean-all" description="clean build target directory">
        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="cleaning up core and web "/>
        <echo message="************************************************************************************"/>
        <echo/>
        <delete dir="${target.dir}"/>
        <delete dir="${core.dir}/target"/>
        <delete dir="${web.dir}/target"/>

        <delete dir="${basedir}/XRX/target"/>
        <delete dir="${basedir}/XRX/target-utils"/>
        <delete dir="${basedir}/tools/ProjectAssistant/target"/>
        <delete dir="${basedir}/tools/installer/target"/>
    </target>



    <!-- **************************************** BUILDING OPTIMIZED BETTERFORM WAR  **************************************** -->
    <!-- **************************************** BUILDING OPTIMIZED BETTERFORM WAR  **************************************** -->
    <!-- **************************************** BUILDING OPTIMIZED BETTERFORM WAR  **************************************** -->
    <target name="package" description="create betterform WAR file" depends="check-ant-version" if="antversion">
        <echo>
            __== create optimized betterform.war file in ${target.dir}==__
        </echo>
        <!-- Create optimized JavaScript package-->
        <ant antfile="${basedir}/web/build-dojo.xml" inheritall="false" target="build-dojo"/>
        <!-- Create WAR for Installer -->
        <ant antfile="${basedir}/tools/installer/build-files/build-WAR.xml" target="create-war" usenativebasedir="true" inheritall="true">
            <property name="installer.target" value="${target.dir}"/>
        </ant>
    </target>


    <!-- **************************************** BUILDING BETTERFORM WEBSITE  **************************************** -->
    <!-- **************************************** BUILDING BETTERFORM WEBSITE  **************************************** -->
    <!-- **************************************** BUILDING BETTERFORM WEBSITE  **************************************** -->
    <target name="build-website" description="generates the betterFORM site" depends="check-ant-version" if="antversion">
        <ant antfile="${basedir}/resource/build-site.xml"  target="deploy" inheritall="false"/>
    </target>

    <!-- **************************************** GENERATE BETTERFORM REFERENCE FORMS **************************************** -->
    <!-- **************************************** GENERATE BETTERFORM REFERENCE FORMS **************************************** -->
    <!-- **************************************** GENERATE BETTERFORM REFERENCE FORMS **************************************** -->
    <target name="build-references" description="builds and deploys reference forms to target" depends="check-ant-version" if="antversion">
        <ant antfile="${basedir}/resource/build-reference.xml"  target="deploy-forms" inheritall="false"/>
    </target>


    <!-- **************************************** TARGETS FOR MAVEN **************************************** -->
    <!-- **************************************** TARGETS FOR MAVEN **************************************** -->
    <!-- **************************************** TARGETS FOR MAVEN **************************************** -->
    <target name="install-maven-dependencies" description="install all project dependencies into local maven repository" depends="check-ant-version" if="antversion">
        <ant antfile="${basedir}/tools/maven/build.xml"  target="install-maven-dependencies" dir="${basedir}/tools/maven"  inheritall="false"/>

    </target>

    <target name="update-maven-poms" description="update core and web pom.xml" depends="check-ant-version" if="antversion">
        <ant antfile="${basedir}/tools/maven/build.xml"  target="update-project-pom" dir="${basedir}/tools/maven"  inheritall="false"/>
        <ant antfile="${basedir}/tools/maven/build.xml"  target="update-core-pom" dir="${basedir}/tools/maven"  inheritall="false"/>
        <ant antfile="${basedir}/tools/maven/build.xml"  target="update-web-pom" dir="${basedir}/tools/maven"  inheritall="false"/>
    </target>


    <!-- TODO: review targets, neither of these works since xbl.xsl and src/main/components -->
<!--
    <target name="transformToXFormsUsingComponent" depends="check-ant-version" if="antversion">
         <xslt in="${basedir}/resource/src/main/xforms/demo/registration.xhtml"
               out="${basedir}/registration.xhtml"
               style="${basedir}/src/main/resources/xslt/component.xsl"
               force="true">
             <classpath refid="transform.class.path"/>
         </xslt>
     </target>


    <target name="componentXSL">
        <xslt in="${basedir}/resource/src/main/components/mapping.xml"
              out="${basedir}/resource/src/main/resources/xslt/mappings.xsl"
              style="${basedir}/src/main/components/mapping2xsl.xsl">
            <classpath refid="transform.class.path"/>
        </xslt>
    </target>
    
    <target name="xbl2xsl">
        <xslt in="${basedir}/resource/src/main/components/binding.xml"
              out="${basedir}/resource/src/main/resources/xslt/dummy.xsl"
              style="${basedir}/src/main/components/xbl2xsl.xsl">
            <classpath refid="transform.class.path"/>
        </xslt>
    </target>

    <target name="testxblxsl">
        <xslt in="tools/XFormsDumpToXHTML/BindingTest1.xml"
              out="${basedir}/testoutput1.html"
              force="true"             
              style="${basedir}/src/main/resources/xslt/xbl.xsl">
            <classpath refid="transform.class.path"/>
        </xslt>
        <xslt in="tools/XFormsDumpToXHTML/EarlyBindingTest1.xml"
              out="${basedir}/testoutput2.html"
              force="true"             
              style="${basedir}/src/main/resources/xslt/early-binding.xsl">
            <classpath refid="transform.class.path"/>
        </xslt>
    </target>

-->
    <target name="install-bf-into-eXist-db" description="installs current betterFORM version in eXist" depends="check-ant-version, clean-all" if="antversion">
        <ant antfile="${basedir}/XRX/build-XRX.xml"  target="update-betterFORM" dir="${basedir}/XRX"  inheritall="false"/>
    </target>

    <target name="install-bf-exploded-into-eXist-db" description="installs current betterFORM exploded version in eXist" depends="check-ant-version, clean-all" if="antversion">
        <ant antfile="${basedir}/XRX/build-XRX.xml"  target="update-betterFORM-exploded" dir="${basedir}/XRX"  inheritall="false"/>
    </target>
    <target name="build-bf-dojo-release" description="create betterFORM / dojo release (needed if changes in js were made)" depends="check-ant-version, clean-all" if="antversion">
        <ant antfile="${basedir}/web/build-dojo.xml"  target="build-dojo" dir="${basedir}/web"  inheritall="false"/>
    </target>


</project>
<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2011. betterForm Project - http://www.betterform.de
  ~ Licensed under the terms of BSD License
  -->

<!-- $Id: build.xml,v 1.90 2006/11/16 23:55:43 joernt Exp $ -->
<project id="core" name="betterForm Core" default="package" basedir="." >

    <!-- **************************************** PROPERTIES **************************************** -->
    <!-- **************************************** PROPERTIES **************************************** -->
    <!-- **************************************** PROPERTIES **************************************** -->

    <property name="core.dir" value="."/>
    <xmlproperty file="../build.properties.xml"
             semanticAttributes="true" keepRoot="false" />

    <property name="target" value="${basedir}/target"/>
    <property name="target.classes" value="${basedir}/target/classes"/>

    <property name="dist.path" value="${basedir}/target/${core.app.name}"/>
    <property name="dist.name" value="${core.app.name}-${app.version.number}"/>
    <antversion property="antversion" atleast="${properties.antversion}"/>

    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <target name="clean" description="clean build target directory">
        <echo />
        <echo message="************************************************************************************"/>
        <echo message="cleaning up Core"/>
        <echo message="************************************************************************************"/>
        <echo />
        <delete dir="${basedir}/target"/>
    </target>

    <!-- **************************************** PREPARATION **************************************** -->
    <!-- **************************************** PREPARATION **************************************** -->
    <!-- **************************************** PREPARATION **************************************** -->
    <target name="prepare" description="init the build process" depends="check-ant-version" if="antversion">
        <!-- set timestamp -->
        <tstamp/>
        <echo message="basedir: ${basedir}"/>
        <mkdir dir="${basedir}/target"/>

        <echo>
        ************************************************************************************
        copying Core resources
        ************************************************************************************
        </echo>

        <!-- copy all resources -->
        <copy description="copy all resources"
            todir="${basedir}/target/classes"
            filtering="true"
            includeemptydirs="false">
            <fileset dir="${basedir}/src/main/resources"/>
        </copy>
    </target>

    <!-- **************************************** COMPILATION **************************************** -->
    <!-- **************************************** COMPILATION **************************************** -->
    <!-- **************************************** COMPILATION **************************************** -->

    <!--
        Default build.properties setting are as below. If you need to compile with debug settings you can either
        a. change ../build.properties.xml or
        b. call Ant like this: ant compile -Djavac.debug="true"

    -->

    <target name="compile" depends="prepare" description="compile all core sources">


        <tstamp>
            <format property="current.time"
                    pattern="yyyy-MM-dd HH:mm:ss"
                    unit="millisecond"/>
        </tstamp>
        <buildnumber/>
        <filter token="app.name" value="${app.name}"/>
        <filter token="app.version" value="${app.version.number}"/>
        <filter token="timestamp" value="${current.time}"/>
        <filter token="build.number" value="${build.number}"/>


        <copy
              tofile="${basedir}/src/main/resources/META-INF/version.info"
              file="src/main/java/version.info.tmpl"
              filtering="true"
              overwrite="true"/>


        <echo level="info">
        ************************************************************************************
        compiling Core classes
        ************************************************************************************
            JavaOptions:
                version:     ${properties.javac.version}
                debug:       ${properties.javac.debug}
                deprecation: ${properties.javac.deprecation}
                optimize:    ${properties.javac.optimize}

            Build number: ${build.number}
            Current Time: ${current.time}
        ************************************************************************************
        </echo>
        
        <javac description="compile source files"
            srcdir="${basedir}/src/main/java"
            destdir="${target.classes}"
            classpathref="compile.class.path"
            target="${properties.javac.version}"                
            debug="${properties.javac.debug}"
            deprecation="${properties.javac.deprecation}"
            optimize="${properties.javac.optimize}"
            includeantruntime="false"
            nowarn="true"/>
    </target>

    <!-- **************************************** BUILDING JAR **************************************** -->
    <!-- **************************************** BUILDING JAR **************************************** -->
    <!-- **************************************** BUILDING JAR **************************************** -->
    <target name="package" depends="compile" description="create jar file(s)">
        <copy file="${basedir}/target/classes/de/betterform/xml/config/default.xml" tofile="${target}/betterform-config.xml"
                description="copy betterForm config file"/>

        <echo />
        <echo message="************************************************************************************"/>
        <echo message="building Core jar"/>
        <echo message="************************************************************************************"/>
        <echo />

        <jar description="package betterform jar"
            jarfile="${target}/${dist.name}.jar"
            basedir="${basedir}/target/classes"
            excludes="**/test/** **/schemabuilder/** **/aop.xml"
            />
    </target>

    <!-- **************************************** SOURCE DISTRIBUTION **************************************** -->
    <!-- **************************************** SOURCE DISTRIBUTION **************************************** -->
    <!-- **************************************** SOURCE DISTRIBUTION **************************************** -->
    <target name="prepare-distribute-binary" depends="clean, package">
      <mkdir dir="${target}/lib"/>

      <copy description="copy dependant libraries"
            todir="${target}/lib"
            flatten="true">
            <fileset dir="src/main/lib">
                <include name="*.jar"/>              
            </fileset>
        </copy>

        <move file="${target}" tofile="${target}/${dist.name}"/>
        <copy todir="${target}/${dist.name}" file="${target}/${dist.name}/classes/META-INF/version.info"/>
        <delete dir="${target}/${dist.name}/classes"/>

    </target>

    <target name="distribute-binary" depends="prepare-distribute-binary" description="assembles binary and source distributions">
        <echo />
        <echo message="************************************************************************************"/>
        <echo message="creating distribution files"/>
        <echo message="************************************************************************************"/>
        <echo />

        <!-- create binary tarball -->
        <tar description="create binary tarball"
            tarfile="${target}/${dist.name}-bin.tar"
            basedir="${target}"
            />

        <gzip description="create binary tarball"
            zipfile="${target}/${dist.name}-bin.tar.gz"
            src="${target}/${dist.name}-bin.tar"/>


        <!-- create binary zip -->
        <zip zipfile="${target}/${dist.name}-bin.zip" description="create binary zip" basedir="${target}/${dist.name}"/>

        <delete description="create binary tarball"
            file="${target}/${dist.name}-bin.tar"/>

        <delete dir="${target}/${dist.name}"/>
    </target>

    <target name="prepare-source-dist" depends="clean">
        <mkdir dir="${target}/${dist.name}"/>

        <copy file="../build.properties.xml" todir="${target}/${dist.name}"/>
        <!--<copy file="../build.xml" todir="${target}/${dist.name}"/>-->

        <copy todir="${target}/${dist.name}/core" description="copy core source tree">
            <fileset dir="../core">
                <exclude name="**/target/**"/>
                <exclude name="**/*.iml"/>
            </fileset>
        </copy>

        <copy todir="${target}/${dist.name}/tools" description="copy tools module">
            <fileset dir="../tools"/>
        </copy>
    </target>

    <target name="distribute-sources" depends="prepare-source-dist" description="assembles source distribution">

        <tar description="create source tarball"
             tarfile="${target}/${dist.name}-src.tar"
             basedir="${target}/${dist.name}"/>


        <gzip description="create source tarball"
            zipfile="${target}/${dist.name}-src.tar.gz"
            src="${target}/${dist.name}-src.tar"/>

       <!-- create source zip -->
        <zip description="create source zip" zipfile="${target}/${dist.name}-src.zip"  basedir="${target}/${dist.name}"/>

        <delete description="create source tarball"
            file="${target}/${dist.name}-src.tar"/>
         <delete dir="${target}/${dist.name}"/>
    </target>


    <target name="distribute" depends="distribute-binary, distribute-sources" description="create binary and sources distributions"/>

    <!-- **************************************** TESTING TARGETS **************************************** -->
    <!-- **************************************** TESTING TARGETS **************************************** -->
    <!-- **************************************** TESTING TARGETS **************************************** -->

    <target name="prepare-test" depends="clean,compile">
        <!-- create test directories -->
        <mkdir dir="${basedir}/target/test-classes"/>
        <mkdir dir="${basedir}/target/doc/test/classes"/>

        <copy description="copy all resources"
            todir="target/test-classes"
            filtering="true"
            includeemptydirs="false">
            <fileset dir="src/main/resources"/>
        </copy>

        <copy description="copy all test resources"
            todir="target/test-classes"
            filtering="true"
            includeemptydirs="false">
            <fileset dir="src/test/resources"/>
        </copy>

        <javac description="compile test files"
            excludes="de/betterform/agent/**"
            srcdir="src/test/java"
            destdir="target/test-classes"
            classpathref="test.class.path"
            debug="true"
            deprecation="true"
            optimize="off"/>
    </target>

    <target name="test" depends="prepare-test" description="run all unit tests">
        <echo />
        <echo message="************************************************************************************"/>
        <echo message="running Core test suite"/>
        <echo message="************************************************************************************"/>
        <echo />

        <!-- run junit tests -->
        <junit description="run junit tests"
            maxmemory="256m"
            fork="no"
            showoutput="no"
            printsummary="on">
            <classpath refid="test.class.path"/>
            <formatter type="xml"/>
            <batchtest fork="yes" todir="${basedir}/target/doc/test/classes">
                <fileset dir="${basedir}/target/test-classes" includes="**/*Test.class" excludes="BetterFormXFormsTest.class"/>
            </batchtest>
        </junit>

        <!-- generate junit reports -->
        <junitreport description="generate junit reports"
            todir="target/doc/test">
            <fileset dir="target/doc/test/classes">
                <include name="TEST-*.xml"/>
            </fileset>
            <report todir="target/doc/test"/>
        </junitreport>
    </target>


    <!-- **************************************** DOC TARGETS **************************************** -->
    <!-- **************************************** DOC TARGETS **************************************** -->
    <!-- **************************************** DOC TARGETS **************************************** -->
    <target name="doc" depends="compile" description="generate documentation">
        <echo />
        <echo message="************************************************************************************"/>
        <echo message="creating javadoc"/>
        <echo message="************************************************************************************"/>
        <echo />

         <!--create deploy directory-->
         <mkdir dir="${basedir}/target/doc"/>

         <!--generate source code documentation-->
         <javadoc description="generate api documentation"
             sourcepath="${basedir}/src/main/java"
             destdir="${basedir}/target/doc"
             classpathref="compile.class.path"
             packagenames="de.betterform.*">
         </javadoc>

         <!--set version filter-->
         <filter token="app.version" value="${app.version}"/>
     </target>

    <target name="check-ant-version" unless="antversion">
        <echo>Apache Ant ${properties.antversion} or higher is required for this target. Please upgrade your Apache Ant version (${ant.version}) to minimum version 1.7 You can retreive the latest Ant here: http://ant.apache.org/bindownload.cgi</echo>
    </target>


</project>
<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2012. betterFORM Project - http://www.betterform.de
  ~ Licensed under the terms of BSD License
  -->

<!--
    author: Joern Turner
    author: Lars Windauer
 -->
<project id="web" name="betterForm Web" default="deploy" basedir=".">

    <!-- **************************************** PROPERTIES **************************************** -->
    <!-- **************************************** PROPERTIES **************************************** -->
    <!-- **************************************** PROPERTIES **************************************** -->
    <!-- ###
          ATTENTION - the properties below must be set before build.properties.xml
          is called - DO NOT MOVE
  ###  -->

    <property name="root.dir" value="${basedir}/.."/>
    <property name="resource.src.dir" value="${basedir}/src"/>
    <property name="web.dir" value="${basedir}"/>
    <xmlproperty file="../build.properties.xml" semanticAttributes="true" keepRoot="false"/>

    <!-- local Web properties -->
    <property name="forms.target" value="forms"/>
    <property name="lib.dir" value="${basedir}/src/main/lib"/>
    <property name="src.webapp.dir" value="${basedir}/src/main/webapp"/>
    <property name="src.webinf.dir" value="${src.webapp.dir}/WEB-INF"/>
    <property name="target" value="${basedir}/dist"/>
    <property name="webapp.dir" value="${target}/${web.app.name}"/>
    <!--<property name="resources.dir" value="${webapp.dir}/resources"/>-->
    <property name="resources.dir" value="${webapp.dir}/WEB-INF/classes/META-INF/resources"/>
    <property name="targetname" value="${target}/${web.app.name}-${app.version.number}"/>

    <antversion property="antversion" atleast="${properties.antversion}"/>
    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <target name="clean" description="clean build target directory">
        <echo>
        ************************************************************************************
        cleaning up dist...
        ************************************************************************************
        </echo>
        <delete dir="${basedir}/dist"/>
    </target>

    <target name="web-watch" description="watch fore folders and deploy to webapp">
        <echo>
            ************************************************************************************
            deploy to webapp: watching local folders for changes ...
            ************************************************************************************
        </echo>
    </target>

    <target name="webdav-watch" description="watch fore folders and deploy to webdav">
        <echo>
            ************************************************************************************
            deploy to webdav: watching local folders for changes ...
            ************************************************************************************
        </echo>
    </target>

    <target name="deploy-exploded" description="deploy fore to exploded webapp">
        <echo>
            ************************************************************************************
            deploying to exploded webapp ...
            ************************************************************************************
        </echo>
    </target>

    <target name="deploy" description="deploy fore to webapp">
        <echo>
            ************************************************************************************
            deploying to webapp ...
            ************************************************************************************
        </echo>
    </target>
</project>
<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2011. betterForm Project - http://www.betterform.de
  ~ Licensed under the terms of BSD License
  -->

<!-- $Id: build.xml,v 1.90 2006/11/16 23:55:43 joernt Exp $ -->
<project id="betterform-application" name="betterForm ProjectAssistant" default="prepare" basedir=".">

    <!--

     This build file can be used to build application based upon betterFORM (http://betterform.de).

     A betterFORM application (aka 'xApplication') is a project that uses one of the binary products of
     the betterFORM XForms implementation. Products are:
     - the betterFORM core jar (actual implementation of XForms 1.1 in Java)
     - the betterFORM web application (integration of betterFORM core into a web application)
     - betterFORM XRX (bundling of betterFORM webapp with the eXist XML database)
     - betterFORM betty (an integration of betterFORM core in a Java applet)

     EXTRA BIG TODO: change eXist/DB relevant properties to new syntax see build.properties !!!!!!!!!!!!!!!!

     -->

    <!-- you need to reference a valid GitHub tag here which your xApplication takes as a base -->
    <property name="betterform.version" value="https://github.com/betterFORM/betterFORM/zipball/ProjectAssistant"/>
    <property name="eXist.version" value="http://downloads.sourceforge.net/project/exist/Stable/1.4.2/eXist-setup-1.4.2dev-rev15584.jar"/>


    <property name="xApp.name" value="xApp-01"/>
    <!-- If set XRX-Applications will be stored in this rootcollection. -->
    <property name="rootcollection.name" value=""/>
    <property name="server.port" value="8080"/>
    <property name="server.name" value="localhost"/>
    <property name="webapp.context" value="betterform"/>
    <property name="db.user" value="admin"/>
    <property name="db.pwd" value=""/>

    <property name="core.dir" value="${basedir}/core"/>
    <property name="web.dir" value="${basedir}/web"/>
    <property name="betty.dir" value="${basedir}/betty"/>
    <property name="target.dir" value="${basedir}/target"/>
    <property name="xApp.src" value="${basedir}/src"/>
    <property name="xApp.target" value="${target.dir}/${xApp.name}"/>
    <property name="bf.src" value="${target.dir}/bf-src"/>
    <property name="templates.dir" value="${bf.src}/tools/ProjectAssistant/templates"/>

    <available property="betterform.available" file="${target.dir}/betterform-src.zip"/>
    <available property="eXist.available" file="${target.dir}/exist-install.jar"/>
    <available property="xrx.installed" file="${xApp.target}/webapp/WEB-INF/betterform-config.xml"/>

    <antversion property="antversion" atleast="1.8.2"/>

    <target name="check-ant-version" unless="antversion">
        <echo>Apache Ant ${properties.antversion} or higher is required for this target. Please upgrade your Apache Ant version (${ant.version}) to minimum version 1.7 You can retreive the latest Ant here: http://ant.apache.org/bindownload.cgi</echo>
    </target>

    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <target name="clean" description="clean build target directory">

        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="cleaning up project"/>
        <echo message="************************************************************************************"/>
        <echo/>
        <delete dir="${xApp.target}"/>
    </target>

    <target name="clean-all" description="clean build target directory">
        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="cleaning up target dir"/>
        <echo message="************************************************************************************"/>
        <echo/>
        <delete dir="${target.dir}"/>
    </target>

    <target name="prepare" depends="check-ant-version" description="Setup base ProjectAssistant environment. Fetches betterFORM and eXist 1.4 automatically and does primary setup for development.">
        <mkdir dir="${bf.src}"/>
        <antcall target="_get-dependencies"/>
        <antcall target="_unpack"/>

        <echo/>
        <echo message="************************************************************************************************************"/>
        <echo message="Building betterForm extension"/>
        <echo message="************************************************************************************************************"/>
        <echo/>
        <ant antfile="${bf.src}/XRX/build-XRX.xml" target="update-betterFORM" useNativeBasedir="true" inheritAll="false">
            <property name="eXist.home" value="${xApp.target}"/>
        </ant>

        <ant antfile="${bf.src}/XRX/build-XRX.xml" target="setup-betterFORM-context" inheritall="false" usenativebasedir="true">
            <property name="eXist.home" value="${xApp.target}"/>
        </ant>



        <echo/>
        <echo message="************************************************************************************************************"/>
        <echo message="Copying base Application-Structure"/>
        <echo message="************************************************************************************************************"/>
        <echo/>
        <copy todir="${xApp.src}" includeemptydirs="true" overwrite="false">
            <fileset dir="${templates.dir}/xrx/src"/>
        </copy>

        <copy todir="${basedir}/installer" includeemptydirs="true" overwrite="false">
            <fileset dir="${templates.dir}/xrx/installer"/>
        </copy>


        <!-- TODO: Test!
         <move todir="${xApp.src}/main/xrx/${xApp.name}" file="${xApp.src}/main/xrx/sample"/>
         -->



        <echo/>
        <echo message="************************************************************************************************************"/>
        <echo message="Deploying base Application-Structure into eXist"/>
        <echo message="************************************************************************************************************"/>
        <echo/>

        <antcall target="start"/>
        <antcall target="_deploy-to-db"/>
        <sleep seconds="15"/>
        <antcall target="stop"/>
    </target>

    <target name="deploy" description="deploys betterFORM application during development">
        <echo/>
        <echo message="************************************************************************************************************"/>
        <echo message="Deploying webapp into eXist"/>
        <echo message="************************************************************************************************************"/>
        <echo/>
        <copy todir="${xApp.target}/webapp/WEB-INF/lib">
            <fileset dir="${xApp.src}/main/lib/"/>
        </copy>

        <antcall target="_deploy-to-db"/>
    </target>

    <target name="start" description="start XRX Application">
        <ant antfile="${bf.src}/XRX/build-utils-eXist.xml" target="start-eXist" inheritall="false" usenativebasedir="true">
            <property name="eXist.home" value="${xApp.target}"/>
        </ant>
    </target>

    <target name="stop" description="stop XRX Application" >
        <ant antfile="${bf.src}/XRX/build-utils-eXist.xml" target="stop-eXist" inheritall="false" usenativebasedir="true">
            <property name="eXist.home" value="${xApp.target}"/>
        </ant>
    </target>

    <!-- **************************************** HELPER TARGETS **************************************** -->
    <!-- **************************************** HELPER TARGETS **************************************** -->
    <!-- **************************************** HELPER TARGETS **************************************** -->
    <target name="_get-dependencies">
        <antcall target="_get-betterform"/>
        <antcall target="_get-eXist"/>
    </target>

    <target name="_get-betterform" unless="betterform.available" description="download betterform sources">
        <echo/>
        <echo message="************************************************************************************************************"/>
        <echo message="Downloading betterform dependency"/>
        <echo message="************************************************************************************************************"/>
        <echo/>
        <get src="${betterform.version}"
             dest="${target.dir}/betterform-src.zip"/>
    </target>

    <target name="_get-eXist" unless="eXist.available" description="download eXist installer jar">
        <echo/>
        <echo message="************************************************************************************************************"/>
        <echo message="Downloading eXist dependency"/>
        <echo message="************************************************************************************************************"/>
        <echo/>
        <get src="${eXist.version}"
             dest="${target.dir}/exist-install.jar"/>
    </target>


    <target name="_unpack" depends="check-ant-version" if="antversion">
        <available property="betterform.unzipped" file="${target.dir}/betterform-src.zip"/>
        <available property="eXist.unzipped" file="${target.dir}/exist-install.jar"/>

        <echo/>
        <echo message="************************************************************************************************************"/>
        <echo message="Unpacking betterform "/>
        <echo message="************************************************************************************************************"/>
        <echo/>
        <unzip src="${target.dir}/betterform-src.zip"
               dest="${bf.src}">
            <cutdirsmapper dirs="1"/>
        </unzip>

        <echo/>
        <echo message="************************************************************************************************************"/>
        <echo message="Installing eXist"/>
        <echo message="************************************************************************************************************"/>
        <echo/>
        <java jar="${target.dir}/exist-install.jar"
              fork="true"
              spawn="false" failonerror="true">
            <arg line="-p ${xApp.target}"/>
        </java>
    </target>

    <target name="_deploy-to-db" description="deploy xrx-application to database" if="xrx.installed">
        <ant antfile="${bf.src}/XRX/build-utils-eXist.xml" target="install-files-into-eXist-DB">
           <property name="eXist.home" value="${xApp.target}"/>
           <property name="db-user" value="${db.user}"/>
           <property name="db-passwd" value="${db.pwd}"/>
           <property name="file-source-dir" value="${xApp.src}/main/xrx/"/>
           <property name="db-uri" value="xmldb:exist://${server.name}:${server.port}/${webapp.context}/xmlrpc/db/${rootcollection.name}"/>
        </ant>

        <ant antfile="${bf.src}/XRX/build-utils-eXist.xml" target="install-files-into-eXist-DB">
            <property name="eXist.home" value="${xApp.target}"/>
            <property name="db-user" value="${db.user}"/>
            <property name="db-passwd" value="${db.pwd}"/>
            <property name="file-source-dir" value="${xApp.src}/main/db"/>
            <property name="db-uri" value="xmldb:exist://${server.name}:${server.port}/${webapp.context}/xmlrpc/db/${rootcollection.name}"/>
        </ant>
    </target>

</project>
<?xml version="1.0" encoding="UTF-8" ?>
        <!--
  ~ Copyright (c) 2012. betterFORM Project - http://www.betterform.de
  ~ Licensed under the terms of BSD License
  -->

        <!-- author: Joern Turner -->
        <!-- author: Lars Windauer -->
<!-- $Id: build.xml,v 1.90 2006/11/16 23:55:43 joernt Exp $ -->
<project id="XForms2HTML" name="XForms2HTML" default="transformToXForms" basedir="." >

    <!-- **************************************** PROPERTIES **************************************** -->
    <!-- **************************************** PROPERTIES **************************************** -->
    <!-- **************************************** PROPERTIES **************************************** -->
    <property name="core.dir" value="${basedir}/../../core"/>
    <xmlproperty file="../../build.properties.xml"
                 semanticAttributes="true" keepRoot="false"/>

    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <target name="transformToXForms">
        <xslt destdir="${basedir}/target"
              style="${basedir}/../../resource/src/main/resources/xslt/dojo-dev.xsl"
              force="true"
              in="XFormsMarkup.xml"
              out="${basedir}/ProcessedMarkup.xhtml">
            <classpath refid="transform.class.path"/>
        </xslt>
    </target>


</project>
<?xml version="1.0" encoding="UTF-8" ?>
        <!--
  ~ Copyright (c) 2012. betterFORM Project - http://www.betterform.de
  ~ Licensed under the terms of BSD License
  -->

        <!-- author: Joern Turner -->
        <!-- author: Lars Windauer -->
<!-- $Id: build.xml,v 1.90 2006/11/16 23:55:43 joernt Exp $ -->
<project id="XFormsForHTML" name="XFormsForHTML" default="transformToXForms" basedir="." >

    <!-- **************************************** PROPERTIES **************************************** -->
    <!-- **************************************** PROPERTIES **************************************** -->
    <!-- **************************************** PROPERTIES **************************************** -->
    <property name="core.dir" value="${basedir}/../../core"/>
    <xmlproperty file="../../build.properties.xml"
                 semanticAttributes="true" keepRoot="false"/>


    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <target name="transformToXForms">
        <xslt basedir="${basedir}"
              destdir="${basedir}/target"
              style="${basedir}/XFormsForHTML.xsl"
              force="true"
              includes="*.xhtml"
              extension=".html">
            <classpath refid="transform.class.path"/>
        </xslt>
    </target>

    <target name="transformToX4H">
        <xslt basedir="${basedir}/XFormsFull"
              destdir="${basedir}/target"
              style="${basedir}/convert2x4h.xsl"
              force="true"
              includes="*.xhtml"
              extension=".html">
            <classpath refid="transform.class.path"/>
        </xslt>
    </target>




</project>
<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2012. betterFORM Project - http://www.betterform.de
  ~ Licensed under the terms of BSD License
  -->

<!-- $Id: build.xml,v 1.90 2006/11/16 23:55:43 joernt Exp $ -->
<project  name="XF11_Generate_Conformance_Tests" basedir="." >

    <!-- **************************************** PROPERTIES **************************************** -->
    <!-- **************************************** PROPERTIES **************************************** -->
    <!-- **************************************** PROPERTIES **************************************** -->
    <property name="project.dir" value="${basedir}"/>
    <property name="core.dir" value="${basedir}/../../core"/>
    <xmlproperty file="../../build.properties.xml" semanticAttributes="true" keepRoot="false"/>
    <property name="target.dir" value="${basedir}/target"/>
    <property name="lib.dir" value="${basedir}/../../core/src/main/lib"/>

<!--
    <path id="generator.libs" description="classpath for compiling core classes">
        <pathelement location="${lib.dir}/saxon-9.0.jar"/>
        <pathelement location="${lib.dir}/saxon-dom-9.0.jar"/>
        <pathelement location="${lib.dir}/xercesImpl-2.8.0.jar"/>
        <pathelement location="${lib.dir}/xml-apis-1.0.b2.jar" />
    </path>
-->

    <path id="treewalker.lib" description="classpath for compiling core classes">
        <pathelement location="lib/hdlg/hdlg.jar"/>
    </path>

    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <target name="clean" description="clean build generated directory">
        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="cleaning up everything in ${project.dir}/target..."/>
        <echo message="************************************************************************************"/>
        <echo/>
        <delete dir="${target.dir}"/>
        <mkdir dir="${target.dir}"/>
    </target>


    <target name="prepare" depends="clean" >

        <copy todir="${target.dir}/xhtml/XFormsTestSuite1.1E1/Edition1">
            <fileset dir="../../resource/src/test/seleniumIDE/conformance/x11edition1" includes="**/*.xhtml"/>
        </copy>
        <delete dir="${target.dir}/xhtml/XFormsTestSuite1.1E1/Edition1/driverPages"/>

        <echo/>
        <echo>Create XF11 Conformance Test Directory Listing</echo>
        <echo/>
        <java jar="lib/hdlg/hdlg.jar"
              dir="${basedir}/lib/hdlg"
              fork="true"
              failonerror="true"
              maxmemory="128m">
            <arg value="XML"/>
            <arg value="../../target/xhtml"/>
            <arg value="../../XF11TestSuiteDirListing.xml"/>
        </java>

    </target>

    <target name="generateHTMLWebtests" depends="prepare" description="generate Selenium HTML Webtests">
        <xslt in="XF11TestSuiteDirListing.xml"
              style="${basedir}/xslt/Selenium.xsl"
              out="target/XF11TestSuiteDirListing.xml"
              force="true">
             <param name="server" expression="${webtest.server}"/>
            <param name="targetURL" expression="${webtest.url}"/>
            <param name="rootDir" expression="${basedir}"/>
            <classpath refid="transform.class.path"/>
        </xslt>

        <echo>Merge generated and existing Selenium HTML Tests</echo>
        <copy todir="${target.dir}/seleniumIDE/conformance/x11edition/chapt02" overwrite="true" flatten="true">
            <fileset dir="${target.dir}/webtest/XFormsTestSuite1.1E1/Edition1/Chapt02" includes="**/*.html"/>
        </copy>
        <copy todir="${target.dir}/seleniumIDE/conformance/x11edition/chapt03" overwrite="true" flatten="true">
            <fileset dir="${target.dir}/webtest/XFormsTestSuite1.1E1/Edition1/Chapt03" includes="**/*.html"/>
        </copy>
        <copy todir="${target.dir}/seleniumIDE/conformance/x11edition/chapt04" overwrite="true" flatten="true">
            <fileset dir="${target.dir}/webtest/XFormsTestSuite1.1E1/Edition1/Chapt04" includes="**/*.html"/>
        </copy>
        <copy todir="${target.dir}/seleniumIDE/conformance/x11edition/chapt05" overwrite="true" flatten="true">
            <fileset dir="${target.dir}/webtest/XFormsTestSuite1.1E1/Edition1/Chapt05" includes="**/*.html"/>
        </copy>
        <copy todir="${target.dir}/seleniumIDE/conformance/x11edition/chapt06" overwrite="true" flatten="true">
            <fileset dir="${target.dir}/webtest/XFormsTestSuite1.1E1/Edition1/Chapt06" includes="**/*.html"/>
        </copy>
        <copy todir="${target.dir}/seleniumIDE/conformance/x11edition/chapt07" overwrite="true" flatten="true">
            <fileset dir="${target.dir}/webtest/XFormsTestSuite1.1E1/Edition1/Chapt07" includes="**/*.html"/>
        </copy>
        <copy todir="${target.dir}/seleniumIDE/conformance/x11edition/chapt08" overwrite="true" flatten="true">
            <fileset dir="${target.dir}/webtest/XFormsTestSuite1.1E1/Edition1/Chapt08" includes="**/*.html"/>
        </copy>
        <copy todir="${target.dir}/seleniumIDE/conformance/x11edition/chapt09" overwrite="true" flatten="true">
            <fileset dir="${target.dir}/webtest/XFormsTestSuite1.1E1/Edition1/Chapt09" includes="**/*.html"/>
        </copy>
        <copy todir="${target.dir}/seleniumIDE/conformance/x11edition/chapt10" overwrite="true" flatten="true">
            <fileset dir="${target.dir}/webtest/XFormsTestSuite1.1E1/Edition1/Chapt10" includes="**/*.html"/>
        </copy>
        <copy todir="${target.dir}/seleniumIDE/conformance/x11edition/chapt11" overwrite="true" flatten="true">
            <fileset dir="${target.dir}/webtest/XFormsTestSuite1.1E1/Edition1/Chapt11" includes="**/*.html"/>
        </copy>


        <copy todir="${target.dir}/seleniumIDE/conformance/x11edition" overwrite="true">
            <fileset dir="${basedir}/../../resource/src/test/seleniumIDE/conformance/x11edition1"/>
        </copy>
    </target>



</project>
<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2012. betterFORM Project - http://www.betterform.de
  ~ Licensed under the terms of BSD License
  -->

<!-- $Id: build.xml,v 1.90 2006/11/16 23:55:43 joernt Exp $ -->
<project name="Editor generator tools" default="deployEditor" basedir=".">


    <!--

    author: Joern Turner (2010)
    -->

    <!-- **************************************** PROPERTIES **************************************** -->
    <!-- **************************************** PROPERTIES **************************************** -->
    <!-- **************************************** PROPERTIES **************************************** -->

    <property name="core.dir" value="${basedir}/../../core"/>
    <property name="project.dir" value="${basedir}/../.."/>
    <xmlproperty file="${project.dir}/build.properties.xml"
                 semanticAttributes="true" keepRoot="false"/>

    <target name="clean">
        <delete dir="${basedir}/target"/>
    </target>

    <target name="prepare">
        <mkdir dir="${basedir}/target"/>
    </target>

    <target name="generate-XForms" depends="prepare" description="generates XForms">
        <xslt in="${basedir}/XForms-11-Schema.xsd"
              out="${basedir}/xforms.xml"
              style="${basedir}/generateXForms.xsl"
              force="true"
                classpathref="transform.class.path">
        </xslt>
    </target>

    <target name="sort-XForms" depends="generate-XForms" description="sort properties">
    <!--<target name="sort-XForms" description="sort properties">-->

        <echo>
        ************************************************************************************
        generate xforms documents using the order defined by propertyOrder.xml
        ************************************************************************************
        </echo>

        <xslt basedir="${basedir}/target/xforms"
            destdir="${basedir}/target/sortedxforms/"
            style="${basedir}/sortXForms.xsl"
            extension=".xhtml"
            force="true">
            <classpath refid="transform.class.path"/>            
        </xslt>
    </target>

    <target name="deploy-xforms" depends="sort-XForms" description="deploy sorted xforms to web module">
        <echo>
        ************************************************************************************
                              deploy sorted xforms documents to web module
        ************************************************************************************
        </echo>


        <copy todir="${basedir}/../../resource/src/main/xforms/incubator/editor" flatten="true" overwrite="true">
            <fileset dir="${basedir}" includes="target/sortedxforms/*.xhtml"/>
            <fileset dir="${basedir}" includes="resources/xfDatatype.json"/>
        </copy>
        <ant antfile="../../web/build.xml" inheritall="false" target="deploy-forms"/>
    </target>
    
    <target name="generate-HTML-Forms" depends="generate-xf-datatype-list"  description="generates HTML forms from XForms">
        <antcall target="sort-XForms"/>
        <xslt basedir="${basedir}/target/sortedxforms"
              destdir="${basedir}/target/html/"
              style="${basedir}/generate-html-forms.xsl"
              extension=".html"
              force="true"
              classpathref="transform.class.path">
            <classpath refid="transform.class.path"/>

        </xslt>

    </target>

    <target name="generate-xf-datatype-list"  description="generates HTML forms from XForms">
        <xslt in="${basedir}/XForms-11-Schema.xsd"
              out="${basedir}/target/xfDatatype.json"
              style="${basedir}/generateXFDatatypeList.xsl"
              extension=".json"
              force="true"
              classpathref="transform.class.path">
            <classpath refid="transform.class.path"/>
        </xslt>
    </target>


<!--
    <target name="generate-Prototypes" depends="prepare" description="generate Prototypes for XForms element structure">
        <xslt in="${basedir}/XForms-11-Schema.xsd"
              out="${basedir}/target/prototypes.xml"
              style="${basedir}/generatePrototypes.xsl"
              force="true"
              classpathref="transform.class.path">
        </xslt>
    </target>
-->

    <target name="generate-test-form-nested-divs" depends="prepare" description="generate test form for editor">
        <xslt in="${basedir}/testinput/registration.xhtml"
              out="${basedir}/target/registration-div.xml"
              style="${basedir}/xf2div.xsl"
              force="true"
              classpathref="transform.class.path">
        </xslt>
    </target>


    <!-- for testing - real version is in incubator/editor -->
    <target name="dom2xf" depends="prepare" description="turn DOM from client into xforms againr">
        <xslt in="${basedir}/testinput/dump.xml"
              out="${basedir}/target/dump-xforms.xhtml"
              style="${basedir}/dom2xf.xsl"
              force="true"
              classpathref="transform.class.path">
        </xslt>
    </target>

    <!-- base transform that generates a list of possible child elements for a given parent. The whole
    thing is generated to ul/li structures and should be used as a base for further transforms. -->
    <target name="generateChildList" depends="prepare" description="generate list of possible child elements">
        <xslt in="${basedir}/XForms-11-Schema.xsd"
              out="${basedir}/target/childlist.xml"
              style="${basedir}/generateChildList.xsl"
              force="true"
              classpathref="transform.class.path">
        </xslt>
    </target>

    <target name="generateJSforChildElementCheck" depends="generateChildList" description="generate list of possible child elements">
        <echo>
            Attention: this target re-generates the list of childs from schema. The add menu js is created from
            an hand-edited version of this file in 'resources' dir.
        </echo>
        <xslt in="${basedir}/target/childlist.xml"
              out="${basedir}/target/xfUtil.js"
              style="${basedir}/generateJSforChildElementCheck.xsl"
              force="true"
              classpathref="transform.class.path">
        </xslt>
    </target>

    <target name="generateJSforAddMenus" description="generate list of possible child elements">
        <xslt in="${basedir}/resources/childlist.xml"
              out="${basedir}/target/addMenu.js"
              style="${basedir}/generateJSforAddMenus.xsl"
              force="true"
              classpathref="transform.class.path">
        </xslt>
    </target>

    <target name="generate-Component Tree" depends="generateChildList" description="generates the markup for the componentTree ">
        <xslt in="${basedir}/target/childlist.xml"
              out="${basedir}/target/componentTree.html"
              style="${basedir}/generateComponentTree.xsl"
              force="true"
              classpathref="transform.class.path">
        </xslt>
    </target>


    <target  name="deployEditor" depends="generate-HTML-Forms" description="generates HTML forms and deploys them to xforms/incubator/editor">
        <copy todir="${basedir}/../../resource/src/main/xforms/incubator/editor" flatten="true" overwrite="true">
            <fileset dir="${basedir}" includes="target/html/*.html"/>
            <fileset dir="${basedir}" includes="target/html/*.json"/>
        </copy>
        <ant antfile="../../web/build.xml" inheritall="false" target="deploy-forms"/>
    </target>

    <target name="update-originDoc" description="generates the markup for the componentTree ">
        <xslt in="${basedir}/target/dump-xforms.xhtml"
              out="${basedir}/target/merged.xhtml"
              style="${basedir}/updateOriginal.xsl"
              force="true"
              classpathref="transform.class.path">
            <param name="originDoc" expression="testinput/registration.xhtml"/>
        </xslt>
    </target>

    <target name="generate-piemenus" description="generates the markup for the piemenus">
        <xslt in="${basedir}/resources/childlist.xml"
              out="${basedir}/target/circleMenues-generated.js"
              style="${basedir}/generateCircleMenues.xsl"
              force="true"
              classpathref="transform.class.path">
        </xslt>
    </target>

    <target name="generate-property-form" description="generates the xforms markup for the 'all properties in one form' approach">
        <xslt in="${basedir}/resources/propertyOrder.xml"
              out="${basedir}/target/propertyForm.xhtml"
              style="${basedir}/generatePropertyForm.xsl"
              force="true"
              classpathref="transform.class.path">
        </xslt>
    </target>


</project>
<?xml version="1.0" encoding="UTF-8" ?>
        <!--
  ~ Copyright (c) 2012. betterFORM Project - http://www.betterform.de
  ~ Licensed under the terms of BSD License
  -->

        <!-- author: Joern Turner -->
        <!-- author: Lars Windauer -->
<!-- $Id: build.xml,v 1.90 2006/11/16 23:55:43 joernt Exp $ -->
<project id="XFormsForHTML" name="XFormsForHTML" default="transformToXForms" basedir="." >

    <!-- **************************************** PROPERTIES **************************************** -->
    <!-- **************************************** PROPERTIES **************************************** -->
    <!-- **************************************** PROPERTIES **************************************** -->
    <property name="core.dir" value="${basedir}/../../core"/>
    <xmlproperty file="../../build.properties.xml"
                 semanticAttributes="true" keepRoot="false"/>

    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <target name="transformToXForms">
        <xslt basedir="${basedir}"
              destdir="${basedir}/target"
              style="${basedir}/fm2xf.xsl"
              force="true"
              includes="*.xhtml"
              extension=".mm">
            <classpath refid="transform.class.path"/>
        </xslt>
    </target>
</project>
<!--
  ~ Copyright (c) 2012. betterFORM Project - http://www.betterform.de
  ~ Licensed under the terms of BSD License
  -->

<project name="Installer" default="release" basedir="." >
    <xmlproperty file="../../build.properties.local.xml" semanticAttributes="true" keepRoot="false"/>
    <xmlproperty file="../../release.properties.xml" semanticAttributes="true" keepRoot="false"/>
    <xmlproperty file="../../build.properties.xml" semanticAttributes="true" keepRoot="false"/>

    <property name="installer.dir" value="."/>
    <property name="buildfiles.dir" value="${basedir}/build-files"/>
    <property name="installer.target" value="${basedir}/target"/>
    <property name="project.dir" value="../../"/>


    <tstamp>
        <format property="build.date" pattern="yyyyMMdd-HHmmss"/>
    </tstamp>


    <!-- clean target folders of all modules -->
    <target name="clean">
        <ant antfile="${project.dir}/build.xml" target="clean-all" inheritall="false"/>
    </target>


    <target name="prepare" description="prepares all files needed for installer" depends="clean">
        <mkdir dir="${installer.dir}/target"/>

        <echo>
            __== Copying license ==__
        </echo>
        <copy tofile="${basedir}/target/BSD-license.txt">
            <fileset file="${basedir}/resource/BSD-license-inlined.txt"/>
        </copy>

        <echo>
            __== Update Maven POMS ==__
        </echo>

        <ant antfile="${project.dir}/build.xml" inheritall="false" target="update-maven-poms"/>

        <echo>
            __== Create Custom Dojo Build ==__
        </echo>
        <ant antfile="${project.dir}/web/build-dojo.xml" inheritall="false" target="build-dojo"/>

        <echo>
            __== Create WAR file ==__
        </echo>

        <!-- Create WAR for Installer -->
        <ant antfile="${buildfiles.dir}/build-WAR.xml" target="create-war" usenativebasedir="true" inheritall="true">
            <property name="installer.target" value="${installer.target}"/>
        </ant>


        <echo>
            __== Create Jetty environment ==__
        </echo>
        <!-- Create jetty-environment for Installer -->
        <ant antfile="${buildfiles.dir}/build-jetty.xml" target="create-jetty" usenativebasedir="false"/>

        <echo>
            __== Filter Installer Resources ==__
        </echo>
        <!-- Filter jetty resources -->
        <filter token="APP_VERSION_NUMBER" value="${app.version.number}"/>
        <filter token="APP_VERSION_NAME" value="${app.version.name}"/>

        <copy description="filter welome.html"
              tofile="${basedir}/resource/welcome.html"
              overwrite="true"
              filtering="true"
              file="${basedir}/resource/welcome.template.html"/>

        <filter token="JAVA_VERSION" value="${properties.javac.version}"/>
        <copy description="filter launch4j.xml"
              tofile="${basedir}/launch4j.xml"
              overwrite="true"
              filtering="true"
              file="${basedir}/launch4j.template.xml"/>

        <copy description="filter installer.xml"
              tofile="${basedir}/installer.xml"
              overwrite="true"
              filtering="true"
              file="${basedir}/installer.template.xml"/>

    </target>


    <target name="create-betterFORMInstaller-jar" description="Builds a betterForm Installer providing WAR, jetty-standalone and XRX-Bundle" depends="prepare">
        <echo>
            __== Creating Installer ==__
        </echo>

        <!-- Allows us to use the IzPack Ant task -->

        <!-- Use whole izPack Distribution -->
        <!--
        <path id="izpackdeps">
			<fileset dir="${installer.izPack}/lib/">
				<include name="*.jar"/>
			</fileset>
		</path>

        <taskdef name="izpack" classname="com.izforge.izpack.ant.IzPackTask">
			<classpath refid="izpackdeps" />
		</taskdef>
        -->

        <!-- Use standalone compiler -->
        <taskdef name="izpack"
                 classpath="${basedir}/lib/standalone-compiler-4.3.5.jar"
                 classname="com.izforge.izpack.ant.IzPackTask"/>



        <sleep seconds="15" description="wait for fs to settle"/>
        <!-- We call IzPack -->
        <echo>
           __== Makes the installer using IzPack ==__
        </echo>

        <!--
                <izpack input="${basedir}/installer.xml"
                        output="${basedir}/target/betterform-install.jar"
                        installerType="web"
                        basedir="${basedir}/target"/>
        -->
        <izpack input="${basedir}/installer.xml"
                output="${basedir}/target/betterform-install.jar"
                installerType="${installer.installerType}"
                basedir="${basedir}/target"/>
    </target>

    <target name="create-betterFORMInstaller" depends="create-betterFORMInstaller-jar"  description="Create .exe from installer">
        <echo>
            __== Create IzPack .exe ==__
        </echo>
        <available property="launch4j.available" file="${installer.launch4j}/launch4j.jar" />

        <fail unless="launch4j.available">Error: Can't detect launch4j
            !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
            Error: launch4j.jar is not installed at ${installer.launch4j}/launch4j.jar.
            Please download it at http://launch4j.sourceforge.net/ and check the property 'launch4j'
            in the build.properties.xml file.
            !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
        </fail>

        <taskdef name="launch4j"
			classname="net.sf.launch4j.ant.Launch4jTask"
			classpath="${installer.launch4j}/launch4j.jar:${installer.launch4j}/lib/xstream.jar" />

        <property name="inst-jar" value="${basedir}/target/betterform-install.jar"/>
		<property name="inst-exe" value="${basedir}/target/betterform-install.exe"/>

        <launch4j configFile="${basedir}/launch4j.xml" jar="${inst-jar}" outfile="${inst-exe}"/>

        <chmod file="${basedir}/target/betterform-install.jar" perm="775"/>
        <chmod file="${basedir}/target/betterform-install.exe" perm="775"/>
	</target>


    <target name="release" depends="create-betterFORMInstaller" description="creates betterFORM release">
        <echo>
            __== Move Release Files to ${basedir}/release ==__
        </echo>
        <mkdir dir="${basedir}/release"/>
        <move file="${basedir}/target/betterform-install.jar" tofile="${basedir}/release/betterform-${app.version.name}-${app.version.number}-${build.date}.jar"/>
        <move file="${basedir}/target/betterform-install.exe" tofile="${basedir}/release/betterform-${app.version.name}-${app.version.number}-${build.date}.exe"/>
        <move file="${basedir}/target/betterform.war" tofile="${basedir}/release/betterform-${app.version.name}-${app.version.number}-${build.date}.war"/>
    </target>

</project>
<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2012. betterFORM Project - http://www.betterform.de
  ~ Licensed under the terms of BSD License
  -->

<!-- $Id: build.xml,v 1.90 2006/11/16 23:55:43 joernt Exp $ -->
<project name="Maven Tools" default="info" basedir=".">


    <!--
    This buildfile contains target regarding Maven. Housekeeping, updating pom.xml from Ant
    with XSLT and the like.

    author: Joern Turner (2008)
    author: Lars Windauer (2008)
    -->

    <!-- **************************************** PROPERTIES **************************************** -->
    <!-- **************************************** PROPERTIES **************************************** -->
    <!-- **************************************** PROPERTIES **************************************** -->

    <property name="project.dir" value="${basedir}/../.."/>
    <property name="core.dir" value="${project.dir}/core"/>
    <xmlproperty file="${project.dir}/build.properties.xml"
                 semanticAttributes="true" keepRoot="false"/>

    <!-- **************************************** MAVEN TARGETS FOR BETTERFORM CORE **************************************** -->
    <!-- **************************************** MAVEN TARGETS FOR BETTERFORM CORE **************************************** -->
    <!-- **************************************** MAVEN TARGETS FOR BETTERFORM CORE **************************************** -->
    <target name="info">
        <exec command="ant -p" dir="${basedir}" />
    </target>

    <target name="update-project-pom"
            description="update the Core pom.xml file with dependencies from build.properties.xml">
        <echo message="Ant Module: ${app.name}"/>
        <xslt in="${project.dir}/pom.xml"
              out="${project.dir}/pom.new.xml"
              style="${project.dir}/tools/maven/updatePOM.xsl"
              force="true">
            <param name="buildprops" expression="${project.dir}/build.properties.xml"/>
            <param name="module" expression="betterform-project"/>
        </xslt>
        <move file="${project.dir}/pom.xml" tofile="${project.dir}/pom.xml.old"/>
        <move file="${project.dir}/pom.new.xml" tofile="${project.dir}/pom.xml"/>
    </target>

    <target name="update-core-pom"
            description="update the Core pom.xml file with dependencies from build.properties.xml">
        <echo message="Ant Module: ${core.app.name}"/>
        <xslt in="${project.dir}/core/pom.xml"
              out="${project.dir}/core/pom.new.xml"
              style="${project.dir}/tools/maven/updatePOM.xsl"
              force="true">
            <param name="buildprops" expression="${project.dir}/build.properties.xml"/>
            <param name="module" expression="${core.app.name}"/>
        </xslt>
        <move file="${project.dir}/core/pom.xml" tofile="${project.dir}/core/pom.xml.old"/>
        <move file="${project.dir}/core/pom.new.xml" tofile="${project.dir}/core/pom.xml"/>
    </target>

    <target name="update-web-pom"
            description="update the web pom.xml file with dependencies from build.properties.xml">
        <echo message="Ant Module: ${web.app.name}"/>
        <xslt in="${project.dir}/web/pom.xml"
              out="${project.dir}/web/pom.new.xml"
              style="${project.dir}/tools/maven/updatePOM.xsl"
              force="true">
            <param name="buildprops" expression="${project.dir}/build.properties.xml"/>
            <param name="module" expression="${web.app.name}"/>
        </xslt>
        <move file="${project.dir}/web/pom.xml" tofile="${project.dir}/web/pom.xml.old"/>
        <move file="${project.dir}/web/pom.new.xml" tofile="${project.dir}/web/pom.xml"/>
    </target>


    <target name="create-core-install" depends="update-core-pom">
        <xslt in="${project.dir}/core/build.xml"
              out="${project.dir}/core/install-files.xml"
              style="${project.dir}/tools/maven/install-libs.xsl"
              force="true">
            <classpath refid="transform.class.path"/>
            <param name="buildprops" expression="${project.dir}/build.properties.xml"/>
            <param name="core.dir" expression="${project.dir}/core"/>
            <param name="module" expression="${core.app.name}"/>
        </xslt>
    </target>

    <target name="create-web-install" depends="update-web-pom">
        <xslt in="${project.dir}/web/build.xml"
              out="${project.dir}/web/install-files.xml"
              style="${project.dir}/tools/maven/install-libs.xsl"
              force="true">
            <classpath refid="transform.class.path"/>
            <param name="buildprops" expression="${project.dir}/build.properties.xml"/>
            <param name="core.dir" expression="${project.dir}/core"/>
            <param name="web.dir" expression="${project.dir}/web"/>
            <param name="module" expression="${web.app.name}"/>
        </xslt>
    </target>


    <target name="create-maven-install">
        <antcall target="create-core-install"/>
        <antcall target="create-web-install"/>
    </target>

    <target name="install-core-dependencies" depends="create-core-install" description="installs core dependencies for Maven">
        <ant antfile="${project.dir}/core/install-files.xml" target="install-dependencies"/>
        <delete file="${project.dir}/core/install-files.xml"/>
    </target>

    <target name="install-web-dependencies" depends="create-web-install" description="installs web dependencies for Maven">
        <ant antfile="${project.dir}/web/install-files.xml" target="install-dependencies"/>
        <delete file="${project.dir}/web/install-files.xml"/>
    </target>



    <target name="install-maven-dependencies" depends="create-maven-install"
            description="executes generated Ant file and install needed libraries in Maven repository">

        <antcall target="install-core-dependencies"/>
        <!-- Create needed core.jar for web mvn -->
        
        <ant antfile="${project.dir}/core/build.xml" target="package" dir="${project.dir}/core" inheritall="false"/>
        <antcall target="install-web-dependencies"/>
    </target>


    <target name="prepare-jetty-embedded" description="copies forms into src tree for live-editing with embedded jetty">
        <copy todir="${project.dir}/web/src/main/webapp/forms">
            <fileset dir="${basedir}/../../resource/src/main/xforms"/>
        </copy>
    </target>
</project>
<?xml version="1.0" encoding="UTF-8" ?>
        <!--
  ~ Copyright (c) 2012. betterFORM Project - http://www.betterform.de
  ~ Licensed under the terms of BSD License
  -->

        <!-- author: Jörn Turner -->
        <!-- author: Lars Windauer -->
<!-- $Id: build.xml,v 1.90 2006/11/16 23:55:43 joernt Exp $ -->
<project id="repeatedNodeset" name="repeatedNodeset" default="generateRepeatInstance" basedir="." >

    <!-- **************************************** PROPERTIES **************************************** -->
    <!-- **************************************** PROPERTIES **************************************** -->
    <!-- **************************************** PROPERTIES **************************************** -->
    <property name="core.dir" value="${basedir}/../../core"/>
    <xmlproperty file="../../build.properties.xml" semanticAttributes="true" keepRoot="false"/>


    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <target name="generateRepeatInstance">
        <xslt in="mockupGenerator/repeatInstance.xml"
              out="${basedir}/out.xml"
              style="${basedir}/generateRepeatedNodesets.xsl"
              force="true">
            <classpath refid="transform.class.path"/>
        </xslt>
    </target>


</project>
<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2012. betterFORM Project - http://www.betterform.de
  ~ Licensed under the terms of BSD License
  -->

<!--
    author: Joern Turner
    author: Lars Windauer
 -->
<project id="web" name="betterForm Web" default="deploy" basedir=".">

    <!-- **************************************** PROPERTIES **************************************** -->
    <!-- **************************************** PROPERTIES **************************************** -->
    <!-- **************************************** PROPERTIES **************************************** -->
    <!-- ###
          ATTENTION - the properties below must be set before build.properties.xml
          is called - DO NOT MOVE
  ###  -->

    <property name="root.dir" value="${basedir}/.."/>
    <property name="resource.src.dir" value="${basedir}/src"/>
    <property name="core.dir" value="${basedir}/../core"/>
    <property name="web.dir" value="${basedir}"/>
    <xmlproperty file="../build.properties.xml" semanticAttributes="true" keepRoot="false"/>


    <!-- local Web properties -->
    <property name="forms.target" value="forms"/>
    <property name="lib.dir" value="${basedir}/src/main/lib"/>
    <property name="src.webapp.dir" value="${basedir}/src/main/webapp"/>
    <property name="src.webinf.dir" value="${src.webapp.dir}/WEB-INF"/>
    <property name="target" value="${basedir}/target"/>
    <property name="webapp.dir" value="${target}/${web.app.name}"/>
    <!--<property name="resources.dir" value="${webapp.dir}/resources"/>-->
    <property name="resources.dir" value="${webapp.dir}/WEB-INF/classes/META-INF/resources"/>
    <property name="targetname" value="${target}/${web.app.name}-${app.version.number}"/>

    <antversion property="antversion" atleast="${properties.antversion}"/>
    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <target name="clean" description="clean build target directory">
        <echo>
        ************************************************************************************
        cleaning up web...
        ************************************************************************************
        </echo>
        <delete dir="${basedir}/target"/>
    </target>

    <!-- **************************************** PREPARATION **************************************** -->
    <!-- **************************************** PREPARATION **************************************** -->
    <!-- **************************************** PREPARATION **************************************** -->
    <target name="prepare" description="init the build process" depends="check-ant-version" if="antversion">
        <echo>
        ************************************************************************************
        copying Core classes...
        ************************************************************************************
        </echo>

        <tstamp/>
        <mkdir dir="${target}/classes"/>

        <ant antfile="build.xml" target="compile" dir="${core.dir}" inheritall="true"/>

        <copy todir="${target}/classes">
            <fileset dir="${core.dir}/target/classes"/>
        </copy>
    </target>

    <!-- **************************************** COMPILATION **************************************** -->
    <!-- **************************************** COMPILATION **************************************** -->
    <!-- **************************************** COMPILATION **************************************** -->

    <!--
        Default build.properties setting are as below. If you need to compile with debug settings you can either
        a. change relevant properties in build.properties.xml or
        b. call Ant like this: ant compile -Djavac.debug="true"

        javac.debug=off
        javac.deprecation=off
        javac.optimize=on

    -->

    <target name="compile" depends="prepare" description="compile all web sources">
        <echo>
        ************************************************************************************
        compiling Web classes...
        ************************************************************************************
        JavaOptions:
            version:     ${properties.javac.version}
            debug:       ${properties.javac.debug}
            deprecation: ${properties.javac.deprecation}
            optimize:    ${properties.javac.optimize}

        ************************************************************************************
        </echo>

        <javac description="compile source files"
               srcdir="${basedir}/src/main/java"
               destdir="${target}/classes"
               classpathref="web.class.path"
               target="${properties.javac.version}"
               debug="${properties.javac.debug}"
               deprecation="${properties.javac.deprecation}"
               optimize="${properties.javac.optimize}"
               includeantruntime="false"
               nowarn="true"
                />
    </target>

    <target name="create-single-jar"
            description="creates a single jar for all classes and resources">

        <!--<antcall target="create-jar"/>-->
        <antcall target="compile"/>

        <echo>
        ************************************************************************************
        copy resources to META-INF/resources
        ************************************************************************************
        </echo>
        <copy todir="${target}/classes/META-INF/resources">
            <fileset dir="${resource.src.dir}/main/webapp/resources" includes="**/*" excludes="scripts/**" />
        </copy>

<!--
        <copy todir="${target}/classes/META-INF/resources/scripts/betterform/editor/">
            <fileset file="${resource.src.dir}/main/resources/scripts/betterform/editor/addMenu.js"/>
        </copy>
-->

        <!--delete the script folder - did not find a solution to exclude these in the copy above -->
        <!--<delete dir="${basedir}/target/classes/META-INF/resources/scripts"/>-->

        <!-- recreate script folder -->
        <!--<mkdir dir="${basedir}/target/classes/META-INF/resources/scripts/release"/>-->


        <echo>
        ************************************************************************************
        unpacking optimized javascript library
        ************************************************************************************
        </echo>
        <unzip src="${resource.src.dir}/main/lib/${app.name}-js-optimized.zip"
               dest="${target}/classes/META-INF/resources/scripts"/>
        <echo>
        ************************************************************************************
        compressing classes plus resources into a single jar
        ************************************************************************************
        </echo>
        <jar basedir="${target}/classes" compress="true" jarfile="${target}/betterform.jar" update="true" excludes="**/ehcache.xml"/>

        <echo>
            ************************************************************************************
            copying jar to WEB-INF/lib
            ************************************************************************************
        </echo>
        <!--<copy todir="${webapp.dir}/WEB-INF/lib" file="${web.dir}/target/betterform.jar"/>-->

        <echo>
            ************************************************************************************
            deleting exploded classes folder to avoid conflicts
            ************************************************************************************
        </echo>
        <!--<delete dir="${webapp.dir}/WEB-INF/classes"/>-->



    </target>

    <target name="package" depends="deploy, deploy-forms" description="create js optimized war file">
        <antcall target="create-war"/>
    </target>

    <target name="create-war" description="create a betterFORM web application archive">
        <echo>
        ************************************************************************************
        creating war-file...
        ************************************************************************************
        </echo>

        <war warfile="${targetname}.war"
             webxml="${webapp.dir}/WEB-INF/web.xml"
             basedir="${webapp.dir}">
        </war>
    </target>


    <target name="exploded-webapp-base"
            description="deployment for new resource loading">
        <echo>
        ************************************************************************************
                                unoptimized DEVELOPMENT deployment
        ************************************************************************************
        ************************************************************************************
        build deployment structure (exploded war) - creates bare-bone structure of webapp with:
        - dashboard.html (should be moved to resources too)
        - blank.html (needed by Dojo loader)
        - jsp folder (should be eliminated)
        - an empty upload dir (preconfigured directory)
        - WEB-INF with config-files

        This target explicitly does not handle:
            - global resources including JavaScript
            - betterFORM Java classes
            - copying of libs betterFORM depends on

        These must be handled by target depending on this.
        ************************************************************************************
        </echo>

        <!-- Filters for log4j.xml see build.properties.xml for a description-->
        <filter token="APPENDER" value="${config.log4j.appender}"/>
        <filter token="ROOT_LOG_LEVEL" value="${config.log4j.loglevel.root}"/>
        <filter token="BETTERFORM_LOG_LEVEL" value="${config.log4j.loglevel.betterform}"/>
        <filter token="EHCACHE_LOG_LEVEL" value="${config.log4j.loglevel.ehcache}"/>
        <filter token="DWR_LOG_LEVEL" value="${config.log4j.loglevel.dwr}"/>

        <copy description="filter log4j.xml"
              tofile="${src.webinf.dir}/log4j.xml"
              overwrite="true"
              filtering="true"
              file="${src.webinf.dir}/log4j.template.xml">

        </copy>

        <!-- Filters for web.xml see build.properties.xml for a description-->
        <filter token="CACHING" value="${config.webinf.caching}"/>
        <filter token="DWR_DEBUG" value="${config.webinf.debugDWR}"/>
        <copy description="filter web.xml"
              tofile="${src.webinf.dir}/web.xml"
              overwrite="true"
              filtering="true"
              file="${src.webinf.dir}/web.template.xml">

        </copy>

        <!-- Filters for betterform.config see build.properties.xml for a description-->
        <filter token="INIT_LOGGING" value="${config.bfconfig.initLogging}"/>
        <filter token="DEFAULT_ALERT" value="${config.bfconfig.generateDefaultAlerts}"/>
        <filter token="DEBUG_COMPONENTS" value="${config.bfconfig.debugComponents}"/>
        <filter token="EVENT_OPTIMIZATION" value="${config.bfconfig.enableEventOptimization}"/>
        <filter token="INCLUDES" value="${config.bfconfig.doIncludes}"/>
        <filter token="MAIL_ADMIN" value="${config.bfconfig.mailadmin}"/>
        <copy description="filter betterform-config.xml"
              tofile="${src.webinf.dir}/betterform-config.xml"
              overwrite="true"
              filtering="true"
              file="${src.webinf.dir}/betterform-config.template.xml">

        </copy>

        <copy tofile="${src.webinf.dir}/betterform-version.info"
                file="../core/src/main/resources/META-INF/version.info"
                filtering="true"
                overwrite="true"/>


        <!--TODO: URGENT: webapp dir should be urgently be cleaned up!!!! -->
        <copy description="copy WEB-INF dir"
              todir="${webapp.dir}"
              overwrite="true"
              filtering="true">
            <fileset dir="${src.webapp.dir}">
                <exclude name="WEB-INF/*.template.xml"/>
                <exclude name="META-INF/context.xml"/>
                <exclude name="**/images/**"/>
                <exclude name="**/forms/**"/>
            </fileset>
        </copy>
        <copy description="copy WEB-INF dir"
              todir="${webapp.dir}"
              overwrite="true"
              filtering="false">
            <fileset dir="${src.webapp.dir}">
                <include name="**/images/**"/>
		<exclude name="**/forms/**"/>
            </fileset>
        </copy>


        <mkdir dir="${webapp.dir}/resources"/>
        <copy description="copy resources dir"
              todir="${webapp.dir}/resources"
              file="${resource.src.dir}/main/webapp/resources/images/blank.gif"/>
    </target>

    <target name="copy-libs" unless="should.not.copy.libs">
        <echo>
        ************************************************************************************
        copying libs betterFORM is dependent on (core + web) ...
        ************************************************************************************
        </echo>
        <mkdir dir="${webapp.dir}/WEB-INF/lib"/>
        <copy todir="${webapp.dir}/WEB-INF/lib" description="copy dependent libraries from Core">
            <fileset dir="${core.dir}/src/main/lib" excludes="**/betterform-core"/>
        </copy>
        <copy todir="${webapp.dir}/WEB-INF/lib" description="copy dependent libraries from Web" flatten="true">

            <!-- todo: need a better solution here - not all libs form web/src/main/lib are runtime relevant.
                Therefore only needed libs are copied directly here.
			-->
            <fileset dir="${basedir}/src/main/lib" excludes="**/${core.app.name}-${app.version}.jar">
                <include name="dwr*.jar"/>
            </fileset>
        </copy>
    </target>

    <target name="deploy-exploded"
            depends="exploded-webapp-base"
            description="deploys classes and resources tree to WEB-INF/classes">

        <delete dir="${webapp.dir}/WEB-INF/lib/betterform.jar"/>
        <antcall target="compile"/>

        <move file="${target}/classes"
              todir="${webapp.dir}/WEB-INF"
              description="moving betterFORM classes to WEB-INF/classes"/>

        <antcall target="copy-libs"/>

        <echo>
        ************************************************************************************
        deploying classes + resources tree to WEB-INF/classes (developer mode)
        ************************************************************************************
        </echo>

        <antcall target="copy-src-resources"/>
        <ant antfile="${basedir}/build-dojo.xml" target="prepare-dojo" usenativebasedir="true">
            <property name="scripts.target" value="${resources.dir}/scripts"/>
        </ant>

        <ant antfile="${basedir}/build-dojo.xml" target="copy-src-resources-scripts" usenativebasedir="true">
            <property name="scripts.target" value="${resources.dir}/scripts"/>
        </ant>
    </target>

    <target name="deploy-exploded-resources" description="only deployes resources in src/main/webapp/resources">

        <echo>
        ************************************************************************************
        deploying classes + resources tree to WEB-INF/classes (developer mode)
        ************************************************************************************
        </echo>
        <antcall target="copy-src-resources"/>
        <ant antfile="${basedir}/build-dojo.xml" target="copy-src-resources-scripts" usenativebasedir="true">
            <property name="scripts.target" value="${resources.dir}/scripts"/>
        </ant>
    </target>


    <target name="deploy" depends="compile, exploded-webapp-base, create-single-jar" description="default deployment as single jar">
        <echo>
        ************************************************************************************
                                optimized PRODUCUTION deployment
        ************************************************************************************
        </echo>

        <!-- todo: integrate with one-jar -->
        <antcall target="copy-libs"/>
        <echo>
        ************************************************************************************
        copying betterform.jar to WEB-INF/lib
        ************************************************************************************
        </echo>
        <copy todir="${webapp.dir}/WEB-INF/lib" file="${target}/betterform.jar"/>
        <copy todir="${webapp.dir}/WEB-INF/classes" file="${target}/classes/ehcache.xml"/>
    </target>

    <target name="deploy-forms" description="deploy the forms to target">
        <echo>
        ************************************************************************************
        copying forms to target...
        ************************************************************************************
        </echo>

        <copy todir="${webapp.dir}/${forms.target}"
              overwrite="true">
            <fileset dir="${basedir}/src/main/webapp/forms" excludes="**/TimeTracker.xhtml"/>
        </copy>
    </target>

    <target name="copy-src-resources">
        <echo>
        ************************************************************************************
        copying global resources (CSS, styles, XSLT ... (excluding scripts)
        ************************************************************************************
        </echo>

         <copy description="copy resources from global 'src' directory"
              todir="${resources.dir}"
              includeemptydirs="true">
            <fileset dir="${resource.src.dir}/main/webapp/resources">
                <exclude name="**/scripts/**"/>
            </fileset>
        </copy>

        <ant antfile="${basedir}/build-dojo.xml" target="copy-src-resources-scripts" usenativebasedir="true">
            <property name="scripts.target" value="${resources.dir}/scripts/dojo"/>
        </ant>
    </target>

    <target name="check-ant-version" unless="antversion">
        <echo>Apache Ant ${properties.antversion} or higher is required for this target. Please upgrade your Apache Ant version (${ant.version}) to minimum version 1.7 You can retreive the latest Ant here: http://ant.apache.org/bindownload.cgi</echo>
    </target>

    <target name="deploy-test-resources" description="copy all official XForms test suite files to webapp dir">
        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="copying Test Suites..."/>
        <echo message="************************************************************************************"/>
        <echo/>
        <copy todir="${webapp.dir}/${forms.target}">
            <fileset dir="${basedir}/src/test/resources"/>
        </copy>
    </target>

    <!-- TODO cleanup -->
    <target name="deploy-webdriver-test-resources" description="copy all official XForms test suite files to webapp dir">
        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="copying Test Suites..."/>
        <echo message="************************************************************************************"/>
        <echo/>
        <copy todir="${webapp.dir}/${forms.target}" overwrite="true">
            <fileset dir="${basedir}/src/test/resources/testsuite/xhtml"/>
        </copy>
    </target>

    <target name="doc" depends="compile" description="generate documentation">
        <!--create deploy directory-->
        <mkdir dir="${basedir}/target/doc"/>

        <!--generate source code documentation-->
        <javadoc description="generate api documentation"
                 sourcepath="${basedir}/src/main/java"
                 destdir="${basedir}/target/doc"
                 classpathref="compile.class.path"
                 packagenames="de.betterform.*">
        </javadoc>
    </target>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<!--+ betterFORM XAR builder
    + Current Status: only used to create the documentation XAR
    +
    + -->
<project default="deploy" name="xar-builder">

    <xmlproperty file="build.properties.xml"
                semanticAttributes="true"
                keepRoot="false"
                description="build properties"/>

    <property name="project.app" value="${docu.name}"/>
    <property name="project.version" value="${docu.version}"/>


    <property name="build.dir" value="${basedir}/target"/>
    <property name="template.dir" value="${basedir}/templates"/>
    <property name="xar.dir" value="${basedir}/xar"/>
    <property name="webapp.dir" value="${basedir}/../../webapp"/>
    <property name="forms.dir" value="${webapp.dir}/forms"/>

    <target name="clean" description="cleans up the build directory">
        <delete dir="${build.dir}"/>
    </target>


    <target name="filter">
        <filter token="REP_DESC" value="${docu.desc}"/>
        <filter token="REP_VERSION" value="${docu.version}"/>
        <filter token="REP_TARGET" value="${docu.name}"/>
        <filter token="REP_USER" value="${docu.permission.user}"/>
        <filter token="REP_PWD" value="${docu.permission.pwd}"/>
        <filter token="REP_GROUP" value="${docu.permission.group}"/>
        <filter token="REP_MODE" value="${docu.permission.mode}"/>
        <filter token="REP_LICENSE" value="${docu.license}"/>
        <filter token="REP_WEBSITE" value="${docu.website}"/>
        <copy file="${template.dir}/repo.xml" description="filter repo.xml from templates to xar dir"
              tofile="${xar.dir}/repo.xml"
              overwrite="true"
              filtering="true">
        </copy>


        <!-- EXPath Properties -->
        <filter token="EX_NAME" value="${docu.ex-name}"/>
        <filter token="EX_ABBR" value="${docu.name}"/>
        <filter token="EX_VERS" value="${docu.version}"/>
        <filter token="EX_TITLE" value="${docu.title}"/>
        <copy description="filter expath-pkg.xml from templates to xforms xar"
              file="${template.dir}/expath-pkg.xml"
              tofile="${xar.dir}/expath-pkg.xml"
              overwrite="true"
              filtering="true">
        </copy>
    </target>


    <target name="deploy" depends="clean">
        <mkdir dir="${build.dir}/xar"/>
        <!-- FILTER REPO.XML AND EXPATH-PKG.XML -->
        <antcall target="filter"   />

        <!-- generate latest version of the reference files -->
        <ant antfile="../build-reference.xml" target="deploy-forms" inheritall="no"/>
        <!-- copy selected forms into the documentation xar -->
        <copy todir="${build.dir}/xar">
            <fileset dir="${xar.dir}"/>
        </copy>
        <copy todir="${build.dir}/xar" flatten="true">
            <resources>
                <file file="${forms.dir}/FeatureExplorer.xhtml"/>
                <file file="${forms.dir}/Status.xhtml"/>
                <file file="${webapp.dir}/dashboard.html"/>
            </resources>
        </copy>

        <copy todir="${build.dir}/xar/example">
            <fileset dir="${forms.dir}/example" />
        </copy>

        <copy todir="${build.dir}/xar/demo">
            <fileset dir="${forms.dir}/demo" />
        </copy>

        <copy todir="${build.dir}/xar/reference">
            <fileset dir="${forms.dir}/reference" />
        </copy>
        <copy todir="${build.dir}/xar" >
            <fileset dir="${webapp.dir}" >
                <filename name="Dashboard.html"/>
            </fileset>
        </copy>

        <zip basedir="${build.dir}/xar" destfile="${build.dir}/${project.app}-${project.version}.xar"/>
    </target>
</project><!--
  ~ Copyright (c) 2012. betterFORM Project - http://www.betterform.de
  ~ Licensed under the terms of BSD License
  -->

<project name="betterFORM reference generator" default="generate-forms" basedir="">
    <!--<xmlproperty file="../build.properties.xml" semanticAttributes="true" keepRoot="false"/>-->
    <property name="core.dir" value="${basedir}/../../../core"/>    
    <xmlproperty file="../../../../build.properties.xml"
                 semanticAttributes="true" keepRoot="false"/>

    <target name="generate-forms">
        <xslt basedir="${basedir}/xml"
              destdir="${basedir}/../xforms/reference"
              style="${basedir}/build-forms.xsl"
              force="true"
              includes="*.xml"
              extension=".xhtml">
            <classpath refid="transform.class.path"/>
            <param name="webContext" expression="../.."/>
        </xslt>
    </target>

    <target name="generate-test-forms" description="generate test forms of reference forms">
            <!--
        <xslt in="${basedir}/xml/InputCalendar.xml"
              out="${basedir}/../xforms/referencetest/InputCalendar.xhtml"
              style="${basedir}/build-test.xsl"
              force="true">
            <classpath refid="transform.class.path"/>
            <param name="webContext" expression="../.."/>
        </xslt>  -->
        <xslt basedir="${basedir}/xml"
              destdir="${basedir}/../xforms/referencetest"
              style="${basedir}/build-test.xsl"
              force="true"
              includes="Input*.xml"
              extension=".xhtml">
            <classpath refid="transform.class.path"/>
            <param name="webContext" expression="../.."/>
        </xslt>

    </target>

    <target name="deploy-forms" depends="generate-forms" description="builds and deploys reference forms to standard webapp">
        <ant antfile="build.xml" target="deploy-forms" dir="../../../../web/"/>
    </target>
</project>
<!--
  ~ Copyright (c) 2012. betterFORM Project - http://www.betterform.de
  ~ Licensed under the terms of BSD License
  -->

<project name="betterFORM reference generator" default="build" basedir="">
    <property name="core.dir" value="${basedir}/../../../../../core"/>    
    <xmlproperty file="../build.properties.xml" semanticAttributes="true" keepRoot="false"/>

    <target name="build">
        <xslt in="Select.gen.xml" out="Select.gen.xhtml" force="true"
              style="build-forms.xsl">
           <classpath refid="transform.class.path"/>
        </xslt>
        <xslt in="Output.gen.xml" out="Output.gen.xhtml" force="true"
              style="build-forms.xsl">
           <classpath refid="transform.class.path"/>
        </xslt>
    </target>

    <target name="extract">
        <xslt in="Select.xhtml" out="Select.gen.xml" force="true"
              style="extract-xml.xsl">
           <classpath refid="transform.class.path"/>
        </xslt>
        <xslt in="Output.xhtml" out="Output.gen.xml" force="true"
              style="extract-xml.xsl">
           <classpath refid="transform.class.path"/>
        </xslt>
    </target>
</project>
<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2012. betterFORM Project - http://www.betterform.de
  ~ Licensed under the terms of BSD License
  -->

<!--
    author: Joern Turner
    author: Lars Windauer
    author: Fabian Otto
 -->
<project id="zaphod" name="betterForm Zaphod" basedir="." default="deploy-resources">

    <!-- **************************************** PROPERTIES **************************************** -->
    <!-- **************************************** PROPERTIES **************************************** -->
    <!-- **************************************** PROPERTIES **************************************** -->
    <!-- ###
          ATTENTION - the properties below must be set before build.properties.xml
          is called - DO NOT MOVE
  ###  -->

    <property name="root.dir" value=".."/>
    <property name="src.dir" value="../src"/>
    <property name="core.dir" value="../core"/>
    <property name="web.dir" value="../web"/>
    <property name="zaphod.dir" value="."/>

    <xmlproperty file="../build.properties.xml"
             semanticAttributes="true" keepRoot="false" />

    <!-- local Zaphod properties -->
    <property name="forms.target" value="forms"/>
    <property name="lib.dir" value="${basedir}/src/main/lib"/>
    <property name="target" value="${basedir}/target"/>
    <property name="webapp.dir" value="${target}/${zaphod.app.name}"/>
    <property name="targetname" value="${target}/${zaphod.app.name}-${app.version.number}"/>

    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <target name="clean" description="clean build target directory">
        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="cleaning up zaphod..."/>
        <echo message="************************************************************************************"/>
        <echo/>
        <delete dir="${basedir}/target"/>
    </target>

    <!-- **************************************** PREPARATION **************************************** -->
    <!-- **************************************** PREPARATION **************************************** -->
    <!-- **************************************** PREPARATION **************************************** -->
    <target name="prepare" description="init the build process">
        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="copying Core classes..."/>
        <echo message="************************************************************************************"/>
        <echo/>

        <tstamp/>
        <mkdir dir="${target}/classes"/>

    </target>

    <!-- **************************************** COMPILATION **************************************** -->
    <!-- **************************************** COMPILATION **************************************** -->
    <!-- **************************************** COMPILATION **************************************** -->

    <!--
        Default build.properties setting are as below. If you need to compile with debug settings you can either
        a. change relevant properties in build.properties.xml or
        b. call Ant like this: ant compile -Djavac.debug="true"

        javac.debug=off
        javac.deprecation=off
        javac.optimize=on

    -->

    <target name="compile" depends="prepare" description="compile all web sources">
        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="compiling zaphod classes..."/>
        <echo message="************************************************************************************"/>
        <echo/>

        <javac srcdir="${basedir}/src/main/java"
               destdir="${target}/classes"
               classpathref="web.class.path"
               target="${properties.javac.version}"
               debug="${properties.javac.debug}"
               deprecation="${properties.javac.deprecation}"
               optimize="${properties.javac.optimize}"
                />
    </target>

    <!-- **************************************** DEPLOYMENT **************************************** -->
    <!-- **************************************** DEPLOYMENT **************************************** -->
    <!-- **************************************** DEPLOYMENT **************************************** -->


    <target name="package" depends="compile" description="create zaphod jar">
        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="creating zaphod jar..."/>
        <echo message="************************************************************************************"/>
        <echo/>
        <mkdir dir="${webapp.dir}/WEB-INF/lib"/>

        <!-- copy the webapp directory -->
        <!--<copy description="copy webapp"
              todir="${webapp.dir}"
              filtering="true"
              includeemptydirs="true">
            <fileset dir="${basedir}/src/main/webapp"/>
        </copy>
        -->

        <!--<mkdir  dir="${target}/jar/resources" />-->
        <!--<copy todir="${target}/jar/resources">-->
            <!--<fileset dir="${root.dir}/src/main/resources/"/> -->
        <!--</copy>-->

        <jar destfile="${webapp.dir}/WEB-INF/lib/zaphod.jar">
            <fileset dir="${target}/classes" />
            <fileset dir="${root.dir}/src/main/"
                     includes="resources/*/**"/>
        </jar>

        <delete dir="${webapp.dir}/WEB-INF/classes"/>  
       
    </target>

    <target name="deploy-resources" depends="exploded-webapp"
            description="copy all forms from src/main/xforms to webapp dir">

        <property name="onlineVersion" value="false"/>
        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="copying forms..."/>
        <echo message="************************************************************************************"/>
        <echo/>
        <copy todir="${webapp.dir}/${forms.target}"
              overwrite="true">
            <fileset dir="${basedir}/../src/main/xforms"/>
        </copy>
    </target>

    <target name="exploded-webapp" depends="compile"
            description="builds an exploded webapp with expanded 'WEB-INF/classes' dir">
        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="build deployment structure (exploded war)..."/>
        <echo message="************************************************************************************"/>
        <echo/>
        <mkdir dir="${webapp.dir}"/>

        <!-- copy the webapp directory -->
        <copy description="copy webapp"
              todir="${webapp.dir}"
              filtering="true"
              includeemptydirs="true">
            <fileset dir="${basedir}/src/main/webapp"/>
        </copy>

        <move file="${target}/classes"
              todir="${webapp.dir}/WEB-INF"
              description="move betterForm classes to WEB-INF"/>

        <delete file="${webapp.dir}/WEB-INF/classes/log4j.xml"/>
        <delete file="${webapp.dir}/WEB-INF/classes/log4j.dtd"/>
    </target>


    <target name="deploy-test-resources"
            description="copy all official XForms test suite files to webapp dir">
        <ant antfile="build.xml"
             target="deploy-resources"
             dir="${basedir}"
             inheritall="false"/>

        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="copying Test Suites..."/>
        <echo message="************************************************************************************"/>
        <echo/>
        <copy todir="${webapp.dir}/${forms.target}">
            <fileset dir="../src/test/resources"/>
        </copy>
    </target>

    <!-- **************************************** BUILDING JAR **************************************** -->
    <!-- **************************************** BUILDING JAR **************************************** -->
    <!-- **************************************** BUILDING JAR **************************************** -->

    <!--<target name="create-war">-->
        <!--<echo/>-->
        <!--<echo message="************************************************************************************"/>-->
        <!--<echo message="creating war-file..."/>-->
        <!--<echo message="************************************************************************************"/>-->
        <!--<echo/>-->

        <!--<war warfile="${targetname}.war"-->
             <!--webxml="${webapp.dir}/WEB-INF/web.xml"-->
             <!--basedir="${webapp.dir}">-->
        <!--</war>-->
    <!--</target>-->

    <!-- **************************************** SOURCE DISTRIBUTION **************************************** -->
    <!-- **************************************** SOURCE DISTRIBUTION **************************************** -->
    <!-- **************************************** SOURCE DISTRIBUTION **************************************** -->
    <!--<target name="prepare-distribute" depends="clean">-->
        <!--<echo/>-->
        <!--<echo message="************************************************************************************"/>-->
        <!--<echo message="preparing distribution..."/>-->
        <!--<echo message="************************************************************************************"/>-->
        <!--<echo/>-->

        <!--<echo/>-->
        <!--<echo message="************************************************************************************"/>-->
        <!--<echo message="copying source web source tree..."/>-->
        <!--<echo message="************************************************************************************"/>-->
        <!--<echo/>-->

        <!--<copy todir="${targetname}/web">-->
            <!--<fileset dir="${basedir}"/>-->
        <!--</copy>-->

        <!--<copy file="${basedir}/../build.properties.xml" todir="${targetname}"-->
              <!--description="copy global build.properties.xml"/>-->

        <!--<echo/>-->
        <!--<echo message="************************************************************************************"/>-->
        <!--<echo message="building Core jar for inclusion into web sources..."/>-->
        <!--<echo message="************************************************************************************"/>-->
        <!--<echo/>-->

        <!--<ant antfile="${core.dir}/build.xml" target="clean" dir="${core.dir}"/>-->
        <!--<ant antfile="${core.dir}/build.xml" target="package" dir="${core.dir}" inheritall="false"/>-->

        <!--<copy file="${core.dir}/target/${core.app.name}-${core.app.version}.jar"-->
              <!--todir="${targetname}/web/src/main/lib"/>-->

        <!--<copy todir="${targetname}/web/src/main/lib" flatten="true">-->
            <!--<fileset dir="${core.dir}/src/main/lib"/>-->
        <!--</copy>-->
    <!--</target>-->

    <!--<target name="distribute" depends="prepare-distribute"-->
            <!--description="assembles binary and source distributions">-->

        <!--<echo/>-->
        <!--<echo message="************************************************************************************"/>-->
        <!--<echo message="creating source distribution..."/>-->
        <!--<echo message="************************************************************************************"/>-->
        <!--<echo/>-->

        <!--<echo/>-->
        <!--<echo message="************************************************************************************"/>-->
        <!--<echo message="creating gzip..."/>-->
        <!--<echo message="************************************************************************************"/>-->
        <!--<echo/>-->

        <!--<tar description="create source tarball"-->
             <!--tarfile="${targetname}-src.tar"-->
             <!--basedir="${targetname}"/>-->

        <!--<gzip description="create source tarball"-->
              <!--zipfile="target/${web.app.name}-${web.app.version}-src.tar.gz"-->
              <!--src="target/${web.app.name}-${web.app.version}-src.tar"/>-->
        <!--<delete description="create source tarball"-->
                <!--file="target/${web.app.name}-${web.app.version}-src.tar"/>-->

        <!--<echo/>-->
        <!--<echo message="************************************************************************************"/>-->
        <!--<echo message="creating zip..."/>-->
        <!--<echo message="************************************************************************************"/>-->
        <!--<echo/>-->

        <!--<zip description="create source zip"-->
             <!--zipfile="target/${web.app.name}-${web.app.version}-src.zip"-->
             <!--basedir="${targetname}"/>-->
    <!--</target>-->


    <!--&lt;!&ndash; **************************************** DOC TARGETS **************************************** &ndash;&gt;-->
    <!--&lt;!&ndash; **************************************** DOC TARGETS **************************************** &ndash;&gt;-->
    <!--&lt;!&ndash; **************************************** DOC TARGETS **************************************** &ndash;&gt;-->
    <!--<target name="doc" depends="compile" description="generate documentation">-->
        <!--&lt;!&ndash;create deploy directory&ndash;&gt;-->
        <!--<mkdir dir="${basedir}/target/doc"/>-->

        <!--&lt;!&ndash;generate source code documentation&ndash;&gt;-->
        <!--<javadoc description="generate api documentation"-->
                 <!--sourcepath="${basedir}/src/main/java"-->
                 <!--destdir="${basedir}/target/doc"-->
                 <!--classpathref="compile.class.path"-->
                 <!--packagenames="de.betterform.*">-->
        <!--</javadoc>-->

        <!--&lt;!&ndash;set version filter&ndash;&gt;-->
        <!--<filter token="app.version" value="${app.version.number}"/>-->
    <!--</target>-->

</project>
