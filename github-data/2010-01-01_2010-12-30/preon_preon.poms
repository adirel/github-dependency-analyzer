<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.codehaus.preon</groupId>
  <artifactId>preon</artifactId>
  <version>1.1-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>Preon</name>
  <url>http://preon.codehaus.org/</url>
  <description>
    Preon aims to provide a framework for dealing with binary encoded
    data; or more specifically, it aims to deal with situations in
    which bytes are considered to be overkill. The project is named
    after the "point-like" particles, conceived to be subcomponents of
    quarks and leptons. Let's just say very small particles that you
    don't see with the naked eye, but you probably rely on them
    without knowing.
  </description>
  <issueManagement>
    <system>JIRA</system>
    <url>http://jira.codehaus.org/browse/preon</url>
  </issueManagement>
  <ciManagement>
    <system>jira</system>
    <url>http://os.xebia.com/bamboo/browse/PREON-DEF</url>
  </ciManagement>
  <mailingLists>
    <mailingList>
      <name>Users</name>
      <post>user@preon.codehaus.org</post>
      <archive>http://archive.codehaus.org/lists/org.codehaus.preon.user</archive>
    </mailingList>
    <mailingList>
      <name>Announcements</name>
      <post>announce@preon.codehaus.org</post>
      <archive>http://archive.codehaus.org/lists/org.codehaus.preon.announce</archive>
    </mailingList>
  </mailingLists>
  <scm>
    <connection>scm:git:git://git@github.com:wspringer/preon.git</connection>
    <developerConnection>scm:git:git://git@github.com:wspringer/preon.git</developerConnection>
    <url>https://github.com/wspringer/preon</url>
  </scm>
  <repositories>
    <repository>
      <id>limbo-repository</id>
      <url>http://limbo.sourceforge.net/repository</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <releases>
        <enabled>true</enabled>
      </releases>
    </repository>
    <repository>
      <id>pecia-repository</id>
      <url>http://pecia.sourceforge.net/repository</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <releases>
        <enabled>true</enabled>
      </releases>
    </repository>
  </repositories>
  <developers>
    <developer>
      <id>springerw</id>
      <name>Wilfred Springer</name>
      <email>wilfredspringer@gmail.com</email>
      <roles>
        <role>initiator</role>
        <role>developer</role>
        <role>architect</role>
      </roles>
      <timezone>+1</timezone>
    </developer>
  </developers>
  <modules>
    <module>preon-io</module>
    <module>preon-binding</module>
    <module>preon-samples</module>
    <module>preon-archetypes</module>
    <module>preon-el</module>
    <module>preon-emitter</module>
  </modules>
  <licenses>
    <license>
      <name>GNU General Public License, version 2, with the Classpath Exception</name>
      <url>http://preon.sourceforge.net/COPYING</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <build>
    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-webdav</artifactId>
        <version>1.0-beta-1</version>
      </extension>
    </extensions>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <configuration>
          <goals>deploy</goals>
          <tagBase>https://preon.svn.sourceforge.net/svnroot/preon/tags</tagBase>
          <useReleaseProfile>false</useReleaseProfile>
          <arguments>-Prelease</arguments>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <descriptor>src/assembly/descriptor.xml</descriptor>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.google.code.maven-license-plugin</groupId>
        <artifactId>maven-license-plugin</artifactId>
        <version>1.4.0</version>
        <inherited>false</inherited>
        <configuration>
          <header>src/etc/header.txt</header>
          <aggregate>true</aggregate>
          <includes>
            <include>**/*.java</include>
          </includes>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <distributionManagement>
    <repository>
      <id>codehaus.org</id>
      <name>XFire Central Repository</name>
      <url>dav:https://dav.codehaus.org/repository/preon/</url>
    </repository>
    <snapshotRepository>
      <id>codehaus.org</id>
      <name>XFire Central Development Repository</name>
      <url>dav:https://dav.codehaus.org/snapshots.repository/preon/</url>
    </snapshotRepository>
    <site>
      <id>codehaus.org</id>
      <url>dav:https://dav.codehaus.org/preon/</url>
    </site>
  </distributionManagement>
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <reportOutputDirectory>${project.reporting.outputDirectory}/apidocs/${version}</reportOutputDirectory>
          <destDir>apidocs/${version}</destDir>
        </configuration>
      </plugin>
    </plugins>
  </reporting>
  <profiles>
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.7</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-all</artifactId>
        <version>1.8.0</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-all</artifactId>
        <version>1.1</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.google.code.findbugs</groupId>
        <artifactId>jsr305</artifactId>
        <version>1.3.9</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <properties>
    <currentVersion>${version}</currentVersion>
  </properties>
</project><?xml version="1.0" encoding="utf-8"?>
<project>
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.preon</groupId>
    <artifactId>preon</artifactId>
    <version>1.1-SNAPSHOT</version>
  </parent>
  <groupId>org.codehaus.preon.archetypes</groupId>
  <artifactId>preon-archetypes</artifactId>
  <packaging>pom</packaging>
  <name>Preon Archetypes</name>
  <description>
    A number of archetypes for working with Preon.
  </description>
  <modules>
    <module>preon-simple-archetype</module>
  </modules>
  <!--
  <distributionManagement>
    <repository>
      <id>preon-sourceforge</id>
      <name>Preon Repository</name>
      <url>sftp://web.sourceforge.net/home/groups/p/pr/preon/htdocs/archetypes</url>
    </repository>
    <snapshotRepository>
      <id>preon-sourceforge</id>
      <name>Preon Snapshot Repository</name>
      <url>sftp://web.sourceforge.net/home/groups/p/pr/preon/htdocs/archetypes</url>
      <uniqueVersion>false</uniqueVersion>
    </snapshotRepository>
  </distributionManagement>
  -->
  <distributionManagement>
    <repository>
      <id>codehaus.org</id>
      <name>XFire Central Repository</name>
      <url>dav:https://dav.codehaus.org/repository/preon/</url>
    </repository>
    <snapshotRepository>
      <id>codehaus.org</id>
      <name>XFire Central Development Repository</name>
      <url>dav:https://dav.codehaus.org/snapshots.repository/preon/</url>
      <uniqueVersion>false</uniqueVersion>
    </snapshotRepository>
  </distributionManagement>
  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <inherited>false</inherited>
        <executions>
          <execution>
            <goals>
              <goal>resources</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.3</version>
        <inherited>false</inherited>
        <executions>
          <execution>
            <id>attach-artifacts</id>
            <phase>package</phase>
            <goals>
              <goal>attach-artifact</goal>
            </goals>
            <configuration>
              <artifacts>
                <artifact>
                  <file>target/classes/archetype-catalog.xml</file>
                  <type>xml</type>
                  <classifier>catalog</classifier>
                </artifact>
              </artifacts>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project><?xml version="1.0" encoding="UTF-8"?>
<project>
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.preon.archetypes</groupId>
    <artifactId>preon-archetypes</artifactId>
    <version>1.1-SNAPSHOT</version>
  </parent>
  <artifactId>preon-simple-archetype</artifactId>
  <packaging>maven-archetype</packaging>
  <name>Preon Simple Archetype</name>
  <build>
    <extensions>
      <extension>
        <groupId>org.apache.maven.archetype</groupId>
        <artifactId>archetype-packaging</artifactId>
        <version>2.0-alpha-5</version>
      </extension>
    </extensions>
    <plugins>
      <plugin>
        <artifactId>maven-archetype-plugin</artifactId>
        <version>2.0-alpha-5</version>
        <extensions>true</extensions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <configuration>
          <escapeString>\</escapeString>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project><?xml version="1.0" encoding="UTF-8"?>
<project>
  <modelVersion>4.0.0</modelVersion>
  <groupId>\${groupId}</groupId>
  <artifactId>\${artifactId}</artifactId>
  <version>\${version}</version>
  <name>Simple Preon Project</name>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.7</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.preon</groupId>
      <artifactId>preon-binding</artifactId>
      <version>${version}</version>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <version>1.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <repositories>
    <repository>
      <id>pecia-repository</id>
      <url>http://pecia.sourceforge.net/repository</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <releases>
      </releases>
    </repository>
    <repository>
      <id>preon-repository</id>
      <url>http://snapshots.repository.codehaus.org</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>false</enabled>
      </releases>
    </repository>
  </repositories>
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.preon</groupId>
    <artifactId>preon</artifactId>
    <version>1.1-SNAPSHOT</version>
  </parent>
  <artifactId>preon-binding</artifactId>
  <name>Preon Binding</name>
  <description>
    A framework to declaratively bind a Java object to a stream of
    bits.
  </description>
  <repositories>
    <repository>
      <id>atlassian-repo</id>
      <name>Atlassian Repository</name>
      <url>https://maven.atlassian.com/repository/public</url>
    </repository>
  </repositories>
  <dependencies>
    <dependency>
      <groupId>multithreadedtc</groupId>
      <artifactId>multithreadedtc</artifactId>
      <version>1.01</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>cglib</groupId>
      <artifactId>cglib</artifactId>
      <version>2.1_3</version>
    </dependency>
    <dependency>
      <groupId>nl.flotsam.pecia</groupId>
      <artifactId>pecia</artifactId>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.preon</groupId>
      <artifactId>preon-io</artifactId>
      <version>1.1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.preon</groupId>
      <artifactId>preon-el</artifactId>
      <version>${version}</version>
    </dependency>
    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymock</artifactId>
      <version>2.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>1.8.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <version>1.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>com.agilejava.docbkx</groupId>
        <artifactId>docbkx-fop-support</artifactId>
        <executions>
          <execution>
            <phase>pre-site</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <ansi>true</ansi>
              <sourceDirectory>${fonts.dir}</sourceDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.agilejava.docbkx</groupId>
        <artifactId>docbkx-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>generate-pdf</goal>
              <goal>generate-html</goal>
            </goals>
            <phase>pre-site</phase>
          </execution>
        </executions>
        <configuration>
          <bibliographyStyle>iso690</bibliographyStyle>
          <bibliographyNumbered>1</bibliographyNumbered>
          <generateIdAttributes>1</generateIdAttributes>
          <cssDecoration>1</cssDecoration>
          <sourceDirectory>${basedir}/src/docbkx</sourceDirectory>
          <includes>paper.xml,chapter-introduction.xml,chapter-under-the-hood.xml</includes>
          <htmlStylesheet>css/docbkx-style.css</htmlStylesheet>
          <alignment>left</alignment>
          <bodyFontFamily>Calibri</bodyFontFamily>
          <titleFontFamily>Calibri</titleFontFamily>
          <monospaceFontFamily>Consola</monospaceFontFamily>
          <headerRule>0</headerRule>
          <footerRule>0</footerRule>
          <foCustomization>${basedir}/src/docbkx/customizations.xsl</foCustomization>
          <htmlCustomization>${basedir}/src/docbkx/customizations-html.xsl</htmlCustomization>
          <fonts>
            <font>
              <name>Consola</name>
              <style>normal</style>
              <weight>normal</weight>
              <embedFile>${fonts.dir}/consola.ttf</embedFile>
              <metricsFile>${basedir}/target/fonts/consola-metrics.xml</metricsFile>
            </font>
            <font>
              <name>Calibri</name>
              <style>normal</style>
              <weight>normal</weight>
              <embedFile>${fonts.dir}/calibri.ttf</embedFile>
              <metricsFile>${basedir}/target/fonts/calibri-metrics.xml</metricsFile>
            </font>
            <font>
              <name>Calibri</name>
              <style>italic</style>
              <weight>normal</weight>
              <embedFile>${fonts.dir}/calibrii.ttf</embedFile>
              <metricsFile>${basedir}/target/fonts/calibrii-metrics.xml</metricsFile>
            </font>
            <font>
              <name>Calibri</name>
              <style>normal</style>
              <weight>bold</weight>
              <embedFile>${fonts.dir}/calibrib.ttf</embedFile>
              <metricsFile>${basedir}/target/fonts/calibrib-metrics.xml</metricsFile>
            </font>
          </fonts>
          <xincludeSupported>true</xincludeSupported>
          <sectionAutolabel>1</sectionAutolabel>
          <sectionLabelIncludesComponentLabel>1</sectionLabelIncludesComponentLabel>
          <highlightSource>1</highlightSource>
          <targetDirectory>${basedir}/target/site</targetDirectory>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <properties>
    <fonts.dir>/Users/wilfred/Library/Fonts</fonts.dir>
  </properties>
</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.preon</groupId>
    <artifactId>preon</artifactId>
    <version>1.1-SNAPSHOT</version>
  </parent>
  <groupId>org.codehaus.preon</groupId>
  <artifactId>preon-el</artifactId>
  <name>Preon EL</name>
  <description>
    An extremely simple expression language. The objective is to have
    an expression language that is expressive, while preserving the
    ability to turn the expression into something that can be read by
    non-programmers. In that sense, it is much more constrained than
    for instance the JSP EL.
  </description>
  <dependencies>
    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>antlr-runtime</artifactId>
      <version>3.3</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.8.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymock</artifactId>
      <version>2.3</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-release-plugin</artifactId>
	<configuration>
	  <goals>deploy</goals>
	  <tagBase>https://limbo.svn.sourceforge.net/svnroot/limbo/tags</tagBase>
	  <useReleaseProfile>false</useReleaseProfile>
	  <arguments>-Prelease</arguments>
	</configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <docfilesubdirs>true</docfilesubdirs>
          <excludePackageNames>org.codehaus.preon.el.ast</excludePackageNames>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.antlr</groupId>
        <artifactId>antlr3-maven-plugin</artifactId>
        <version>3.3</version>
        <executions>
            <execution>
                <phase>generate-sources</phase>
                <goals>
                    <goal>antlr</goal>
                </goals>
            </execution>
        </executions>
        <configuration>
            <!--
                <debug>true</debug>
                -->
                <!--
                <libDirectory>src/main/antlr3/imports</libDirectory>
                <messageFormat>antlr</messageFormat>
                <outputDirectory>src/main/java/</outputDirectory>
                <profile>false</profile>
                <sourceDirectory>src/main/antlr3</sourceDirectory>
                -->
            <verbose>true</verbose>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>process-test-resources</phase>
            <id>cobertura:bugfix</id>
            <configuration>
              <tasks>
                <copy file="${basedir}/target/cobertura/cobertura.ser" todir="${basedir}/" overwrite="true" failonerror="false" />
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>com.agilejava.docbkx</groupId>
        <artifactId>docbkx-fop-support</artifactId>
        <executions>
          <execution>
            <phase>pre-site</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <ansi>true</ansi>
              <sourceDirectory>${fonts.dir}</sourceDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.agilejava.docbkx</groupId>
        <artifactId>docbkx-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>generate-pdf</goal>
              <goal>generate-html</goal>
            </goals>
            <phase>pre-site</phase>
          </execution>
        </executions>
        <configuration>
          <bibliographyStyle>iso690</bibliographyStyle>
          <bibliographyNumbered>1</bibliographyNumbered>
          <generateIdAttributes>1</generateIdAttributes>
          <cssDecoration>1</cssDecoration>
          <sourceDirectory>${basedir}/src/docbkx</sourceDirectory>
          <includes>overview.xml</includes>
          <htmlStylesheet>css/docbkx-style.css</htmlStylesheet>
          <alignment>left</alignment>
          <bodyFontFamily>Calibri</bodyFontFamily>
          <titleFontFamily>Calibri</titleFontFamily>
          <monospaceFontFamily>Consola</monospaceFontFamily>
          <headerRule>0</headerRule>
          <footerRule>0</footerRule>
          <foCustomization>${basedir}/src/docbkx/customizations.xsl</foCustomization>
          <htmlCustomization>${basedir}/src/docbkx/customizations-html.xsl</htmlCustomization>
          <fonts>
            <font>
              <name>Consola</name>
              <style>normal</style>
              <weight>normal</weight>
              <embedFile>${fonts.dir}/consola.ttf</embedFile>
              <metricsFile>${basedir}/target/fonts/consola-metrics.xml</metricsFile>
            </font>
            <font>
              <name>Calibri</name>
              <style>normal</style>
              <weight>normal</weight>
              <embedFile>${fonts.dir}/calibri.ttf</embedFile>
              <metricsFile>${basedir}/target/fonts/calibri-metrics.xml</metricsFile>
            </font>
            <font>
              <name>Calibri</name>
              <style>italic</style>
              <weight>normal</weight>
              <embedFile>${fonts.dir}/calibrii.ttf</embedFile>
              <metricsFile>${basedir}/target/fonts/calibrii-metrics.xml</metricsFile>
            </font>
            <font>
              <name>Calibri</name>
              <style>normal</style>
              <weight>bold</weight>
              <embedFile>${fonts.dir}/calibrib.ttf</embedFile>
              <metricsFile>${basedir}/target/fonts/calibrib-metrics.xml</metricsFile>
            </font>
          </fonts>
          <xincludeSupported>true</xincludeSupported>
          <sectionAutolabel>1</sectionAutolabel>
          <sectionLabelIncludesComponentLabel>1</sectionLabelIncludesComponentLabel>
          <highlightSource>1</highlightSource>
          <targetDirectory>${basedir}/target/site</targetDirectory>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
      </plugin>
    </plugins>
  </reporting>
  <profiles>
    <profile>
      <id>release</id>
      <build>
	<plugins>
	  <plugin>
	    <groupId>org.apache.maven.plugins</groupId>
	    <artifactId>maven-gpg-plugin</artifactId>
        <version>1.1</version>
	    <executions>
	      <execution>
		<id>sign-artifacts</id>
		<phase>verify</phase>
		<goals>
		  <goal>sign</goal>
		</goals>
	      </execution>
	    </executions>
	  </plugin>
	</plugins>
      </build>
    </profile>
  </profiles>
  <properties>
    <fonts.dir>/Users/wilfred/Library/Fonts</fonts.dir>
  </properties>
</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.preon</groupId>
    <artifactId>preon</artifactId>
    <version>1.1-SNAPSHOT</version>
  </parent>
  <artifactId>preon-emitter</artifactId>
  <name>Preon Emitter</name>
  <description>
    A couple of abstractions for emitting data while decoding, and
    annotating hexdumps with the details found.
  </description>
  <dependencies>
    <dependency>
      <groupId>org.codehaus.preon</groupId>
      <artifactId>preon-binding</artifactId>
      <version>1.1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>1.8.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <version>1.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.preon</groupId>
    <artifactId>preon</artifactId>
    <version>1.1-SNAPSHOT</version>
  </parent>
  <artifactId>preon-io</artifactId>
  <name>Preon IO</name>
  <description>
    Core abstractions for reading and writing bits.
  </description>
  <repositories>
    <repository>
      <id>atlassian-repo</id>
      <name>Atlassian Repository</name>
      <url>https://maven.atlassian.com/repository/public</url>
    </repository>
  </repositories>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>1.3.1</version>
    </dependency>
    <dependency>
      <groupId>multithreadedtc</groupId>
      <artifactId>multithreadedtc</artifactId>
      <version>1.01</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymock</artifactId>
      <version>2.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.5</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.codehaus.preon</groupId>
        <artifactId>preon</artifactId>
        <version>1.1-SNAPSHOT</version>
    </parent>
    <artifactId>preon-samples</artifactId>
    <name>Preon Examples</name>
    <description>
        A bunch of examples showing how Preon could be used.
    </description>
    <packaging>pom</packaging>
    <modules>
        <module>preon-sample-bmp</module>
        <module>preon-sample-bytecode</module>
        <module>preon-sample-mpeg</module>
        <module>preon-sample-snoop</module>
        <!--
        <module>preon-sample-bson</module>
        -->
        <module>preon-sample-rtp</module>
        <module>preon-sample-varlength-encoding</module>
        <!--
        <module>preon-sample-protobuf</module>
        <module>preon-sample-lucene</module>
        -->
    </modules>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.preon</groupId>
    <artifactId>preon-samples</artifactId>
    <version>1.1-SNAPSHOT</version>
  </parent>
  <artifactId>preon-sample-bmp</artifactId>
  <name>Preon Example BMP</name>
  <description>
    An example, showing how Preon could be used for decoding BMP files.
  </description>
  <dependencies>
    <dependency>
      <groupId>org.codehaus.preon</groupId>
      <artifactId>preon-binding</artifactId>
      <version>${version}</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
  </dependencies>
</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.preon</groupId>
    <artifactId>preon-samples</artifactId>
    <version>1.1-SNAPSHOT</version>
  </parent>
  <artifactId>preon-sample-bytecode</artifactId>
  <name>Preon Example Bytecode</name>
  <description>
    An attempt to capture Java class files in Preon.
  </description>
  <dependencies>
    <dependency>
      <groupId>org.codehaus.preon</groupId>
      <artifactId>preon-binding</artifactId>
      <version>${version}</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.preon</groupId>
      <artifactId>preon-emitter</artifactId>
      <version>${version}</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <version>1.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.preon</groupId>
    <artifactId>preon-samples</artifactId>
    <version>1.1-SNAPSHOT</version>
  </parent>
  <artifactId>preon-sample-mpeg</artifactId>
  <name>Preon Example MPEG</name>
  <description>
    An example, showing how Preon could be used for decoding MPEG
    headers. (Just for sake of having the ability to compare it with
    the Erlang examples.)
  </description>
  <dependencies>
    <dependency>
      <groupId>org.codehaus.preon</groupId>
      <artifactId>preon-binding</artifactId>
      <version>${version}</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project><?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>preon-samples</artifactId>
    <groupId>org.codehaus.preon</groupId>
    <version>1.1-SNAPSHOT</version>
  </parent>
  <name>Preon Example RTP</name>
  <modelVersion>4.0.0</modelVersion>

  <artifactId>preon-sample-rtp</artifactId>
  <dependencies>
    <dependency>
      <groupId>org.codehaus.preon</groupId>
      <artifactId>preon-binding</artifactId>
      <version>1.1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>


</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.preon</groupId>
    <artifactId>preon-samples</artifactId>
    <version>1.1-SNAPSHOT</version>
  </parent>
  <artifactId>preon-sample-snoop</artifactId>
  <name>Preon Example Snoop</name>
  <description>
    An example of using Preon to decode Snoop output.
  </description>
  <dependencies>
    <dependency>
      <groupId>org.codehaus.preon</groupId>
      <artifactId>preon-binding</artifactId>
      <version>${version}</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.4</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.codehaus.preon</groupId>
        <artifactId>preon-samples</artifactId>
        <version>1.1-SNAPSHOT</version>
    </parent>
    <artifactId>preon-sample-varlength-encoding</artifactId>
    <name>Preon Example Variable Length Encoding</name>
    <description>
        An example how to implement variable length encoding in Preon.
    </description>
    <dependencies>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.8.5</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.preon</groupId>
            <artifactId>preon-binding</artifactId>
            <version>${version}</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.preon</groupId>
            <artifactId>preon-io</artifactId>
            <version>${version}</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.preon</groupId>
            <artifactId>preon-el</artifactId>
            <version>${version}</version>
        </dependency>
        <dependency>
            <groupId>nl.flotsam.pecia</groupId>
            <artifactId>pecia</artifactId>
            <version>1.0</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
    </dependencies>
    <packaging>jar</packaging>

</project>
<?xml version="1.0"?>
<project>
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.codehaus.preon</groupId>
  <artifactId>preon-skin</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>Preon Skin</name>
</project>
