buildscript {
    repositories {
       mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.7.+'
    }
}
apply plugin: 'android'

repositories {
  mavenCentral()
}

dependencies {
  compile project(':libraries:cyclestreets-view'),
          project(':libraries:cyclestreets-fragments'),
          'ch.acra:acra:4.2.3'
}

android {
  Properties appConfig = new Properties()
  appConfig.load(new FileInputStream(file("../config.properties")))

  compileSdkVersion appConfig['sdkVersion'].toInteger()
  buildToolsVersion "19.0.1"

  defaultConfig {
    minSdkVersion appConfig['sdkVersion'].toInteger()
    targetSdkVersion appConfig['sdkVersion'].toInteger()
    versionCode appConfig['versionCode'].toInteger()
    versionName appConfig['versionName']
  }

  signingConfigs {
    release {
      Properties props = new Properties()
      props.load(new FileInputStream(file("../local.properties")))

      storeFile file(props['key.store'])
      storePassword props['key.password']
      keyAlias props['key.alias']
      keyPassword props['key.password']
    }
  }

  buildTypes {
    release {
      signingConfig signingConfigs.release
    }
  }

  packagingOptions {
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/NOTICE.txt'
  }
}
apply plugin: 'android-library'

repositories {
  mavenCentral()
}

configurations {
  compile.exclude module: 'commons-logging'
}

dependencies {
  compile 'org.osmdroid:osmdroid-android:3.0.8',
          'org.apache.james:apache-mime4j:0.6',
          'org.apache.httpcomponents:httpmime:4.1',
          'org.slf4j:slf4j-android:1.6.1-RC1'
}

android {
  Properties appConfig = new Properties()
  appConfig.load(new FileInputStream(file("../../config.properties")))

  compileSdkVersion appConfig['sdkVersion'].toInteger()
  buildToolsVersion "19.0.1"

  defaultConfig {
    minSdkVersion appConfig['sdkVersion'].toInteger()
    targetSdkVersion appConfig['sdkVersion'].toInteger()
    versionCode appConfig['versionCode'].toInteger()
    versionName appConfig['versionName']
  }
}
apply plugin: 'android-library'

repositories {
  mavenCentral()
}

dependencies {
    compile 'com.android.support:support-v4:+'
    compile project(':libraries:cyclestreets-view')
}

android {
    Properties appConfig = new Properties()
    appConfig.load(new FileInputStream(file("../../config.properties")))

    compileSdkVersion appConfig['sdkVersion'].toInteger()
    buildToolsVersion "19.0.1"

    defaultConfig {
        minSdkVersion appConfig['sdkVersion'].toInteger()
        targetSdkVersion appConfig['sdkVersion'].toInteger()
        versionCode appConfig['versionCode'].toInteger()
        versionName appConfig['versionName']
    }
}
apply plugin: 'android-library'

repositories {
  mavenCentral()
}

dependencies {
    compile project(':libraries:cyclestreets-core'),
            files('libs/mapsforge-map-0.3.0-jar-with-dependencies.jar'),
            'com.android.support:support-v4:19.0.1'
}

android {
    Properties appConfig = new Properties()
    appConfig.load(new FileInputStream(file("../../config.properties")))

    compileSdkVersion appConfig['sdkVersion'].toInteger()
    buildToolsVersion "19.0.1"

    defaultConfig {
        minSdkVersion appConfig['sdkVersion'].toInteger()
        targetSdkVersion appConfig['sdkVersion'].toInteger()
        versionCode appConfig['versionCode'].toInteger()
        versionName appConfig['versionName']
    }
}
