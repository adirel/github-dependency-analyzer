<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <artifactId>eurekastreams-parent</artifactId>
        <groupId>org.eurekastreams</groupId>
        <version>2.2.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.eurekastreams</groupId>
    <artifactId>eurekastreams-database</artifactId>
    <version>2.2.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>Eureka Streams Database Resources</name>
    <dependencies>
        <dependency>
            <groupId>org.eurekastreams</groupId>
            <artifactId>${build.maven.sharedresources.artifactid}</artifactId>
            <version>${build.maven.sharedresources.version}</version>
            <classifier>resources</classifier>
            <type>zip</type>
            <scope>provided</scope>
        </dependency>
    </dependencies>
    <build>
        <finalName>eurekastreams-database-resources</finalName>
        <plugins>
	        <plugin>
	           <groupId>org.apache.maven.plugins</groupId>
	           <artifactId>maven-assembly-plugin</artifactId>
	           <version>2.2-beta-2</version>
	           <executions>
	               <execution>
	                   <id>make database resources</id>
	                   <goals>
	                       <goal>single</goal>
	                   </goals>
	                   <phase>package</phase>
	                   <configuration>
	                       <descriptors>
	                           <descriptor>src/main/assembly/resource.xml</descriptor>
	                       </descriptors>
	                   </configuration>
	               </execution>
	           </executions>
	        </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>processresources</id>
                        <goals>
                            <goal>resources</goal>
                        </goals>
                        <phase>process-resources</phase>
                    </execution>
                </executions>
                <configuration>
                    <useDefaultDelimiters>false</useDefaultDelimiters>
                    <delimiters>
                       <delimiter>${*}</delimiter>
                    </delimiters>
                </configuration>
            </plugin>
            <plugin>
               <artifactId>maven-deploy-plugin</artifactId>
               <configuration>
                 <skip>true</skip>
              </configuration>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <targetPath>db</targetPath>
                <directory>${basedir}/src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <targetPath>rpmscripts</targetPath>
                <directory>${basedir}/src/main/scripts</directory>
            </resource>
        </resources>
    </build>
    <profiles>
        <profile>
            <id>RPM Build</id>
            <activation>
                <property>
                    <name>rpm.build</name>
                </property>
            </activation>
            <build>
                <plugins>
		            <plugin>
		                <groupId>org.apache.maven.plugins</groupId>
		                <artifactId>maven-dependency-plugin</artifactId>
		                <executions>
		                  <execution>
		                    <id>unpack-shared-resources</id>
		                    <goals>
		                      <goal>unpack-dependencies</goal>
		                    </goals>
		                    <phase>generate-resources</phase>
		                    <configuration>
		                     <outputDirectory>${project.build.directory}/sharedresources</outputDirectory>
		                     <includeArtifacIds>${build.maven.sharedresources.artifactid}</includeArtifacIds>
		                     <includeGroupIds>org.eurekastreams</includeGroupIds>
		                     <includeTypes>zip</includeTypes>
		                     <includeScope>provided</includeScope>
		                     <includeClassifiers>resources</includeClassifiers>
		                     <excludeTransitive>true</excludeTransitive>
		                    </configuration>
		                  </execution>
		                </executions>
		            </plugin>
                    <plugin>
		                <groupId>org.codehaus.mojo</groupId>
		                <artifactId>rpm-maven-plugin</artifactId>
		                <version>2.0.1</version>
		                <executions>
		                    <execution>
		                        <goals>
		                            <goal>rpm</goal>
		                        </goals>
		                    </execution>
		                </executions>
		                <configuration>
		                    <name>eurekastreams-database-${rpm.build}</name>
		                    <copyright>2010, Lockheed Martin Corp.</copyright>
		                    <distribution>Eureka</distribution>
		                    <group>Application/Social Media</group>
		                    <icon></icon>
		                    <packager>Social Media Program, Lockheed Martin Corp.</packager>
		                    <prefix>/</prefix>
		                    <needarch>noarch</needarch>
		                    <defineStatements>
		                        <defineStatement>_unpackaged_files_terminate_build 0</defineStatement>
                                        <defineStatement>_binaries_in_noarch_packages_terminate_build 0</defineStatement>
                                        <defineStatement>_source_filedigest_algorithm md5</defineStatement>
                                        <defineStatement>_binary_filedigest_algorithm md5</defineStatement>
                                        <defineStatement>_source_payload nil</defineStatement>
                                        <defineStatement>_binary_payload nil</defineStatement>
		                    </defineStatements>
		                    <mappings>
		                        <mapping>
		                            <directory>/var/eureka/db</directory>
		                            <sources>
		                                <source>
		                                    <location>${project.build.directory}/classes/db</location>
		                                </source>
		                            </sources>
		                            <filemode>555</filemode>
		                            <username>root</username>
		                            <groupname>root</groupname>
		                        </mapping>
		                    </mappings>
		                    <conflicts>
		                        <!-- no conflicts -->
		                    </conflicts>
		                    <preinstallScriptlet>
		                      <scriptFile>${project.build.directory}/classes/rpmscripts/preinstall.sh</scriptFile>
		                      <fileEncoding>utf-8</fileEncoding>
		                    </preinstallScriptlet>
		                    <postinstallScriptlet>
		                      <scriptFile>${project.build.directory}/classes/rpmscripts/postinstall.sh</scriptFile>
		                      <fileEncoding>utf-8</fileEncoding>
		                    </postinstallScriptlet>
		                    <preremoveScriptlet>
		                      <scriptFile>${project.build.directory}/classes/rpmscripts/preremove.sh</scriptFile>
		                      <fileEncoding>utf-8</fileEncoding>
		                    </preremoveScriptlet>
		                    <!-- <postremoveScript>src/main/scripts/postremove.sh</postremoveScript> -->
		                </configuration>
		            </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>Int Environment Database Build Config</id>
            <activation>
                <property>
                    <name>buildtype</name>
                    <value>int</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-resources</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/classes/db/schema</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.build.directory}/sharedresources/resources/database/schema/int</directory>
                                            <includes>
                                                <include>*.sql</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                    <overwrite>true</overwrite>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>Uat Environment Database Build Config</id>
            <activation>
                <property>
                    <name>buildtype</name>
                    <value>uat</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-resources</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/classes/db/schema</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.build.directory}/sharedresources/resources/database/schema/uat</directory>
                                            <includes>
                                                <include>*.sql</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                    <overwrite>true</overwrite>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>Perf Environment Database Build Config</id>
            <activation>
                <property>
                    <name>buildtype</name>
                    <value>perf</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-resources</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/classes/db/schema</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.build.directory}/sharedresources/resources/database/schema/perf</directory>
                                            <includes>
                                                <include>*.sql</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                    <overwrite>true</overwrite>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>
</project>
<?xml version="1.0" encoding="UTF-8"?> 
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion> 
    <groupId>org.eurekastreams</groupId>
    <artifactId>eurekastreams-parent</artifactId>
    <packaging>pom</packaging>
    <version>2.2.0-SNAPSHOT</version>
    <name>Eureka Streams Parent</name>
    <url>http://www.eurekastreams.org</url>
    <mailingLists>
      <mailingList>
        <name>Eureka Streams Development Google Group</name>
        <subscribe>eureka-streams-dev+subscribe@googlegroups.com</subscribe>
        <unsubscribe>eureka-streams-dev+unsubscribe@googlegroups.com</unsubscribe>
        <post>eureka-streams-dev@googlegroups.com</post>
        <archive>http://groups.google.com/group/eureka-streams-dev</archive>
      </mailingList>
    </mailingLists>
    <licenses>
      <license>
        <name>Apache 2</name>
        <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        <distribution>repo</distribution>
        <comments>A business-friendly OSS license</comments>
      </license>
    </licenses>
    <issueManagement>
        <system>GitHub</system>
        <url>http://github.com/lmco/eurekastreams/issues</url>
    </issueManagement>
    <scm>
        <connection>git://github.com/lmco/eurekastreams.git</connection>
        <developerConnection>ssh://git@github.com:lmco/eurekastreams.git</developerConnection>
        <url>http://github.com/lmco/eurekastreams</url>
    </scm>
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${version.junit}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <modules>
        <module>server</module>
        <module>taskqueueprocessor</module>
        <module>web</module>
        <module>sharedresources</module>
        <module>database</module>
    </modules>
    <pluginRepositories>
        <pluginRepository>
            <id>Eureka Streams repository</id>
            <url>${build.maven.repo.eurekastreams.url}/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
        </pluginRepository>
        <pluginRepository>
            <id>central</id>
            <name>Maven Plugin Repository</name>
            <url>http://repo1.maven.org/maven2</url>
            <layout>default</layout>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <releases>
                <updatePolicy>never</updatePolicy>
            </releases>
        </pluginRepository>
    </pluginRepositories>
	<repositories>
	  <repository>
	    <id>Eureka Streams Dependency Repo</id>
	    <url>${build.maven.repo.eurekastreams.url}</url>
	  </repository>
      <repository>
        <id>central</id>
        <name>Maven Repository Switchboard</name>
        <layout>default</layout>
        <url>http://repo1.maven.org/maven2</url>
        <snapshots>
            <enabled>false</enabled>
        </snapshots>
      </repository>
      <repository>
          <id>ibilio</id>
          <url>http://mirrors.ibiblio.org/pub/mirrors/maven2</url>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
      </repository>
      <repository>
        <id>nuxeo</id>
        <name>nuxeo</name>
        <layout>default</layout>
        <url>http://maven.nuxeo.org/nexus/content/groups/public/</url>
        <snapshots>
            <enabled>false</enabled>
        </snapshots>
      </repository>
 
      <repository>
        <id>maven-nexus</id>
        <name>Maven Repository - nexus</name>
        <layout>default</layout>
        <url>http://repository.jboss.org/nexus/content/groups/public</url>
        <snapshots>
            <enabled>false</enabled>
        </snapshots>
      </repository>
      <repository>
        <id>restlet</id>
        <url>http://maven.restlet.org/</url>
      </repository>
      <repository>
        <id>codehaus</id>
        <layout>default</layout>
        <url>http://mvnrepository.com/artifact/</url>
        <snapshots>
            <enabled>false</enabled>
        </snapshots>
      </repository>
    </repositories>
    <properties>
		<version.junit>4.8.2</version.junit>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding> 
        <gwtVersion>2.2.0</gwtVersion>
        <maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
        <!-- set build.web.grbaseurl to different port if rendering untrusted gadgets to enforce same origin policy -->
        <build.web.grbaseurl>http://localhost:8080</build.web.grbaseurl>
        <build.web.baseurl>http://localhost:8080</build.web.baseurl>
        <build.web.host>localhost:8080</build.web.host>
        <build.gwt.modulename>org.eurekastreams.web.Application</build.gwt.modulename>
        <build.gwt.compile.style>PRETTY</build.gwt.compile.style>
        <build.gadget.container.name>eureka</build.gadget.container.name>
        <build.gadget.container.protocol>http://</build.gadget.container.protocol>
        <build.gadget.shindig.version>2.0.1.3</build.gadget.shindig.version>
		<build.gadget.request.authtype>NONE</build.gadget.request.authtype>
        <build.analytics.hostname>http://analytics.example.com</build.analytics.hostname>
        <build.analytics.siteid>-1</build.analytics.siteid>
        <build.email.smtphost>smtp.example.com</build.email.smtphost>
        <build.email.smtpport>25</build.email.smtpport>
        <build.email.address.support>sysadmin@example.com</build.email.address.support>
        <build.spring.security>preauth</build.spring.security>
        <build.security.jaas.forcehttps>false</build.security.jaas.forcehttps>
        <build.security.ldap.connstr>ldaps://ldap.example.com/dc=com?sAMAccountName?sub?(objectClass=*)</build.security.ldap.connstr>
        <build.security.ldap.userdn>CN=sysadmin\\, sysadmin,DC=example,DC=com</build.security.ldap.userdn>
        <build.security.ldap.password>examplepassword</build.security.ldap.password>
        <build.oauth.requesttokenurl>http://localhost:8080/resources/oauth/requestToken</build.oauth.requesttokenurl>
        <build.oauth.authorizeurl>http://localhost:8080/resources/oauth/authorize</build.oauth.authorizeurl>
        <build.oauth.accesstokenurl>http://localhost:8080/resources/oauth/accesstoken</build.oauth.accesstokenurl>
        <build.system.nodetype>oneBox</build.system.nodetype>
        <build.system.jobscheduler><![CDATA[<import resource="applicationContext-jobs.xml" />]]></build.system.jobscheduler>
        <build.system.proxyhost>proxy.example.com</build.system.proxyhost>
        <build.system.proxyport>8080</build.system.proxyport>
        <build.system.proxyset>false</build.system.proxyset>
        <build.system.nonproxyhosts>*.example.com</build.system.nonproxyhosts>
        <build.shindig.proxy></build.shindig.proxy> <!-- e.g. proxy.example.com:8080 - leave blank for no proxy -->
        <build.db.dbname>eurekastreams</build.db.dbname>
        <build.db.dbuser>eurekastreams</build.db.dbuser>
        <build.db.dbpassword>eurekastreams</build.db.dbpassword>
        <build.db.servername>127.0.0.1</build.db.servername>
        <build.cache.servernames>localhost:11211</build.cache.servernames>
        <build.lucene.indexdir>/tmp</build.lucene.indexdir>
        <build.lucene.sourcedir>/tmp</build.lucene.sourcedir>
        <build.lucene.slave.refresh>60</build.lucene.slave.refresh>
        <build.jms.servername>localhost</build.jms.servername>
        <build.jms.taskhandler>executingTaskHandler</build.jms.taskhandler>
        <build.jms.taskhandler.nonui>executingTaskHandler</build.jms.taskhandler.nonui>
        <build.queue.activity.name>queue/eurekaActivity</build.queue.activity.name>
        <build.queue.nonui.name>queue/eurekaNonUi</build.queue.nonui.name>
        <build.queue.hibernatesearch.name>queue/hibernateSearch</build.queue.hibernatesearch.name>
        <build.log.showsql>true</build.log.showsql>
        <build.report.checkstyle.rulesurl>checkstyle-rules.xml</build.report.checkstyle.rulesurl>
        <build.maven.sharedresources.artifactid>eurekastreams-sharedresources</build.maven.sharedresources.artifactid>
        <build.maven.sharedresources.version>2.2.0-SNAPSHOT</build.maven.sharedresources.version>
        <build.maven.snapshotrepo>http://example.com/content/repositories/snapshots</build.maven.snapshotrepo>
        <build.maven.repo.eurekastreams.url>http://lmco.github.io/eurekastreams-mvn-repo/releases/</build.maven.repo.eurekastreams.url>
        <build.infosite.url>http://eurekastreams.org</build.infosite.url>
        <build.infosite.text>eurekastreams.org</build.infosite.text>
        <build.profile.emailregex>.*@.*</build.profile.emailregex>
        <build.profile.emailregexerror>Please enter a properly formatted email address.</build.profile.emailregexerror>
        <build.taskqueueprocessor.additional-jsw-jar></build.taskqueueprocessor.additional-jsw-jar>
        <build.user-account-tld>example.com</build.user-account-tld>
        <build.app.baseurl>http://application.com</build.app.baseurl>
        <build.app.version>${project.version}</build.app.version>
		<build.jobs.emailIngestTrigger>dummyTrigger</build.jobs.emailIngestTrigger>
		<build.cors.allowOrigin>http://example.com https://example.com</build.cors.allowOrigin>
		<build.notification.rest.endpointUrl>https://example.com</build.notification.rest.endpointUrl>
		<build.notification.rest.basicAuthUsername>exampleusername</build.notification.rest.basicAuthUsername>
		<build.notification.rest.basicAuthPassword>examplepassword</build.notification.rest.basicAuthPassword>
		<build.service.actions.disableThumbnails>false</build.service.actions.disableThumbnails>
        <checkstyle.enable.rss>false</checkstyle.enable.rss>
    </properties>
    <build>
		<!-- Specify the versions and shared configuration of frequently-used plugins here, let child poms inherit it. -->
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.4.3</version>
					<configuration>
						<encoding>UTF-8</encoding>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                    <memmax>2048m</memmax>
                </configuration>
            </plugin>
			<plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-checkstyle-plugin</artifactId>
               <version>2.4</version>
               <executions>
               	<execution>
                 <configuration>
                     <configLocation>${build.report.checkstyle.rulesurl}</configLocation>
                     <includeTestSourceDirectory>true</includeTestSourceDirectory>
                     <failsOnError>true</failsOnError>
                     <suppressionsLocation>checkstyle-suppressions.xml</suppressionsLocation>
                     <suppressionsFileExpression>checkstyle.suppressions.file</suppressionsFileExpression>
                 </configuration>
                 <phase>validate</phase>
                 <goals>
                     <goal>checkstyle</goal>
                 </goals>
               	</execution>
               </executions>
           </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-reactor-plugin</artifactId>
                <version>1.0</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
				<version>2.9</version>
                <configuration>
                  <forkMode>once</forkMode>
                  <argLine>-Xms256m -Xmx1024m -XX:PermSize=128m -XX:MaxPermSize=512m</argLine>
                </configuration>
           </plugin>
           <plugin>
               <artifactId>maven-deploy-plugin</artifactId>
			   <version>2.7</version>
               <configuration>
                 <skip>true</skip>
              </configuration>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>2.4</version>
            </plugin>
        </plugins>
    </reporting>

    <profiles>
		<profile>
			<id>jobs.emailIngest</id>
			<properties>
				<build.jobs.emailIngestTrigger>ingestEmailJobTrigger</build.jobs.emailIngestTrigger>				
			</properties>
		</profile>
        <profile>
            <!--
                This profile assists in reducing development build times
                when generating the reports.
            -->
            <id>dev.disablereporting</id>
            <activation>
                <property>
                    <name>!reports</name>
                </property>
            </activation>
            <reporting>
                <outputDirectory>${basedir}/target/site</outputDirectory>
                <plugins>
                    <plugin>
                        <artifactId>maven-project-info-reports-plugin</artifactId>
                        <version>2.4</version>
                        <reportSets>
                            <reportSet></reportSet>
                        </reportSets>
                    </plugin>
                </plugins>
            </reporting>
        </profile>
        <profile>
            <id>ounce.report</id>
            <activation>
                <property>
                    <name>reports</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.1</version>
                        <executions>
                            <execution>
                                <id>chmodder</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>chmod</executable>
                                    <arguments>
                                        <argument>-R</argument>
                                        <argument>g+w</argument>
                                        <argument>${basedir}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>umasker</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>umask</executable>
                                    <arguments>
                                        <argument>0002</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <!--
                            Note that this plugin will invoke package Do
                            not configure this plugin using executions
                        -->
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>ounce-maven-plugin</artifactId>
                        <version>1.2</version>
                        <configuration>
                            <installDir>/usr/local/share/Ounce_Labs</installDir>
                            <waitForScan>true</waitForScan>
                            <reportType>Findings</reportType>
                            <reportOutputType>pdf-comprehensive</reportOutputType>
                            <reportOutputPath>${basedir}/ounce.pdf</reportOutputPath>
                            <includeSrcBefore>10</includeSrcBefore>
                            <includeSrcAfter>10</includeSrcAfter>
                            <webappDirectory>${basedir}/target/ROOT/org.eurekastreams.web.Application/WEB-INF</webappDirectory>
                            <pathVariableMap>
                                <eurekaBaseSourcePath>"/opt/local/atlassian/bamboo/home/xml-data/build-dir/UNITYOS-JAVADOC"</eurekaBaseSourcePath>
                            </pathVariableMap>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>javadoc.report</id>
            <activation>
                <property>
                    <name>reports</name>
                </property>
            </activation>
            <reporting>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>2.6</version>
                        <reportSets>
                            <reportSet>
                                <reports>
                                    <report>aggregate</report>
                                    <report>test-aggregate</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>
                </plugins>
            </reporting>
        </profile>
        <profile>
            <id>jdepend.report</id>
            <activation>
                <property>
                    <name>reports</name>
                </property>
            </activation>
            <reporting>
                <plugins>
                    <plugin>
                        <!-- Note that this plugin will invoke compile -->
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>jdepend-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </reporting>
        </profile>  
        <profile>
            <id>taglist.report</id>
            <activation>
                <property>
                    <name>reports</name>
                </property>
            </activation>
            <reporting>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>taglist-maven-plugin</artifactId>
                        <version>2.4</version>
                        <configuration>
                            <tagListOptions>
                                <tagClasses>
                                    <tagClass>
                                        <displayName>Todo Work</displayName>
                                        <tags>
                                            <tag>
                                                <matchString>@todo</matchString>
                                                <matchType>ignoreCase</matchType>
                                            </tag>
                                            <tag>
                                                <matchString>TODO</matchString>
                                                <matchType>exact</matchType>
                                            </tag> 
                                        </tags>   
                                    </tagClass>
                                    <tagClass>
                                        <displayName>Todo Performance Work</displayName>
                                        <tags>
                                            <tag>
                                                <matchString>todo-performance</matchString>
                                                <matchType>ignoreCase</matchType>
                                            </tag>
                                        </tags>   
                                    </tagClass>
                                </tagClasses>
                            </tagListOptions>
                        </configuration>
                    </plugin>
                </plugins>
            </reporting>
        </profile>
        <profile>
            <id>checkstyle.report</id>
            <activation>
                <property>
                    <name>reports</name>
                </property>
            </activation>
            <reporting>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-checkstyle-plugin</artifactId>
                        <version>2.4</version>
                        <configuration>
                            <configLocation>${build.report.checkstyle.rulesurl}</configLocation>
                            <includeTestSourceDirectory>true</includeTestSourceDirectory>
                        </configuration>
                    </plugin>
                </plugins>
            </reporting>
        </profile>
        <profile>
            <id>cobertura.report</id>
            <activation>
                <property>
                    <name>cobertura</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>cobertura-maven-plugin</artifactId>
                        <version>2.4</version>
                        <configuration>
                            <check>
                                <totalLineRate>0</totalLineRate>
                            </check>
                            <formats>
                                <format>html</format>
                                <format>xml</format>
                            </formats>
                            <instrumentation>
                             <excludes>
                             	  <exclude>org/apache/**</exclude>
                                  <exclude>org/eurekastreams/server/domain/**</exclude>
				                  <exclude>**/*Test.class</exclude>
				                  <exclude>**/*Fake.class</exclude>
				                  <exclude>**/*Setup.class</exclude>
				                  <exclude>**/*Support.class</exclude>
				                  <exclude>**/*AsyncCallbackProxy.class</exclude>
				                  <exclude>**/*DTO.class</exclude>
				                  <exclude>**/*Request.class</exclude>
				                  <exclude>**/*Response.class</exclude>
				                  <exclude>**/MemcachedCache.class</exclude>
								  <exclude>**/*GuiceModule.class</exclude>
								  <exclude>**/*GuiceConfigurator.class</exclude>
				                  <exclude>org/eurekastreams/taskqueueprocessor/console/MainApp.class</exclude>
								  <exclude>org/eurekastreams/performancedatacreator/console/MainApp.class</exclude>
								  <exclude>org/eurekastreams/server/service/actions/strategies/URLFetcher.class</exclude>
								  <exclude>org/eurekastreams/server/service/actions/strategies/ImageWriter.class</exclude>
								  <exclude>org/eurekastreams/server/service/actions/CreatePersonActionFactory.class</exclude>
								  <exclude>org/eurekastreams/server/service/actions/strategies/galleryitem/*Factory.class</exclude>
								  <exclude>org/eurekastreams/server/service/servlets/*Servlet.class</exclude>
								  <exclude>org/eurekastreams/server/service/opensocial/config/ContainerPropertiesModule.class</exclude>
								  <exclude>org/eurekastreams/server/service/opensocial/config/OAuthModule.class</exclude>
		                          <exclude>org/eurekastreams/server/service/opensocial/gadgets/spec/*Fetcher.class</exclude>
								  <exclude>org/eurekastreams/server/service/restlets/WritableResource.class</exclude>
								  <exclude>org/eurekastreams/server/service/restlets/FeedReaderWritableResource.class</exclude>
		                          <exclude>org/eurekastreams/server/service/restlets/GadgetUserPrefsResource.class</exclude>
                                  <!--  Commons exclusions -->
                                  <exclude>**/Session.class</exclude>
                                  <exclude>**/*Test.class</exclude>
                                  <exclude>**/*Fake.class</exclude>
                                  <exclude>**/*MockSupport.class</exclude>
                                  <exclude>**/*MessageConsumer.class</exclude>
                                  <exclude>**/*MessageProducer.class</exclude>
                                  <!-- exclude classes that have no logic -->
                                  <exclude>**/*Request.class</exclude>
                                  <exclude>**/EntityIdentifier.class</exclude>
                                  <!-- this exclusion is included because all this class does is
                                  wrap the spring job bean with some default values and is problematic
                                  to test given the parent class implementation from Spring. -->
                                  <exclude>**/ActionSubmitterJob.class</exclude>
                                  <exclude>**/ActionExecutorFactory.class</exclude>
                                  <exclude>**/ServiceAction.class</exclude>
                                  <exclude>**/ServiceActionContext.class</exclude>
                                  <exclude>**/AsyncAction.class</exclude>
                                  <exclude>**/AsyncActionContext.class</exclude>
                                  <exclude>**/TaskHandlerActionContext.class</exclude>
                                  <exclude>**/TaskHandlerAsyncAction.class</exclude>
                                  <exclude>**/TaskHandlerServiceAction.class</exclude>
                                  <exclude>**/SessionException.class</exclude>
                                  <exclude>**/DefaultAuthorization.class</exclude>
                                  <exclude>**/DefaultPrincipal.class</exclude>
                                  <exclude>**/DefaultPrincipalPopulator.class</exclude>
                                  <exclude>**/HttpDocumentFetcherImpl.class</exclude>
                                  <exclude>**/ActionRPCServiceImpl.class</exclude>
                                <exclude>**/*Request.class</exclude>
                                <exclude>**/*Test.class</exclude>
                                <exclude>**/*Fake.class</exclude>
								<exclude>**/Debug*.class</exclude>
                                <exclude>org/eurekastreams/web/client/**/*Facade*.class</exclude>
                                <exclude>org/eurekastreams/web/client/**/Session.class</exclude>
                                <exclude>org/eurekastreams/web/client/**/*Composite*.class</exclude>
                                <exclude>org/eurekastreams/web/client/**/*Renderer*.class</exclude>
                                <exclude>org/eurekastreams/web/client/**/*Pager*.class</exclude>
                                <exclude>org/eurekastreams/web/client/**/*Notifier*.class</exclude>
                                <exclude>org/eurekastreams/web/client/**/*Widget*.class</exclude>
                                <exclude>org/eurekastreams/web/client/**/*Content*.class</exclude>
                                <exclude>org/eurekastreams/web/client/**/*EntryPoint*.class</exclude>
                                <exclude>org/eurekastreams/web/client/**/*Panel*.class</exclude>
                                <exclude>org/eurekastreams/web/client/**/*FormElement*.class</exclude>
                                <exclude>org/eurekastreams/web/client/**/*FormBuilder*.class</exclude>
                                <exclude>org/eurekastreams/web/client/**/*Factory*.class</exclude>
                                <exclude>org/eurekastreams/web/client/**/*Dialog*.class</exclude>
                                <exclude>org/eurekastreams/web/client/**/*Notification*.class</exclude>
                                <exclude>org/eurekastreams/web/client/**/*Icon*.class</exclude>
                                <exclude>org/eurekastreams/web/client/**/*Tab*.class</exclude>
                                <exclude>org/eurekastreams/web/client/**/*Event*.class</exclude>
                                <exclude>org/eurekastreams/web/client/**/*Carousel*.class</exclude>
                                <exclude>org/eurekastreams/web/client/**/*CarouselStructure*.class</exclude>
                                <exclude>org/eurekastreams/web/client/**/*MockSupport*.class</exclude>
                                <exclude>org/eurekastreams/web/client/**/*LayoutStrategy*.class</exclude>
                                <exclude>org/eurekastreams/web/client/**/*UploadStrategy*.class</exclude>
                                <exclude>org/eurekastreams/web/client/**/*Handler*.class</exclude>
                                <exclude>org/eurekastreams/web/client/**/GadgetMetaData*.class</exclude>
                                <exclude>org/eurekastreams/web/client/**/PropertyMapper*.class</exclude>
                                <exclude>org/eurekastreams/web/client/**/ClickableMenuItem*.class</exclude>
                                <exclude>org/eurekastreams/web/client/**/dragging/**/*.class</exclude>
                                <exclude>org/eurekastreams/web/client/**/*JSNIFacadeImpl*.class</exclude>
                                <exclude>org/eurekastreams/web/client/**/*GalleryRenderer*.class</exclude>
                                <exclude>org/eurekastreams/web/client/**/StreamSearchLinkBuilder*.class</exclude>
                                <exclude>org/eurekastreams/web/client/**/HideModalDialog*.class</exclude>
                                <exclude>org/eurekastreams/web/client/AnonymousClassInterceptor*.class</exclude>
                                <exclude>org/eurekastreams/web/rebind/HashedBindableGenerator*.class</exclude>
                                <exclude>org/eurekastreams/web/**/*GuiceModule*.class</exclude>
                                <exclude>com/**/*.class</exclude>
                                <exclude>net/**/*.class</exclude>
                                <exclude>javax/**/*.class</exclude>
                                <!-- Exclude the model until a technique for testing the model is developed. -->
                                <exclude>org/eurekastreams/web/client/model/**/*Model*.class</exclude>
                            </excludes>
                            </instrumentation>
                        </configuration>
                        <executions>
                             <execution>
                                 <id>cobertura</id>
                                 <phase>verify</phase>
                                 <goals>
                                     <goal>clean</goal>
                                     <goal>check</goal>
                                     <goal>cobertura</goal>
                                 </goals>
                             </execution>
                        </executions>
                   </plugin>
                </plugins>
             </build>
         </profile>
     </profiles>	
   <distributionManagement>
     <snapshotRepository>
       <id>smpsnapshots</id>
       <name>Snapshots</name>
       <url>${build.maven.snapshotrepo}</url>
     </snapshotRepository>
   </distributionManagement>	
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<parent>
		<artifactId>eurekastreams-parent</artifactId>
		<groupId>org.eurekastreams</groupId>
		<version>2.2.0-SNAPSHOT</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.eurekastreams</groupId>
	<artifactId>eurekastreams-server</artifactId>
	<name>Eureka Streams Server</name>
	<version>2.2.0-SNAPSHOT</version>
	<url>http://maven.apache.org</url>
	<dependencies>
		<dependency>
			<groupId>rome</groupId>
			<artifactId>rome</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>rome</groupId>
			<artifactId>rome-fetcher</artifactId>
			<version>1.0</version>
			<exclusions>
				<exclusion>
					<groupId>xerces</groupId>
					<artifactId>xercesImpl</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>rome</groupId>
			<artifactId>modules</artifactId>
			<version>0.3.2</version>
		</dependency>
		<dependency>
			<groupId>org.restlet</groupId>
			<artifactId>org.restlet</artifactId>
			<version>1.1.10</version>
		</dependency>
		<dependency>
			<groupId>org.restlet</groupId>
			<artifactId>org.restlet.ext.spring</artifactId>
			<version>1.1.10</version>
		</dependency>
		<dependency>
			<groupId>com.noelios.restlet</groupId>
			<artifactId>com.noelios.restlet</artifactId>
			<version>1.1.10</version>
		</dependency>
		<dependency>
			<groupId>com.noelios.restlet</groupId>
			<artifactId>com.noelios.restlet.ext.jetty</artifactId>
			<version>1.1.10</version>
		</dependency>
		<dependency>
			<groupId>com.noelios.restlet</groupId>
			<artifactId>com.noelios.restlet.ext.servlet</artifactId>
			<version>1.1.10</version>
		</dependency>
		<dependency>
			<groupId>com.noelios.restlet</groupId>
			<artifactId>com.noelios.restlet.ext.spring</artifactId>
			<version>1.1.10</version>
		</dependency>
		<dependency>
			<groupId>org.jsecurity</groupId>
			<artifactId>jsecurity</artifactId>
			<version>0.9.0</version>
		</dependency>
		<dependency>
			<groupId>com.ibm.icu</groupId>
			<artifactId>icu4j</artifactId>
			<version>3.8</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.woodstox</groupId>
			<artifactId>wstx-asl</artifactId>
			<version>3.2.7</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-asl</artifactId>
			<version>1.6.0</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-jaxrs</artifactId>
			<version>1.6.0</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.6.0</version>
		</dependency>
		<dependency>
			<groupId>net.oauth.core</groupId>
			<artifactId>oauth</artifactId>
			<version>20100527</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>net.oauth.core</groupId>
			<artifactId>oauth-provider</artifactId>
			<version>20100527</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>net.oauth.core</groupId>
			<artifactId>oauth-httpclient4</artifactId>
			<version>20090913</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.lmco.shindig</groupId>
			<artifactId>shindig-server</artifactId>
			<version>${build.gadget.shindig.version}</version>
			<type>war</type>
		</dependency>
		<dependency>
			<groupId>com.lmco.shindig</groupId>
			<artifactId>shindig-social-api</artifactId>
			<version>${build.gadget.shindig.version}</version>
		</dependency>
		<dependency>
			<groupId>com.lmco.shindig</groupId>
			<artifactId>shindig-common</artifactId>
			<version>${build.gadget.shindig.version}</version>
		</dependency>
		<dependency>
			<groupId>com.lmco.shindig</groupId>
			<artifactId>shindig-common</artifactId>
			<version>${build.gadget.shindig.version}</version>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.lmco.shindig</groupId>
			<artifactId>shindig-gadgets</artifactId>
			<version>${build.gadget.shindig.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4.2</version>
		</dependency>
		<dependency>
			<groupId>net.sf.json-lib</groupId>
			<artifactId>json-lib</artifactId>
			<version>2.2</version>
			<classifier>jdk15</classifier>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.inject.extensions</groupId>
			<artifactId>guice-spring</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.inject.extensions</groupId>
			<artifactId>guice-multibindings</artifactId>
			<version>2.0</version>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>r06</version>
		</dependency>

		<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity</artifactId>
			<version>1.7</version>
		</dependency>
		<!-- oro needed for velocity -->
		<dependency>
			<groupId>oro</groupId>
			<artifactId>oro</artifactId>
			<version>2.0.8</version>
		</dependency>
		<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity-tools</artifactId>
			<version>2.0</version>
		</dependency>

		<!-- Needed to support Hibernate -->
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>2.2</version>
		</dependency>
		<dependency>
			<groupId>asm</groupId>
			<artifactId>asm</artifactId>
			<version>1.5.3</version>
		</dependency>
		<dependency>
			<groupId>asm</groupId>
			<artifactId>asm-attrs</artifactId>
			<version>1.5.3</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${version.junit}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring</artifactId>
			<version>2.5.6.SEC02</version>
		</dependency>
		<dependency>
			<groupId>org.jmock</groupId>
			<artifactId>jmock-junit4</artifactId>
			<version>2.5.1</version>
		</dependency>
		<dependency>
			<groupId>org.jmock</groupId>
			<artifactId>jmock-legacy</artifactId>
			<version>2.5.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>1.8.0.7</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.2.2</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.12</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.1</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.6.1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>2.5.6.SEC02</version>
		</dependency>
		<dependency>
			<groupId>net.sf.gilead</groupId>
			<artifactId>gilead-core</artifactId>
			<version>1.3.2</version>
			<exclusions>
				<exclusion>
					<groupId>org.hibernate</groupId>
					<artifactId>hibernate</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.dbunit</groupId>
			<artifactId>dbunit</artifactId>
			<version>2.4.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>spy</groupId>
			<artifactId>memcached</artifactId>
			<version>2.4.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-core</artifactId>
			<version>5.2.0</version>
		</dependency>
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-pool</artifactId>
            <version>5.2.0</version>
        </dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jms</artifactId>
			<version>2.5.6.SEC02</version>
		</dependency>

		<dependency>
			<groupId>javax.ejb</groupId>
			<artifactId>ejb-api</artifactId>
			<version>3.0</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.6</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security
			</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>2.0.6.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.spring-security-oauth</groupId>
			<artifactId>spring-security-oauth</artifactId>
			<version>3.19-ES</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.ldap</groupId>
			<artifactId>spring-ldap-core</artifactId>
			<version>1.3.1.RELEASE</version>
			<exclusions>
			  <exclusion>
			    <groupId>org.springframework</groupId>
			    <artifactId>spring-tx</artifactId>
			  </exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>net.sf.gilead</groupId>
			<artifactId>gilead-hibernate</artifactId>
			<version>1.3.2</version>
			<exclusions>
				<exclusion>
					<groupId>org.jboss</groupId>
					<artifactId>ejb3</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.hibernate</groupId>
					<artifactId>hibernate</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-servlet</artifactId>
			<version>${gwtVersion}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<version>${gwtVersion}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>net.sf.gilead</groupId>
			<artifactId>gilead4gwt</artifactId>
			<version>1.3.2</version>
			<exclusions>
				<exclusion>
					<groupId>com.google.gwt</groupId>
					<artifactId>gwt-user</artifactId>
				</exclusion>
				<exclusion>
					<groupId>net.sf.gilead</groupId>
					<artifactId>gilead-hibernate</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-core</artifactId>
			<version>2.9.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-snowball</artifactId>
			<version>2.9.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.solr</groupId>
			<artifactId>solr-common</artifactId>
			<version>1.3.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.solr</groupId>
			<artifactId>solr-core</artifactId>
			<version>1.4.1</version>
			<exclusions>
				<!-- These are excluded to avoid the error about NoSuchFieldError: ANALYZED -->
				<exclusion>
					<groupId>org.apache.solr</groupId>
					<artifactId>solr-lucene-analyzers</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.solr</groupId>
					<artifactId>solr-lucene-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>woodstox</groupId>
					<artifactId>wstx-asl</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<!-- This dependency is here because search includes an older version -->
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-annotations</artifactId>
			<version>3.4.0.GA</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-commons-annotations</artifactId>
			<version>3.1.0.GA</version>
			<exclusions>
				<exclusion>
					<groupId>org.hibernate</groupId>
					<artifactId>hibernate</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>3.3.2.GA</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>3.4.0.GA</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>3.1.0.GA</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-search</artifactId>
			<version>3.1.0.GA</version>
			<!-- <exclusions> -->
			<!-- <exclusion> -->
			<!-- <groupId>org.slf4j</groupId> -->
			<!-- <artifactId>slf4j-api</artifactId> -->
			<!-- </exclusion> -->
			<!-- </exclusions> -->
		</dependency>
		<!-- Spring AOP dependencies -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>1.5.4</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.5.4</version>
		</dependency>
		<!-- end Spring AOP dependencies -->
		<dependency>
			<groupId>com.mortennobel</groupId>
			<artifactId>java-image-scaling</artifactId>
			<version>0.8.5</version>
		</dependency>
		
		
		<dependency>
			<groupId>org.jasypt</groupId>
			<artifactId>jasypt</artifactId>
			<!-- Suffix added to version number to avoid matching copies in standard repos which would have the pom
			with dependencies.  The versions in the dependencies (especially Spring) conflict with versions ES uses.
			Would use dependency exclusions if Maven supported wildcards, but without wildcards there are way too many
			to list. -->
			<version>1.8-NoDeps</version>
	    </dependency>

	</dependencies>
	<pluginRepositories>
		<pluginRepository>
			<id>Eurekastreams Snapshots</id>
			<url>http://maven.eurekastreams.org/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</pluginRepository>
	</pluginRepositories>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<excludes>
						<exclude>javax/servlet/**</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>hibernate3-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<components>
						<component>
							<name>hbm2ddl</name>
						</component>
					</components>
					<componentProperties>
						<implementation>jpaconfiguration</implementation>
						<persistenceunit>model</persistenceunit>
						<outputfilename>schema.ddl</outputfilename>
						<propertyfile>src/main/resources/hibernate.properties</propertyfile>
						<drop>false</drop>
						<create>true</create>
						<export>false</export>
						<format>true</format>
					</componentProperties>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.hibernate</groupId>
						<artifactId>hibernate-entitymanager</artifactId>
						<version>3.4.0.GA</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
					<skip>false</skip>
				</configuration>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<directory>src/main/java</directory>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
	</build>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties>

</project>
<?xml version="1.0" encoding="UTF-8"?><project>
  <parent>
    <artifactId>eurekastreams-parent</artifactId>
    <groupId>org.eurekastreams</groupId>
    <version>2.2.0-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.eurekastreams</groupId>
  <artifactId>eurekastreams-sharedresources</artifactId>
  <name>Eureka Streams Shared Resources</name>
  <version>2.2.0-SNAPSHOT</version>
  <url>http://maven.apache.org</url>
  <packaging>pom</packaging>
 <build>
    <finalName>eurekastreams-sharedresources</finalName>
    <plugins>
        <plugin>
           <groupId>org.apache.maven.plugins</groupId>
           <artifactId>maven-assembly-plugin</artifactId>
           <version>2.2-beta-2</version>
           <executions>
               <execution>
                   <id>make shared resources</id>
                   <goals>
                       <goal>single</goal>
                   </goals>
                   <phase>package</phase>
                   <configuration>
                       <descriptors>
                           <descriptor>src/main/assembly/resource.xml</descriptor>
                       </descriptors>
                   </configuration>
               </execution>
           </executions>
        </plugin>
    </plugins>
  </build>
  <properties>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  </properties>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <artifactId>eurekastreams-parent</artifactId>
        <groupId>org.eurekastreams</groupId>
        <version>2.2.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.eurekastreams</groupId>
    <artifactId>eurekastreams-taskqueueprocessor</artifactId>
    <name>Eureka Streams Task Queue Processor</name>
    <version>2.2.0-SNAPSHOT</version>
    <dependencies>
        <dependency>
            <groupId>spy</groupId>
            <artifactId>memcached</artifactId>
            <version>2.4.2</version>
        </dependency>    
	<dependency>
		<groupId>log4j</groupId>
		<artifactId>log4j</artifactId>
		<version>1.2.12</version>
	</dependency>
	<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>slf4j-log4j12</artifactId>
		<version>1.6.1</version>
	</dependency>
        <!-- Quartz -->
        <dependency>
            <groupId>quartz</groupId>
            <artifactId>quartz</artifactId>
            <version>1.5.2</version>
        </dependency>		
		<!-- Unit Testing -->
		<!-- JUnit -->
	<dependency>
		<groupId>junit</groupId>
		<artifactId>junit</artifactId>
		<version>${version.junit}</version>
		<scope>test</scope>
	</dependency>
	<!-- JMock -->
	<dependency>
		<groupId>org.jmock</groupId>
		<artifactId>jmock-junit4</artifactId>
		<version>2.5.1</version>
           <scope>test</scope>
	</dependency>
	<dependency>
		<groupId>org.jmock</groupId>
		<artifactId>jmock-legacy</artifactId>
		<version>2.5.1</version>
		<scope>test</scope>
	</dependency>
	<!-- Spring Framework -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring</artifactId>
		<version>2.5.6.SEC02</version>
	</dependency>
	<!-- ActiveMQ core -->
	<dependency>
	  <groupId>org.apache.activemq</groupId>
	  <artifactId>activemq-core</artifactId>
	  <version>5.2.0</version>
	</dependency>	
    <dependency>
        <groupId>org.apache.activemq</groupId>
        <artifactId>activemq-pool</artifactId>
        <version>5.2.0</version>
    </dependency>	
	<!-- Eureka Streams --> 
        <!-- Server -->
        <dependency>
            <groupId>org.eurekastreams</groupId>
            <artifactId>eurekastreams-server</artifactId>
            <version>${project.version}</version>
        </dependency>  
        <!--         -->
        <dependency>
            <groupId>it.cnr.isti.domoware</groupId>
            <artifactId>org.postgresql.jdbc4</artifactId>
            <version>8.3-603</version>
        </dependency>
        <dependency>
            <groupId>org.eurekastreams</groupId>
            <artifactId>${build.maven.sharedresources.artifactid}</artifactId>
            <version>${build.maven.sharedresources.version}</version>
            <classifier>resources</classifier>
            <type>zip</type>
            <scope>provided</scope>
        </dependency>        
     </dependencies>
     <build>
        <plugins>
           <plugin>
               <artifactId>maven-deploy-plugin</artifactId>
               <configuration>
                 <skip>true</skip>
              </configuration>
            </plugin>
        </plugins>
    </build>
<!--
    Profile Activation:
        Maven Flag missing (-D):

        Maven Flag (-D) with no value:
            rpm.build - if exists, perform the steps to create an RPM out of the build

        Platform:
-->
    <profiles>	        
    	<profile>
    		<id>Configure plugins when in webnode mode.</id>
    		<activation>
    			<property>
    				<name>nodetype</name>
    				<value>webnode</value>
    			</property>
    		</activation>
			<build>
				<finalName>eurekastreams-taskqueueprocessor</finalName>
				<plugins>	
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<configuration>
							<source>1.5</source>
							<target>1.5</target>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
						  <execution>
							<id>unpack-shared-resources</id>
							<goals>
							  <goal>unpack-dependencies</goal>
							</goals>
							<phase>generate-resources</phase>
							<configuration>
								 <outputDirectory>${project.build.directory}/unpack</outputDirectory>
								 <includeGroupIds>${project.groupId}</includeGroupIds>
								 <includeTypes>zip</includeTypes>
								 <includeScopes>provided</includeScopes>
								 <excludeTransitive>true</excludeTransitive>
							</configuration>
						  </execution>
						</executions>
					</plugin>
				    <plugin>
				        <groupId>org.codehaus.mojo</groupId>
				        <artifactId>exec-maven-plugin</artifactId>
				        <version>1.1</version>
				        <executions>
				          <execution>
				            <goals>
				              <goal>java</goal>
				            </goals>
				          </execution>
				        </executions>
				        <configuration>
				          <mainClass>org.eurekastreams.taskqueueprocessor.console.MainApp</mainClass>
				          <arguments>
				            <argument></argument>
				          </arguments>
				          <systemProperties>
				            <systemProperty>
				              <key>log.home</key>
				              <value>target/logs</value>
				            </systemProperty>
				          </systemProperties>
				        </configuration>
				    </plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.6</version>
						<executions>
							<execution>
								<id>create lib folder</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<mkdir dir="${project.build.directory}/unpack/lib-bin" />
										<mkdir dir="${project.build.directory}/unpack/lib-java" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
						  <execution>
							<id>copy extra jars</id>
							<phase>prepare-package</phase>
							<goals>
							  <goal>copy-resources</goal>
							</goals>
							<configuration>
							  <outputDirectory>${project.build.directory}/jsw/taskqueueprocessor/repo</outputDirectory>
							  <resources>          
								<resource>
								  <directory>${project.build.directory}/unpack/lib-java</directory>
								  <filtering>false</filtering>
								</resource>
							  </resources>              
							</configuration>            
						  </execution>
						  <execution>
							<id>copy extra libs</id>
							<phase>prepare-package</phase>
							<goals>
							  <goal>copy-resources</goal>
							</goals>
							<configuration>
							  <outputDirectory>${project.build.directory}/jsw/taskqueueprocessor/lib</outputDirectory>
							  <resources>          
								<resource>
								  <directory>${project.build.directory}/unpack/lib-bin</directory>
								  <filtering>false</filtering>
								</resource>
							  </resources>              
							</configuration>            
						  </execution>
						</executions>
					</plugin>
					
				    <!-- Application Assembler -->
					<plugin>
					 <groupId>org.codehaus.mojo</groupId>
					 <artifactId>appassembler-maven-plugin</artifactId>
					 <version>1.0</version>
		             <executions>
		                <execution>
		                <id>generate-jsw-scripts</id>
		                <phase>package</phase>
			                <goals>
			                   <goal>create-repository</goal>
		                       <goal>generate-daemons</goal>
			                </goals>
		                </execution>
		             </executions>			 
					 <configuration>
					     <assembleDirectory>${project.build.directory}/jsw/taskqueueprocessor</assembleDirectory>
					     <repositoryLayout>flat</repositoryLayout>
					     <target>${project.build.directory}</target>
					     <defaultJvmSettings>
					         <initialMemorySize>2048M</initialMemorySize>
					         <maxMemorySize>4096M</maxMemorySize>
					         <systemProperties>
					             <systemProperty>log.home=/var/log/eureka/tqp</systemProperty>
					             <systemProperty>http.proxyHost=${build.system.proxyhost}</systemProperty>
					             <systemProperty>http.proxyPort=${build.system.proxyport}</systemProperty>
					             <systemProperty>http.proxySet=${build.system.proxyset}</systemProperty>
					             <systemProperty>http.nonProxyHosts=${build.system.nonproxyhosts}</systemProperty>
					             <systemProperty>https.proxyHost=${build.system.proxyhost}</systemProperty>
					             <systemProperty>https.proxyPort=${build.system.proxyport}</systemProperty>
					         </systemProperties>
					     </defaultJvmSettings>
				         <programs>
				           <program>
				             <mainClass>org.eurekastreams.taskqueueprocessor.console.MainApp</mainClass>
				             <name>taskqueueprocessor</name>
				           </program>
				         </programs>
				         <daemons>
				           <daemon>
				             <id>taskqueueprocessor</id>
				             <mainClass>org.eurekastreams.taskqueueprocessor.console.MainApp</mainClass>
				             <commandLineArguments>
				               <commandLineArgument>start</commandLineArgument>
				             </commandLineArguments>
				             <platforms>
				               <platform>jsw</platform>
				             </platforms>
				             <generatorConfigurations>
				               <generatorConfiguration>
				                 <generator>jsw</generator>
				                 <includes>
				                   <include>linux-x86-32</include>
				                   <include>linux-x86-64</include>
				                  </includes>
				                  <configuration>
				                    <property>
				                      <name>set.default.REPO_DIR</name>
				                      <value>repo</value>
				                    </property>
				                    <property>
				                      <name>set.default.APP_BASE</name>
				                      <value>/opt/taskqueueprocessor</value>
				                    </property>
				                    <property>
				                      <name>wrapper.logfile</name>
				                      <value>/var/log/eureka/tqp/wrapper.log</value>
				                    </property>
				                    <property>
				                      <name>wrapper.working.dir</name>
				                      <value>/opt/taskqueueprocessor</value>
				                    </property>
				                    <property>
				                      <name>wrapper.java.command</name>
				                      <value>/usr/java/latest/bin/java</value>
				                    </property>
									  <property>
				                      <name>configuration.directory.in.classpath.last</name>
				                      <value>${build.taskqueueprocessor.additional-jsw-jar}</value>
				                    </property>
				                  </configuration>
				                </generatorConfiguration>
				              </generatorConfigurations>
				            </daemon>
				          </daemons>
				      </configuration>
					</plugin>					
				</plugins>
		        <resources>
		            <resource>
		                <directory>${basedir}/src/main/resources</directory>
		                <filtering>true</filtering>
		            </resource>
		            <resource>
		                <directory>${project.build.directory}/unpack/resources</directory>
		                <filtering>true</filtering>
		            </resource>
		        </resources>
			</build>
    	</profile>
       <!-- Profile to build the RPM file based on activation property "rpm.build" -->
        <profile>
            <id>RPM Build</id>
            <activation>
                <property>
                    <name>rpm.build</name>
                </property>
            </activation>           
          <build>
            <plugins>
              <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>rpm-maven-plugin</artifactId>
                <version>2.0-beta-4</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>rpm</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <name>eurekastreams-taskqueueprocessor-${rpm.build}</name>
                    <copyright>2009-2010, Lockheed Martin Corp.</copyright>
                    <distribution>Eureka Task Queue Processor</distribution>
                    <group>Application/Social Media</group>
                    <icon></icon>
                    
                    <packager>Social Media Program, Lockheed Martin Corp.</packager>
                    <prefix>/opt/taskqueueprocessor</prefix>
                    <defineStatements>
                       <defineStatement>_unpackaged_files_terminate_build 0</defineStatement>
                       <defineStatement>_binaries_in_noarch_packages_terminate_build 0</defineStatement>
                       <defineStatement>_source_filedigest_algorithm md5</defineStatement>
                       <defineStatement>_binary_filedigest_algorithm md5</defineStatement>
                       <defineStatement>_source_payload nil</defineStatement>
                       <defineStatement>_binary_payload nil</defineStatement>
                    </defineStatements>
                    <mappings>
                        <mapping>
                            <directory>/opt</directory>
                            <filemode>555</filemode>
                            <username>root</username>
                            <groupname>root</groupname>
                            <sources>
                                <source>
                                    <location>target/jsw/</location>
                                </source>
                            </sources>
                        </mapping>
                    </mappings>
                    <requires>
                    </requires>
                    <preinstallScriptlet>
                        <scriptFile>src/main/scripts/preinstall.sh</scriptFile>
                        <fileEncoding>utf-8</fileEncoding>
                     </preinstallScriptlet>
                    <postinstallScriptlet>
                        <scriptFile>src/main/scripts/postinstall.sh</scriptFile>
                        <fileEncoding>utf-8</fileEncoding>
                    </postinstallScriptlet>
                    <preremoveScriptlet>
                        <scriptFile>src/main/scripts/preremove.sh</scriptFile>
                        <fileEncoding>utf-8</fileEncoding>                    
                    </preremoveScriptlet>
                    <postremoveScriptlet>
                        <scriptFile>src/main/scripts/postremove.sh</scriptFile>
                        <fileEncoding>utf-8</fileEncoding>                    
                    </postremoveScriptlet>
                    <requires>
                    	<require>eureka-server-activemq</require>
                    </requires>
                </configuration>
              </plugin>     
            </plugins>
          </build>
        </profile>	
        <!--
            This profile configres logs and other options for
            environments requiring faster performance
        -->
        <profile>
            <id>Production Configuration</id>
            <activation>
                <property>
                    <name>buildtype</name>
                    <value>prod</value>
                </property>
            </activation>           
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>Replace log4j.xml with production version</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>target/classes</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>target/classes/log4j-prod</directory>
                                            <includes>
                                                <include>log4j.xml</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                    <overwrite>true</overwrite>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
	</profiles>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <artifactId>eurekastreams-parent</artifactId>
        <groupId>org.eurekastreams</groupId>
        <version>2.2.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.eurekastreams</groupId>
    <artifactId>eurekastreams-web</artifactId>
    <packaging>war</packaging>
    <version>2.2.0-SNAPSHOT</version>
    <name>Eureka Streams Web</name>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>net.sf.ehcache</groupId>
                <artifactId>ehcache</artifactId>
                <version>1.5.0</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.restlet</groupId>
            <artifactId>org.restlet</artifactId>
            <version>1.1.10</version>
        </dependency>
        <dependency>
            <groupId>org.restlet</groupId>
            <artifactId>org.restlet.ext.spring</artifactId>
            <version>1.1.10</version>
        </dependency>
		<dependency>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty-ajp</artifactId>
            <version>6.1.0</version>
        </dependency>
		<dependency>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty-sslengine</artifactId>
            <version>6.1.11</version>
        </dependency>
        <dependency>
            <groupId>org.tuckey</groupId>
            <artifactId>urlrewrite</artifactId>
            <version>3.2.0-beta</version>
        </dependency>
            <dependency>
            <groupId>com.thetransactioncompany</groupId>
            <artifactId>cors-filter</artifactId>
            <version>1.7</version>
        </dependency>
        <!--
            commons-lang is specified here because gilead and
            spring-ldap-core both use versions that are too old to be
            compatible with shindig. By placing it here we can override
            requests for older versions.
        -->
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.4</version>
        </dependency>
        <!-- Used for security servlet filter -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
        </dependency>
        <!--  GWT deps (from central repo) -->
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-servlet</artifactId>
            <version>${gwtVersion}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-user</artifactId>
            <version>${gwtVersion}</version>
            <scope>provided</scope>
        </dependency>
       <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-dev</artifactId>
            <version>${gwtVersion}</version>
            <scope>test</scope>
       </dependency>
       <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring</artifactId>
            <version>2.5.6.SEC02</version>
        </dependency>
        <dependency>
            <groupId>hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>1.8.0.7</version>
        </dependency>
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>1.2.2</version>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.4</version>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.12</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.5.6</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>2.5.6.SEC02</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>2.5.6.SEC02</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>2.5.6.SEC02</version>
        </dependency>

	<dependency>
	  <groupId>org.springframework.ldap</groupId>
	  <artifactId>spring-ldap-core</artifactId>
	  <version>1.3.1.RELEASE</version>
	  <exclusions>
	    <exclusion>
	      <groupId>org.springframework</groupId>
	      <artifactId>spring-tx</artifactId>
	    </exclusion>
	  </exclusions>
	</dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
            <version>2.0.4</version>
			<!-- Using 2.0.4 because 2.0.6 has a bug that results in locked users not getting the access denied page.  See JIRA https://jira.springsource.org/browse/SEC-1606.  Waiting for 2.0.7 to be released. -->
            <exclusions>
                <exclusion>
                    <groupId>commons-codec</groupId>
                    <artifactId>commons-codec</artifactId>
                </exclusion>
                <exclusion>
                    <artifactId>spring-aop</artifactId>
                    <groupId>org.springframework</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <!--  test -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${version.junit}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jmock</groupId>
            <artifactId>jmock-junit4</artifactId>
            <version>2.5.1</version>
        </dependency>
        <dependency>
            <groupId>org.eurekastreams</groupId>
            <artifactId>eurekastreams-server</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jmock</groupId>
            <artifactId>jmock-legacy</artifactId>
            <version>2.5.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty</artifactId>
            <version>6.1.14</version>
        </dependency>
        <dependency>
            <groupId>net.sf.json-lib</groupId>
            <artifactId>json-lib</artifactId>
            <version>2.2</version>
            <classifier>jdk15</classifier>
            <type>jar</type>
        </dependency>
       <dependency>
            <groupId>net.sf.gilead</groupId>
            <artifactId>gilead4gwt</artifactId>
            <version>1.3.2</version>
     		<exclusions>
			    <exclusion>
                    <groupId>com.google.gwt</groupId>
                    <artifactId>gwt-user</artifactId>
				</exclusion>
			</exclusions>
        </dependency>
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-incubator</artifactId>
            <version>2.1.0</version>
        </dependency>
        <dependency>
            <groupId>com.lmco.shindig</groupId>
            <artifactId>shindig-server</artifactId>
            <version>${build.gadget.shindig.version}</version>
            <type>war</type>
        </dependency>
        <dependency>
            <groupId>com.lmco.shindig</groupId>
            <artifactId>shindig-social-api</artifactId>
            <version>${build.gadget.shindig.version}</version>
        </dependency>
        <dependency>
            <groupId>com.lmco.shindig</groupId>
            <artifactId>shindig-common</artifactId>
            <version>${build.gadget.shindig.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.lmco.shindig</groupId>
            <artifactId>shindig-gadgets</artifactId>
            <version>${build.gadget.shindig.version}</version>
        </dependency>
        <dependency>
            <groupId>caja</groupId>
            <artifactId>json_simple</artifactId>
            <version>r1</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>it.cnr.isti.domoware</groupId>
            <artifactId>org.postgresql.jdbc4</artifactId>
            <version>8.3-603</version>
        </dependency>
        <dependency>
            <groupId>com.gwtyuicarousel</groupId>
            <artifactId>carousel</artifactId>
            <version>0.6.1</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.gwt-dnd</groupId>
            <artifactId>gwt-dnd</artifactId>
            <version>3.0.1</version>
        </dependency>
        <dependency>
            <groupId>com.googlecode.gchart</groupId>
            <artifactId>gchart</artifactId>
            <version>2.7</version>
        </dependency>
        <!-- Uncomment to enable GWT logging -->
		<!--<dependency>
		    <groupId>com.google.code.gwt-log</groupId>
		    <artifactId>gwt-log</artifactId>
		    <version>2.6.2</version>
		</dependency>-->
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.2</version>
        </dependency>

        <!-- Quartz -->
        <dependency>
            <groupId>quartz</groupId>
            <artifactId>quartz</artifactId>
            <version>1.5.2</version>
        </dependency>
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
            <version>1.4.2</version>
        </dependency>
        <dependency>
            <groupId>javax.activation</groupId>
            <artifactId>activation</artifactId>
            <version>1.1.1</version>
        </dependency>
        <dependency>
            <groupId>spy</groupId>
            <artifactId>memcached</artifactId>
            <version>2.4.2</version>
        </dependency>
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-core</artifactId>
            <version>5.2.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-pool</artifactId>
            <version>5.2.0</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>${build.maven.sharedresources.artifactid}</artifactId>
            <version>${build.maven.sharedresources.version}</version>
            <classifier>resources</classifier>
            <type>zip</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>eurekastreams-database</artifactId>
            <version>${project.version}</version>
            <classifier>resources</classifier>
            <type>zip</type>
            <scope>provided</scope>
        </dependency>
    </dependencies>
    <build>
        <finalName>ROOT</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.5</source>
                    <target>1.5</target>
                </configuration>
            </plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.0-beta-3</version>
				<executions>
					  <execution>
						    <phase>validate</phase>
						    <goals>
						      <goal>create</goal>
						    </goals>
					  </execution>
				</executions>
				<configuration>
				    <format>{0,date,yyyyMMddHHmmss}</format>
				    <items>
				        <item>timestamp</item>
				    </items>
					<doCheck>false</doCheck>
					<doUpdate>false</doUpdate>
				</configuration>
            </plugin>
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>maven-jetty-plugin</artifactId>
				<version>6.1.26</version>
                <configuration>
                    <connectors>
                        <connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
                            <port>${env.WEBPORT}</port>
                            <maxIdleTime>60000</maxIdleTime>
                        </connector>
                        <connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
                            <port>${env.GRWEBPORT}</port>
                            <maxIdleTime>60000</maxIdleTime>
                        </connector>
                    </connectors>
                    <webAppConfig>
                        <contextPath>/</contextPath>
                    </webAppConfig>
                    <webAppSourceDirectory>${project.build.directory}/${project.build.finalName}/eureka</webAppSourceDirectory>
                    <contextPath>/</contextPath>
                    <webXml>${project.build.directory}/${project.build.finalName}/eureka/WEB-INF/web.xml</webXml>
                    <requestLog  implementation="org.mortbay.jetty.NCSARequestLog">
			            <filename>${project.build.directory}/jetty-access.log</filename>
			            <retainDays>1</retainDays>
			            <append>true</append>
			            <extended>false</extended>
			            <logTimeZone>GMT</logTimeZone>
			        </requestLog> 
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <useDefaultDelimiters>false</useDefaultDelimiters>
                    <delimiters>
                       <delimiter>${*}</delimiter>
                    </delimiters>
                    <nonFilteredFileExtensions>
                       <nonFilteredFileExtension>pdf</nonFilteredFileExtension>
                       <nonFilteredFileExtension>swf</nonFilteredFileExtension>
                       <nonFilteredFileExtension>so</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.6</version>
                <executions>
                    <execution>
                        <id>set db script permissions</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                        	<target>
								<chmod dir="${project.build.directory}/classes/db/scripts" includes="**/*" perm="755" />
                        	</target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create lib folder</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                        	<target>
                        		<mkdir dir="${project.build.directory}/unpack/lib-bin" />
                        		<mkdir dir="${project.build.directory}/unpack/lib-java" />
                        	</target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                  <execution>
                    <id>unpack-dependency-resources</id>
                    <goals>
                      <goal>unpack-dependencies</goal>
                    </goals>
                    <phase>generate-resources</phase>
                    <configuration>
						 <outputDirectory>${project.build.directory}/unpack</outputDirectory>
						 <includeGroupIds>${project.groupId}</includeGroupIds>
						 <includeTypes>zip</includeTypes>
						 <includeScopes>provided</includeScopes>
						 <excludeTransitive>true</excludeTransitive>
                    </configuration>
                  </execution>
                </executions>
              </plugin>
              <plugin>
                   <artifactId>maven-deploy-plugin</artifactId>
                   <configuration>
                    <skip>true</skip>
                   </configuration>
               </plugin>

		   <!--
				If you want to use the target/web.xml file mergewebxml produces, tell the war plugin to use
				it. Also, exclude what you want from the final artifact here.
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<webResources>
						<!-- lib-java allows extensions to be pulled in via shared resources and included in the WAR -->
						<resource>
							<directory>${project.build.directory}/unpack/lib-java</directory>
							<targetPath>WEB-INF/lib</targetPath>
						</resource>
						<resource>
							<directory>${project.build.directory}/classes/public/gadgets</directory>
							<targetPath>org/eurekastreams/gadgets</targetPath>
						</resource>
						<resource>
							<directory>${project.build.directory}/classes/public</directory>
							<targetPath></targetPath>
							<includes>
								<include>*.*</include>
								<include>plugins/**</include>
								<include>scripts/**</include>
								<include>style/**</include>
							</includes>
							<excludes>
								<exclude>gadgets</exclude>
							</excludes>
						</resource>
					</webResources>
					<warSourceExcludes>.gwt-tmp/**,WEB-INF/classes/javax/**</warSourceExcludes>
					<packagingExcludes>WEB-INF/classes/public/**,WEB-INF/classes/database/**,WEB-INF/classes/db/**,WEB-INF/classes/scripts/**</packagingExcludes>
					<warName>${project.build.finalName}</warName>
					<webappDirectory>${project.build.directory}/${project.build.finalName}/eureka</webappDirectory>
					<overlays>
						<overlay>
							<groupId>com.lmco.shindig</groupId>
							<artifactId>shindig-server</artifactId>
							<type>war</type>
							<excludes>
								<!-- Exclude the slf4j JDK 1.4 logging adapter to force slf4j logging to use log4j. -->
								<exclude>WEB-INF/lib/slf4j-jdk14-*.jar</exclude>
								<!-- Exclude the slf4j API because we're using a newer version. -->
								<exclude>WEB-INF/lib/slf4j-api-*.jar</exclude>
							</excludes>
						</overlay>
					</overlays>
				</configuration>
			</plugin>
			   
        </plugins>
        <resources>
            <resource>
                <targetPath>features</targetPath>
                <directory>${basedir}/src/main/resources/features</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <targetPath>conf</targetPath>
                <directory>${basedir}/src/main/resources/conf</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <targetPath>public</targetPath>
                <directory>${basedir}/src/main/resources/public</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <targetPath>db/schema</targetPath>
                <directory>${project.build.directory}/unpack/resources/schema</directory>
                <excludes>
                    <exclude>*/*.*</exclude>
                </excludes>
            </resource>
            <resource>
                <targetPath>db/migration</targetPath>
                <directory>${project.build.directory}/unpack/resources/migration</directory>
            </resource>
                        <resource>
                <targetPath>db/scripts</targetPath>
                <directory>${project.build.directory}/unpack/resources/scripts</directory>
            </resource>
            <resource>
                <directory>${project.build.directory}/unpack/resources</directory>
                <excludes>
                    <exclude>datapopulation/**</exclude>
                    <exclude>schema/**</exclude>
                    <exclude>scripts/**</exclude>
                    <exclude>migration/**</exclude>
                </excludes>
                <filtering>true</filtering>
            </resource>
            <resource>
                <targetPath>scripts</targetPath>
                <directory>${basedir}/src/main/scripts</directory>
            </resource>
        </resources>
    </build>

<!--
    Profile Activation and Property Description:
        Maven Flag missing (-D):
            cobertura - if does not exist, perform operations a certain way

        Maven Flag (-D) with no value:
            ldap-security - if exists, moves the Spring file into place for LDAP security
            jaas-security - if exists, moves the Spring file into place for JAAS form based security 
            openaccess-security - if exists, moves the Spring file into place for open access form based security     
            preauth-security - if exists, moves the Spring file into place for pre-auth security
            kerb-security - if exists, moves the Spring file into place for JAAS security 
            EnableJMS - if exists, replace the realTimeExecuter to messageProducer enabling queuing of async
                     actions
            cobertura - if exists, enable the generation of Clover code coverage reports
            rpm.build - if exists, perform the steps to create an RPM out of the build

        Maven Flag (-D) with value:
            deployto-envname - if exists, the value is used to replace all URLs from the default of http://localhost:8080 to the
                    configured value.
                        Example... -Ddeplyto-envname=http://example.com

        System Environment variables missing:
            BUILDTYPE - if missing, perform build operations for the development environment

        System Environment variables - The following values can be configured on the command line when invoking maven with
            the -D prefix or by setting them in the user's environment:
            BUILDTYPE - this value will be examined to determine which profile to activate
                     or enable a particular profile upon absense of this environment variable
                     values can be: int, uat, perf, prod
-->
    <profiles>
        <profile>
            <id>LDAP Bind Spring Security</id>
            <activation>
                <property>
                    <name>ldap-security</name>
                </property>
            </activation>
            <properties>
            	<build.spring.security>ldap</build.spring.security>
            </properties>
        </profile>
        <profile>
            <id>Pre-auth Spring Security</id>
            <activation>
                <property>
                    <name>preauth-security</name>
                </property>
            </activation>
            <properties>
            	<build.spring.security>preauth</build.spring.security>
            </properties>
        </profile>
        <profile>
            <id>JAAS Spring Security</id>
            <activation>
                <property>
                    <name>jaas-security</name>
                </property>
            </activation>
			<properties>
            	<build.spring.security>jaas</build.spring.security>
            </properties>
        </profile>        
        <profile>
            <id>Open Access Spring Security</id>
            <activation>
                <property>
                    <name>openaccess-security</name>
                </property>
            </activation>
			<properties>
            	<build.spring.security>openaccess</build.spring.security>
            </properties>
        </profile>        
        <profile>
            <id>Kerberos JAAS Spring Security</id>
            <activation>
                <property>
                    <name>kerb-security</name>
                </property>
            </activation>
            <properties>
            	<build.spring.security>jaas</build.spring.security>
            </properties>
        </profile>
        <profile>
            <id>Enable the JMS queuing</id>
            <activation>
                <property>
                    <name>EnableJMS</name>
                </property>
            </activation>
            <properties>
                <build.jms.taskhandler>queueTaskHandler</build.jms.taskhandler>
                <build.jms.taskhandler.nonui>queueTaskHandler-nonui</build.jms.taskhandler.nonui>
            </properties>
        </profile>
  	
        <profile>
            <id>combined-project</id>
            <activation>
                <property>
                    <name>!split</name>
                </property>
            </activation>
            <properties>
            	<build.web.cdn>.</build.web.cdn>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>gwt-maven-plugin</artifactId>
                        <version>2.2.0</version>
                        <dependencies>
                            <dependency>
                                <groupId>com.google.gwt</groupId>
                                <artifactId>gwt-user</artifactId>
                                <version>${gwtVersion}</version>
                            </dependency>
                            <dependency>
                                <groupId>com.google.gwt</groupId>
                                <artifactId>gwt-dev</artifactId>
                                <version>${gwtVersion}</version>
                            </dependency>
                           <dependency>
                                <groupId>com.google.gwt</groupId>
                                <artifactId>gwt-servlet</artifactId>
                                <version>${gwtVersion}</version>
                            </dependency>
                        </dependencies>
                        <configuration>
                            <module>${build.gwt.modulename}</module>
                            <logLevel>INFO</logLevel>
                            <extraJvmArgs>-Xmx3324m</extraJvmArgs>
                            <gwtVersion>${gwtVersion}</gwtVersion>
                            <mergedWebXml>${project.build.directory}/web.xml</mergedWebXml>
                            <webXmlServletPathAsIs>true</webXmlServletPathAsIs>
                            <runTarget>index.html</runTarget>
                            <noServer>true</noServer>
                            <compileReport>true</compileReport>
                            <port>8080</port>
                            <hostedWebapp>ROOT</hostedWebapp>
                            <style>${build.gwt.compile.style}</style>
                       </configuration>
                        <executions>
                            <execution>
                                <phase>process-classes</phase>
                                <goals>
                                    <goal>compile</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
 
       <profile>
            <id>RPM Build</id>
            <activation>
                <property>
                    <name>rpm.build</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>rpm-maven-plugin</artifactId>
                        <version>2.0.1</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>rpm</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <name>eurekastreams-web-${rpm.build}</name>
                            <copyright>2009, Lockheed Martin Corp.</copyright>
                            <distribution>Eureka Streams</distribution>
                            <group>Application/Social Media</group>
                            <icon></icon>
                            <packager>Social Media Program, Lockheed Martin Corp.</packager>
                            <prefix>/opt/tomcat6/current/eurekawebapps</prefix>
                            <defineStatements>
                                <defineStatement>_unpackaged_files_terminate_build 0</defineStatement>
                                <defineStatement>_binaries_in_noarch_packages_terminate_build 0</defineStatement>
                                <defineStatement>_source_filedigest_algorithm md5</defineStatement>
                                <defineStatement>_binary_filedigest_algorithm md5</defineStatement>
                                <defineStatement>_source_payload nil</defineStatement>
                                <defineStatement>_binary_payload nil</defineStatement>
                            </defineStatements>
                            <mappings>
                                <mapping>
                                    <directory>/opt/tomcat6/current/eurekawebapps</directory>
                                    <filemode>555</filemode>
                                    <username>root</username>
                                    <groupname>root</groupname>
                                    <sources>
                                        <source>
                                            <location>${project.build.directory}/ROOT.war</location>
                                        </source>
                                    </sources>
                                </mapping>
                                <mapping>   
                                    <directory>/usr/lib</directory>
                                    <filemode>555</filemode>
                                    <username>root</username>
                                    <groupname>root</groupname>
                                    <sources>
                                        <source>
                                            <location>${project.build.directory}/unpack/lib-bin</location>
                                            <excludes>
                                                <exclude>README.txt</exclude>
                                            </excludes>
                                        </source>
                                    </sources>
                                </mapping>                                
                            </mappings>
                            <requires>
                            </requires>
			                    <preinstallScriptlet>
			                        <scriptFile>${project.build.directory}/classes/scripts/preinstall.sh</scriptFile>
			                        <fileEncoding>utf-8</fileEncoding>
			                     </preinstallScriptlet>
			                    <postinstallScriptlet>
			                        <scriptFile>${project.build.directory}/classes/scripts/postinstall.sh</scriptFile>
			                        <fileEncoding>utf-8</fileEncoding>
			                    </postinstallScriptlet>
			                    <preremoveScriptlet>
			                        <scriptFile>${project.build.directory}/classes/scripts/preremove.sh</scriptFile>
			                        <fileEncoding>utf-8</fileEncoding>                    
			                    </preremoveScriptlet>
			                    <postremoveScriptlet>
			                        <scriptFile>${project.build.directory}/classes/scripts/postremove.sh</scriptFile>
			                        <fileEncoding>utf-8</fileEncoding>                    
			                    </postremoveScriptlet>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>Dev Environment Web Build Config</id>
            <activation>
                <property>
                    <name>buildtype</name>
                    <value>dev</value>
                </property>
            </activation>
            <build>            
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-resources</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/classes/db/schema</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.build.directory}/unpack/resources/database/schema/dev</directory>
                                            <includes>
                                                <include>*.sql</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                    <overwrite>true</overwrite>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-WAR</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${env.HOME}/tomcat/webapps</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.build.directory}</directory>
                                            <includes>
                                                <include>ROOT.war</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                    <overwrite>true</overwrite>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>Int Environment Web Build Config</id>
            <activation>
                <property>
                    <name>buildtype</name>
                    <value>int</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-resources</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/classes/db/schema</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.build.directory}/unpack/resources/database/schema/int</directory>
                                            <includes>
                                                <include>*.sql</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                    <overwrite>true</overwrite>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>Uat Environment Web Build Config</id>
            <activation>
                <property>
                    <name>buildtype</name>
                    <value>uat</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-resources</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/classes/db/schema</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.build.directory}/unpack/resources/database/schema/uat</directory>
                                            <includes>
                                                <include>*.sql</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                    <overwrite>true</overwrite>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>Perf Environment Web Build Config</id>
            <activation>
                <property>
                    <name>buildtype</name>
                    <value>perf</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-resources</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/classes/conf</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.build.directory}/classes/conf/log4j-prod</directory>
                                            <includes>
                                                <include>log4j.xml</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                    <overwrite>false</overwrite>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>Prod Environment Web Build Config</id>
            <activation>
                <property>
                    <name>buildtype</name>
                    <value>prod</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-resources</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/classes/conf</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.build.directory}/classes/conf/log4j-prod</directory>
                                            <includes>
                                                <include>log4j.xml</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                    <overwrite>true</overwrite>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>Update node type to Web node</id>
            <activation>
                <property>
                    <name>nodetype</name>
                    <value>webnode</value>
                </property>
            </activation>
            <properties>
                <build.system.nodetype>webNode</build.system.nodetype>
                <build.system.jobscheduler><![CDATA[<!-- No job scheduler -->]]></build.system.jobscheduler>
                <build.jms.taskhandler>queueTaskHandler</build.jms.taskhandler>
                <build.jms.taskhandler.nonui>queueTaskHandler-nonui</build.jms.taskhandler.nonui>
            </properties>
        </profile>
        <profile>
             <id>gwt-dev-windows</id>
            <properties>
                <platform>windows</platform>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
                <os>
                    <family>Windows</family>
                </os>
            </activation>
        </profile>
        <profile>
            <id>gwt-dev-mac</id>
            <properties>
                <platform>mac</platform>
            </properties>
            <activation>
                <os>
                    <family>mac</family>
                </os>
            </activation>
        </profile>
        <profile>
            <id>gwt-dev-linux</id>
            <properties>
                <platform>linux</platform>
            </properties>
            <activation>
                <os>
                    <name>Linux</name>
                </os>
            </activation>
        </profile>
    </profiles>
    <properties>
    <!--    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding> -->
    </properties>

</project>
