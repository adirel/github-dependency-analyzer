buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.9.+'
    }
}
apply plugin: 'android'

repositories {
    mavenCentral()
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.0.3"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 19
        versionCode versionCodeInt
        versionName version
    }
    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
}

dependencies {
    compile project(':calligraphy')
    compile 'com.android.support:support-v4:19.0.+'
//    compile "uk.co.chrisjenx.calligraphy:calligraphy:0.5.+"
}
// Top-level build file where you can add configuration options common to all sub-projects/modules.
allprojects {
    repositories {
        mavenCentral()
    }

    group = 'uk.co.chrisjenx'
    version = "0.8.0"

    ext.versionCodeInt = 6
    ext.isReleaseVersion = has("release")
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.9.+'
    }
}
apply plugin: 'android-library'

repositories {
    mavenCentral()
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.0.3"

    defaultConfig {
        minSdkVersion 7
        targetSdkVersion 19
        versionCode versionCodeInt
        versionName version
    }

    buildTypes {
        release {
            runProguard false
        }
    }
}

dependencies {
}

android.libraryVariants.all { variant ->
    def name = variant.buildType.name

    // Only attach a jar for non-debug build types.
    if (!name.equals(com.android.builder.BuilderConstants.DEBUG)) {
        def task = project.tasks.create "jar${name.capitalize()}", Jar
        task.dependsOn variant.javaCompile
        task.from variant.javaCompile.destinationDir
        artifacts.add('archives', task);
    }
}

apply from: file("deploy.gradle")
