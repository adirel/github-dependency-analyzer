subprojects {
    apply plugin: 'java'

    repositories {
        mavenCentral()
    }

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}
dependencies {
    compile project(":reactfx")
}

task fatJar(type: Jar, dependsOn: classes) {
    appendix = 'fat'
    from sourceSets.main.output
    from { configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) } }
}

assemble.dependsOn fatJar

task AndGateDemo(type: JavaExec, dependsOn: classes) {
    main = 'org.reactfx.inhibeans.demo.AndGateDemo'
    classpath = files(sourceSets.main.output, configurations.runtime)
}

task FibTest(type: JavaExec, dependsOn: classes) {
    main = 'org.reactfx.inhibeans.demo.FibTest'
    classpath = files(sourceSets.main.output, configurations.runtime)
}
apply plugin: 'maven'
apply plugin: 'signing'

group = 'org.reactfx'

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.+'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar

    archives javadocJar
    archives sourcesJar
}

signing {
    sign configurations.archives
}

signArchives.onlyIf {
    project.hasProperty('signing.keyId') && project.hasProperty('signing.password') && project.hasProperty('signing.secretKeyRingFile')
}

uploadArchives {
    repositories.mavenDeployer {
        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

        repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
          authentication(userName: sonatypeUsername, password: sonatypePassword)
        }

        snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots') {
            authentication(userName: sonatypeUsername, password: sonatypePassword)
        }

        pom.project {
           name 'ReactFX'
           packaging 'jar'
           description 'Reactive event streams for JavaFX'
           url 'http://www.reactfx.org/'

           scm {
               url 'scm:git@github.com:TomasMikula/ReactFX.git'
               connection 'scm:git@github.com:TomasMikula/ReactFX.git'
               developerConnection 'scm:git@github.com:TomasMikula/ReactFX.git'
           }

           licenses {
               license {
                   name 'The BSD 2-Clause License'
                   url 'http://opensource.org/licenses/BSD-2-Clause'
                   distribution 'repo'
               }
           }

           developers {
               developer {
                   name 'Tomas Mikula'
               }
           }
       }
    }
}


uploadArchives.onlyIf {
    project.hasProperty('sonatypeUsername') && project.hasProperty('sonatypePassword')
}
