<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.camunda.bpm</groupId>
    <artifactId>camunda-parent</artifactId>
    <relativePath>../parent/</relativePath>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <groupId>org.camunda.bpm</groupId>
  <artifactId>camunda-bom</artifactId>
  <packaging>pom</packaging>
  <name>camunda BPM - Bom</name>
  <url>http://camunda.org</url>

  <description>camunda BPM bill of material</description>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <organization>
    <name>camunda services GmbH</name>
    <url>http://www.camunda.com</url>
  </organization>

  <dependencyManagement>
    <dependencies>
      <!-- external dependencies -->
      <dependency>
        <groupId>org.mybatis</groupId>
        <artifactId>mybatis</artifactId>
        <version>3.1.1</version>
      </dependency>
      <dependency>
        <groupId>joda-time</groupId>
        <artifactId>joda-time</artifactId>
        <version>2.1</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.uuid</groupId>
        <artifactId>java-uuid-generator</artifactId>
        <version>3.1.2</version>
      </dependency>
  
      <!-- camunda BPM public artifacts -->       
      <dependency>
        <groupId>org.camunda.bpm</groupId>
        <artifactId>camunda-engine</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.camunda.bpm</groupId>
        <artifactId>camunda-engine-cdi</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.camunda.bpm</groupId>
        <artifactId>camunda-engine-spring</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.camunda.bpm</groupId>
        <artifactId>camunda-engine-rest</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.camunda.bpm.identity</groupId>
        <artifactId>camunda-identity-ldap</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.camunda.bpm.javaee</groupId>
        <artifactId>camunda-ejb-client</artifactId>
        <version>${project.version}</version>
      </dependency>
      
      <!-- BPMN Model API -->
      <dependency>
        <groupId>org.camunda.bpm.model</groupId>
        <artifactId>camunda-bpmn-model</artifactId>
        <version>${project.version}</version>
      </dependency>
      
    </dependencies>
  </dependencyManagement>

  <developers>
    <developer>
      <id>camunda.org</id>
      <name>camunda BPM Community</name>
      <organization>camunda.org</organization>
      <organizationUrl>http://camunda.org</organizationUrl>
    </developer>
  </developers>

  <scm>
    <url>https://github.com/camunda/camunda-bpm-platform</url>
    <connection>scm:git:git@github.com:camunda/camunda-bpm-platform.git</connection>
    <developerConnection>scm:git:git@github.com:camunda/camunda-bpm-platform.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <issueManagement>
    <system>Jira</system>
    <url>https://app.camunda.com/jira/browse/CAM/</url>
  </issueManagement>
</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <description>
    Assembles the camunda BPM platform and makes it ready for qa. 
    The assembly is installed to maven later in the reactor, if the integration tests pass sucessfully
  </description>

  <artifactId>camunda-glassfish-assembly</artifactId>
  <packaging>pom</packaging>

  <parent>
    <groupId>org.camunda.bpm.glassfish</groupId>
    <artifactId>camunda-glassfish</artifactId>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <name>camunda BPM - Glassfish 3.1.x Assembly</name>

  <dependencies>

	<dependency>
		<groupId>org.glassfish.main.distributions</groupId>
		<artifactId>glassfish</artifactId>
		<version>${version.glassfish}</version>
		<type>zip</type>
		<exclusions>
        
        <!-- This keeps maven from downloading a bunch of poms we do not need. 
             We just need the glassfish zip distribution. 
             For some reason the pom for that depends on all these other poms which again
             transitively pull in every pom used in the appserver.
             
             NOTE: if you do an upgrade to a new glassfish version, check the
             org.glassfish.distributions:glassfish pom for new dependencies and if
             they added some, exclude these as well. (DM)  -->
        
        <exclusion>
          <groupId>org.glassfish.distributions</groupId>
          <artifactId>web</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.glassfish.packager</groupId>
          <artifactId>glassfish-common-full</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.glassfish.packager</groupId>
          <artifactId>glassfish-ejb</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.glassfish.packager</groupId>
          <artifactId>glassfish-cmp</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.glassfish.packager</groupId>
          <artifactId>glassfish-corba</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.glassfish.packager</groupId>
          <artifactId>metro</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.glassfish.packager</groupId>
          <artifactId>glassfish-appclient</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.glassfish.packager</groupId>
          <artifactId>glassfish-jms</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.glassfish.packager</groupId>
          <artifactId>mq</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.glassfish.registration</groupId>
          <artifactId>servicetag-registry</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.glassfish.packager</groupId>
          <artifactId>legal-fragment</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm.javaee</groupId>
      <artifactId>camunda-ejb-client</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm.glassfish</groupId>
      <artifactId>camunda-glassfish-ear</artifactId>
      <version>${project.version}</version>
      <type>ear</type>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm.glassfish</groupId>
      <artifactId>camunda-glassfish-service</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm.identity</groupId>
      <artifactId>camunda-identity-ldap</artifactId>
    </dependency>

    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis</artifactId>
    </dependency>

    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>        
    </dependency>

    <dependency>
      <groupId>com.fasterxml.uuid</groupId>
      <artifactId>java-uuid-generator</artifactId>
    </dependency>

    <dependency>
    	<groupId>org.camunda.bpm.javaee</groupId>
    	<artifactId>camunda-jobexecutor-rar</artifactId>
    	<version>${project.version}</version>
    	<type>rar</type>
    </dependency>
  </dependencies>

  <build>
    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>target/filtered-resources</outputDirectory>
              <resources>
                <resource>                  
                  <directory>src/</directory>
                  <filtering>true</filtering>
                  <includes>
                    <include>domain.xml</include>
                  </includes>
                </resource>
              </resources>
              <useDefaultDelimiters>false</useDefaultDelimiters>
              <delimiters>
                <delimiter>#{*}</delimiter>
              </delimiters>
            </configuration>
          </execution>
        </executions>
      </plugin>
        
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>assemble</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>assembly.xml</descriptor>
              </descriptors>
              <attach>true</attach>
              <appendAssemblyId>false</appendAssemblyId>
              <outputDirectory>target/</outputDirectory>
              <workDirectory>target/assembly/work</workDirectory>
              <tarLongFileMode>gnu</tarLongFileMode>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>camunda-bpm-glassfish</artifactId>
  <packaging>pom</packaging>

  <parent>
    <groupId>org.camunda.bpm.glassfish</groupId>
    <artifactId>camunda-glassfish</artifactId>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <name>camunda BPM - Glassfish 3.1.x Distro</name>

  <dependencies>
  
    <dependency>
      <groupId>org.camunda.bpm.glassfish</groupId>
      <artifactId>camunda-glassfish-assembly</artifactId>
      <version>${project.version}</version>
      <type>tar.gz</type>
    </dependency>

    <dependency>
  	  <groupId>org.camunda.bpm.distro</groupId>
  	  <artifactId>camunda-sql-scripts</artifactId>
  	  <version>${project.version}</version>
  	  <type>jar</type>
    </dependency>    

  	<!-- cycle -->
    <dependency>
      <groupId>org.camunda.bpm.cycle</groupId>
      <artifactId>camunda-cycle-glassfish</artifactId>
      <version>${project.version}</version>    
      <type>war</type>
    </dependency>
	
    <dependency>
      <groupId>org.camunda.bpm.cycle</groupId>
      <artifactId>camunda-cycle-sql-scripts</artifactId>
      <version>${project.version}</version>
    </dependency>
    
    <!-- rest -->
    
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine-rest</artifactId>
      <version>${project.version}</version>
      <type>war</type>
    </dependency>
    
    <!-- camunda webapp -->
    
    <dependency>
      <groupId>org.camunda.bpm.webapp</groupId>
      <artifactId>camunda-webapp-glassfish</artifactId>
      <version>${project.version}</version>
      <type>war</type>
    </dependency>
	
    <!-- sample applications -->
    <dependency>
      <groupId>org.camunda.bpm.distro</groupId>
      <artifactId>camunda-h2-webapp</artifactId>
      <version>${project.version}</version>
      <type>war</type>
    </dependency>
    
    <dependency>
      <groupId>org.camunda.bpm.example</groupId>
      <artifactId>camunda-example-invoice</artifactId>
      <version>${project.version}</version>
      <type>war</type>
    </dependency>
    
    <dependency>
      <groupId>org.camunda.bpm.example</groupId>
      <artifactId>camunda-example-wait-states</artifactId>
      <version>${project.version}</version>
      <type>war</type>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>distro</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>assembly.xml</descriptor>
              </descriptors>
              <finalName>camunda-bpm-glassfish-${project.version}</finalName>
              <attach>true</attach>
              <appendAssemblyId>false</appendAssemblyId>
              <outputDirectory>target/</outputDirectory>
              <workDirectory>target/assembly/work</workDirectory>
              <tarLongFileMode>gnu</tarLongFileMode>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>camunda-glassfish-ear</artifactId>
  <name>camunda BPM - Glassfish 3.1.x EAR</name>
  <packaging>ear</packaging>

  <parent>
    <groupId>org.camunda.bpm.glassfish</groupId>
    <artifactId>camunda-glassfish</artifactId>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-ear-plugin</artifactId>
        <configuration>
          <version>6</version>
          <defaultLibBundleDir>lib</defaultLibBundleDir>
          <applicationName>camunda-bpm-platform</applicationName>          
        </configuration>
      </plugin>      
    </plugins>
  </build>

  <dependencies>     
    <dependency>
      <groupId>org.camunda.bpm.glassfish</groupId>
      <artifactId>camunda-glassfish-service</artifactId>
      <version>${project.version}</version>
      <type>ejb</type>
    </dependency>  

    <!-- exclude engine from ear -->
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine</artifactId>
      <scope>provided</scope>
    </dependency>      
  </dependencies>

</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.camunda.bpm</groupId>
    <artifactId>camunda-parent</artifactId>
    <relativePath>../../parent</relativePath>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <groupId>org.camunda.bpm.glassfish</groupId>
  <artifactId>camunda-glassfish</artifactId>
  <version>7.2.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>camunda BPM - Glassfish 3.1.x</name>

  <description>
    This pom defines the modules for the glassfish distribution
  </description>
  
  <profiles>
    <profile>
      <id>distro</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <modules>
        <module>assembly</module>
        <module>ear</module>
        <module>service</module>
      </modules>
    </profile>
    <profile>
      <id>distro-ce</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <modules>
        <module>distro</module>
      </modules>
    </profile>
  </profiles>
  
</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>camunda-glassfish-service</artifactId>
  <packaging>jar</packaging>
  <name>camunda BPM - Glassfish 3.1.x Service</name>

  <parent>
    <groupId>org.camunda.bpm.glassfish</groupId>
    <artifactId>camunda-glassfish</artifactId>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <dependencies>

    <dependency>
      <groupId>org.camunda.bpm.javaee</groupId>
      <artifactId>camunda-ejb-service</artifactId>
      <version>${project.version}</version>
      <type>ejb</type>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-ejb-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-sources-for-shade-plugin</id>
            <phase>package</phase>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <description>
    Assembles the camunda BPM platform and makes it ready for qa. 
    The assembly is installed to maven later in the reactor, if the integration tests pass successfully
  </description>

  <artifactId>camunda-jboss-assembly</artifactId>
  <packaging>pom</packaging>

  <parent>
    <groupId>org.camunda.bpm.jboss</groupId>
    <artifactId>camunda-jboss</artifactId>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <name>camunda BPM - jBoss7 Assembly</name>

  <dependencies>
    <dependency>
      <groupId>org.jboss.as</groupId>
      <artifactId>jboss-as-dist</artifactId>
      <version>${version.jboss.as}</version>
      <type>tar.gz</type>
      <exclusions>
        <exclusion>
          <groupId>org.jboss.as</groupId>
          <artifactId>jboss-as-build-config</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm.javaee</groupId>
      <artifactId>camunda-ejb-client</artifactId>
    </dependency>
    
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine</artifactId>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm.identity</groupId>
      <artifactId>camunda-identity-ldap</artifactId>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine-cdi</artifactId>
    </dependency>
    
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine-spring</artifactId>
      <version>${project.version}</version>
    </dependency>
    
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine-rest</artifactId>
      <classifier>classes</classifier>
      <version>${project.version}</version>
    </dependency>
    
    <dependency>
      <groupId>com.fasterxml.uuid</groupId>
      <artifactId>java-uuid-generator</artifactId>
    </dependency>

    <dependency>
      <!-- this dependency is to make sure that we are executed after camunda-modules 
        in the reactor -->
      <groupId>org.camunda.bpm.jboss</groupId>
      <artifactId>camunda-jboss-modules</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>assemble</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>assembly.xml</descriptor>
              </descriptors>
              <attach>true</attach>
              <appendAssemblyId>false</appendAssemblyId>
              <outputDirectory>target/</outputDirectory>
              <workDirectory>target/assembly/work</workDirectory>
              <tarLongFileMode>gnu</tarLongFileMode>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <!-- 
    We need this repository to fetch

      org.jboss.as:jboss-as-dist:${version.jboss.as}
  -->
  <repositories>
    <repository>
      <id>camunda public</id>
      <name>camunda</name>
      <url>https://app.camunda.com/nexus/content/groups/public/</url>
    </repository>
  </repositories>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>camunda-bpm-jboss</artifactId>
  <packaging>pom</packaging>

  <parent>
    <groupId>org.camunda.bpm.jboss</groupId>
    <artifactId>camunda-jboss</artifactId>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <name>camunda BPM - jBoss7 Distro</name>

  <dependencies>
    <dependency>
      <!-- this dependency is to make sure that we are executed after the 
        integration tests have passed in the reactor -->
      <groupId>org.camunda.bpm.qa</groupId>
      <artifactId>camunda-qa</artifactId>
      <version>${project.version}</version>
      <type>pom</type>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>org.camunda.bpm.jboss</groupId>
      <artifactId>camunda-jboss-assembly</artifactId>
      <version>${project.version}</version>
      <type>tar.gz</type>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm.distro</groupId>
      <artifactId>camunda-sql-scripts</artifactId>
      <version>${project.version}</version>
      <type>jar</type>
    </dependency>
        
    <dependency>
      <groupId>org.camunda.bpm.cycle</groupId>
      <artifactId>camunda-cycle-sql-scripts</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm.cycle</groupId>
      <artifactId>camunda-cycle-jboss</artifactId>
      <version>${project.version}</version>
      <type>war</type>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm.distro</groupId>
      <artifactId>camunda-h2-webapp</artifactId>
      <version>${project.version}</version>
      <type>war</type>
    </dependency>
    
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine-rest</artifactId>
      <version>${project.version}</version>
      <type>war</type>
    </dependency>
    
    <dependency>
      <groupId>org.camunda.bpm.webapp</groupId>
      <artifactId>camunda-webapp-jboss</artifactId>
      <version>${project.version}</version>
      <type>war</type>
    </dependency>
    
    <dependency>
      <groupId>org.camunda.bpm.example</groupId>
      <artifactId>camunda-example-invoice</artifactId>
      <version>${project.version}</version>
      <type>war</type>
    </dependency>
    
    <dependency>
      <groupId>org.camunda.bpm.example</groupId>
      <artifactId>camunda-example-wait-states</artifactId>
      <version>${project.version}</version>
      <type>war</type>
    </dependency>    

  </dependencies>
  
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>distro</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>assembly.xml</descriptor>
              </descriptors>
              <finalName>camunda-bpm-jboss-${project.version}</finalName>
              <attach>true</attach>
              <appendAssemblyId>false</appendAssemblyId>
              <outputDirectory>target/</outputDirectory>
              <workDirectory>target/assembly/work</workDirectory>
              <tarLongFileMode>gnu</tarLongFileMode>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>camunda-jboss-modules</artifactId>
  <packaging>jar</packaging>
  <name>camunda BPM - jBoss7 Modules</name>

  <parent>
    <groupId>org.camunda.bpm.jboss</groupId>
    <artifactId>camunda-jboss</artifactId>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <properties>
    <org.jboss.shrinkwrap.resolver.version>1.0.0-beta-5</org.jboss.shrinkwrap.resolver.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.camunda.bpm.jboss</groupId>
      <artifactId>camunda-jboss-subsystem</artifactId>
      <version>${project.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.apache.commons</groupId>
          <artifactId>commons-email</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-beans</artifactId>
        </exclusion>
        <exclusion>
          <groupId>commons-lang</groupId>
          <artifactId>commons-lang</artifactId>
        </exclusion>
        <exclusion>
          <groupId>joda-time</groupId>
          <artifactId>joda-time</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.camunda.bpm.identity</groupId>
      <artifactId>camunda-identity-ldap</artifactId>
    </dependency>
  </dependencies>

  <build>
    <finalName>${project.artifactId}</finalName>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <dependencyfilesets scopes="compile" />

                <mkdir dir="target/modules" />

                <!-- copy all files -->
                <copy todir="target/modules" flatten="false">
                  <fileset refid="maven.project.dependencies" />
                  <regexpmapper from="^(.*)/([^/]+)/([^/]*)$$" to="\1/main/\3" handledirsep="yes" />
                </copy>

                <delete dir="target/modules/org/camunda/bpm" /> 

                <!-- copy all files again, but this only matches fox files and this treatment makes is maven 2/3 compatible => timestamped snapshot -->
                <copy todir="target/modules" flatten="false">
                  <fileset refid="maven.project.dependencies" />
                  <mapper>
                    <chainedmapper>
                      <regexpmapper from="^(.*)/([^/]+)/([^/]*)$$" to="\1/main/\3" handledirsep="yes" />
                      <regexpmapper from="^(.*)/((camunda-[A-Za-z-]*)[0-9\.]*).*.jar$$" to="\1/\3${project.version}.jar" handledirsep="yes" />
                    </chainedmapper>
                  </mapper>
                </copy>

                <copy todir="target/modules" flatten="false">
                  <fileset dir="src/main/modules" />               
                </copy>
                
                <replace dir="target/modules" token="@project.version@" value="${project.version}">
                  <include name="**/module.xml" />
                </replace>                
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
       <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>joda-time</groupId>
                  <artifactId>joda-time</artifactId>                  
                  <outputDirectory>${project.build.directory}/modules/org/joda/time/2.1/</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <classesDirectory>${project.build.directory}/modules/</classesDirectory>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.camunda.bpm</groupId>
    <artifactId>camunda-parent</artifactId>
    <relativePath>../../parent</relativePath>
    <version>7.2.0-SNAPSHOT</version>
  </parent>
  
  <groupId>org.camunda.bpm.jboss</groupId>
  <artifactId>camunda-jboss</artifactId>
  <packaging>pom</packaging>

  <name>camunda BPM - jBoss7</name>

  <profiles>
    <profile>
      <id>distro</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <modules>
        <module>assembly</module>
        <module>modules</module>
        <module>subsystem</module>
      </modules>
    </profile>
    <profile>
      <id>distro-ce</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <modules>
        <module>distro</module>
      </modules>
    </profile>
  </profiles>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>camunda-jboss-subsystem</artifactId>
  <packaging>jar</packaging>

  <name>camunda BPM - jBoss7 Subsystem</name>

  <parent>
    <groupId>org.camunda.bpm.jboss</groupId>
    <artifactId>camunda-jboss</artifactId>
    <version>7.2.0-SNAPSHOT</version>
  </parent>
  
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.jboss.as</groupId>
        <artifactId>jboss-as-controller</artifactId>
        <version>${version.jboss.as}</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.as</groupId>
        <artifactId>jboss-as-server</artifactId>
        <version>${version.jboss.as}</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.as</groupId>
        <artifactId>jboss-as-subsystem-test</artifactId>
        <version>${version.jboss.as}</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.as</groupId>
        <artifactId>jboss-as-weld</artifactId>
        <version>${version.jboss.as}</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.spec.javax.transaction</groupId>
        <artifactId>jboss-transaction-api_1.1_spec</artifactId>
        <version>1.0.0.Final</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
      
    <dependency>
    	<groupId>org.jboss.as</groupId>
    	<artifactId>jboss-as-threads</artifactId>
    	<version>${version.jboss.as}</version>
    	<scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-beans</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.uuid</groupId>
      <artifactId>java-uuid-generator</artifactId>
      <exclusions>
        <exclusion>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.16</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.as</groupId>
      <artifactId>jboss-as-controller</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.as</groupId>
      <artifactId>jboss-as-server</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.spec.javax.transaction</groupId>
      <artifactId>jboss-transaction-api_1.1_spec</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.as</groupId>
      <artifactId>jboss-as-weld</artifactId>
      <scope>provided</scope>
    </dependency>
    <!-- test dependencies -->
    <dependency>
      <groupId>org.jboss.as</groupId>
      <artifactId>jboss-as-subsystem-test</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>  
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <redirectTestOutputToFile>true</redirectTestOutputToFile>
          <enableAssertions>true</enableAssertions>
          <argLine>-Xmx512m</argLine>
          <systemProperties>
            <property>
              <name>jboss.home</name>
              <value>${jboss.home}</value>
            </property>
          </systemProperties>
          <includes>
            <include>**/*TestCase.java</include>
            <include>**/*Test.java</include>
          </includes>
          <forkMode>once</forkMode>
        </configuration>
      </plugin>     
    </plugins>
  </build>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.camunda.bpm</groupId>
    <artifactId>camunda-parent</artifactId>
    <relativePath>../../parent</relativePath>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <groupId>org.camunda.bpm.distro</groupId>
  <artifactId>camunda-sql-scripts</artifactId>
  <packaging>jar</packaging>

  <name>camunda BPM - SQL scripts</name>
  
  <build>
  <resources>
  	<resource>
  	  <targetPath>sql/upgrade</targetPath>
  		<directory>target/sql/upgrade</directory>
  		<includes>
  			<include>*.sql</include>
  		</includes>
  	</resource>
  	<resource>
  		<targetPath>sql/create</targetPath>
  		<directory>target/sql/create</directory>
  		<includes>
  			<include>*.sql</include>
  		</includes>
  	</resource>
  	<resource>
  		<targetPath>sql/drop</targetPath>
  		<directory>target/sql/drop</directory>
  		<includes>
  			<include>*.sql</include>
  		</includes>
  	</resource>
  </resources>
  
  	<plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
        	      <groupId>org.camunda.bpm</groupId>
        		  <artifactId>camunda-engine</artifactId>
                  <version>${project.version}</version>
                  <type>jar</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>target/camunda-engine-${project.version}</outputDirectory>
                </artifactItem>
              </artifactItems>
              <includes>**/create/*.sql, **/drop/*.sql</includes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
              
              	<!-- create -->
                
                <mkdir dir="target/sql/create" />
                
                <concat destfile="target/sql/create/db2_engine_${project.version}.sql" fixlastline="yes">
                	<filelist dir="target/camunda-engine-${project.version}/org/camunda/bpm/engine/db/create" files="activiti.db2.create.engine.sql activiti.db2.create.history.sql" />
                </concat>

                <concat destfile="target/sql/create/h2_engine_${project.version}.sql" fixlastline="yes">
                	<filelist dir="target/camunda-engine-${project.version}/org/camunda/bpm/engine/db/create" files="activiti.h2.create.engine.sql activiti.h2.create.history.sql" />
                </concat>

                <concat destfile="target/sql/create/mssql_engine_${project.version}.sql" fixlastline="yes">
                	<filelist dir="target/camunda-engine-${project.version}/org/camunda/bpm/engine/db/create" files="activiti.mssql.create.engine.sql activiti.mssql.create.history.sql" />
                </concat>

                <concat destfile="target/sql/create/mysql_engine_${project.version}.sql" fixlastline="yes">
                	<filelist dir="target/camunda-engine-${project.version}/org/camunda/bpm/engine/db/create" files="activiti.mysql.create.engine.sql activiti.mysql.create.history.sql" />
                </concat>

                <concat destfile="target/sql/create/oracle_engine_${project.version}.sql" fixlastline="yes">
                	<filelist dir="target/camunda-engine-${project.version}/org/camunda/bpm/engine/db/create" files="activiti.oracle.create.engine.sql activiti.oracle.create.history.sql" />
                </concat>
                
                <concat destfile="target/sql/create/postgres_engine_${project.version}.sql" fixlastline="yes">
                	<filelist dir="target/camunda-engine-${project.version}/org/camunda/bpm/engine/db/create" files="activiti.postgres.create.engine.sql activiti.postgres.create.history.sql" />
                </concat>
                
                <copy todir="target/sql/create" flatten="false">
                  <fileset dir="target/camunda-engine-${project.version}/org/camunda/bpm/engine/db/create" />
                  <mapper>
                    <chainedmapper>
                      <regexpmapper from="^(activiti.)([A-Za-z0-9]*)(.create.identity.sql)" to="\2_identity_${project.version}.sql" handledirsep="yes" />
                    </chainedmapper>
                  </mapper>
                </copy>
                
                <!-- drop -->
                
                <mkdir dir="target/sql/drop" />
                
                <concat destfile="target/sql/drop/db2_engine_${project.version}.sql" fixlastline="yes">
                	<filelist dir="target/camunda-engine-${project.version}/org/camunda/bpm/engine/db/drop" files="activiti.db2.drop.engine.sql activiti.db2.drop.history.sql" />
                </concat>

                <concat destfile="target/sql/drop/h2_engine_${project.version}.sql" fixlastline="yes">
                	<filelist dir="target/camunda-engine-${project.version}/org/camunda/bpm/engine/db/drop" files="activiti.h2.drop.engine.sql activiti.h2.drop.history.sql" />
                </concat>

                <concat destfile="target/sql/drop/mssql_engine_${project.version}.sql" fixlastline="yes">
                	<filelist dir="target/camunda-engine-${project.version}/org/camunda/bpm/engine/db/drop" files="activiti.mssql.drop.engine.sql activiti.mssql.drop.history.sql" />
                </concat>

                <concat destfile="target/sql/drop/mysql_engine_${project.version}.sql" fixlastline="yes">
                	<filelist dir="target/camunda-engine-${project.version}/org/camunda/bpm/engine/db/drop" files="activiti.mysql.drop.engine.sql activiti.mysql.drop.history.sql" />
                </concat>

                <concat destfile="target/sql/drop/oracle_engine_${project.version}.sql" fixlastline="yes">
                	<filelist dir="target/camunda-engine-${project.version}/org/camunda/bpm/engine/db/drop" files="activiti.oracle.drop.engine.sql activiti.oracle.drop.history.sql" />
                </concat>
                
                <concat destfile="target/sql/drop/postgres_engine_${project.version}.sql" fixlastline="yes">
                	<filelist dir="target/camunda-engine-${project.version}/org/camunda/bpm/engine/db/drop" files="activiti.postgres.drop.engine.sql activiti.postgres.drop.history.sql" />
                </concat>
                
                <copy todir="target/sql/drop" flatten="false">
                  <fileset dir="target/camunda-engine-${project.version}/org/camunda/bpm/engine/db/drop" />
                  <mapper>
                    <chainedmapper>
                      <regexpmapper from="^(activiti.)([A-Za-z0-9]*)(.drop.identity.sql)" to="\2_identity_${project.version}.sql" handledirsep="yes" />
                    </chainedmapper>
                  </mapper>
                </copy>
                
                <copy todir="target/sql/upgrade">
                  <fileset dir="upgrade">
                  	<include name="*.sql" />
                  </fileset>
                </copy>

              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>  
  </build>


</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <description>
    Assembles the camunda BPM platform and makes it ready for qa. 
    The assembly is installed to maven later in the reactor, if the integration tests pass sucessfully
  </description>

  <artifactId>camunda-tomcat-assembly</artifactId>
  <packaging>pom</packaging>

  <parent>
    <groupId>org.camunda.bpm.tomcat</groupId>
    <artifactId>camunda-tomcat</artifactId>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <name>camunda BPM - tomcat Assembly</name>

  <dependencies>
    <dependency>
      <groupId>org.apache.tomcat</groupId>
      <artifactId>tomcat</artifactId>
      <version>${version.tomcat}</version>
      <type>tar.gz</type>
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat</groupId>
      <artifactId>tomcat-jdbc</artifactId>
      <version>${version.tomcat}</version>
    </dependency>

    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
    </dependency>

    <dependency>
      <groupId>javax.mail</groupId>
      <artifactId>mail</artifactId>
      <version>1.4.1</version>
    </dependency>   

    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis</artifactId>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.uuid</groupId>
      <artifactId>java-uuid-generator</artifactId>
    </dependency>


    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine</artifactId>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine-cdi</artifactId>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine-spring</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm.identity</groupId>
      <artifactId>camunda-identity-ldap</artifactId>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine-rest</artifactId>
      <classifier>classes</classifier>
      <version>${project.version}</version>
    </dependency>   
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>assemble</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>assembly.xml</descriptor>
              </descriptors>
              <attach>true</attach>
              <appendAssemblyId>false</appendAssemblyId>
              <outputDirectory>target/</outputDirectory>
              <workDirectory>target/assembly/work</workDirectory>
              <tarLongFileMode>gnu</tarLongFileMode>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>camunda-bpm-tomcat</artifactId>
  <packaging>pom</packaging>

  <parent>
    <groupId>org.camunda.bpm.tomcat</groupId>
    <artifactId>camunda-tomcat</artifactId>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <name>camunda BPM - tomcat Distro</name>

  <dependencies>

    <dependency>
      <groupId>org.camunda.bpm.tomcat</groupId>
      <artifactId>camunda-tomcat-assembly</artifactId>
      <version>${project.version}</version>
      <type>tar.gz</type>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm.distro</groupId>
      <artifactId>camunda-sql-scripts</artifactId>
      <version>${project.version}</version>
      <type>jar</type>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm.cycle</groupId>
      <artifactId>camunda-cycle-sql-scripts</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm.cycle</groupId>
      <artifactId>camunda-cycle-tomcat</artifactId>
      <version>${project.version}</version>
      <type>war</type>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm.distro</groupId>
      <artifactId>camunda-h2-webapp</artifactId>
      <version>${project.version}</version>
      <type>war</type>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine-rest</artifactId>
      <version>${project.version}</version>
      <classifier>tomcat</classifier>
      <type>war</type>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm.webapp</groupId>
      <artifactId>camunda-webapp-tomcat</artifactId>
      <version>${project.version}</version>
      <type>war</type>
    </dependency>

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jaxrs</artifactId>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm.example</groupId>
      <artifactId>camunda-example-invoice</artifactId>
      <version>${project.version}</version>
      <type>war</type>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm.example</groupId>
      <artifactId>camunda-example-wait-states</artifactId>
      <version>${project.version}</version>
      <type>war</type>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>distro</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>assembly.xml</descriptor>
              </descriptors>
              <finalName>camunda-bpm-tomcat-${project.version}</finalName>
              <attach>true</attach>
              <appendAssemblyId>false</appendAssemblyId>
              <outputDirectory>target/</outputDirectory>
              <workDirectory>target/assembly/work</workDirectory>
              <tarLongFileMode>gnu</tarLongFileMode>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.camunda.bpm</groupId>
    <artifactId>camunda-parent</artifactId>
    <relativePath>../../parent</relativePath>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <artifactId>camunda-tomcat</artifactId>
  <groupId>org.camunda.bpm.tomcat</groupId>
  <packaging>pom</packaging>

  <name>camunda BPM - tomcat</name>

  <profiles>
    <profile>
      <id>distro</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <modules>
        <module>assembly</module>
      </modules>
    </profile>
    <profile>
      <id>distro-ce</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <modules>
        <module>distro</module>
      </modules>
    </profile>
  </profiles>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <name>camunda BPM - engine - Cdi</name>
  <groupId>org.camunda.bpm</groupId>
  <artifactId>camunda-engine-cdi</artifactId>
  <packaging>jar</packaging>

  <parent>
    <groupId>org.camunda.bpm</groupId>
    <artifactId>camunda-parent</artifactId>
    <relativePath>../parent</relativePath>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <profiles>
    <profile>
      <id>openwebbeans-embedded-1</id>
      <dependencies>
        <dependency>
          <groupId>org.jboss.arquillian.container</groupId>
          <artifactId>arquillian-openwebbeans-embedded-1</artifactId>
          <version>1.0.0.CR2</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.openwebbeans</groupId>
          <artifactId>openwebbeans-spi</artifactId>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.openwebbeans</groupId>
          <artifactId>openwebbeans-impl</artifactId>
          <scope>test</scope>
        </dependency>
      </dependencies>
      <dependencyManagement>
        <dependencies>
          <dependency>
            <groupId>org.apache.openwebbeans</groupId>
            <artifactId>openwebbeans</artifactId>
            <version>1.1.3</version>
            <type>pom</type>
            <scope>import</scope>
          </dependency>
        </dependencies>
      </dependencyManagement>
    </profile>
    <profile>
      <id>distro</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.jboss.arquillian.container</groupId>
          <artifactId>arquillian-weld-ee-embedded-1.1</artifactId>
          <version>1.0.0.CR3</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss.weld</groupId>
          <artifactId>weld-core</artifactId>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss.weld</groupId>
          <artifactId>weld-api</artifactId>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-simple</artifactId>
          <scope>test</scope>
        </dependency>
      </dependencies>

      <dependencyManagement>
        <dependencies>
          <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-core-bom</artifactId>
            <version>1.1.5.Final</version>
            <type>pom</type>
            <scope>import</scope>
          </dependency>
        </dependencies>
      </dependencyManagement>

      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-sources</id>
                <phase>package</phase>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <dependencies>
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine</artifactId>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <artifactId>livetribe-jsr223</artifactId>
          <groupId>org.livetribe</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.junit</groupId>
      <artifactId>arquillian-junit-container</artifactId>
      <version>1.0.0.CR7</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.spec</groupId>
      <artifactId>jboss-javaee-6.0</artifactId>
      <type>pom</type>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <artifactId>xalan</artifactId>
          <groupId>org.apache.xalan</groupId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <failIfNoTests>false</failIfNoTests>
          <trimStackTrace>false</trimStackTrace>
          <redirectTestOutputToFile>true</redirectTestOutputToFile>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>camunda-engine-rest</artifactId>
  <name>camunda BPM - engine - REST</name>
  <packaging>war</packaging>

  <parent>
    <groupId>org.camunda.bpm</groupId>
    <artifactId>camunda-parent</artifactId>
    <relativePath>../parent</relativePath>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <properties>
    <rest.http.port>8080</rest.http.port>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-jaxrs</artifactId>
      <version>${jackson.version}</version>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
    </dependency> 

    <dependency>
      <groupId>org.jboss.spec</groupId>
      <artifactId>jboss-javaee-6.0</artifactId>
      <type>pom</type>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <artifactId>xalan</artifactId>
          <groupId>org.apache.xalan</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- test -->
    <!-- resteasy -->
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jaxrs</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>httpclient</artifactId>
          <groupId>org.apache.httpcomponents</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-netty</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- jersey -->
    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-grizzly2</artifactId>
      <version>1.17.1</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>

    <!-- Wink test dependencies -->

    <dependency>
      <groupId>org.apache.wink</groupId>
      <artifactId>wink-server</artifactId>
      <version>1.1.1-incubating</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.5.6</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-core</artifactId>
      <version>${version.tomcat}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-logging-juli</artifactId>
      <version>${version.tomcat}</version>
      <scope>test</scope>
    </dependency>

    <!-- only included to prevent java.lang.ClassNotFoundException: org.apache.jasper.servlet.JspServlet -->
    <!-- removing this dep. will not break the tests, but makes them "ugly"-->
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-jasper</artifactId>
      <version>${version.tomcat}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.shrinkwrap.resolver</groupId>
      <artifactId>shrinkwrap-resolver-depchain</artifactId>
      <version>${version.shrinkwrap.resolvers}</version>
      <scope>test</scope>
      <type>pom</type>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.hamcrest</groupId>
          <artifactId>hamcrest-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.codehaus.jettison</groupId>
      <artifactId>jettison</artifactId>
      <version>1.3.2</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.jayway.restassured</groupId>
      <artifactId>rest-assured</artifactId>
      <version>1.8.1</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <!-- override version -->
      <version>1.6</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.easytesting</groupId>
      <artifactId>fest-assert</artifactId>
      <version>1.4</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-mock</artifactId>
      <version>2.0.8</version>
      <scope>test</scope>
    </dependency>


  </dependencies>

  <build>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
      </testResource>
      <testResource>
        <directory>src/test/embedded-resources</directory>
        <filtering>true</filtering>
      </testResource>
    </testResources>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <id>create-jar</id>
            <goals>
              <goal>jar</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <classifier>classes</classifier>
              <excludes>
                <exclude>org/camunda/bpm/engine/rest/impl/application/DefaultApplication.class</exclude>
              </excludes>
            </configuration>
          </execution>
          <execution>
            <id>create-test-jar</id>
            <phase>package</phase>
            <goals>
              <goal>test-jar</goal>
            </goals>
            <configuration>
              <forceCreation>true</forceCreation>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
          <archive>
            <manifest>
              <!-- Maven project version number -->
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
            <manifestEntries>
              <!-- module dependencies for deployment on AS 7  -->
              <Dependencies>org.camunda.bpm.camunda-engine</Dependencies>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>tomcat</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>assembly-tomcat.xml</descriptor>
              </descriptors>
              <finalName>camunda-engine-rest-${project.version}</finalName>
              <attach>true</attach>
              <classifier>tomcat</classifier>
              <outputDirectory>target/</outputDirectory>
              <workDirectory>target/assembly/work</workDirectory>
            </configuration>
          </execution>

          <execution>
            <id>was</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>assembly-was.xml</descriptor>
              </descriptors>
              <finalName>camunda-engine-rest-${project.version}</finalName>
              <attach>true</attach>
              <classifier>was</classifier>
              <outputDirectory>target/</outputDirectory>
              <workDirectory>target/assembly/work</workDirectory>
            </configuration>
          </execution>

          <execution>
            <id>wls</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>assembly-wls.xml</descriptor>
              </descriptors>
              <finalName>camunda-engine-rest-${project.version}</finalName>
              <attach>true</attach>
              <classifier>wls</classifier>
              <outputDirectory>target/</outputDirectory>
              <workDirectory>target/assembly/work</workDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

  <profiles>
    <profile>
      <id>distro</id>
      <properties>
        <jackson.version>1.9.11</jackson.version>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <skipTests>true</skipTests>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>embedded-rest</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <rest.http.port>38080</rest.http.port>
        <jackson.version>1.9.11</jackson.version>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <systemPropertyVariables>
                <org.apache.maven.user-settings>../settings/maven/nexus-settings.xml</org.apache.maven.user-settings>
              </systemPropertyVariables>
              <excludes>
                <exclude>**/Abstract*</exclude>
              </excludes>
              <redirectTestOutputToFile>true</redirectTestOutputToFile>
            </configuration>
            <executions>
              <execution>
                <id>default-test</id>
                <configuration>
                  <includes>
                    <include>**/rest/standalone/**</include>
                  </includes>
                  <excludes>
                    <exclude>**/rest/standalone/ServletAuthenticationFilterTest*</exclude>
                    <exclude>**/rest/resteasy/**</exclude>
                    <exclude>**/rest/jersey/**</exclude>
                    <exclude>**/rest/wink/**</exclude>
                    <exclude>**/rest/history/**</exclude>
                  </excludes>
                </configuration>
              </execution>
              <execution>
                <id>serlvet-authentication-test</id>
                <goals>
                  <goal>test</goal>
                </goals>
                <phase>test</phase>
                <configuration>
                  <includes>
                    <include>**/rest/standalone/ServletAuthenticationFilterTest*</include>
                  </includes>
                </configuration>
              </execution>
              <execution>
                <id>resteasy-tests</id>
                <goals>
                  <goal>test</goal>
                </goals>
                <phase>test</phase>
                <configuration>
                  <includes>
                    <include>**/rest/resteasy/**</include>
                    <include>**/rest/history/resteasy/**</include>
                  </includes>
                  <excludes>
                    <exclude>**/rest/jersey/**</exclude>
                    <exclude>**/rest/history/jersey/**</exclude>
                    <exclude>**/rest/wink/**</exclude>
                    <exclude>**/rest/history/wink/**</exclude>
                    <exclude>**/rest/standalone/**</exclude>
                  </excludes>
                </configuration>
              </execution>
              <execution>
                <id>jersey-tests</id>
                <goals>
                  <goal>test</goal>
                </goals>
                <phase>test</phase>
                <configuration>
                  <includes>
                    <include>**/rest/jersey/**</include>
                    <include>**/rest/history/jersey/**</include>
                  </includes>
                  <excludes>
                    <exclude>**/rest/resteasy/**</exclude>
                    <exclude>**/rest/history/resteasy/**</exclude>
                    <exclude>**/rest/wink/**</exclude>
                    <exclude>**/rest/history/wink/**</exclude>
                    <exclude>**/rest/standalone/**</exclude>
                  </excludes>
                </configuration>
              </execution>
              <execution>
                <id>wink-tests</id>
                <goals>
                  <goal>test</goal>
                </goals>
                <phase>test</phase>
                <configuration>
                  <includes>
                    <include>**/rest/wink/**</include>
                    <include>**/rest/history/wink/**</include>
                  </includes>
                  <excludes>
                    <exclude>**/rest/resteasy/**</exclude>
                    <exclude>**/rest/history/resteasy/**</exclude>
                    <exclude>**/rest/jersey/**</exclude>
                    <exclude>**/rest/history/jersey/**</exclude>
                    <exclude>**/rest/standalone/**</exclude>
                  </excludes>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>was-compatibility</id>
      <properties>
        <rest.http.port>38080</rest.http.port>
        <jackson.version>1.6.2</jackson.version>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <systemPropertyVariables>
                <org.apache.maven.user-settings>../settings/maven/nexus-settings.xml</org.apache.maven.user-settings>
              </systemPropertyVariables>
              <excludes>
                <exclude>**/Abstract*</exclude>
              </excludes>
              <redirectTestOutputToFile>true</redirectTestOutputToFile>
            </configuration>
            <executions>
              <execution>
                <id>default-test</id>
                <goals>
                  <goal>test</goal>
                </goals>
                <phase>test</phase>
                <configuration>
                  <includes>
                    <include>**/rest/wink/**</include>
                    <include>**/rest/history/wink/**</include>
                  </includes>
                  <excludes>
                    <exclude>**/rest/resteasy/**</exclude>
                    <exclude>**/rest/history/resteasy/**</exclude>
                    <exclude>**/rest/jersey/**</exclude>
                    <exclude>**/rest/history/jersey/**</exclude>
                    <exclude>**/rest/standalone/**</exclude>
                  </excludes>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>wls-compatibility</id>
      <dependencies>
        <dependency>
          <groupId>joda-time</groupId>
          <artifactId>joda-time</artifactId>
          <version>1.2.1</version>
        </dependency>
      </dependencies>
    </profile>

  </profiles>
</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <name>camunda BPM - engine - Spring</name>
  <artifactId>camunda-engine-spring</artifactId>

  <parent>
    <groupId>org.camunda.bpm</groupId>
    <artifactId>camunda-parent</artifactId>
    <relativePath>../parent</relativePath>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <dependencies>
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
    </dependency>    
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <!--  do not expose -->
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <!-- servlet API -->
    <dependency>
      <groupId>org.jboss.spec.javax.servlet</groupId>
      <artifactId>jboss-servlet-api_3.0_spec</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>cglib</groupId>
      <artifactId>cglib</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.persistence</groupId>
      <artifactId>persistence-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-orm</artifactId>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.subethamail</groupId>
      <artifactId>subethasmtp-wiser</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.openjpa</groupId>
      <artifactId>openjpa</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>commons-dbcp</groupId>
      <artifactId>commons-dbcp</artifactId>
    </dependency>
  </dependencies>


  <build>
    <plugins>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <redirectTestOutputToFile>true</redirectTestOutputToFile>
          <systemProperties>
            <property>
              <name>process.engine.initializer</name>
              <value>org.camunda.bpm.engine.spring.SpringProcessEngineInitializer</value>
            </property>
          </systemProperties>
        </configuration>
      </plugin>
    </plugins>

  </build>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <name>camunda BPM - engine</name>
  <artifactId>camunda-engine</artifactId>

  <parent>
    <groupId>org.camunda.bpm</groupId>
    <artifactId>camunda-parent</artifactId>
    <relativePath>../parent</relativePath>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <dependencies>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-email</artifactId>
    </dependency>
    <dependency>
      <!-- required for building with JDK 5 -->
      <groupId>org.livetribe</groupId>
      <artifactId>livetribe-jsr223</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
    </dependency>
    
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.ant</groupId>
      <artifactId>ant</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.persistence</groupId>
      <artifactId>persistence-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.specs</groupId>
      <artifactId>geronimo-jta_1.1_spec</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.openjpa</groupId>
      <artifactId>openjpa</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.subethamail</groupId>
      <artifactId>subethasmtp-wiser</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.uuid</groupId>
      <artifactId>java-uuid-generator</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <!-- required for DiagramQueryTest -->
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
    </dependency> 

    <dependency>
      <groupId>org.jboss.spec</groupId>
      <artifactId>jboss-javaee-web-6.0</artifactId>
      <type>pom</type>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>commons-dbcp</groupId>
      <artifactId>commons-dbcp</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.tomcat</groupId>
      <artifactId>catalina</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>org.jboss</groupId>
      <artifactId>jboss-vfs</artifactId>
      <version>3.1.0.Final</version>
      <scope>provided</scope>    
    </dependency>
    
    <dependency>
      <groupId>org.camunda.bpm.model</groupId>
      <artifactId>camunda-bpmn-model</artifactId>
    </dependency>
    
    <dependency>
      <groupId>org.python</groupId>
      <artifactId>jython</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>org.jruby</groupId>
      <artifactId>jruby-complete</artifactId>
      <scope>provided</scope>
    </dependency>
            
            
  </dependencies>
  
  <properties>
      <history.level>full</history.level>
      <mail.server.port>5025</mail.server.port>
  
      <camunda.artifact>
        org.camunda.bpm
      </camunda.artifact>
      <camunda.osgi.import.defaults>
        org.camunda.bpm.model*
      </camunda.osgi.import.defaults>
      <camunda.osgi.import.additional>
          junit*;resolution:=optional,
          org.junit*;resolution:=optional,
          com.sun*;resolution:=optional,
          javax.persistence*;resolution:=optional,
          javax.servlet*;resolution:=optional,
          javax.transaction*;resolution:=optional,
          javax.ejb*;resolution:=optional,
          javax.xml*;resolution:=optional,
          javax.mail*;resolution:=optional,
          org.apache.catalina*;resolution:=optional,
          org.apache.commons.mail;resolution:=optional,
          org.apache.tools.ant*;resolution:=optional,
          org.apache.xerces*;resolution:=optional,
          org.springframework*;resolution:=optional,
          com.fasterxml*;resolution:=optional,
          org.jboss.vfs*;resolution:=optional
      </camunda.osgi.import.additional>
  </properties>

  <build>
    <!-- filter mail.server.port -->
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
      </testResource>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/camunda.cfg.xml</include>
          <include>**/*camunda.cfg.xml</include>
          <include>**/camunda.cfg.db.xml</include>
        </includes>
      </testResource>
    </testResources>
        
    <plugins>     
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <failIfNoTests>false</failIfNoTests>
          <trimStackTrace>false</trimStackTrace>
          <redirectTestOutputToFile>true</redirectTestOutputToFile>
          <excludes>
            <exclude>**/*TestCase.java</exclude>

            <exclude>**/RepeatingServiceTaskTest.java</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>cleanVersions</goal>
            </goals>
          </execution>
          <execution>
            <id>bundle-manifest</id>
            <phase>process-classes</phase>
            <goals>
              <goal>manifest</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>
                      maven-bundle-plugin
                    </artifactId>
                    <versionRange>
                      [2.1.0,)
                    </versionRange>
                    <goals>
                      <goal>cleanVersions</goal>
                      <goal>manifest</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
  
  <profiles>

    <profile>
      <id>checkspring</id>
      <properties>
        <skipTests>true</skipTests>
      </properties>
    </profile>
    
    <profile>
      <id>create-test-jar</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>test-jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>         
        </plugins>
      </build>
    </profile>
    <profile>
      <id>upgradeDatabase</id>
      <activation>
        <property>
          <name>upgradeDatabase</name>
        </property>
      </activation>
      <properties>
        <skipTests>true</skipTests>
      </properties>
    </profile>
    <profile>
      <id>distro</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-sources</id>
                <phase>package</phase>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    
    <!--  database qa profile -->
    <profile>
      <id>database</id>
      
      <properties>
        <db.properties.file>${user.home}/.camunda/jdbc/engine.${database}.properties</db.properties.file>
      </properties>
      
      <activation>
        <property>
          <name>database</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <!--
              only worked with this version, there might be a bug with antrun
              see http://jira.codehaus.org/browse/MANTRUN-109
            -->
            <version>1.4</version>
            <executions>
              <execution>
                <id>database-test-create-schema</id>
                <phase>process-test-classes</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <tasks>                                     
                    <echo message="updating configuration to db ${database}" />
                    <copy file="target/test-classes/camunda.cfg.db.xml" tofile="target/test-classes/camunda.cfg.xml" overwrite="true">
                      <filterset filtersfile="${db.properties.file}" />
                    </copy>
                    
                    <echo message="dropping schema in ${database}" />
                    <java classname="org.camunda.bpm.engine.impl.db.DbSchemaDrop" classpathref="maven.test.classpath" />
                  </tasks>
                </configuration>
              </execution>
              <execution>
                <id>database-test-drop-schema</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <tasks>
                    <echo message="dropping schema in ${database}" />
                    <java classname="org.camunda.bpm.engine.impl.db.DbSchemaDrop" classpathref="maven.test.classpath" />
                  </tasks>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!--  check history audit -->
    <profile>
      <id>cfghistoryaudit</id>
      <properties>
        <history.level>audit</history.level>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <excludes>
                <exclude>**/*TestCase.java</exclude>
                <exclude>**/RepeatingServiceTaskTest.java</exclude>
                <exclude>**/TaskEventsTest.java</exclude>
                <exclude>**/OperationLog*.java</exclude>
                <exclude>**/HistoricIncident*Test.java</exclude>
              </excludes>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!--  check history activity -->
    <profile>
      <id>cfghistoryactivity</id>
      <properties>
        <history.level>activity</history.level>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <excludes>
                <exclude>**/*TestCase.java</exclude>
                <exclude>**/HistoricTaskInstanceUpdateTest.java</exclude> <!-- http://jira.codehaus.org/browse/ACT-485  -->
                <exclude>**/Historic*InstanceTest.java</exclude>
                <exclude>**/HistoricActivity*Test.java</exclude>
                <exclude>**/HistoryServiceTest.java</exclude>
                <exclude>**/RepeatingServiceTaskTest.java</exclude>
                <exclude>**/TaskEventsTest.java</exclude>
                <exclude>**/OperationLog*.java</exclude>
                <exclude>**/HistoricIncident*Test.java</exclude>
              </excludes>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!--  check history none -->
    <profile>
      <id>cfghistorynone</id>
      <properties>
        <history.level>none</history.level>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <excludes>
                <exclude>**/*TestCase.java</exclude>
                <exclude>**/HistoricTaskInstanceUpdateTest.java</exclude> <!-- http://jira.codehaus.org/browse/ACT-485  -->
                <exclude>**/Historic*InstanceTest.java</exclude>
                <exclude>**/HistoricActivity*Test.java</exclude>
                <exclude>**/HistoryServiceTest.java</exclude>
                <exclude>**/RepeatingServiceTaskTest.java</exclude>
                <exclude>**/TaskEventsTest.java</exclude>
                <exclude>**/OperationLog*.java</exclude>
                <exclude>**/HistoricVariableInstanceScopeTest.java</exclude>
                <exclude>**/HistoricIncident*Test.java</exclude>
              </excludes>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>testSchemaMetaData</id>
      <activation>
        <property>
          <name>metadatabase</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <includes>
                <include>**/JdbcMetaDataTest.java</include>
              </includes>
              <excludes />
            </configuration>
          </plugin>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.4</version>
            <executions>
              <execution>
                <id>database-test-create-schema</id>
                <phase>process-test-classes</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <tasks>
                    <echo message="creating db schema in ${metadatabase}" />
                    <ant antfile="${basedir}/../../qa/db/build.xml" target="create.db.schema">
                      <property name="test_classpath" refid="maven.test.classpath" />
                      <property name="database" value="${metadatabase}" />
                    </ant>
                    <echo message="updating cfg to ${metadatabase}" />
                    <ant antfile="${basedir}/../../qa/db/build.xml" target="create.activiti.cfg">
                      <property name="database" value="${metadatabase}" />
                    </ant>
                  </tasks>
                </configuration>
              </execution>
              <execution>
                <id>database-test-drop-schema</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <tasks>
                    <echo message="dropping schema in ${metadatabase}" />
                    <ant antfile="${basedir}/../../qa/db/build.xml" target="drop.db.schema" inheritAll="false">
                      <property name="test_classpath" refid="maven.test.classpath" />
                      <property name="database" value="${metadatabase}" />
                    </ant>
                  </tasks>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>oracle</id>
      <activation>
        <property>
          <name>database</name>
          <value>oracle</value>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>com.oracle.jdbc</groupId>
          <artifactId>ojdbc6</artifactId>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>
  
  <profile>
      <id>oracle10g</id>
      <activation>
        <property>
          <name>database</name>
          <value>oracle10g</value>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>com.oracle.jdbc</groupId>
          <artifactId>ojdbc14</artifactId>
          <scope>test</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <failIfNoTests>false</failIfNoTests>
              <trimStackTrace>false</trimStackTrace>
              <redirectTestOutputToFile>true</redirectTestOutputToFile>
              <excludes>
                <exclude>**/ManagementServiceTest.java</exclude>    
                                
                <exclude>**/*TestCase.java</exclude>
                <exclude>**/RepeatingServiceTaskTest.java</exclude>
              </excludes>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    
    <profile>
      <id>db2</id>
      <activation>
        <property>
          <name>database</name>
          <value>db2</value>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>com.ibm.db2.jcc</groupId>
          <artifactId>db2jcc4</artifactId>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>mssql</id>
        <activation>
        <property>
        <name>database</name>
        <value>mssql</value>
        </property>
      </activation>
      <dependencies>
        <dependency>
        <groupId>com.microsoft.sqlserver</groupId>
        <artifactId>sqljdbc4</artifactId>
        <scope>test</scope>
        </dependency>
       </dependencies>
    </profile>

    <profile>
      <id>mssql12</id>
        <activation>
        <property>
          <name>database</name>
          <value>mssql12</value>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>com.microsoft.sqlserver</groupId>
          <artifactId>sqljdbc4</artifactId>
          <scope>test</scope>
        </dependency>
       </dependencies>
    </profile>

    <profile>
      <id>mysql</id>
        <activation>
        <property>
          <name>database</name>
          <value>mysql</value>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>mysql</groupId>
          <artifactId>mysql-connector-java</artifactId>
          <scope>test</scope>
        </dependency>
       </dependencies>
    </profile>
    
    <profile>
      <id>postgresql</id>
        <activation>
        <property>
          <name>database</name>
          <value>postgresql</value>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.postgresql</groupId>
          <artifactId>postgresql</artifactId>
          <scope>test</scope>
        </dependency>
       </dependencies>
    </profile>

    <profile>
      <id>postgresql93</id>
        <activation>
        <property>
          <name>database</name>
          <value>postgresql93</value>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.postgresql</groupId>
          <artifactId>postgresql</artifactId>
          <scope>test</scope>
        </dependency>
       </dependencies>
    </profile>

    <profile>
      <!-- check for official api differences between latest major release -->
      <id>check-api-compability</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>clirr-maven-plugin</artifactId>
            <configuration>
              <comparisonVersion>7.0.0-Final</comparisonVersion>
              <textOutputFile>${project.build.directory}/clirr.txt</textOutputFile>
              <failOnError>false</failOnError>
              <includes>
                <include>org/camunda/bpm/application/*</include>
                <include>org/camunda/bpm/container/*</include>
                <include>org/camunda/bpm/engine/*</include>
              </includes>
            </configuration>
            <executions>
              <execution>
                <phase>verify</phase>
                <goals>
                  <goal>check-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>wls-compatibility</id>
      <dependencies>
        <dependency>
          <groupId>joda-time</groupId>
          <artifactId>joda-time</artifactId>
          <version>1.2.1</version>
        </dependency>
      </dependencies>
    </profile>
  </profiles>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.camunda.bpm.example</groupId>
  <artifactId>camunda-example-invoice</artifactId>
  <packaging>war</packaging>
  <name>camunda BPM - example - invoice</name>

  <parent>
    <groupId>org.camunda.bpm</groupId>
    <artifactId>camunda-parent</artifactId>
    <relativePath>../../parent</relativePath>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <dependencies>

    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.0.1</version>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.camunda.bpm.example</groupId>
  <artifactId>camunda-example-wait-states</artifactId>
  <packaging>war</packaging>
  <name>camunda BPM - example - wait states</name>
  
  <parent>
    <groupId>org.camunda.bpm</groupId>
    <artifactId>camunda-parent</artifactId>
    <relativePath>../../parent</relativePath>
    <version>7.2.0-SNAPSHOT</version>
  </parent>
  
  <dependencies>

    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.0.1</version>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
      </plugin>
    </plugins>
  </build>
  
</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.camunda.bpm.identity</groupId>
  <artifactId>camunda-identity-ldap</artifactId>
  <packaging>jar</packaging>
  <name>camunda BPM - identity - ldap</name>

  <parent>
    <groupId>org.camunda.bpm</groupId>
    <artifactId>camunda-parent</artifactId>
    <relativePath>../../parent</relativePath>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <properties>
    <ldap.server.port>5026</ldap.server.port>
  </properties>

  <dependencies>

    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- LDAP Libraries to start test server -->
    <dependency>
      <groupId>org.apache.directory.server</groupId>
      <artifactId>apacheds-all</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.apache.directory.shared</groupId>
          <artifactId>shared-ldap</artifactId>
        </exclusion>
      </exclusions>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>1.5.6</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
    </dependency>

  </dependencies>

  <build>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <failIfNoTests>false</failIfNoTests>
          <trimStackTrace>false</trimStackTrace>
          <redirectTestOutputToFile>true</redirectTestOutputToFile>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>camunda-ejb-client</artifactId>
  <groupId>org.camunda.bpm.javaee</groupId>
  <name>camunda BPM - Client</name>
  <packaging>jar</packaging>

  <parent>
    <groupId>org.camunda.bpm</groupId>
    <artifactId>camunda-parent</artifactId>
    <relativePath>../../parent</relativePath>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <dependencies>
    <dependency>
      <groupId>org.jboss.spec</groupId>
      <artifactId>jboss-javaee-web-6.0</artifactId>
      <type>pom</type>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine</artifactId>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <artifactId>livetribe-jsr223</artifactId>
          <groupId>org.livetribe</groupId>
        </exclusion>
      </exclusions>

    </dependency>

  </dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  
  <groupId>org.camunda.bpm.javaee</groupId>
  <artifactId>camunda-ejb-service</artifactId>
  <packaging>ejb</packaging>
  
  <name>camunda BPM - EJB Service</name>

  <parent>
    <groupId>org.camunda.bpm</groupId>
    <artifactId>camunda-parent</artifactId>
    <relativePath>../../parent</relativePath>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <dependencies>
    
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine</artifactId>
      <scope>provided</scope>
      <version>${project.version}</version>
    </dependency>
    
    <dependency>
      <groupId>org.camunda.bpm.javaee</groupId>
      <artifactId>camunda-jobexecutor-ra</artifactId>
      <scope>provided</scope>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.core</artifactId>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>org.jboss.arquillian.junit</groupId>
      <artifactId>arquillian-junit-container</artifactId>
      <version>${version.arquillian}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.arquillian.container</groupId>
      <artifactId>arquillian-glassfish-embedded-3.1</artifactId>
      <version>1.0.0.CR3</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.glassfish.extras</groupId>
      <artifactId>glassfish-embedded-all</artifactId>
      <version>3.1.1</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>com.fasterxml.uuid</groupId>
      <artifactId>java-uuid-generator</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-ejb-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>camunda-jobexecutor-ra</artifactId>
  <packaging>jar</packaging>
  <name>camunda BPM - Job Executor RA</name>

  <parent>
    <groupId>org.camunda.bpm</groupId>
    <artifactId>camunda-parent</artifactId>
    <relativePath>../../parent</relativePath>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <properties>
    <!-- TODO: move to parent -->
    <version.org.jboss.ironjacamar>1.0.10.Final</version.org.jboss.ironjacamar>
  </properties>

  <dependencies>
    
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine</artifactId>
      <scope>provided</scope>
    </dependency>
           
    <dependency>
      <groupId>org.jboss.ironjacamar</groupId>
      <artifactId>ironjacamar-spec-api</artifactId>
      <version>${version.org.jboss.ironjacamar}</version>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>com.bea.commonj</groupId>
      <artifactId>com.springsource.commonj</artifactId>
      <version>1.1.0</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <groupId>org.camunda.bpm.javaee</groupId>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.camunda.bpm.javaee</groupId>
  <artifactId>camunda-jobexecutor-rar</artifactId>
  <packaging>rar</packaging>
  <name>camunda BPM - Job Executor RAR</name>

  <parent>
    <groupId>org.camunda.bpm</groupId>
    <artifactId>camunda-parent</artifactId>
    <relativePath>../../parent</relativePath>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <dependencies>
    <dependency>
      <groupId>org.camunda.bpm.javaee</groupId>
      <artifactId>camunda-jobexecutor-ra</artifactId>
      <version>${project.version}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-rar-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!-- Required for OSS maven repository deployment -->
  <parent>
    <groupId>org.sonatype.oss</groupId>
    <artifactId>oss-parent</artifactId>
    <version>7</version>
    <!-- do not remove empty tag - http://jira.codehaus.org/browse/MNG-4687 -->
    <relativePath />
  </parent>

  <groupId>org.camunda.bpm</groupId>
  <artifactId>camunda-parent</artifactId>
  <version>7.2.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>camunda BPM - Parent Pom</name>

  <description>
    This pom is the parent of all camunda BPM platform projects
  </description>
  
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <spring.framework.version>3.1.2.RELEASE</spring.framework.version>
    <cxf.version>2.6.1</cxf.version>
    <junit.version>4.11</junit.version>
    <version.resteasy>2.3.5.Final</version.resteasy>

    <version.commonj>1.1.0</version.commonj>
    <version.bouncycastle>1.47</version.bouncycastle>

    <!-- application servers -->
    <version.jboss.as>7.2.0.Final</version.jboss.as>
    <version.glassfish>3.1.2</version.glassfish>
    <version.tomcat>7.0.50</version.tomcat>

    <version.arquillian>1.0.0.Final</version.arquillian>
    <version.arquillian.drone>1.0.0.Final</version.arquillian.drone>
    <version.shrinkwrap.resolvers>2.0.0</version.shrinkwrap.resolvers>

    <version.jboss-javaee-spec>3.0.2.Final</version.jboss-javaee-spec>

    <version.ejb>3.1</version.ejb>
    <version.java>1.6</version.java>

    <!-- database drivers -->
    <version.h2>1.3.168</version.h2>
    <version.oracle11g>11.2.0.3</version.oracle11g>
    <version.oracle10g>10.2.0.5</version.oracle10g>
    <version.mysql>5.1.21</version.mysql>
    <version.mssql.oss>1.2.4</version.mssql.oss>
    <version.mssql>4.0</version.mssql>
    <version.db2.97>9.7</version.db2.97>
    <version.postgre>9.3-1100-jdbc4</version.postgre>

    <!-- OSGi bundles properties -->
    <camunda.artifact />
    <camunda.osgi.import.camunda.version>version="[$(version;==;${camunda.osgi.version.clean}),$(version;=+;${camunda.osgi.version.clean}))"</camunda.osgi.import.camunda.version>
    <camunda.osgi.import.strict.version>version="[$(version;===;${camunda.osgi.version.clean}),$(version;==+;${camunda.osgi.version.clean}))"</camunda.osgi.import.strict.version>
    <camunda.osgi.import.default.version>[$(version;==;$(@)),$(version;+;$(@)))</camunda.osgi.import.default.version>
    <camunda.osgi.import.defaults>
    </camunda.osgi.import.defaults>
    <camunda.osgi.import.before.defaults />
    <camunda.osgi.import.additional />
    <camunda.osgi.import.pkg>
      org.camunda.*;${camunda.osgi.import.camunda.version},
      ${camunda.osgi.import.before.defaults},
      ${camunda.osgi.import.defaults},
      ${camunda.osgi.import.additional},
      *
    </camunda.osgi.import.pkg>
    <camunda.osgi.activator />
    <camunda.osgi.failok>false</camunda.osgi.failok>
    <camunda.osgi.export>!org.camunda.bpm.model*, ${camunda.osgi.export.pkg};${camunda.osgi.version};-noimport:=true</camunda.osgi.export>
    <!--
    <camunda.osgi.export.pkg>!*.impl;${camunda.artifact}*</camunda.osgi.export.pkg>
    <camunda.osgi.private.pkg>${camunda.artifact}*.impl</camunda.osgi.private.pkg>
    -->
    <camunda.osgi.export.pkg>${camunda.artifact}*</camunda.osgi.export.pkg>
    <camunda.osgi.private.pkg />
    <camunda.osgi.version>version=${project.version}</camunda.osgi.version>
    <camunda.osgi.split.pkg>-split-package:=first</camunda.osgi.split.pkg>
    <camunda.osgi.import>${camunda.osgi.import.pkg}</camunda.osgi.import>
    <camunda.osgi.dynamic />
    <camunda.osgi.symbolic.name>${camunda.artifact}</camunda.osgi.symbolic.name>
    <camunda.osgi.exclude.dependencies>false</camunda.osgi.exclude.dependencies>
    <camunda.osgi.remove.headers>Ignore-Package,Include-Resource,Private-Package,Bundle-DocURL</camunda.osgi.remove.headers>
    <camunda.osgi.include.resource>{maven-resources}</camunda.osgi.include.resource>
    <camunda.osgi.embed />
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>cglib</groupId>
        <artifactId>cglib</artifactId>
        <version>2.2</version>
      </dependency>
      <dependency>
        <groupId>commons-dbcp</groupId>
        <artifactId>commons-dbcp</artifactId>
        <version>1.4</version>
      </dependency>
      <dependency>
        <!-- required by Apache commons httpclient -->
        <groupId>commons-logging</groupId>
        <artifactId>commons-logging</artifactId>
        <version>1.1.1</version>
      </dependency>
      <dependency>
        <groupId>commons-lang</groupId>
        <artifactId>commons-lang</artifactId>
        <version>2.4</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>2.0.1</version>
      </dependency>
      <dependency>
        <groupId>commons-fileupload</groupId>
        <artifactId>commons-fileupload</artifactId>
        <version>1.2.2</version>
      </dependency>

      <!-- database drivers -->
      <dependency>
        <groupId>com.h2database</groupId>
        <artifactId>h2</artifactId>
        <version>${version.h2}</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.jdbc</groupId>
        <artifactId>ojdbc6</artifactId>
        <version>${version.oracle11g}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.oracle.jdbc</groupId>
        <artifactId>ojdbc14</artifactId>
        <version>${version.oracle10g}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>mysql</groupId>
        <artifactId>mysql-connector-java</artifactId>
        <version>${version.mysql}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>net.sourceforge.jtds</groupId>
        <artifactId>jtds</artifactId>
        <version>${version.mssql.oss}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.microsoft.sqlserver</groupId>
        <artifactId>sqljdbc4</artifactId>
        <version>${version.mssql}</version>
      </dependency>
      <dependency>
        <groupId>com.ibm.db2.jcc</groupId>
        <artifactId>db2jcc4</artifactId>
        <version>${version.db2.97}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.postgresql</groupId>
        <artifactId>postgresql</artifactId>
        <version>${version.postgre}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>javax.xml.bind</groupId>
        <artifactId>jaxb-api</artifactId>
        <version>2.2.1</version>
      </dependency>
      <dependency>
        <groupId>com.sun.xml.bind</groupId>
        <artifactId>jaxb-impl</artifactId>
        <version>2.1.7</version>
      </dependency>
      <dependency>
        <groupId>com.sun.xml.bind</groupId>
        <artifactId>jaxb-xjc</artifactId>
        <version>2.1.7</version>
      </dependency>
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>servlet-api</artifactId>
        <version>2.5</version>
      </dependency>
      <dependency>
        <groupId>javax.mail</groupId>
        <artifactId>mail</artifactId>
        <version>1.4.1</version>
      </dependency>
      <dependency>
        <groupId>javax.persistence</groupId>
        <artifactId>persistence-api</artifactId>
        <version>1.0</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.ant</groupId>
        <artifactId>ant</artifactId>
        <version>1.7.1</version>
        <scope>provided</scope>
      </dependency>
      <!-- EMAIL -->
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-email</artifactId>
        <version>1.2</version>
      </dependency>
        <!-- Web service -->
      <dependency>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-rt-frontend-jaxws</artifactId>
        <version>${cxf.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-rt-transports-http</artifactId>
        <version>${cxf.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-rt-transports-http-jetty</artifactId>
        <version>${cxf.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-rt-bindings-soap</artifactId>
        <version>${cxf.version}</version>
      </dependency> 
      <dependency>
        <groupId>org.apache.geronimo.specs</groupId>
        <artifactId>geronimo-jta_1.1_spec</artifactId>
        <version>1.1.1</version>
      </dependency>
      <dependency>
        <groupId>org.opensaml</groupId>
        <artifactId>opensaml</artifactId>
        <version>1.1</version>
      </dependency>
      <dependency>
        <groupId>org.apache.openjpa</groupId>
        <artifactId>openjpa</artifactId>
        <version>1.2.2</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.codehaus.groovy</groupId>
        <artifactId>groovy</artifactId>
        <version>1.8.6</version>
      </dependency>
      <dependency>
        <groupId>org.json</groupId>
        <artifactId>json</artifactId>
        <version>20070829</version>
      </dependency>
      <dependency>
        <!-- required for building with JDK 5 -->
        <groupId>org.livetribe</groupId>
        <artifactId>livetribe-jsr223</artifactId>
        <version>2.0.6</version>
        <type>jar</type>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>org.mule.modules</groupId>
        <artifactId>mule-module-cxf</artifactId>
        <version>${mule.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mule.tests</groupId>
        <artifactId>mule-tests-functional</artifactId>
        <version>${mule.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mybatis</groupId>
        <artifactId>mybatis</artifactId>
        <version>3.1.1</version>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>1.9.5</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.osgi</groupId>
        <artifactId>org.osgi.core</artifactId>
        <version>4.2.0</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.osgi</groupId>
        <artifactId>org.osgi.compendium</artifactId>
        <version>4.2.0</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.felix</groupId>
        <artifactId>org.apache.felix.fileinstall</artifactId>
        <version>3.0.2</version>
        <optional>true</optional>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-jdk14</artifactId>
        <version>1.6.1</version>
      </dependency>    
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-beans</artifactId>
        <version>${spring.framework.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-core</artifactId>
        <version>${spring.framework.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>${spring.framework.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-aop</artifactId>
        <version>${spring.framework.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-jdbc</artifactId>
        <version>${spring.framework.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-orm</artifactId>
        <version>${spring.framework.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-tx</artifactId>
        <version>${spring.framework.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-web</artifactId>
        <version>${spring.framework.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-test</artifactId>
        <version>${spring.framework.version}</version>
      </dependency>
      <dependency>
        <groupId>org.subethamail</groupId>
        <artifactId>subethasmtp-wiser</artifactId>
        <version>1.2</version>
        <scope>test</scope>
      </dependency>     
      <dependency>
        <groupId>wsdl4j</groupId>
        <artifactId>wsdl4j</artifactId>
        <version>1.6.2</version>
      </dependency>
      <dependency>
        <groupId>xerces</groupId>
        <artifactId>xercesImpl</artifactId>
        <version>2.9.1</version>
      </dependency>
      <dependency>
        <groupId>joda-time</groupId>
        <artifactId>joda-time</artifactId>
        <version>2.1</version>
      </dependency>
      <!-- Camel integration -->
      <dependency>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-spring</artifactId>
        <version>2.10.0</version>
      </dependency>
      <!-- Mule integration -->
      <dependency>
        <groupId>org.safehaus.jug</groupId>
        <artifactId>jug</artifactId>
        <classifier>lgpl</classifier>
        <version>2.0.0</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.uuid</groupId>
        <artifactId>java-uuid-generator</artifactId>
        <version>3.1.2</version>
      </dependency>
       
      <dependency>
        <groupId>org.camunda.bpm.javaee</groupId>
        <artifactId>camunda-ejb-client</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>org.camunda.bpm</groupId>
        <artifactId>camunda-engine</artifactId>
        <version>${project.version}</version>
      </dependency>
      
      <dependency>
        <groupId>org.camunda.bpm</groupId>
        <artifactId>camunda-engine-spring</artifactId>
        <version>${project.version}</version>
      </dependency>
      
      <dependency>
        <groupId>org.camunda.bpm</groupId>
        <artifactId>camunda-engine-cdi</artifactId>
        <version>${project.version}</version>
      </dependency>
      
      <dependency>
        <groupId>org.camunda.bpm.identity</groupId>
        <artifactId>camunda-identity-ldap</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.spec</groupId>
        <artifactId>jboss-javaee-6.0</artifactId>
        <version>${version.jboss-javaee-spec}</version>
        <type>pom</type>
      </dependency>

      <dependency>
        <groupId>org.jboss.spec</groupId>
        <artifactId>jboss-javaee-web-6.0</artifactId>
        <version>${version.jboss-javaee-spec}</version>
        <type>pom</type>
      </dependency>
      
      <dependency>
        <groupId>org.jboss.spec.javax.servlet</groupId>
        <artifactId>jboss-servlet-api_3.0_spec</artifactId>
        <version>1.0.2.Final</version>       
      </dependency>
      
      <!-- licensing dependencies -->
      <dependency>
        <groupId>org.bouncycastle</groupId>
        <artifactId>bcprov-jdk15on</artifactId>
        <version>${version.bouncycastle}</version>
      </dependency>
      <dependency>
        <groupId>org.bouncycastle</groupId>
        <artifactId>bcprov-ext-jdk15on</artifactId>
        <version>${version.bouncycastle}</version>
      </dependency>
      <dependency>
        <groupId>org.bouncycastle</groupId>
        <artifactId>bcpg-jdk15on</artifactId>
        <version>${version.bouncycastle}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.tomcat</groupId>
        <artifactId>catalina</artifactId>
        <version>6.0.37</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.resteasy</groupId>
        <artifactId>resteasy-jaxrs</artifactId>
        <version>${version.resteasy}</version>
        <exclusions>
          <exclusion>
            <artifactId>httpclient</artifactId>
            <groupId>org.apache.httpcomponents</groupId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.jboss.resteasy</groupId>
        <artifactId>tjws</artifactId>
        <version>${version.resteasy}</version>
      </dependency>
      
      <dependency>
        <groupId>org.jboss.resteasy</groupId>
        <artifactId>resteasy-netty</artifactId>
        <version>2.3.6.Final</version>
      </dependency>
      
      <dependency>
        <groupId>org.apache.directory.server</groupId>
        <artifactId>apacheds-all</artifactId>
        <version>1.5.5</version>
      </dependency>

      <dependency>
        <groupId>org.camunda.bpm.model</groupId>
        <artifactId>camunda-bpmn-model</artifactId>
        <version>${project.version}</version>
      </dependency>
      
      <dependency>
        <groupId>org.camunda.bpm.model</groupId>
        <artifactId>camunda-xml-model</artifactId>
        <version>${project.version}</version>
      </dependency>
      
      <dependency>
        <groupId>org.python</groupId>
        <artifactId>jython</artifactId>
        <version>2.5.3</version>
      </dependency>
      
      <dependency>
        <groupId>org.jruby</groupId>
        <artifactId>jruby-complete</artifactId>
        <version>1.7.11</version>
      </dependency>

    </dependencies>
  </dependencyManagement>
  
   <build>   
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.1</version>
          <configuration>
            <source>${version.java}</source>
            <target>${version.java}</target>
          </configuration>
        </plugin>
        
        <!-- test plugins -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.16</version>
          <configuration>
            <systemPropertyVariables>
              <myWorkingDir>${project.build.directory}</myWorkingDir>
            </systemPropertyVariables>
            <argLine>-XX:MaxPermSize=128m</argLine>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>2.16</version>
          <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
        </plugin>
        
        <!-- code plugins -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.8</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>2.2.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.6</version>
        </plugin>
        
        <!-- artifact plugins -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.4</version>
          <configuration>
            <archive>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              </manifest>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-ejb-plugin</artifactId>
          <version>2.3</version>
          <configuration>
            <ejbVersion>${version.ejb}</ejbVersion>
            <archive>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              </manifest>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-rar-plugin</artifactId>
          <version>2.3</version>
          <configuration>
            <archive>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              </manifest>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>2.4</version>
          <configuration>
            <archive>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              </manifest>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-ear-plugin</artifactId>
          <version>2.9</version>
          <configuration>
            <archive>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              </manifest>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>2.2</version>
          <configuration>
            <createSourcesJar>true</createSourcesJar>
          </configuration>
          <executions>
            <execution>
              <phase>package</phase>
              <goals>
                <goal>shade</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>2.4</version>
          <configuration>
            <archive>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              </manifest>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.7</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>1.7</version>
        </plugin>
        <plugin>
          <groupId>org.apache.felix</groupId>
          <artifactId>maven-bundle-plugin</artifactId>
          <version>2.3.7</version>
          <extensions>true</extensions>
          <configuration>
           <excludeDependencies>${camunda.osgi.exclude.dependencies}</excludeDependencies>
           <instructions>
             <Bundle-Name>${project.name}</Bundle-Name>
             <Bundle-SymbolicName>${camunda.osgi.symbolic.name}</Bundle-SymbolicName>
             <Bundle-Activator>${camunda.osgi.activator}</Bundle-Activator>
             <Export-Package>${camunda.osgi.export}</Export-Package>
             <Import-Package>${camunda.osgi.import}</Import-Package>
             <DynamicImport-Package>${camunda.osgi.dynamic}</DynamicImport-Package>
             <Private-Package>${camunda.osgi.private.pkg}</Private-Package>
             <Implementation-Title>camunda</Implementation-Title>
             <Implementation-Version>${project.version}</Implementation-Version>
             <Include-Resource>${camunda.osgi.include.resource}</Include-Resource>
             <_versionpolicy>${camunda.osgi.import.default.version}</_versionpolicy>
             <_removeheaders>${camunda.osgi.remove.headers}</_removeheaders>
             <_failok>${camunda.osgi.failok}</_failok>
             <Export-Service>${camunda.osgi.export.service}</Export-Service>
             <Import-Service>${camunda.osgi.import.service}</Import-Service>
             <Embed-Dependency>${camunda.osgi.embed}</Embed-Dependency>
            </instructions>
           <versions>
            <camunda.osgi.version.clean>${project.version}</camunda.osgi.version.clean>
           </versions>
          </configuration>
        </plugin>
        <plugin>                    
          <groupId>org.codehaus.cargo</groupId>
          <artifactId>cargo-maven2-plugin</artifactId>
          <version>1.4.5</version>
        </plugin>
        <plugin>
          <groupId>net.kennychua</groupId>
          <artifactId>maven-urlpoller-plugin</artifactId>
          <version>1.0.3</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>sql-maven-plugin</artifactId>
          <version>1.5</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>clirr-maven-plugin</artifactId>
          <version>2.6.1</version>
        </plugin>
      </plugins>
    </pluginManagement>
    
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
            <source>${version.java}</source>
            <target>${version.java}</target>
          </configuration>
      </plugin>
    </plugins>
  </build>

  <repositories>
    <repository>
      <id>JBoss public</id>
      <name>jboss</name>
      <url>https://repository.jboss.org/nexus/content/groups/public/</url>
    </repository>
    <!-- required for commonJ dependency -->
    <repository>
      <id>com.springsource.repository.bundles.external</id>
      <name>SpringSource Enterprise Bundle Repository - External Bundle Releases</name>
      <url>http://repository.springsource.com/maven/bundles/external</url>
    </repository>
  </repositories>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <organization>
    <name>camunda services GmbH</name>
    <url>http://www.camunda.com</url>
  </organization>

  <url>http://www.camunda.org</url>

  <developers>
    <developer>
      <id>camunda.org</id>
      <name>camunda BPM Community</name>
      <organization>camunda.org</organization>
      <organizationUrl>http://camunda.org</organizationUrl>
    </developer>
  </developers>

  <scm>
    <url>https://github.com/camunda/camunda-bpm-platform</url>
    <connection>scm:git:git@github.com:camunda/camunda-bpm-platform.git</connection>
    <developerConnection>scm:git:git@github.com:camunda/camunda-bpm-platform.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <issueManagement>
    <system>Jira</system>
    <url>https://app.camunda.com/jira/browse/CAM/</url>
  </issueManagement>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!-- Required for OSS maven repository deployment -->
  <parent>
    <groupId>org.sonatype.oss</groupId>
    <artifactId>oss-parent</artifactId>
    <version>7</version>
  </parent>

  <groupId>org.camunda.bpm</groupId>
  <artifactId>camunda-root</artifactId>
  <version>7.2.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>camunda BPM - Root Pom</name>

  <description>
    This pom defines the modules that make up the build.
    The parent pom for all camunda BPM projects can be found in the parent directory relative to this file.
  </description>
  
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <profiles>
    <!-- distro profile is default and builds the complete distribution. 
         Does not run integration tests. -->
    <profile>
      <id>distro</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <modules>
        <module>qa</module>            
        
        <module>webapps/h2-webapp</module>
        <module>webapps/cycle</module>
        <module>webapps/camunda-webapp</module>
        
        <module>javaee/ejb-service</module>
        <module>javaee/ejb-client</module>
        <module>javaee/jobexecutor-ra</module>
        <module>javaee/jobexecutor-rar</module>
        
        <module>engine</module>
        <module>engine-cdi</module>
        <module>engine-spring</module>
        <module>engine-rest</module>

        <module>examples/invoice</module>
        <module>examples/wait-states</module>

        <module>identity/identity-ldap</module>
        
        <module>distro/jbossas7</module>
        <module>distro/gf31</module>
        <module>distro/tomcat</module>
        <module>distro/sql-script</module>
  
        <module>parent</module>
        <module>bom</module>
      </modules>
    </profile>
    
    <profile>
      <id>distro-ce</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <modules>
        <module>webapps/camunda-webapp</module>

        <module>distro/jbossas7</module>
        <module>distro/gf31</module>
        <module>distro/tomcat</module>
  
        <module>parent</module>
        <module>bom</module>
      </modules>
    </profile>
    
    <profile>
      <!-- profile for running process-engine unit tests in QA -->
      <id>check-engine</id>
      <modules>
        <module>engine</module>
        <module>engine-cdi</module>
        <module>engine-spring</module>          
        <module>engine-rest</module>
  
        <module>parent</module>
        <module>bom</module>
      </modules>
    </profile>    
    <profile>
      <!-- profile for running webapp unit tests in QA -->
      <id>check-webapps</id>
      <modules>
        <module>webapps/cycle</module>
        <module>webapps/camunda-webapp</module>
  
        <module>parent</module>
        <module>bom</module>
      </modules>
    </profile>
    <profile>
      <id>sonatype-oss-release</id>
      <modules>
        <module>engine</module>
        <module>engine-cdi</module>
        <module>engine-spring</module>
        <module>engine-rest</module>

        <module>javaee/ejb-client</module>

        <module>identity/identity-ldap</module>
  
        <module>parent</module>
        <module>bom</module>
      </modules>

      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-sources</id>
                <phase>package</phase>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
              <execution>
                <id>attach-test-sources</id>
                <phase>package</phase>
                <goals>
                  <goal>test-jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>2.7</version>
            <configuration>
              <quiet>true</quiet>
            </configuration>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.1</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <version>1.4.4</version>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <organization>
    <name>camunda services GmbH</name>
    <url>http://www.camunda.com</url>
  </organization>

  <url>http://www.camunda.org</url>

  <developers>
    <developer>
      <id>camunda.org</id>
      <name>camunda BPM Community</name>
      <organization>camunda.org</organization>
      <organizationUrl>http://camunda.org</organizationUrl>
    </developer>
  </developers>

  <scm>
    <url>https://github.com/camunda/camunda-bpm-platform</url>
    <connection>scm:git:git@github.com:camunda/camunda-bpm-platform.git</connection>
    <developerConnection>scm:git:git@github.com:camunda/camunda-bpm-platform.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <issueManagement>
    <system>Jira</system>
    <url>https://app.camunda.com/jira/browse/CAM/</url>
  </issueManagement>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>camunda-qa-glassfish-runtime</artifactId>
  <packaging>pom</packaging>

  <name>camunda BPM - QA Glassfish 3.1.x Test Runtime</name>
  
  <parent>
    <groupId>org.camunda.bpm.qa</groupId>
    <artifactId>camunda-qa</artifactId>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <dependencies>
    <dependency>
      <!-- make sure it comes after assembly in the build -->
      <groupId>org.camunda.bpm.glassfish</groupId>
      <artifactId>camunda-glassfish-assembly</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
      <type>pom</type>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.ibm.db2.jcc</groupId>
      <artifactId>db2jcc4</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.oracle.jdbc</groupId>
      <artifactId>ojdbc6</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.microsoft.sqlserver</groupId>
      <artifactId>sqljdbc4</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>runtime</scope>
    </dependency>   
  </dependencies>

  <profiles>
    <profile>
      <id>glassfish</id>
      <build>        
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-server</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <inherited>false</inherited>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.camunda.bpm.glassfish</groupId>
                      <artifactId>camunda-glassfish-assembly</artifactId>
                      <version>${project.version}</version>
                      <type>tar.gz</type>
                      <overWrite>true</overWrite>                    
                      <outputDirectory>target/</outputDirectory>
                    </artifactItem>
                  </artifactItems>                
                </configuration>
              </execution>
              <execution>
                <id>copy-drivers</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>copy-dependencies</goal>
                </goals>
                <inherited>false</inherited>
                <configuration>
                   <includeScope>runtime</includeScope>
                   <outputDirectory>${project.build.directory}/server/glassfish3/glassfish/lib</outputDirectory>             
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-resources</id>
                <phase>package</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.build.directory}/server/glassfish3/glassfish/domains</outputDirectory>
                  <resources>          
                    <resource>
                      <directory>src/main/domains</directory>
                      <filtering>true</filtering>
                    </resource>
                  </resources>              
                </configuration>            
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>    
  </profiles>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>camunda-qa-integration-tests-engine</artifactId>
  <name>camunda BPM - QA Integration Tests - Engine</name>

  <parent>
    <groupId>org.camunda.bpm.qa</groupId>
    <artifactId>camunda-qa</artifactId>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <dependencies>
    <dependency>
      <groupId>org.jboss.shrinkwrap.resolver</groupId>
      <artifactId>shrinkwrap-resolver-depchain</artifactId>
      <version>${version.shrinkwrap.resolvers}</version>
      <scope>test</scope>
      <type>pom</type>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.spec</groupId>
      <artifactId>jboss-javaee-6.0</artifactId>
      <type>pom</type>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <artifactId>xalan</artifactId>
          <groupId>org.apache.xalan</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.jboss.arquillian.junit</groupId>
      <artifactId>arquillian-junit-container</artifactId>
      <version>${version.arquillian}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm.javaee</groupId>
      <artifactId>camunda-ejb-client</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine-cdi</artifactId>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <artifactId>camunda-engine</artifactId>
          <groupId>org.camunda.bpm</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine-spring</artifactId>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <artifactId>camunda-engine</artifactId>
          <groupId>org.camunda.bpm</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
    </dependency>

     <!-- weld for CDI support on tomcat-->
    <dependency>
      <groupId>org.jboss.weld.servlet</groupId>
      <artifactId>weld-servlet</artifactId>
      <version>1.1.10.Final</version>
    </dependency>

    <!-- required for TestWarDeploymentWithProcessEnginePlugin -->
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-all</artifactId>
      <version>2.2.1</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/*.xml</include>
          <include>**/*.properties</include>
          <include>**/*.png</include>
          <include>**/*.jpg</include>
        </includes>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <!-- install enhanced artifact -->
          <execution>
            <id>create-test-jar</id>
            <phase>package</phase>
            <goals>
              <goal>test-jar</goal>
            </goals>
            <configuration>
              <forceCreation>true</forceCreation>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>jboss</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <dependencies>
        <dependency>
          <!-- make sure this comes after runtime in the reactor build -->
          <groupId>org.camunda.bpm.qa</groupId>
          <artifactId>camunda-qa-jboss-runtime</artifactId>
          <version>${project.version}</version>
          <scope>provided</scope>
          <type>pom</type>
        </dependency>
        <dependency>
          <groupId>org.jboss.as</groupId>
          <artifactId>jboss-as-arquillian-container-managed</artifactId>
          <version>${version.jboss.as}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss.arquillian.protocol</groupId>
          <artifactId>arquillian-protocol-servlet</artifactId>
          <version>${version.arquillian}</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
      <build>
        <testResources>
          <testResource>
            <directory>src/test/resources-jboss</directory>
            <filtering>true</filtering>
          </testResource>
        </testResources>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>add-test-source</id>
                <phase>generate-test-sources</phase>
                <goals>
                  <goal>add-test-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>src/test/java-jboss</source>
                  </sources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <configuration>
              <delimiters>
                <delimiter>${*}</delimiter>
              </delimiters>
              <useDefaultDelimiters>false</useDefaultDelimiters>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <excludes>
                <!-- HEMERA-2453 -->
                <exclude>**/JobExecutorRequestContextLocalInvocationTest.java</exclude>
                <exclude>**_OTHERS.java</exclude>
                <excludes>**/SpringPAExpressionResolvingTest.java</excludes>
                <excludes>**/SpringServletPALifecycleTest.java</excludes>
                <excludes>**/ManagedDomainTestCase_JBOSS.java</excludes>
                <!-- CAM-1778 -->
                <exludes>**/TestWarDeploymentWithProcessEnginePlugin.java</exludes>
              </excludes>
             <redirectTestOutputToFile>true</redirectTestOutputToFile>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    
    
    <profile>
      <id>jboss-domain</id>
      <dependencies>
        <dependency>
          <!-- make sure this comes after runtime in the reactor build -->
          <groupId>org.camunda.bpm.qa</groupId>
          <artifactId>camunda-qa-jboss-runtime</artifactId>
          <version>${project.version}</version>
          <scope>provided</scope>
          <type>pom</type>
        </dependency>
        <dependency>
          <groupId>org.jboss.as</groupId>
          <artifactId>jboss-as-arquillian-container-domain-managed</artifactId>
          <version>${version.jboss.as}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss.arquillian.protocol</groupId>
          <artifactId>arquillian-protocol-servlet</artifactId>
          <version>${version.arquillian}</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
      <build>
        <testResources>
          <testResource>
            <directory>src/test/resources-jboss-domain</directory>
            <filtering>true</filtering>
          </testResource>
        </testResources>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>add-test-source</id>
                <phase>generate-test-sources</phase>
                <goals>
                  <goal>add-test-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>src/test/java-jboss</source>
                  </sources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <configuration>
              <delimiters>
                <delimiter>${*}</delimiter>
              </delimiters>
              <useDefaultDelimiters>false</useDefaultDelimiters>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <includes>
                <include>**/ManagedDomainTestCase_JBOSS.java</include>
              </includes>
             <redirectTestOutputToFile>true</redirectTestOutputToFile>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>jboss-servlet</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>add-test-source</id>
                <phase>generate-test-sources</phase>
                <goals>
                  <goal>add-test-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>src/test/java-jboss-servlet</source>
                  </sources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <excludes>
                <!-- skip EE integration tests -->
                <exclude>**/cdi/**</exclude>
                <exclude>**/ejb/**</exclude>
                <exclude>**/context/**</exclude>
                <exclude>**/jar/**</exclude>
                <excludes>**/jboss/**</excludes>
                <excludes>**/SpringPAExpressionResolvingTest.java</excludes>
                <excludes>**/SpringServletPALifecycleTest.java</excludes>
                <!-- CAM-1778 -->
                <exludes>**/TestWarDeploymentWithProcessEnginePlugin.java</exludes>
              </excludes>
              <redirectTestOutputToFile>true</redirectTestOutputToFile>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>


    <profile>
      <id>glassfish</id>
      <dependencies>
        <dependency>
          <!-- make sure this comes after runtime in the reactor build -->
          <groupId>org.camunda.bpm.qa</groupId>
          <artifactId>camunda-qa-glassfish-runtime</artifactId>
          <version>${project.version}</version>
          <scope>provided</scope>
          <type>pom</type>
        </dependency>
        <dependency>
          <groupId>org.jboss.arquillian.container</groupId>
          <artifactId>arquillian-glassfish-managed-3.1</artifactId>
          <version>1.0.0.CR4</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss.arquillian.protocol</groupId>
          <artifactId>arquillian-protocol-servlet</artifactId>
          <version>${version.arquillian}</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>add-test-source</id>
                <phase>generate-test-sources</phase>
                <goals>
                  <goal>add-test-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>src/test/java-glassfish</source>
                  </sources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <excludes>
                <!-- HEMERA-2454 -->
                <exclude>**/JobExecutorRequestContextSFSBDelegateTest.java</exclude>
                <!-- NOT Implemented -->
                <exclude>**/JobExecutorRequestContextLocalInvocationTest.java</exclude>
                <!-- NOT Implemented -->
                <exclude>**/ejb/local/*</exclude>
                <!-- HEMERA -->
                <excludes>**/TestFoxPlatformClientAsEjbModule**</excludes>
                <!-- not supported by arquillian connector -->
                <excludes>**/TestWarDeploymentWithBrokenBpmnXml.java</excludes>
                <excludes>**/TestDeploymentWithDroolsTaskFails.java</excludes>
                <exclude>**/TestProcessEnginesXmlFails.java</exclude>
                <exclude>**/*_JBOSS.java</exclude>
                <exclude>**/jar/**</exclude>
              </excludes>
              <redirectTestOutputToFile>true</redirectTestOutputToFile>
            </configuration>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-sql-scripts</id>
                <phase>generate-test-sources</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.camunda.bpm</groupId>
                      <artifactId>camunda-engine</artifactId>
                      <outputDirectory>${project.build.directory}/sql-scripts/engine</outputDirectory>
                      <overWrite>true</overWrite>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>sql-maven-plugin</artifactId>
            <dependencies>
              <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${version.mysql}</version>
              </dependency>
              <dependency>
                <groupId>com.oracle.jdbc</groupId>
                <artifactId>ojdbc6</artifactId>
                <version>${version.oracle11g}</version>
              </dependency>
              <dependency>
                <groupId>com.oracle.jdbc</groupId>
                <artifactId>ojdbc14</artifactId>
                <version>${version.oracle10g}</version>
              </dependency>
              <dependency>
                <groupId>com.ibm.db2.jcc</groupId>
                <artifactId>db2jcc4</artifactId>
                <version>${version.db2.97}</version>
              </dependency>
              <dependency>
                <groupId>com.microsoft.sqlserver</groupId>
                <artifactId>sqljdbc4</artifactId>
                <version>${version.mssql}</version>
              </dependency>
              <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${version.postgre}</version>
              </dependency>
              <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${version.h2}</version>
              </dependency>
            </dependencies>
            <configuration>
              <driver>${database.driver}</driver>
              <url>${database.url}</url>
              <username>${database.user}</username>
              <password>${database.password}</password>
            </configuration>
            <executions>
              <execution>
                <id>create-db</id>
                <phase>process-test-sources</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <srcFiles>
                    <!-- create the DB -->
                    <srcFile>${project.build.directory}/sql-scripts/engine/org/camunda/bpm/engine/db/create/activiti.${database.type}.create.engine.sql</srcFile>
                    <srcFile>${project.build.directory}/sql-scripts/engine/org/camunda/bpm/engine/db/create/activiti.${database.type}.create.identity.sql</srcFile>
                    <srcFile>${project.build.directory}/sql-scripts/engine/org/camunda/bpm/engine/db/create/activiti.${database.type}.create.history.sql</srcFile>
                  </srcFiles>
                  <autocommit>true</autocommit>
                  <onError>continue</onError>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
        <testResources>
          <testResource>
            <directory>src/test/resources-glassfish-h2</directory>
            <filtering>true</filtering>
      			<includes>
      			  <include>**/*.xml</include>
      			</includes>
          </testResource>
        </testResources>
      </build>
    </profile>

    <profile>
      <id>glassfish-servlet</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>add-test-source</id>
                <phase>generate-test-sources</phase>
                <goals>
                  <goal>add-test-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>src/test/java-glassfish-servlet</source>
                  </sources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <excludes>
                <!-- skip EE integration tests -->
                <exclude>**/cdi/**</exclude>
                <exclude>**/ejb/**</exclude>
                <exclude>**/context/**</exclude>
                <exclude>**/jar/**</exclude>
                <exclude>**/*_JBOSS.java</exclude>
              </excludes>
              <redirectTestOutputToFile>true</redirectTestOutputToFile>
            </configuration>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-sql-scripts</id>
                <phase>generate-test-sources</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.camunda.bpm</groupId>
                      <artifactId>camunda-engine</artifactId>
                      <outputDirectory>${project.build.directory}/sql-scripts/engine</outputDirectory>
                      <overWrite>true</overWrite>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>sql-maven-plugin</artifactId>
            <dependencies>
              <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${version.mysql}</version>
              </dependency>
              <dependency>
                <groupId>com.oracle.jdbc</groupId>
                <artifactId>ojdbc6</artifactId>
                <version>${version.oracle11g}</version>
              </dependency>
              <dependency>
                <groupId>com.oracle.jdbc</groupId>
                <artifactId>ojdbc14</artifactId>
                <version>${version.oracle10g}</version>
              </dependency>
              <dependency>
                <groupId>com.ibm.db2.jcc</groupId>
                <artifactId>db2jcc4</artifactId>
                <version>${version.db2.97}</version>
              </dependency>
              <dependency>
                <groupId>com.microsoft.sqlserver</groupId>
                <artifactId>sqljdbc4</artifactId>
                <version>${version.mssql}</version>
              </dependency>
              <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${version.postgre}</version>
              </dependency>
              <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${version.h2}</version>
              </dependency>
            </dependencies>
            <configuration>
              <driver>${database.driver}</driver>
              <url>${database.url}</url>
              <username>${database.user}</username>
              <password>${database.password}</password>
            </configuration>
            <executions>
              <execution>
                <id>create-db</id>
                <phase>process-test-sources</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <srcFiles>
                    <!-- create the DB -->
                    <srcFile>${project.build.directory}/sql-scripts/engine/org/camunda/bpm/engine/db/create/activiti.${database.type}.create.engine.sql</srcFile>
                    <srcFile>${project.build.directory}/sql-scripts/engine/org/camunda/bpm/engine/db/create/activiti.${database.type}.create.identity.sql</srcFile>
                    <srcFile>${project.build.directory}/sql-scripts/engine/org/camunda/bpm/engine/db/create/activiti.${database.type}.create.history.sql</srcFile>
                  </srcFiles>
                  <autocommit>true</autocommit>
                  <onError>continue</onError>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>tomcat</id>
      <dependencyManagement>
        <dependencies>
          <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-bom</artifactId>
            <version>${version.shrinkwrap.resolvers}</version>
            <scope>import</scope>
            <type>pom</type>
          </dependency>

          <dependency>
            <groupId>org.jboss.bom</groupId>
            <artifactId>jboss-javaee-6.0-with-tools</artifactId>
            <version>1.0.4.Final</version>
            <scope>import</scope>
            <type>pom</type>
          </dependency>
        </dependencies>
      </dependencyManagement>
      <dependencies>
        <dependency>
          <!-- make sure this comes after runtime in the reactor build -->
          <groupId>org.camunda.bpm.qa</groupId>
          <artifactId>camunda-qa-tomcat-runtime</artifactId>
          <version>${project.version}</version>
          <scope>provided</scope>
          <type>pom</type>
        </dependency>

        <dependency>
          <groupId>org.jboss.arquillian.junit</groupId>
          <artifactId>arquillian-junit-container</artifactId>
          <scope>test</scope>
        </dependency>

        <dependency>
          <groupId>org.jboss.arquillian.container</groupId>
          <artifactId>arquillian-tomcat-managed-7</artifactId>
          <version>1.0.0.CR5</version>
          <scope>test</scope>
        </dependency>

        <dependency>
          <groupId>org.jboss.arquillian.protocol</groupId>
          <artifactId>arquillian-protocol-servlet</artifactId>
          <scope>test</scope>
        </dependency>

      </dependencies>
      <build>
        <testResources>
          <testResource>
            <directory>src/test/resources-tomcat</directory>
            <filtering>true</filtering>
          </testResource>
        </testResources>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>add-test-source</id>
                <phase>generate-test-sources</phase>
                <goals>
                  <goal>add-test-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>src/test/java-tomcat</source>
                  </sources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <excludes>
                <!-- no EE stuff on tomcat :) -->
                <exclude>**/ear/**</exclude>
                <exclude>**/ejb/**</exclude>
                <exclude>**/jar/**</exclude>
                <exclude>**/transactions/**</exclude>
                <exclude>**/jpa/**</exclude>
                <!-- No EJB RequestContext available -->
                <exclude>**/JobExecutorRequestContextTest.java</exclude>
                <!-- Not supported by arquillian tomcat container -->
                <exclude>**/TestWarDeploymentWithBrokenBpmnXml.java</exclude>
                <exclude>**/TestDeploymentWithDroolsTaskFails.java</exclude>
                <exclude>**/TestProcessEnginesXmlFails.java</exclude>

                <exclude>**/*_JBOSS.java</exclude>
                <exclude>**/EjbPALifecycleCallbacksTest.java</exclude>
              </excludes>
              <redirectTestOutputToFile>true</redirectTestOutputToFile>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>distro</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.jboss.as</groupId>
          <artifactId>jboss-as-arquillian-container-managed</artifactId>
          <version>${version.jboss.as}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss.arquillian.protocol</groupId>
          <artifactId>arquillian-protocol-servlet</artifactId>
          <version>${version.arquillian}</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <skipTests>true</skipTests>
              <redirectTestOutputToFile>true</redirectTestOutputToFile>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>add-test-source</id>
                <phase>generate-test-sources</phase>
                <goals>
                  <goal>add-test-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>src/test/java-jboss</source>
                  </sources>
                </configuration>
              </execution>
              <execution>
                <id>add-test-resource</id>
                <phase>generate-test-resources</phase>
                <goals>
                  <goal>add-test-resource</goal>
                </goals>
                <configuration>
                  <resources>
                    <resource>
                      <directory>src/test/resources-jboss</directory>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- This profile is used by the ci server. The maven build on the
        ci server uses a local maven repository. This allows us to give the arquillian
        maven resolver access to the artifacts produced by this build. -->
      <id>ci</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <systemPropertyVariables>
                <org.apache.maven.user-settings>../../settings.xml</org.apache.maven.user-settings>
              </systemPropertyVariables>
              <redirectTestOutputToFile>true</redirectTestOutputToFile>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- allows dropping all databases -->
    <profile>
      <id>clean-db</id>
      <dependencies>
        <!-- db drivers for maven sql -->
        <dependency>
          <groupId>com.h2database</groupId>
          <artifactId>h2</artifactId>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>mysql</groupId>
          <artifactId>mysql-connector-java</artifactId>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>com.oracle.jdbc</groupId>
          <artifactId>ojdbc6</artifactId>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>com.oracle.jdbc</groupId>
          <artifactId>ojdbc14</artifactId>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>com.ibm.db2.jcc</groupId>
          <artifactId>db2jcc4</artifactId>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>com.microsoft.sqlserver</groupId>
          <artifactId>sqljdbc4</artifactId>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.postgresql</groupId>
          <artifactId>postgresql</artifactId>
          <scope>test</scope>
        </dependency>

        <dependency>
          <groupId>org.camunda.bpm</groupId>
          <artifactId>camunda-engine</artifactId>
          <scope>test</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-sql-scripts</id>
                <phase>generate-test-sources</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.camunda.bpm</groupId>
                      <artifactId>camunda-engine</artifactId>
                      <outputDirectory>${project.build.directory}/sql-scripts/engine</outputDirectory>
                      <overWrite>true</overWrite>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>sql-maven-plugin</artifactId>
            <dependencies>
              <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${version.mysql}</version>
              </dependency>
              <dependency>
                <groupId>com.oracle.jdbc</groupId>
                <artifactId>ojdbc6</artifactId>
                <version>${version.oracle11g}</version>
              </dependency>
              <dependency>
                <groupId>com.oracle.jdbc</groupId>
                <artifactId>ojdbc14</artifactId>
                <version>${version.oracle10g}</version>
              </dependency>
              <dependency>
                <groupId>com.ibm.db2.jcc</groupId>
                <artifactId>db2jcc4</artifactId>
                <version>${version.db2.97}</version>
              </dependency>
              <dependency>
                <groupId>com.microsoft.sqlserver</groupId>
                <artifactId>sqljdbc4</artifactId>
                <version>${version.mssql}</version>
              </dependency>
              <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${version.postgre}</version>
              </dependency>
              <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${version.h2}</version>
              </dependency>
            </dependencies>
            <configuration>
              <driver>${database.driver}</driver>
              <url>${database.url}</url>
              <username>${database.user}</username>
              <password>${database.password}</password>
            </configuration>
            <executions>
              <execution>
                <id>drop-db-if-present</id>
                <phase>generate-test-sources</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <srcFiles>
                    <!-- try dropping the DB if it exists. -->
                    <srcFile>${project.build.directory}/sql-scripts/engine/org/camunda/bpm/engine/db/drop/activiti.${database.type}.drop.engine.sql</srcFile>
                    <srcFile>${project.build.directory}/sql-scripts/engine/org/camunda/bpm/engine/db/drop/activiti.${database.type}.drop.identity.sql</srcFile>
                    <srcFile>${project.build.directory}/sql-scripts/engine/org/camunda/bpm/engine/db/drop/activiti.${database.type}.drop.history.sql</srcFile>
                  </srcFiles>
                  <autocommit>true</autocommit>
                  <onError>continue</onError>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>camunda-qa-integration-tests-webapps</artifactId>
  <name>camunda BPM - QA Integration Tests - Webapps</name>

  <parent>
    <groupId>org.camunda.bpm.qa</groupId>
    <artifactId>camunda-qa</artifactId>
    <version>7.2.0-SNAPSHOT</version>
  </parent>
  
  <properties>
    <signavio.globaluser>${env.signavio.globaluser}</signavio.globaluser>
    <signavio.globalpassword>${env.signavio.globalpassword}</signavio.globalpassword>
    <signavio.baseurl>${env.signavio.baseurl}</signavio.baseurl>

    <cargo.timeout>120000</cargo.timeout>
    <cargo.deploy.timeout>60000</cargo.deploy.timeout>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.jboss.spec</groupId>
      <artifactId>jboss-javaee-6.0</artifactId>
      <type>pom</type>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <artifactId>xalan</artifactId>
          <groupId>org.apache.xalan</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-java</artifactId>
      <version>2.32.0</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-server</artifactId>
      <version>2.32.0</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>xml-apis</groupId>
      <artifactId>xml-apis</artifactId>
      <version>1.4.01</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>4.2.3</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.sun.jersey.contribs</groupId>
      <artifactId>jersey-apache-client4</artifactId>
      <version>1.15</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-json</artifactId>
      <version>1.15</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm.cycle</groupId>
      <artifactId>camunda-cycle</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
      <classifier>core</classifier>
    </dependency>
    <dependency>
      <groupId>org.camunda.bpm.cycle</groupId>
      <artifactId>camunda-cycle</artifactId>
      <version>${project.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm.example</groupId>
      <artifactId>camunda-example-invoice</artifactId>
      <version>${project.version}</version>
      <type>war</type>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine-rest</artifactId>
      <scope>test</scope>
      <type>jar</type>
      <classifier>classes</classifier>
      <version>${project.version}</version>
    </dependency>

    <!-- db drivers for maven sql -->
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.oracle.jdbc</groupId>
      <artifactId>ojdbc6</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.oracle.jdbc</groupId>
      <artifactId>ojdbc14</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.ibm.db2.jcc</groupId>
      <artifactId>db2jcc4</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.microsoft.sqlserver</groupId>
      <artifactId>sqljdbc4</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>


  <profiles>
    <profile>
      <id>jboss</id>
      <properties>
        <jboss.runtime>${basedir}/${jboss.runtime.location}</jboss.runtime>
        <http.port>${jboss.http.port}</http.port>
      </properties>
      <dependencies>
        <dependency>
          <!-- make sure it comes after assembly in the build -->
          <groupId>org.camunda.bpm.qa</groupId>
          <artifactId>camunda-qa-jboss-runtime</artifactId>
          <version>${project.version}</version>
          <type>pom</type>
        </dependency>
        <dependency>
          <groupId>org.camunda.bpm.cycle</groupId>
          <artifactId>camunda-cycle-jboss</artifactId>
          <version>${project.version}</version>
          <type>war</type>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.camunda.bpm.webapp</groupId>
          <artifactId>camunda-webapp-jboss</artifactId>
          <version>${project.version}</version>
          <type>war</type>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.camunda.bpm</groupId>
          <artifactId>camunda-engine-rest</artifactId>
          <scope>test</scope>
          <type>war</type>
          <version>${project.version}</version>
        </dependency>        
      </dependencies>

      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven2-plugin</artifactId>
            <executions>
              <execution>
                <id>start-container</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>stop-container</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <!-- Container configuration -->
              <container>
                <type>installed</type>
                <containerId>jboss72x</containerId>
                <append>false</append>
                <home>${jboss.runtime}</home>
                <timeout>${cargo.timeout}</timeout>
              </container>
              <configuration>
                <type>standalone</type>
                <home>${project.build.directory}/config-jboss</home>

                <properties>
                  <cargo.servlet.port>${jboss.http.port}</cargo.servlet.port>
                  <cargo.jboss.ajp.port>${jboss.ajp.port}</cargo.jboss.ajp.port>
                </properties>
              </configuration>
              <deployables>
                <deployable>
                  <groupId>org.camunda.bpm.cycle</groupId>
                  <artifactId>camunda-cycle-jboss</artifactId>
                  <type>war</type>
                  <pingURL>http://localhost:${jboss.http.port}/cycle</pingURL>
                  <pingTimeout>${cargo.deploy.timeout}</pingTimeout>
                  <properties>
                    <context>cycle</context>
                  </properties>
                </deployable>
                <deployable>
                  <groupId>org.camunda.bpm</groupId>
                  <artifactId>camunda-engine-rest</artifactId>
                  <type>war</type>
                  <pingURL>http://localhost:${jboss.http.port}/engine-rest/engine/default/process-definition</pingURL>
                  <pingTimeout>${cargo.deploy.timeout}</pingTimeout>
                  <properties>
                    <context>engine-rest</context>
                  </properties>
                </deployable>
                <deployable>
                  <groupId>org.camunda.bpm.webapp</groupId>
                  <artifactId>camunda-webapp-jboss</artifactId>
                  <type>war</type>
                  <pingURL>http://localhost:${jboss.http.port}/camunda</pingURL>
                  <pingTimeout>${cargo.deploy.timeout}</pingTimeout>
                  <properties>
                    <context>camunda</context>
                  </properties>
                </deployable>
                <deployable>
                  <groupId>org.camunda.bpm.example</groupId>
                  <artifactId>camunda-example-invoice</artifactId>
                  <type>war</type>
                  <properties>
                    <context>invoice</context>
                  </properties>
                </deployable>
              </deployables>
              <wait>false</wait>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>glassfish</id>
      <properties>
        <glassfish.runtime>${basedir}/${glassfish.runtime.location}</glassfish.runtime>
        <http.port>${glassfish.http.port}</http.port>
      </properties>

      <dependencies>
        <dependency>
          <!-- make sure it comes after the test runtime in the build -->
          <groupId>org.camunda.bpm.qa</groupId>
          <artifactId>camunda-qa-glassfish-runtime</artifactId>
          <version>${project.version}</version>
          <type>pom</type>
        </dependency>   
        
        <dependency>
          <groupId>org.camunda.bpm.cycle</groupId>
          <artifactId>camunda-cycle-glassfish</artifactId>
          <version>${project.version}</version>
          <type>war</type>
          <scope>test</scope>
        </dependency>
        
        <dependency>
          <groupId>org.camunda.bpm.webapp</groupId>
          <artifactId>camunda-webapp-glassfish</artifactId>
          <version>${project.version}</version>
          <type>war</type>
          <scope>test</scope>
        </dependency>
        
        <dependency>
          <groupId>org.camunda.bpm</groupId>
          <artifactId>camunda-engine-rest</artifactId>
          <version>${project.version}</version>
          <type>war</type>
          <scope>test</scope>
        </dependency>
             
      </dependencies>

      <build>
        <plugins>
          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-resources</id>
                <phase>test-compile</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.build.directory}/glassfish3/glassfish/domains</outputDirectory>
                  <resources>
                    <resource>
                      <directory>src/main/domains</directory>
                      <filtering>true</filtering>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven2-plugin</artifactId>
            <executions>
              <execution>
                <id>start-container</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>stop-container</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <!-- Container configuration -->
              <container>
                <type>installed</type>
                <containerId>glassfish3x</containerId>
                <append>false</append>
                <home>${glassfish.runtime}</home>
                <timeout>${cargo.timeout}</timeout>
              </container>
              <configuration>
                <type>existing</type>
                <home>${glassfish.runtime}/glassfish/domains</home>
                <properties>
                  <cargo.servlet.port>${http.port}</cargo.servlet.port>
                  <cargo.glassfish.admin.port>${glassfish.admin.port}</cargo.glassfish.admin.port>
                  <cargo.glassfish.domain.name>domain1</cargo.glassfish.domain.name>
                  <cargo.remote.username>admin</cargo.remote.username>
                  <cargo.remote.password />
                </properties>
              </configuration>
              <deployables>
                <deployable>
                  <groupId>org.camunda.bpm.cycle</groupId>
                  <artifactId>camunda-cycle-glassfish</artifactId>
                  <type>war</type>
                  <pingURL>http://localhost:${http.port}/cycle</pingURL>
                  <pingTimeout>${cargo.deploy.timeout}</pingTimeout>
                  <properties>
                    <context>cycle</context>
                  </properties>
                </deployable>
                <deployable>
                  <groupId>org.camunda.bpm</groupId>
                  <artifactId>camunda-engine-rest</artifactId>
                  <type>war</type>
                  <pingURL>http://localhost:${http.port}/engine-rest/engine/default/process-definition</pingURL>
                  <pingTimeout>${cargo.deploy.timeout}</pingTimeout>
                  <properties>
                    <context>engine-rest</context>
                  </properties>
                </deployable>
                <deployable>
                  <groupId>org.camunda.bpm.webapp</groupId>
                  <artifactId>camunda-webapp-glassfish</artifactId>
                  <type>war</type>
                  <pingURL>http://localhost:${http.port}/camunda</pingURL>
                  <pingTimeout>${cargo.deploy.timeout}</pingTimeout>
                  <properties>
                    <context>camunda</context>
                  </properties>
                </deployable>
                <deployable>
                  <groupId>org.camunda.bpm.example</groupId>
                  <artifactId>camunda-example-invoice</artifactId>
                  <type>war</type>
                  <properties>
                    <context>invoice</context>
                  </properties>
                </deployable>
              </deployables>
              <wait>false</wait>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>tomcat</id>
      <properties>
        <tomcat.runtime>${basedir}/${tomcat6.runtime.location}</tomcat.runtime>
        <http.port>${tomcat6.connector.http.port}</http.port>
      </properties>
      <dependencies>
        <dependency>
          <!-- make sure it comes after assembly in the build -->
          <groupId>org.camunda.bpm.qa</groupId>
          <artifactId>camunda-qa-tomcat-runtime</artifactId>
          <version>${project.version}</version>
          <type>pom</type>
        </dependency>
        <dependency>
          <groupId>org.camunda.bpm.cycle</groupId>
          <artifactId>camunda-cycle-tomcat</artifactId>
          <version>${project.version}</version>
          <type>war</type>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.camunda.bpm.webapp</groupId>
          <artifactId>camunda-webapp-tomcat</artifactId>
          <version>${project.version}</version>
          <type>war</type>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.camunda.bpm</groupId>
          <artifactId>camunda-engine-rest</artifactId>
          <scope>test</scope>
          <type>war</type>
          <classifier>tomcat</classifier>
          <version>${project.version}</version>
        </dependency>
      </dependencies>

      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven2-plugin</artifactId>
            <executions>
              <execution>
                <id>start-container</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>stop-container</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <!-- Container configuration -->
              <container>
                <type>installed</type>
                <containerId>tomcat7x</containerId>
                <append>false</append>
                <home>${tomcat.runtime}</home>
                <timeout>${cargo.timeout}</timeout>
              </container>
              <configuration>
                <type>standalone</type>
                <home>${project.build.directory}/config-tomcat</home>
                <properties>
                  <cargo.servlet.port>${tomcat6.connector.http.port}</cargo.servlet.port>
                  <cargo.tomcat.ajp.port>${tomcat6.connector.ajp.port}</cargo.tomcat.ajp.port>
                </properties>
              </configuration>
              <deployables>
                <deployable>
                  <groupId>org.camunda.bpm.cycle</groupId>
                  <artifactId>camunda-cycle-tomcat</artifactId>
                  <type>war</type>
                  <pingURL>http://localhost:${tomcat6.connector.http.port}/cycle</pingURL>
                  <pingTimeout>${cargo.deploy.timeout}</pingTimeout>
                  <properties>
                    <context>cycle</context>
                  </properties>
                </deployable>
                <deployable>
                  <groupId>org.camunda.bpm</groupId>
                  <artifactId>camunda-engine-rest</artifactId>
                  <type>war</type>
                  <classifier>tomcat</classifier>
                  <pingURL>http://localhost:${tomcat6.connector.http.port}/engine-rest/engine/default/process-definition</pingURL>
                  <pingTimeout>${cargo.deploy.timeout}</pingTimeout>
                  <properties>
                    <context>engine-rest</context>
                  </properties>
                </deployable>
                <deployable>
                  <groupId>org.camunda.bpm.webapp</groupId>
                  <artifactId>camunda-webapp-tomcat</artifactId>
                  <type>war</type>
                  <pingURL>http://localhost:${tomcat6.connector.http.port}/camunda</pingURL>
                  <pingTimeout>${cargo.deploy.timeout}</pingTimeout>
                  <properties>
                    <context>camunda</context>
                  </properties>
                </deployable>
                <deployable>
                  <groupId>org.camunda.bpm.example</groupId>
                  <artifactId>camunda-example-invoice</artifactId>
                  <type>war</type>
                  <properties>
                    <context>invoice</context>
                  </properties>
                </deployable>
              </deployables>
              <wait>false</wait>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>distro</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <skipTests>true</skipTests>
              <skipITs>true</skipITs>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>webapps-integration</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
          </plugin>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.4</version>
            <executions>
              <execution>
                <id>database-test-config</id>
                <phase>process-test-classes</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <copy file="${basedir}/src/test/resources/camunda.cfg.xml" tofile="target/test-classes/camunda.cfg.xml" overwrite="true">
                      <filterset>
                        <filter token="@database.url@" value="${database.url}" />
                        <filter token="@database.driver@" value="${database.driver}" />
                        <filter token="@database.user@" value="${database.user}" />
                        <filter token="@database.password@" value="${database.password}" />
                      </filterset>
                    </copy>
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- allows dropping all databases -->
    <profile>
      <id>clean-db</id>
      <dependencies>
        <dependency>
          <groupId>org.camunda.bpm.cycle</groupId>
          <artifactId>camunda-cycle-sql-scripts</artifactId>
          <version>${project.version}</version>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-sql-scripts</id>
                <phase>generate-test-sources</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.camunda.bpm.cycle</groupId>
                      <artifactId>camunda-cycle-sql-scripts</artifactId>
                      <outputDirectory>${project.build.directory}/sql-scripts/cycle</outputDirectory>
                      <overWrite>true</overWrite>
                    </artifactItem>
                    <artifactItem>
                      <groupId>org.camunda.bpm</groupId>
                      <artifactId>camunda-engine</artifactId>
                      <outputDirectory>${project.build.directory}/sql-scripts/engine</outputDirectory>
                      <overWrite>true</overWrite>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>sql-maven-plugin</artifactId>
            <dependencies>
              <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${version.mysql}</version>
              </dependency>
              <dependency>
                <groupId>com.oracle.jdbc</groupId>
                <artifactId>ojdbc6</artifactId>
                <version>${version.oracle11g}</version>
              </dependency>
              <dependency>
                <groupId>com.oracle.jdbc</groupId>
                <artifactId>ojdbc14</artifactId>
                <version>${version.oracle10g}</version>
              </dependency>
              <dependency>
                <groupId>com.ibm.db2.jcc</groupId>
                <artifactId>db2jcc4</artifactId>
                <version>${version.db2.97}</version>
              </dependency>
              <dependency>
                <groupId>com.microsoft.sqlserver</groupId>
                <artifactId>sqljdbc4</artifactId>
                <version>${version.mssql}</version>
              </dependency>
              <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${version.postgre}</version>
              </dependency>
              <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${version.h2}</version>
              </dependency>
            </dependencies>
            <configuration>
              <driver>${database.driver}</driver>
              <url>${database.url}</url>
              <username>${database.user}</username>
              <password>${database.password}</password>
            </configuration>
            <executions>
              <execution>
                <id>drop-db-if-present</id>
                <phase>generate-test-sources</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <srcFiles>
                    <!-- try dropping the DB if it exists. -->
                    <srcFile>${project.build.directory}/sql-scripts/cycle/sql/drop/${database.type}_cycle.sql</srcFile>
                    <srcFile>${project.build.directory}/sql-scripts/engine/org/camunda/bpm/engine/db/drop/activiti.${database.type}.drop.engine.sql</srcFile>
                    <srcFile>${project.build.directory}/sql-scripts/engine/org/camunda/bpm/engine/db/drop/activiti.${database.type}.drop.identity.sql</srcFile>
                    <srcFile>${project.build.directory}/sql-scripts/engine/org/camunda/bpm/engine/db/drop/activiti.${database.type}.drop.history.sql</srcFile>
                  </srcFiles>
                  <autocommit>true</autocommit>
                  <onError>continue</onError>
                </configuration>
              </execution>
              <execution>
                <id>create-db</id>
                <phase>generate-test-sources</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <srcFiles>
                    <srcFile>${project.build.directory}/sql-scripts/cycle/sql/create/${database.type}_cycle.sql</srcFile>
                  </srcFiles>
                  <autocommit>true</autocommit>
                  <onError>continue</onError>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>

  <build>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
      </testResource>
    </testResources>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <!-- install enhanced artifact -->
          <execution>
            <id>create-test-jar</id>
            <phase>package</phase>
            <goals>
              <goal>test-jar</goal>
            </goals>
            <configuration>
              <forceCreation>true</forceCreation>
            <!--  <includes>
                <include>**/com/camunda/fox/platform/test/util/**/*.class</include>
              </includes> -->
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
            <skipTests>true</skipTests>
        </configuration>
      </plugin>
    </plugins>

    <pluginManagement>
      <plugins>
        <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build
          itself. -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>
                      org.apache.maven.plugins
                    </groupId>
                    <artifactId>
                      maven-antrun-plugin
                    </artifactId>
                    <versionRange>
                      [1.7,)
                    </versionRange>
                    <goals>
                      <goal>run</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>camunda-qa-jboss-runtime</artifactId>
  <packaging>jar</packaging>

  <name>camunda BPM - QA jBoss7 Test Runtime</name>

  <properties>
    <jboss.assembly.location>../../distro/jbossas7/assembly/target/assembly-${project.version}/assembly-${project.version}/server</jboss.assembly.location>
  </properties>

  <parent>
    <groupId>org.camunda.bpm.qa</groupId>
    <artifactId>camunda-qa</artifactId>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <dependencies>
    <dependency>
      <!-- make sure it comes after assembly in the build -->
      <groupId>org.camunda.bpm.jboss</groupId>
      <artifactId>camunda-jboss-assembly</artifactId>
      <version>${project.version}</version>      
      <type>pom</type>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.ibm.db2.jcc</groupId>
      <artifactId>db2jcc4</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.oracle.jdbc</groupId>
      <artifactId>ojdbc6</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.microsoft.sqlserver</groupId>
      <artifactId>sqljdbc4</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/standalone</directory>
        <filtering>true</filtering>
        <includes>
          <include>configuration/standalone.xml</include>
          <include>deployments/${jboss.datasource.filename}</include>
        </includes>
      </resource>
      <resource>
        <directory>src/main/domain</directory>
        <filtering>true</filtering>
        <includes>
          <include>configuration/domain.xml</include>
          <include>configuration/host.xml</include>
        </includes>
      </resource>
    </resources>
    <plugins>
      <!-- create sources to be used by camunda-bpm-platform-ee -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-resources</id>
            <phase>verify</phase>
            <goals>
              <goal>add-resource</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>src/main</directory>
                  <includes>
                    <include>**/*.xml</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>verify</phase>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
            <configuration>
              <forceCreation>true</forceCreation>
              <!-- exclude otherwise there would be duplicates in -sources.jar -->
              <excludes>
                <exclude>deployments/**/*</exclude>
                <exclude>configuration/**/*</exclude>
                <exclude>**/configuration/**/*</exclude>
              </excludes>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>jboss</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-server</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <inherited>false</inherited>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.camunda.bpm.jboss</groupId>
                      <artifactId>camunda-jboss-assembly</artifactId>
                      <version>${project.version}</version>
                      <type>tar.gz</type>
                      <overWrite>true</overWrite>
                      <outputDirectory>target/</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-distro</id>
                <phase>package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target unless="maven.test.skip">
                    <copy todir="${jboss.runtime.location}/modules" overwrite="true">
                      <fileset dir="src/main/modules" />
                    </copy>

                  </target>
                </configuration>
              </execution>
              <execution>
                <id>copy-test-dependencies</id>
                <phase>package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target unless="maven.test.skip">
                    <dependencyfilesets scopes="test" />

                    <copy todir="${jboss.runtime.location}/modules" flatten="false">
                      <fileset refid="maven.project.dependencies" />
                      <regexpmapper from="^(.*)/([^/]+)/([^/]*)$$" to="\1/main/\3" handledirsep="yes" />
                    </copy>

                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- copy filtered configuration resources -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <configuration>
              <delimiters>
                <delimiter>${*}</delimiter>
              </delimiters>
              <useDefaultDelimiters>false</useDefaultDelimiters>
            </configuration>
            <executions>
              <execution>
                <id>copy-resources</id>
                <phase>package</phase>
                <goals>
                  <goal>resources</goal>
                </goals>
                <configuration>
                  <override>true</override>
                  <outputDirectory>${jboss.runtime.location}/standalone</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    
    <profile>
      <id>jboss-domain</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-server</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <inherited>false</inherited>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.camunda.bpm.jboss</groupId>
                      <artifactId>camunda-jboss-assembly</artifactId>
                      <version>${project.version}</version>
                      <type>tar.gz</type>
                      <overWrite>true</overWrite>
                      <outputDirectory>target/</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-distro</id>
                <phase>package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target unless="maven.test.skip">
                    <copy todir="${jboss.runtime.location}/modules" overwrite="true">
                      <fileset dir="src/main/modules" />
                    </copy>

                  </target>
                </configuration>
              </execution>
              <execution>
                <id>copy-test-dependencies</id>
                <phase>package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target unless="maven.test.skip">
                    <dependencyfilesets scopes="test" />

                    <copy todir="${jboss.runtime.location}/modules" flatten="false">
                      <fileset refid="maven.project.dependencies" />
                      <regexpmapper from="^(.*)/([^/]+)/([^/]*)$$" to="\1/main/\3" handledirsep="yes" />
                    </copy>

                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- copy filtered configuration resources -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <configuration>
              <delimiters>
                <delimiter>${*}</delimiter>
              </delimiters>
              <useDefaultDelimiters>false</useDefaultDelimiters>
            </configuration>
            <executions>
              <execution>
                <id>copy-resources</id>
                <phase>package</phase>
                <goals>
                  <goal>resources</goal>
                </goals>
                <configuration>
                  <override>true</override>
                  <outputDirectory>${jboss.runtime.location}/domain</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>install-test-runtime</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>assemble</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <descriptors>
                    <descriptor>assembly.xml</descriptor>
                  </descriptors>
                  <finalName>camunda-qa-jboss-runtime-${project.version}</finalName>
                  <appendAssemblyId>false</appendAssemblyId>
                  <outputDirectory>target/</outputDirectory>
                  <workDirectory>target/assembly/work</workDirectory>
                  <tarLongFileMode>gnu</tarLongFileMode>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>camunda-qa-performance-tests-engine</artifactId>
  <packaging>jar</packaging>
  <name>camunda BPM - QA Performance Tests Engine</name>

  <parent>
    <groupId>org.camunda.bpm.qa</groupId>
    <artifactId>camunda-qa</artifactId>
    <version>7.2.0-SNAPSHOT</version>
  </parent>
  
  <properties>
    <historyLevel>full</historyLevel>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine</artifactId>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>      
    </dependency>
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-mapper-asl</artifactId>
      <version>1.9.11</version>
    </dependency>
    
    <dependency>
      <groupId>org.apache.tomcat</groupId>
      <artifactId>tomcat-jdbc</artifactId>
      <version>7.0.33</version>
    </dependency>
    
    <dependency>
      <groupId>org.apache.tomcat</groupId>
      <artifactId>tomcat-juli</artifactId>
      <version>7.0.33</version>
    </dependency>
    
  </dependencies>

  <profiles>

    <!-- distro profile skips tests -->
    <profile>
      <id>distro</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <skipTests>true</skipTests>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
    
      <!-- the benchmark performs multiple runs of the same process on multiple threads. -->
      <id>benchmark</id>

      <properties>
        <!-- default values for properties -->
        <numberOfThreads>2</numberOfThreads>
        <numberOfRuns>100</numberOfRuns>
        <testWatchers></testWatchers>
        <processEnginePlugins></processEnginePlugins>
      </properties>

      <build>
        <testResources>
          <testResource>
            <directory>src/test/resources</directory>
            <filtering>true</filtering>
          </testResource>
        </testResources>

        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <redirectTestOutputToFile>true</redirectTestOutputToFile>
              <argLine>-Xmx512m</argLine>
            </configuration>
          </plugin>
          
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.4</version>
            <executions>              
              <execution>
                <id>database-test-drop-schema</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <tasks>
                    <echo message="Generating reports" />
                    <copy todir="${basedir}/target/reports/images" flatten="true">
                      <fileset dir="${basedir}/src/test/resources">
                        <include name="**/*.png"/>
                      </fileset>
                    </copy>
                    <java classname="org.camunda.bpm.qa.performance.engine.benchmark.BenchmarkReport" classpathref="maven.test.classpath" />
                  </tasks>
                </configuration>
              </execution>
            </executions>
          </plugin>
          
        </plugins>

      </build>

    </profile>
    
     <profile>
      
      <!-- Allows to log the process engine's interaction with the database -->     
      <id>sql-statementlog</id>

      <properties>        
        <numberOfThreads>1</numberOfThreads>
        <numberOfRuns>1</numberOfRuns>
        <testWatchers>org.camunda.bpm.qa.performance.engine.sqlstatementlog.StatementLogPerfTestWatcher</testWatchers>
        <processEnginePlugins>org.camunda.bpm.qa.performance.engine.sqlstatementlog.StatementLogProcessEnginePlugin</processEnginePlugins>
      </properties>

      <build>
        <testResources>
          <testResource>
            <directory>src/test/resources</directory>
            <filtering>true</filtering>
          </testResource>
        </testResources>

        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <redirectTestOutputToFile>true</redirectTestOutputToFile>
              <argLine>-Xmx512m</argLine>
            </configuration>
          </plugin>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.4</version>
            <executions>              
              <execution>
                <id>database-test-drop-schema</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <tasks>                  
                    <echo message="Generating reports in ${basedir}/target/reports/" />
                    <copy todir="${basedir}/target/reports/images" flatten="true">
                      <fileset dir="${basedir}/src/test/resources">
                        <include name="**/*.png"/>
                      </fileset>
                    </copy>
                    <java classname="org.camunda.bpm.qa.performance.engine.sqlstatementlog.SqlStatementLogReport" classpathref="maven.test.classpath" />
                  </tasks>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>

      </build>

    </profile>
    
    <!-- override h2 profile to use in-mem db -->
    <profile>    
      <id>h2</id>
      <properties>
        <database.type>h2</database.type>
        <database.user>sa</database.user>
        <database.password>sa</database.password>
        <database.driver>org.h2.Driver</database.driver>
        <database.datasource.class>org.h2.jdbcx.JdbcDataSource</database.datasource.class>
        <database.url>jdbc:h2:mem:performance-test;MVCC=TRUE</database.url>
      </properties>
    </profile>
    
    <profile>
      <id>history-level-none</id>
      <properties>
        <historyLevel>none</historyLevel>
      </properties>
    </profile>
    
    <profile>
      <id>history-level-full</id>
      <properties>
        <historyLevel>full</historyLevel>
      </properties>
    </profile>
    
    <profile>
      <id>mysql</id>
      <dependencies>
        <dependency>
          <groupId>mysql</groupId>
          <artifactId>mysql-connector-java</artifactId>
        </dependency>
      </dependencies>
    </profile>
    
    <profile>
      <id>postgres</id>
      <dependencies>
        <dependency>
          <groupId>org.postgresql</groupId>
          <artifactId>postgresql</artifactId>
        </dependency>
      </dependencies>
    </profile>
    
    <profile>
      <id>mssql</id>
      <dependencies>
        <dependency>
          <groupId>com.microsoft.sqlserver</groupId>
          <artifactId>sqljdbc4</artifactId>
        </dependency>
      </dependencies>
    </profile>


    <profile>
      <id>db2</id>
      <dependencies>
         <dependency>
          <groupId>com.ibm.db2.jcc</groupId>
          <artifactId>db2jcc4</artifactId>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>oracle</id>
      <dependencies>
         <dependency>
          <groupId>com.oracle.jdbc</groupId>
          <artifactId>ojdbc6</artifactId>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>

  </profiles>

</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>camunda-qa</artifactId>
  <groupId>org.camunda.bpm.qa</groupId>

  <packaging>pom</packaging>
  <name>camunda BPM - QA</name>

  <parent>
    <groupId>org.camunda.bpm</groupId>
    <artifactId>camunda-parent</artifactId>
    <relativePath>../parent</relativePath>
    <version>7.2.0-SNAPSHOT</version>
  </parent>
  
  <properties>
    <!-- 
      all maven properties used in QA/CI 
    -->
    
    <!-- jboss -->
    <jboss.runtime.location>../jboss7-runtime/target/server/jboss-as-${version.jboss.as}/</jboss.runtime.location>
    <jboss.datasource.filename>h2-ds.xml</jboss.datasource.filename>
    <jboss.http.port>38080</jboss.http.port>
    <jboss.ajp.port>38009</jboss.ajp.port>
    <jboss.https.port>38443</jboss.https.port>
    <jboss.management-native.port>39999</jboss.management-native.port>
    <jboss.management-http.port>39990</jboss.management-http.port>
    <jboss.management-https.port>39443</jboss.management-https.port>
    <jboss.osgi-http.port>38090</jboss.osgi-http.port>    
    <jboss.remoting.port>34447</jboss.remoting.port>
    <jboss.txn-recovery-environment.port>34712</jboss.txn-recovery-environment.port>
    <jboss.txn-status-manager.port>34713</jboss.txn-status-manager.port>
    <jboss.mail-smtp.port>25</jboss.mail-smtp.port>
    
    <!-- glassfish properties -->
    <glassfish.runtime.location>../gf31-runtime/target/server/glassfish3</glassfish.runtime.location>
    
    <glassfish.http.port>28080</glassfish.http.port>
    <glassfish.admin.port>24848</glassfish.admin.port>
    <glassfish.ASADMIN_LISTENER_PORT>24848</glassfish.ASADMIN_LISTENER_PORT>
    <glassfish.HTTP_SSL_LISTENER_PORT>28181</glassfish.HTTP_SSL_LISTENER_PORT>
    <glassfish.JMS_PROVIDER_PORT>27676</glassfish.JMS_PROVIDER_PORT>
    <glassfish.IIOP_LISTENER_PORT>23700</glassfish.IIOP_LISTENER_PORT>
    <glassfish.IIOP_SSL_LISTENER_PORT>23820</glassfish.IIOP_SSL_LISTENER_PORT>
    <glassfish.IIOP_SSL_MUTUALAUTH_PORT>23920</glassfish.IIOP_SSL_MUTUALAUTH_PORT>
    <glassfish.JMX_SYSTEM_CONNECTOR_PORT>28686</glassfish.JMX_SYSTEM_CONNECTOR_PORT>
    <glassfish.OSGI_SHELL_TELNET_PORT>26666</glassfish.OSGI_SHELL_TELNET_PORT>
    <glassfish.JAVA_DEBUGGER_PORT>29009</glassfish.JAVA_DEBUGGER_PORT>
    
    	
	<!-- tomcat -->
	<tomcat6.connector.http.port>48080</tomcat6.connector.http.port>
	<tomcat6.connector.http.redirectPort>48443</tomcat6.connector.http.redirectPort>
	<tomcat6.connector.ajp.port>48009</tomcat6.connector.ajp.port>
	<tomcat6.connector.ajp.redirectPort>48443</tomcat6.connector.ajp.redirectPort>
    <tomcat6.server.port>48005</tomcat6.server.port>
	<tomcat6.runtime.location>../tomcat-runtime/target/server/apache-tomcat-${version.tomcat}</tomcat6.runtime.location>


    <database.datasource.class.type>javax.sql.DataSource</database.datasource.class.type>
    <database.datasource.class.type.xa>javax.sql.XADataSource</database.datasource.class.type.xa>
    
    <h2.server.port>18080</h2.server.port>
  </properties>
  
  <profiles>
	
	<profile>
	  <id>distro</id>  
      <modules>
        <module>jboss7-runtime</module>
        <module>gf31-runtime</module>
        <module>tomcat-runtime</module>
        <module>integration-tests-webapps</module>
        <module>integration-tests-engine</module>
        <!-- <module>test-db-upgrade</module> -->
      </modules>
	</profile>  
  
    <!-- Server profiles -->
  	
    <profile>
      <id>glassfish</id>
      <modules>
        <module>gf31-runtime</module>
      </modules>
    </profile>
	
    <profile>      
      <id>jboss</id> 
      <modules>       
        <module>jboss7-runtime</module>
      </modules>
    </profile>  
    
    <profile>      
      <id>jboss-domain</id> 
      <modules>       
        <module>jboss7-runtime</module>
      </modules>
    </profile>  
	
	<profile>
      <id>tomcat</id>       
      <modules>
        <module>tomcat-runtime</module>     
      </modules>
    </profile>  
    
    <!-- Testsuite profiles -->

    <profile>
      <id>webapps-integration</id>
      <modules>
        <module>integration-tests-webapps</module>
      </modules>      
    </profile>
    
    <profile>
      <id>engine-integration</id>
      <modules>
        <module>integration-tests-engine</module>
      </modules>
    </profile>
    
    <profile>
      <id>upgrade</id>
      <modules>
        <module>test-db-upgrade</module>
      </modules>
    </profile>
    
    <!-- db profiles -->
    
    <profile>
      <id>db2</id>
      <properties>
        <database.type>db2</database.type>
        <glassfish.transactions.noxa>true</glassfish.transactions.noxa>
        <jboss.datasource.filename>db2-ds.xml</jboss.datasource.filename>
        <database.host>${env.db2.database.host}</database.host>
        <database.name>${env.db2.database.name}</database.name>
        <database.user>${env.db2.database.user}</database.user>
        <database.password>${env.db2.database.password}</database.password>
        <database.driver>com.ibm.db2.jcc.DB2Driver</database.driver>
        <database.datasource.class>com.ibm.db2.jcc.DB2SimpleDataSource</database.datasource.class>        
        <database.port>${env.db2.database.port}</database.port>
        <database.url>jdbc:db2://${database.host}:${database.port}/${database.name}</database.url>
      </properties>
    </profile>
    
    <profile>
      <id>db2-xa</id>
      <properties>
        <database.type>db2</database.type>
        <glassfish.transactions.noxa>false</glassfish.transactions.noxa>
        <jboss.datasource.filename>db2-xa-ds.xml</jboss.datasource.filename>
        <database.host>${env.db2.database.host}</database.host>
        <database.name>${env.db2.database.name}</database.name>
        <database.user>${env.db2.database.user}</database.user>
        <database.password>${env.db2.database.password}</database.password>
        <database.driver>com.ibm.db2.jcc.DB2Driver</database.driver>
        <database.datasource.class>com.ibm.db2.jcc.DB2XADataSource</database.datasource.class>
        <database.datasource.class.type>${database.datasource.class.type.xa}</database.datasource.class.type>
        <database.port>${env.db2.database.port}</database.port>
        <database.url>jdbc:db2://${database.host}:${database.port}/${database.name}</database.url>
      </properties>
    </profile>
    
    <profile>
      <id>h2</id>
      <properties>
        <database.type>h2</database.type>
        <jboss.datasource.filename>h2-ds.xml</jboss.datasource.filename>
        <database.user>sa</database.user>
        <database.password>sa</database.password>
        <database.driver>org.h2.Driver</database.driver>
        <database.datasource.class>org.h2.jdbcx.JdbcDataSource</database.datasource.class>
        <!-- This url has to consistent for the subprojects: {server}-runtime and webapp-integration-tests -->
        <database.url>jdbc:h2:${project.parent.basedir}/target/h2/process-engine;MVCC=TRUE;AUTO_SERVER=TRUE;AUTO_SERVER_PORT=${h2.server.port}</database.url>
      </properties>
    </profile>
   
    <profile>
      <id>mssql</id>
      <properties>
        <database.type>mssql</database.type>
        <glassfish.transactions.noxa>true</glassfish.transactions.noxa>
        <jboss.datasource.filename>mssql-ds.xml</jboss.datasource.filename>
        <database.host>${env.mssql.database.host}</database.host>
        <database.name>${env.mssql.database.name}</database.name>
        <database.user>${env.mssql.database.user}</database.user>
        <database.password>${env.mssql.database.password}</database.password>
        <database.driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</database.driver>
        <database.datasource.class>com.microsoft.sqlserver.jdbc.SQLServerDataSource</database.datasource.class>
        <database.port>${env.mssql.database.port}</database.port>
        <database.url>jdbc:sqlserver://${database.host}:${database.port};DatabaseName=${database.name}</database.url>
      </properties>
    </profile>
    
    <profile>
      <id>mssql-xa</id>
      <properties>
        <database.type>mssql</database.type>
        <glassfish.transactions.noxa>false</glassfish.transactions.noxa>
        <jboss.datasource.filename>mssql-xa-ds.xml</jboss.datasource.filename>
        <database.host>${env.mssql.database.host}</database.host>
        <database.name>${env.mssql.database.name}</database.name>
        <database.user>${env.mssql.database.user}</database.user>
        <database.password>${env.mssql.database.password}</database.password>
        <database.driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</database.driver>
        <database.datasource.class>com.microsoft.sqlserver.jdbc.SQLServerXADataSource</database.datasource.class>
        <database.datasource.class.type>${database.datasource.class.type.xa}</database.datasource.class.type>
        <database.port>${env.mssql.database.port}</database.port>
        <database.url>jdbc:sqlserver://${database.host}:${database.port};DatabaseName=${database.name}</database.url>
      </properties>
    </profile>
    
    <profile>
      <id>mssql12</id>
      <properties>
        <database.type>mssql</database.type>
        <glassfish.transactions.noxa>true</glassfish.transactions.noxa>
        <jboss.datasource.filename>mssql-ds.xml</jboss.datasource.filename>
        <database.host>${env.mssql12.database.host}</database.host>
        <database.name>${env.mssql12.database.name}</database.name>
        <database.user>${env.mssql12.database.user}</database.user>
        <database.password>${env.mssql12.database.password}</database.password>
        <database.driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</database.driver>
        <database.datasource.class>com.microsoft.sqlserver.jdbc.SQLServerDataSource</database.datasource.class>
        <database.port>${env.mssql12.database.port}</database.port>
        <database.url>jdbc:sqlserver://${database.host}:${database.port};DatabaseName=${database.name}</database.url>
      </properties>
    </profile>
    
    <profile>
      <id>mssql12-xa</id>
      <properties>
        <database.type>mssql</database.type>
        <glassfish.transactions.noxa>false</glassfish.transactions.noxa>
        <jboss.datasource.filename>mssql-xa-ds.xml</jboss.datasource.filename>
        <database.host>${env.mssql12.database.host}</database.host>
        <database.name>${env.mssql12.database.name}</database.name>
        <database.user>${env.mssql12.database.user}</database.user>
        <database.password>${env.mssql12.database.password}</database.password>
        <database.driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</database.driver>
        <database.datasource.class>com.microsoft.sqlserver.jdbc.SQLServerXADataSource</database.datasource.class>
        <database.datasource.class.type>${database.datasource.class.type.xa}</database.datasource.class.type>
        <database.port>${env.mssql12.database.port}</database.port>
        <database.url>jdbc:sqlserver://${database.host}:${database.port};DatabaseName=${database.name}</database.url>
      </properties>
    </profile>
    
    <profile>
      <id>oracle</id>
      <properties>
        <database.type>oracle</database.type>
        <glassfish.transactions.noxa>true</glassfish.transactions.noxa>
        <jboss.datasource.filename>oracle-ds.xml</jboss.datasource.filename>
        <database.host>${env.oracle.database.host}</database.host>
        <database.name>${env.oracle.database.name}</database.name>
        <database.user>${env.oracle.database.user}</database.user>
        <database.password>${env.oracle.database.password}</database.password>
        <database.driver>oracle.jdbc.OracleDriver</database.driver>
        <database.datasource.class>oracle.jdbc.pool.OracleDataSource</database.datasource.class>
        <database.port>${env.oracle.database.port}</database.port>
        <database.url>jdbc:oracle:thin:@${database.host}:${database.port}:xe</database.url>
      </properties>
    </profile>
    
    <profile>
      <id>oracle-xa</id>
      <properties>
        <database.type>oracle</database.type>
        <glassfish.transactions.noxa>false</glassfish.transactions.noxa>
        <jboss.datasource.filename>oracle-xa-ds.xml</jboss.datasource.filename>
        <database.host>${env.oracle.database.host}</database.host>
        <database.name>${env.oracle.database.name}</database.name>
        <database.user>${env.oracle.database.user}</database.user>
        <database.password>${env.oracle.database.password}</database.password>
        <database.driver>oracle.jdbc.OracleDriver</database.driver>
        <database.datasource.class>oracle.jdbc.xa.client.OracleXADataSource</database.datasource.class>
        <database.datasource.class.type>${database.datasource.class.type.xa}</database.datasource.class.type>
        <database.port>${env.oracle.database.port}</database.port>
        <database.url>jdbc:oracle:thin:@${database.host}:${database.port}:xe</database.url>
      </properties>
    </profile>
    
    <profile>
      <id>postgres</id>
      <properties>
        <database.type>postgres</database.type>
        <glassfish.transactions.noxa>true</glassfish.transactions.noxa>
        <jboss.datasource.filename>postgres-ds.xml</jboss.datasource.filename>
        <database.host>${env.postgres.database.host}</database.host>
        <database.name>${env.postgres.database.name}</database.name>
        <database.user>${env.postgres.database.user}</database.user>
        <database.password>${env.postgres.database.password}</database.password>
        <database.driver>org.postgresql.Driver</database.driver>
        <database.datasource.class>org.postgresql.ds.PGSimpleDataSource</database.datasource.class>
        <database.port>${env.postgres.database.port}</database.port>
        <database.url>jdbc:postgresql://${database.host}:${database.port}/${database.name}</database.url>
      </properties>
    </profile>
    
    <profile>
      <id>postgres-xa</id>
      <properties>
        <database.type>postgres</database.type>
        <glassfish.transactions.noxa>false</glassfish.transactions.noxa>
        <jboss.datasource.filename>postgres-xa-ds.xml</jboss.datasource.filename>
        <database.host>${env.postgres.database.host}</database.host>
        <database.name>${env.postgres.database.name}</database.name>
        <database.user>${env.postgres.database.user}</database.user>
        <database.password>${env.postgres.database.password}</database.password>
        <database.driver>org.postgresql.Driver</database.driver>
        <database.datasource.class>org.postgresql.xa.PGXADataSource</database.datasource.class>
        <database.datasource.class.type>${database.datasource.class.type.xa}</database.datasource.class.type>
        <database.port>${env.postgres.database.port}</database.port>
        <database.url>jdbc:postgresql://${database.host}:${database.port}/${database.name}</database.url>
      </properties>
    </profile>

    <profile>
      <id>postgres93</id>
      <properties>
        <database.type>postgres</database.type>
        <glassfish.transactions.noxa>true</glassfish.transactions.noxa>
        <jboss.datasource.filename>postgres-ds.xml</jboss.datasource.filename>
        <database.host>${env.postgres93.database.host}</database.host>
        <database.name>${env.postgres93.database.name}</database.name>
        <database.user>${env.postgres93.database.user}</database.user>
        <database.password>${env.postgres93.database.password}</database.password>
        <database.driver>org.postgresql.Driver</database.driver>
        <database.datasource.class>org.postgresql.ds.PGSimpleDataSource</database.datasource.class>
        <database.port>${env.postgres93.database.port}</database.port>
        <database.url>jdbc:postgresql://${database.host}:${database.port}/${database.name}</database.url>
      </properties>
    </profile>

    <profile>
      <id>postgres93-xa</id>
      <properties>
        <database.type>postgres</database.type>
        <glassfish.transactions.noxa>false</glassfish.transactions.noxa>
        <jboss.datasource.filename>postgres-xa-ds.xml</jboss.datasource.filename>
        <database.host>${env.postgres93.database.host}</database.host>
        <database.name>${env.postgres93.database.name}</database.name>
        <database.user>${env.postgres93.database.user}</database.user>
        <database.password>${env.postgres93.database.password}</database.password>
        <database.driver>org.postgresql.Driver</database.driver>
        <database.datasource.class>org.postgresql.xa.PGXADataSource</database.datasource.class>
        <database.datasource.class.type>${database.datasource.class.type.xa}</database.datasource.class.type>
        <database.port>${env.postgres93.database.port}</database.port>
        <database.url>jdbc:postgresql://${database.host}:${database.port}/${database.name}</database.url>
      </properties>
    </profile>
    
    <profile>
      <id>mysql</id>
      <properties>
        <database.type>mysql</database.type>
        <glassfish.transactions.noxa>true</glassfish.transactions.noxa>
        <jboss.datasource.filename>mysql-ds.xml</jboss.datasource.filename>
        <database.host>${env.mysql.database.host}</database.host>
        <database.name>${env.mysql.database.name}</database.name>
        <database.user>${env.mysql.database.user}</database.user>
        <database.password>${env.mysql.database.password}</database.password>
        <database.driver>com.mysql.jdbc.Driver</database.driver>
        <database.datasource.class>com.mysql.jdbc.jdbc2.optional.MysqlDataSource</database.datasource.class>
        <database.port>${env.mysql.database.port}</database.port>
        <database.url>jdbc:mysql://${database.host}:${database.port}/${database.name}</database.url>
      </properties>
    </profile>
    
    <profile>
      <id>mysql-xa</id>
      <properties>
        <database.type>mysql</database.type>
        <glassfish.transactions.noxa>false</glassfish.transactions.noxa>
        <jboss.datasource.filename>mysql-xa-ds.xml</jboss.datasource.filename>
        <database.host>${env.mysql.database.host}</database.host>
        <database.name>${env.mysql.database.name}</database.name>
        <database.user>${env.mysql.database.user}</database.user>
        <database.password>${env.mysql.database.password}</database.password>
        <database.driver>com.mysql.jdbc.Driver</database.driver>
        <database.datasource.class>com.mysql.jdbc.jdbc2.optional.MysqlXADataSource</database.datasource.class>
        <database.datasource.class.type>${database.datasource.class.type.xa}</database.datasource.class.type>
        <database.port>${env.mysql.database.port}</database.port>
        <database.url>jdbc:mysql://${database.host}:${database.port}/${database.name}</database.url>
      </properties>
    </profile>
           	
  </profiles>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.camunda.bpm.qa.upgrade</groupId>
  <artifactId>camunda-qa-db-instance-migration</artifactId>

  <packaging>pom</packaging>
  <name>camunda BPM - QA - upgrade - instance migration</name>

  <parent>
    <groupId>org.camunda.bpm.qa</groupId>
    <artifactId>camunda-qa</artifactId>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <modules>
    <module>test-fixture-70</module>
    <module>test-fixture-71</module>
  </modules>

  <profiles>
    <profile>
      <id>distro</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
    </profile>
    
    <profile>
      <id>oracle</id>
      <activation>
        <property>
          <name>database</name>
          <value>oracle</value>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>com.oracle.jdbc</groupId>
          <artifactId>ojdbc6</artifactId>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>oracle10g</id>
      <activation>
        <property>
          <name>database</name>
          <value>oracle10g</value>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>com.oracle.jdbc</groupId>
          <artifactId>ojdbc14</artifactId>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>db2</id>
      <activation>
        <property>
          <name>database</name>
          <value>db2</value>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>com.ibm.db2.jcc</groupId>
          <artifactId>db2jcc4</artifactId>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>mssql</id>
      <activation>
        <property>
          <name>database</name>
          <value>mssql</value>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>com.microsoft.sqlserver</groupId>
          <artifactId>sqljdbc4</artifactId>
        </dependency>
      </dependencies>
    </profile>
    
    <profile>
      <id>mssql12</id>
      <activation>
        <property>
          <name>database</name>
          <value>mssql12</value>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>com.microsoft.sqlserver</groupId>
          <artifactId>sqljdbc4</artifactId>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>mysql</id>
      <activation>
        <property>
          <name>database</name>
          <value>mysql</value>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>mysql</groupId>
          <artifactId>mysql-connector-java</artifactId>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>postgres</id>
      <activation>
        <property>
          <name>database</name>
          <value>postgres</value>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.postgresql</groupId>
          <artifactId>postgresql</artifactId>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>postgres93</id>
      <activation>
        <property>
          <name>database</name>
          <value>postgres93</value>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.postgresql</groupId>
          <artifactId>postgresql</artifactId>
        </dependency>
      </dependencies>
    </profile>

  </profiles>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>camunda-qa-upgrade-test-fixture-70</artifactId>
  <packaging>jar</packaging>

  <parent>
    <groupId>org.camunda.bpm.qa.upgrade</groupId>
    <artifactId>camunda-qa-db-instance-migration</artifactId>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <name>camunda BPM - QA - upgrade - instance migration - 70 test fixture</name>

  <dependencies>
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine</artifactId>
      <version>7.0.0-Final</version>
    </dependency>
  </dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>camunda-qa-upgrade-test-fixture-71</artifactId>

  <packaging>jar</packaging>

  <parent>
    <groupId>org.camunda.bpm.qa.upgrade</groupId>
    <artifactId>camunda-qa-db-instance-migration</artifactId>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <name>camunda BPM - QA - upgrade - instance migration - 71 test fixture</name>

  <properties>
    <mail.server.port>5025</mail.server.port>
  </properties>

  <dependencies>

    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm.qa.upgrade</groupId>
      <artifactId>camunda-qa-upgrade-test-fixture-70</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
    </dependency>

  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
      </testResource>
    </testResources>
  </build>

  <profiles>
    <profile>
      <id>distro</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <skipTests>true</skipTests>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>upgrade</id>
      <build>
        <plugins>

         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <includes>
                <include>**/*Test.java</include>
                <include>**/Test*.java</include>
              </includes>
            </configuration>
          </plugin> 

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
	          <skip>true</skip>
	        </configuration>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>

            <executions>
              <execution>
                <id>unpack-old-scripts</id>
                <phase>generate-test-resources</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.camunda.bpm.distro</groupId>
                      <artifactId>camunda-sql-scripts</artifactId>
                      <version>${project.version}</version>
                      <outputDirectory>${project.build.directory}/scripts-current</outputDirectory>
                      <overWrite>true</overWrite>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <configuration>
                <cleanupDaemonThreads>true</cleanupDaemonThreads>
            </configuration>
            <version>1.2.1</version>
            <executions>
              <execution>
                <id>Create 7.0 test fixture</id>
                <goals>
                  <goal>java</goal>
                </goals>
                <phase>process-test-classes</phase>
                <configuration>
                  <includeProjectDependencies>true</includeProjectDependencies>
                  <includePluginDependencies>true</includePluginDependencies>
                  <classpathScope>test</classpathScope>
                  <mainClass>org.camunda.bpm.qa.upgrade.TestFixture70</mainClass>
                </configuration>
              </execution>
              <execution>
                <id>Perform DB upgrade</id>
                <goals>
                  <goal>java</goal>
                </goals>
                <phase>process-test-classes</phase>
                <configuration>
                  <includeProjectDependencies>true</includeProjectDependencies>
                  <includePluginDependencies>false</includePluginDependencies>
                  <mainClass>org.camunda.bpm.engine.impl.db.DbSchemaExecuteFile</mainClass>
                  <classpathScope>test</classpathScope>
                  <arguments>
                    <argument>process-engine-config71.xml</argument>
                    <argument>${project.build.directory}/scripts-current/sql/upgrade/${database.type}_engine_7.0_to_7.1.sql</argument>
                  </arguments>
                </configuration>
              </execution>
             <execution>
                <id>Drop upgraded DB</id>
                <goals>
                  <goal>java</goal>
                </goals>
                <phase>post-integration-test</phase>
                <configuration>
                  <includeProjectDependencies>true</includeProjectDependencies>
                  <includePluginDependencies>false</includePluginDependencies>
                  <classpathScope>test</classpathScope>
                  <mainClass>org.camunda.bpm.qa.upgrade.DB71Dropper</mainClass>
                </configuration>
              </execution>
            </executions>
            <dependencies>
              <dependency>
                <groupId>org.camunda.bpm</groupId>
                <artifactId>camunda-engine</artifactId>
                <version>7.0.0-Final</version>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>    
  </profiles>


</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>camunda-qa-db-upgrade</artifactId>
  <packaging>jar</packaging>
  <name>camunda BPM - QA - upgrade - test</name>

  <parent>
    <groupId>org.camunda.bpm.qa</groupId>
    <artifactId>camunda-qa</artifactId>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <properties>
    <test.version.old>7.0.0-Final</test.version.old>
    <test.version.old.major>7.0</test.version.old.major>
    <test.version.current>${project.version}</test.version.current>
    <mail.server.port>5025</mail.server.port>
  </properties>

  <build>
    <testSourceDirectory>${project.build.directory}/engine-test-sources</testSourceDirectory>
    <testResources>
      <testResource>
        <directory>${project.build.directory}/engine-test-sources</directory>
        <excludes>
          <exclude>**/*.java</exclude>
          <exclude>camunda.cfg.xml</exclude>
        </excludes>
      </testResource>
      <testResource>
        <directory>config</directory>
        <filtering>true</filtering>
      </testResource>
    </testResources>
  </build>

  <profiles>
    <profile>
      <id>distro</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <skipTests>true</skipTests>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>71</id>
      <properties>
        <test.version.current>${project.version}</test.version.current>
        <test.version.current.major>7.1</test.version.current.major>
      </properties>
      <dependencies>
        <dependency>    
          <groupId>org.camunda.bpm.distro</groupId>
          <artifactId>camunda-sql-scripts</artifactId>
          <version>${test.version.current}</version>
        </dependency>

        <dependency>
          <groupId>org.camunda.bpm</groupId>
          <artifactId>camunda-engine</artifactId>
          <version>${test.version.current}</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>upgrade</id>
      <dependencies>
        <dependency>    
          <groupId>org.camunda.bpm.distro</groupId>
          <artifactId>camunda-sql-scripts</artifactId>
          <version>${test.version.current}</version>
        </dependency>

        <dependency>
          <groupId>org.camunda.bpm</groupId>
          <artifactId>camunda-engine</artifactId>
          <version>${test.version.current}</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>compile</id>
                <phase>generate-test-sources</phase>
                <configuration>
                  <target>

                    <!-- create the SQL scripts so that the files existi even if they do not exist in the distribution. (this can be the case if there are no db 
                      upgrades (yet) for a particular release ) -->

                    <mkdir dir="${project.build.directory}/scripts-current/sql/upgrade/"></mkdir>
                    <touch
                      file="${project.build.directory}/scripts-current/sql/upgrade/${database.type}_engine_${test.version.old.major}_to_${test.version.current.major}.sql" />
                    <touch
                      file="${project.build.directory}/scripts-current/sql/upgrade/${database.type}_identity_${test.version.old.major}_to_${test.version.current.major}.sql" />

                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>

            <executions>
              <execution>
                <id>unpack-engine-tests</id>
                <phase>generate-test-sources</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.camunda.bpm</groupId>
                      <artifactId>camunda-engine</artifactId>
                      <version>${test.version.current}</version>
                      <type>test-jar</type>
                      <outputDirectory>${project.build.directory}/test-classes</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
              <execution>
                <id>unpack-old-scripts</id>
                <phase>generate-test-resources</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.camunda.bpm.distro</groupId>
                      <artifactId>camunda-sql-scripts</artifactId>
                      <version>${test.version.old}</version>
                      <outputDirectory>${project.build.directory}/scripts-old</outputDirectory>
                      <overWrite>true</overWrite>
                    </artifactItem>
                    <artifactItem>
                      <groupId>org.camunda.bpm.distro</groupId>
                      <artifactId>camunda-sql-scripts</artifactId>
                      <version>${test.version.current}</version>
                      <outputDirectory>${project.build.directory}/scripts-current</outputDirectory>
                      <overWrite>true</overWrite>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>sql-maven-plugin</artifactId>
            <dependencies>
              <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${version.mysql}</version>
              </dependency>
              <dependency>
                <groupId>com.oracle.jdbc</groupId>
                <artifactId>ojdbc6</artifactId>
                <version>${version.oracle11g}</version>
              </dependency>
              <dependency>
                <groupId>com.oracle.jdbc</groupId>
                <artifactId>ojdbc14</artifactId>
                <version>${version.oracle10g}</version>
              </dependency>
              <dependency>
                <groupId>com.ibm.db2.jcc</groupId>
                <artifactId>db2jcc4</artifactId>
                <version>${version.db2.97}</version>
              </dependency>
              <dependency>
                <groupId>com.microsoft.sqlserver</groupId>
                <artifactId>sqljdbc4</artifactId>
                <version>${version.mssql}</version>
              </dependency>
              <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${version.postgre}</version>
              </dependency>
              <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${version.h2}</version>
              </dependency>
            </dependencies>
            <configuration>
              <driver>${database.driver}</driver>
              <url>${database.url}</url>
              <username>${database.user}</username>
              <password>${database.password}</password>
            </configuration>
            <executions>
              <execution>
                <id>drop-db-if-present</id>
                <phase>generate-test-resources</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <srcFiles>
                    <!-- first: try dropping the DB -->
                    <srcFile>${project.build.directory}/scripts-current/sql/drop/${database.type}_engine_${test.version.current}.sql</srcFile>
                    <srcFile>${project.build.directory}/scripts-current/sql/drop/${database.type}_identity_${test.version.current}.sql</srcFile>
                  </srcFiles>
                  <autocommit>true</autocommit>
                  <onError>continue</onError>
                </configuration>
              </execution>
              <execution>
                <id>create-old-schema</id>
                <phase>generate-test-resources</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <srcFiles>
                    <!-- now create old version of the schema -->
                    <srcFile>${project.build.directory}/scripts-old/sql/create/${database.type}_engine_${test.version.old}.sql</srcFile>
                    <srcFile>${project.build.directory}/scripts-old/sql/create/${database.type}_identity_${test.version.old}.sql</srcFile>
                  </srcFiles>
                </configuration>
              </execution>
              <execution>
                <id>upgrade-db</id>
                <phase>generate-test-resources</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <srcFiles>
                    <!-- now perform the schema migrations -->
                    <srcFile>${project.build.directory}/scripts-current/sql/upgrade/${database.type}_engine_${test.version.old.major}_to_${test.version.current.major}.sql</srcFile>
                    <srcFile>${project.build.directory}/scripts-current/sql/upgrade/${database.type}_identity_${test.version.old.major}_to_${test.version.current.major}.sql</srcFile>
                  </srcFiles>
                </configuration>
              </execution>
              <execution>
                <id>drop-db</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <srcFiles>
                    <!-- finally drop db -->
                    <srcFile>${project.build.directory}/scripts-current/sql/drop/${database.type}_engine_${test.version.current}.sql</srcFile>
                    <srcFile>${project.build.directory}/scripts-current/sql/drop/${database.type}_identity_${test.version.current}.sql</srcFile>
                  </srcFiles>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <excludes>
                <exclude>**/*TestCase.java</exclude>

                <exclude>**/ClassPathScannerTest.java</exclude>
                <exclude>**/MultipleClasspathRootsClassPathScannerTest.java</exclude>

                <exclude>**/WSDLImporterTest.java</exclude> <!-- http://jira.codehaus.org/browse/ACT-315 -->
                <exclude>**/JobExecutorTest.java</exclude> <!-- http://jira.codehaus.org/browse/ACT-427 -->
                <exclude>**/HistoricTaskInstanceUpdateTest.java</exclude> <!-- http://jira.codehaus.org/browse/ACT-485 -->
                <exclude>**/RepeatingServiceTaskTest.java</exclude>

                <exclude>**/ProcessDiagramRetrievalTest.java</exclude>
                <!--exclude>**/ManagementServiceTest.java</exclude -->
              </excludes>
              <testFailureIgnore>false</testFailureIgnore>
              <redirectTestOutputToFile>true</redirectTestOutputToFile>
            </configuration>
          </plugin>

        </plugins>
      </build>
    </profile>
  </profiles>

  <dependencies>

    <dependency>
      <groupId>com.fasterxml.uuid</groupId>
      <artifactId>java-uuid-generator</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.openjpa</groupId>
      <artifactId>openjpa</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.subethamail</groupId>
      <artifactId>subethasmtp-wiser</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy</artifactId>
    </dependency>

    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.oracle.jdbc</groupId>
      <artifactId>ojdbc6</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.oracle.jdbc</groupId>
      <artifactId>ojdbc14</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.ibm.db2.jcc</groupId>
      <artifactId>db2jcc4</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.microsoft.sqlserver</groupId>
      <artifactId>sqljdbc4</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>camunda-qa-tomcat-runtime</artifactId>
  <packaging>pom</packaging>

  <name>camunda BPM - QA Tomcat Test Runtime</name>  

  <parent>
    <groupId>org.camunda.bpm.qa</groupId>
    <artifactId>camunda-qa</artifactId>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <dependencies>
    <dependency>
      <!-- make sure it comes after assembly in the build -->
      <groupId>org.camunda.bpm.tomcat</groupId>
      <artifactId>camunda-tomcat-assembly</artifactId>
      <version>${project.version}</version>
      <type>pom</type>
      <scope>test</scope>
    </dependency>   
    
    <!-- database dependencies -->
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.oracle.jdbc</groupId>
      <artifactId>ojdbc6</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.oracle.jdbc</groupId>
      <artifactId>ojdbc14</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.ibm.db2.jcc</groupId>
      <artifactId>db2jcc4</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.microsoft.sqlserver</groupId>
      <artifactId>sqljdbc4</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>runtime</scope>
    </dependency>
    
  </dependencies>

  <profiles>
    <profile>
      <id>tomcat</id>
      <build>
        <resources>
          <resource>
            <directory>src/main</directory>
            <filtering>true</filtering>
          </resource>
        </resources>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-server</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <inherited>false</inherited>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.camunda.bpm.tomcat</groupId>
                      <artifactId>camunda-tomcat-assembly</artifactId>
                      <version>${project.version}</version>
                      <type>tar.gz</type>
                      <overWrite>true</overWrite>                    
                      <outputDirectory>target/</outputDirectory>
                    </artifactItem>
                  </artifactItems>                
                </configuration>
              </execution>
              <execution>
                <id>copy-libs</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>copy-dependencies</goal>
                </goals>
                <inherited>false</inherited>
                <configuration>
                  <includeScope>runtime</includeScope>
                  <outputDirectory>target/server/apache-tomcat-${version.tomcat}/lib</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>          
          <!-- copy filtered configuration resources -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <configuration>
              <delimiters>
                <delimiter>${*}</delimiter>          
              </delimiters>
              <useDefaultDelimiters>false</useDefaultDelimiters>
            </configuration>
            <executions>
              <execution>
                <id>copy-resources</id>
                <phase>package</phase>
                <goals>
                  <goal>resources</goal>
                </goals>
                <configuration>
                  <overwrite>true</overwrite>
                  <outputDirectory>target/server/apache-tomcat-${version.tomcat}</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.camunda.bpm.webapp</groupId>
    <artifactId>camunda-webapp-root</artifactId>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <groupId>org.camunda.bpm.webapp</groupId>
  <artifactId>camunda-webapp-core</artifactId>
  <packaging>jar</packaging>
  <name>camunda BPM - webapp - core</name>

  <dependencies>

    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine-rest</artifactId>
      <classifier>classes</classifier>
    </dependency>

    <dependency>
      <groupId>org.jboss.spec</groupId>
      <artifactId>jboss-javaee-6.0</artifactId>
      <type>pom</type>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- tests -->
    <dependency>
      <groupId>org.easytesting</groupId>
      <artifactId>fest-assert</artifactId>
      <version>1.4</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.shrinkwrap.resolver</groupId>
      <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- arquillian tests -->
    <dependency>
      <groupId>org.jboss.arquillian.junit</groupId>
      <artifactId>arquillian-junit-container</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.arquillian.container</groupId>
      <artifactId>arquillian-container-spi</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-client</artifactId>
      <version>1.17</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <id>distro</id>
      <!-- disable tests during distro build -->
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <skipTests>true</skipTests>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>add-test-source</id>
                <goals>
                  <goal>add-test-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>src/test/java-tomcat</source>
                  </sources>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>tomcat</id>

      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>

      <dependencies>
        <dependency>
          <groupId>org.jboss.arquillian.container</groupId>
          <artifactId>arquillian-tomcat-embedded-7</artifactId>
          <version>1.0.0.CR5</version>
          <scope>test</scope>
        </dependency>

        <dependency>
          <groupId>org.apache.tomcat.embed</groupId>
          <artifactId>tomcat-embed-core</artifactId>
          <version>${version.tomcat}</version>
          <scope>provided</scope>
        </dependency>

        <dependency>
          <groupId>org.apache.tomcat.embed</groupId>
          <artifactId>tomcat-embed-jasper</artifactId>
          <version>${version.tomcat}</version>
          <scope>provided</scope>
        </dependency>

        <!-- Provided scoped dependencies for embedded container -->
        <dependency>
          <groupId>org.apache.tomcat</groupId>
          <artifactId>tomcat-catalina</artifactId>
          <version>${version.tomcat}</version>
          <scope>provided</scope>
        </dependency>

        <dependency>
          <groupId>org.apache.tomcat</groupId>
          <artifactId>tomcat-coyote</artifactId>
          <version>${version.tomcat}</version>
          <scope>provided</scope>
        </dependency>

        <dependency>
          <groupId>org.apache.tomcat</groupId>
          <artifactId>tomcat-jasper</artifactId>
          <version>${version.tomcat}</version>
          <scope>provided</scope>
        </dependency>

        <dependency>
          <groupId>javax.servlet</groupId>
          <artifactId>servlet-api</artifactId>
          <scope>provided</scope>
        </dependency>

        <dependency>
          <groupId>org.jboss.resteasy</groupId>
          <artifactId>resteasy-jaxrs</artifactId>
          <scope>test</scope>
          <exclusions>
            <exclusion>
              <artifactId>commons-httpclient</artifactId>
              <groupId>commons-httpclient</groupId>
            </exclusion>
          </exclusions>
        </dependency>
      </dependencies>

      <build>
        <resources>
          <resource>
            <directory>src/test/resources-tomcat</directory>
            <filtering>true</filtering>
          </resource>
        </resources>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>add-test-source</id>
                <goals>
                  <goal>add-test-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>src/test/java-tomcat</source>
                  </sources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <redirectTestOutputToFile>true</redirectTestOutputToFile>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>camunda-webapp-root</artifactId>
    <groupId>org.camunda.bpm.webapp</groupId>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <modelVersion>4.0.0</modelVersion>
  <name>camunda BPM - webapp - Glassfish Standalone</name>
  <artifactId>camunda-webapp-glassfish-standalone</artifactId>
  <packaging>war</packaging>

  <dependencies>
    <dependency>
      <groupId>org.camunda.bpm.webapp</groupId>
      <artifactId>camunda-webapp-glassfish</artifactId>
      <version>${project.version}</version>
      <type>war</type>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine-spring</artifactId>
    </dependency>
    <dependency>
      <groupId>org.camunda.bpm.identity</groupId>
      <artifactId>camunda-identity-ldap</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.uuid</groupId>
      <artifactId>java-uuid-generator</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.camunda.bpm.webapp</groupId>
                  <artifactId>camunda-webapp-glassfish</artifactId>
                  <version>${project.version}</version>
                  <type>war</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>target/camunda-webapp-glassfish-unpacked</outputDirectory>
                </artifactItem>
              </artifactItems>
              <includes>**/web.xml</includes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>filter-web-xml</id>
            <phase>prepare-package</phase>
            <configuration>
              <target>
                <replace dir="${project.build.directory}">
                  <include name="**/web.xml" />
                  <replacetoken><![CDATA[<!-- cockpit bootstrap listener -->]]></replacetoken>
                  <replacevalue><![CDATA[
<context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>/WEB-INF/applicationContext.xml</param-value>
  </context-param>

  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <!-- cockpit bootstrap listener -->]]></replacevalue>
                </replace>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <webResources>
            <resource>
              <directory>src/main/webapp/</directory>
            </resource>
            <resource>
              <directory>target/camunda-webapp-glassfish-unpacked/</directory>
            </resource>
          </webResources>
          <overlays>
            <overlay>
              <groupId>org.camunda.bpm.webapp</groupId>
              <artifactId>camunda-webapp-glassfish</artifactId>
              <excludes>
                <exclude>WEB-INF/web.xml</exclude>
              </excludes>
            </overlay>
          </overlays>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.camunda.bpm.webapp</groupId>
    <artifactId>camunda-webapp-root</artifactId>
    <version>7.2.0-SNAPSHOT</version>
  </parent>
  
  <artifactId>camunda-webapp-glassfish</artifactId>
  <packaging>war</packaging>
  <name>camunda BPM - webapp - Glassfish</name>
  
  <dependencies>
    <dependency>
      <groupId>org.camunda.bpm.webapp</groupId>
      <artifactId>camunda-webapp</artifactId>
      <version>${project.version}</version>
      <type>war</type>
      <scope>runtime</scope>
    </dependency>
  </dependencies>


  <build>
    <finalName>camunda-webapp</finalName>

    <resources>
      <resource>
        <directory>../webapp/src/main/runtime/glassfish/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <!-- Maven project version number -->
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
          </archive>
          <webResources>
            <resource>
              <directory>../webapp/src/main/runtime/glassfish/webapp</directory>
            </resource>
          </webResources>
        </configuration>
      </plugin>
    </plugins>
  </build>  
  
</project><?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>camunda-webapp-root</artifactId>
    <groupId>org.camunda.bpm.webapp</groupId>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <modelVersion>4.0.0</modelVersion>
  <name>camunda BPM - webapp - JBoss Standalone</name>
  <artifactId>camunda-webapp-jboss-standalone</artifactId>
  <packaging>war</packaging>

  <dependencies>
    <dependency>
      <groupId>org.camunda.bpm.webapp</groupId>
      <artifactId>camunda-webapp-jboss</artifactId>
      <version>${project.version}</version>
      <type>war</type>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine-spring</artifactId>
    </dependency>
    <dependency>
      <groupId>org.camunda.bpm.identity</groupId>
      <artifactId>camunda-identity-ldap</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.uuid</groupId>
      <artifactId>java-uuid-generator</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.camunda.bpm.webapp</groupId>
                  <artifactId>camunda-webapp-jboss</artifactId>
                  <version>${project.version}</version>
                  <type>war</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>target/camunda-webapp-jboss-unpacked</outputDirectory>
                </artifactItem>
              </artifactItems>
              <includes>**/web.xml</includes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>filter-web-xml</id>
            <phase>prepare-package</phase>
            <configuration>
              <target>
                <replace dir="${project.build.directory}">
                  <include name="**/web.xml" />
                  <replacetoken><![CDATA[<!-- cockpit bootstrap listener -->]]></replacetoken>
                  <replacevalue><![CDATA[
<context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>/WEB-INF/applicationContext.xml</param-value>
  </context-param>

  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <!-- cockpit bootstrap listener -->]]></replacevalue>
                </replace>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <webResources>
            <resource>
              <directory>src/main/webapp/</directory>
            </resource>
            <resource>
              <directory>target/camunda-webapp-jboss-unpacked/</directory>
            </resource>
          </webResources>
          <overlays>
            <overlay>
              <groupId>org.camunda.bpm.webapp</groupId>
              <artifactId>camunda-webapp-jboss</artifactId>
              <excludes>
                <exclude>WEB-INF/web.xml</exclude>
              </excludes>
            </overlay>
          </overlays>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>camunda-webapp-root</artifactId>
    <groupId>org.camunda.bpm.webapp</groupId>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <modelVersion>4.0.0</modelVersion>
  <name>camunda BPM - webapp - JBoss</name>
  <artifactId>camunda-webapp-jboss</artifactId>
  <packaging>war</packaging>

  <dependencies>
    <dependency>
      <groupId>org.camunda.bpm.webapp</groupId>
      <artifactId>camunda-webapp</artifactId>
      <version>${project.version}</version>
      <type>war</type>
      <scope>runtime</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>camunda-webapp</finalName>

    <resources>
      <resource>
        <directory>../webapp/src/main/runtime/jboss/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <!-- Maven project version number -->
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
            <manifestEntries>
              <!-- module dependencies for deployment on AS 7 -->
              <Dependencies>org.camunda.bpm.camunda-engine</Dependencies>
            </manifestEntries>
          </archive>
          <webResources>
            <resource>
              <directory>../webapp/src/main/runtime/jboss/webapp</directory>
            </resource>
          </webResources>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project><?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.camunda.bpm.webapp</groupId>
  <artifactId>camunda-webapp-root</artifactId>
  <packaging>pom</packaging>
  <name>camunda BPM - webapp - root</name>

  <parent>
    <groupId>org.camunda.bpm</groupId>
    <artifactId>camunda-parent</artifactId>
    <relativePath>../../parent</relativePath>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <profiles>
    <profile>
      <id>distro</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <modules>

        <module>core</module>
        <module>webapp</module>
        <module>test-utility</module>

      </modules>
    </profile>

    <profile>
      <id>distro-ce</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <modules>

        <module>jboss</module>
        <module>jboss-standalone</module>
        <module>tomcat</module>
        <module>tomcat-standalone</module>
        <module>glassfish</module>
        <module>glassfish-standalone</module>

      </modules>
    </profile>
  </profiles>

  <properties>
    <tomcat6.connector.http.port>48080</tomcat6.connector.http.port>
    <tomcat6.connector.http.redirectPort>48443</tomcat6.connector.http.redirectPort>
    <tomcat6.connector.ajp.port>48009</tomcat6.connector.ajp.port>
    <tomcat6.connector.ajp.redirectPort>48443</tomcat6.connector.ajp.redirectPort>
    <tomcat6.server.port>48005</tomcat6.server.port>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.camunda.bpm.webapp</groupId>
        <artifactId>camunda-webapp-core</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.camunda.bpm</groupId>
        <artifactId>camunda-engine-rest</artifactId>
        <classifier>classes</classifier>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.camunda.bpm</groupId>
        <artifactId>camunda-engine-rest</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.arquillian</groupId>
        <artifactId>arquillian-bom</artifactId>
        <version>1.0.3.Final</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
      </dependencies>
  </dependencyManagement>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  
  <parent>
    <groupId>org.camunda.bpm.webapp</groupId>
    <artifactId>camunda-webapp-root</artifactId>
    <version>7.2.0-SNAPSHOT</version>
    <relativePath>../</relativePath>
  </parent>
  
  <artifactId>camunda-webapp-test-utility</artifactId>
  <name>camunda BPM - webapp - test-utility</name>
  
  <dependencies>
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine</artifactId>
      <scope>provided</scope>
    </dependency>
  </dependencies>
  
</project><?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>camunda-webapp-root</artifactId>
    <groupId>org.camunda.bpm.webapp</groupId>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <modelVersion>4.0.0</modelVersion>
  <name>camunda BPM - webapp - Tomcat Standalone</name>
  <artifactId>camunda-webapp-tomcat-standalone</artifactId>
  <packaging>war</packaging>

  <dependencies>
    <dependency>
      <groupId>org.camunda.bpm.webapp</groupId>
      <artifactId>camunda-webapp-tomcat</artifactId>
      <version>${project.version}</version>
      <type>war</type>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine-spring</artifactId>
    </dependency>
    <dependency>
      <groupId>org.camunda.bpm.identity</groupId>
      <artifactId>camunda-identity-ldap</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.uuid</groupId>
      <artifactId>java-uuid-generator</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.camunda.bpm.webapp</groupId>
                  <artifactId>camunda-webapp-tomcat</artifactId>
                  <version>${project.version}</version>
                  <type>war</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>target/camunda-webapp-tomcat-unpacked</outputDirectory>
                </artifactItem>
              </artifactItems>
              <includes>**/web.xml</includes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>filter-web-xml</id>
            <phase>prepare-package</phase>
            <configuration>
              <target>
                <replace dir="${project.build.directory}">
                  <include name="**/web.xml" />
                  <replacetoken><![CDATA[<!-- cockpit bootstrap listener -->]]></replacetoken>
                  <replacevalue><![CDATA[
<context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>/WEB-INF/applicationContext.xml</param-value>
  </context-param>

  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <!-- cockpit bootstrap listener -->]]></replacevalue>
                </replace>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <webResources>
            <resource>
              <directory>src/main/webapp/</directory>
            </resource>
            <resource>
              <directory>target/camunda-webapp-tomcat-unpacked/</directory>
            </resource>
          </webResources>
          <overlays>
            <overlay>
              <groupId>org.camunda.bpm.webapp</groupId>
              <artifactId>camunda-webapp-tomcat</artifactId>
              <excludes>
                <exclude>WEB-INF/web.xml</exclude>
              </excludes>
            </overlay>
          </overlays>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>camunda-webapp-root</artifactId>
    <groupId>org.camunda.bpm.webapp</groupId>
    <version>7.2.0-SNAPSHOT</version>
  </parent>
  
  <modelVersion>4.0.0</modelVersion>
  <name>camunda BPM - webapp - Tomcat</name>
  <artifactId>camunda-webapp-tomcat</artifactId>
  <packaging>war</packaging>

  <dependencies>
    <dependency>
      <groupId>org.camunda.bpm.webapp</groupId>
      <artifactId>camunda-webapp</artifactId>
      <version>${project.version}</version>
      <type>war</type>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jaxrs</artifactId>
    </dependency>
  </dependencies>

  <build>
    <finalName>camunda-webapp</finalName>

    <resources>
      <resource>
        <directory>../webapp/src/main/runtime/tomcat/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <webResources>
            <resource>
              <directory>../webapp/src/main/runtime/tomcat/webapp</directory>
            </resource>
          </webResources>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project><?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.camunda.bpm.webapp</groupId>
    <artifactId>camunda-webapp-root</artifactId>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <artifactId>camunda-webapp</artifactId>
  <groupId>org.camunda.bpm.webapp</groupId>
  <packaging>war</packaging>
  <name>camunda BPM - webapp - app</name>

  <properties>
    <web.resources.override>src/main/runtime/default/webapp</web.resources.override>
    <java.resources.override>src/main/runtime/default/resources</java.resources.override>
    <properties.override>src/main/runtime/default/config.properties</properties.override>

    <exec.shell>bash</exec.shell>
    <exec.arg>-c</exec.arg>

    <grunt.target>development</grunt.target>
  </properties>

  <dependencies>

    <dependency>
      <groupId>org.camunda.bpm.webapp</groupId>
      <artifactId>camunda-webapp-core</artifactId>
    </dependency>

    <!-- jee spec -->
    <dependency>
      <groupId>org.jboss.spec</groupId>
      <artifactId>jboss-javaee-6.0</artifactId>
      <type>pom</type>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- rest api -->
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine-rest</artifactId>
      <classifier>classes</classifier>
    </dependency>

    <!-- tests -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.uuid</groupId>
      <artifactId>java-uuid-generator</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.easytesting</groupId>
      <artifactId>fest-assert</artifactId>
      <version>1.4</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm.webapp</groupId>
      <artifactId>camunda-webapp-test-utility</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.shrinkwrap.resolver</groupId>
      <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- arquillian tests -->
    <dependency>
      <groupId>org.jboss.arquillian.junit</groupId>
      <artifactId>arquillian-junit-container</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-client</artifactId>
      <version>1.17</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <finalName>camunda-webapp</finalName>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
      <resource>
        <directory>${java.resources.override}</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <plugins>
      <!-- using grunt to build front-end resources -->
      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <version>0.0.12</version>

        <executions>
          <!-- install node automagically -->
          <execution>
            <id>front-end-setup</id>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>
            <configuration>
              <nodeVersion>v0.10.18</nodeVersion>
              <npmVersion>1.3.8</npmVersion>
            </configuration>
          </execution>
          
          <!-- install package dependencies -->
          <execution>
            <id>front-end-npm-install</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>install</arguments>
            </configuration>
          </execution>
          
          <!-- build front-end resources -->
          <execution>
            <id>front-end-grunt-build</id>
            <goals>
              <goal>grunt</goal>
            </goals>
            <phase>generate-resources</phase>
            <configuration>
              <arguments>build:dist</arguments>
            </configuration>
          </execution>

          <!-- test front-end resources -->
          <execution>
            <id>front-end-grunt-test</id>
            <goals>
              <goal>grunt</goal>
            </goals>
            <phase>test</phase>
            <configuration>
              <arguments>test</arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <webResources>
            <resource>
              <filtering>true</filtering>
              <directory>${web.resources.override}</directory>
            </resource>
            <resource>
              <filtering>true</filtering>
              <directory>target/webapp</directory>
              <!-- no filtering for favicon because linux destroys images through carriage return -->
              <excludes>
                <exclude>assets/img/favicon.ico</exclude>
              </excludes>
            </resource>
          </webResources>
          <archive>
            <manifest>
              <!-- Maven project version number -->
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
          </archive>
          <!-- exclude development resources (task forms etc.) -->
          <packagingExcludes>
            develop/**
          </packagingExcludes>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <failIfNoTests>false</failIfNoTests>
          <trimStackTrace>false</trimStackTrace>
          <redirectTestOutputToFile>true</redirectTestOutputToFile>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <id>create-jar</id>
            <goals>
              <goal>jar</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <classifier>classes</classifier>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>distro</id>
      <properties>
        <grunt.target>production</grunt.target>
      </properties>
    </profile>
    <profile>
      <activation>
        <os>
          <family>Windows</family>
        </os>
      </activation>
      <properties>
        <exec.shell>cmd</exec.shell>
        <exec.arg>/c</exec.arg>
      </properties>
    </profile>
    <profile>
      <id>tomcat</id>
      <dependencies>
        <dependency>
          <groupId>org.jboss.resteasy</groupId>
          <artifactId>resteasy-jaxrs</artifactId>
          <scope>runtime</scope>
        </dependency>
      </dependencies>
      <properties>
        <web.resources.override>src/main/runtime/tomcat/webapp</web.resources.override>
        <java.resources.override>src/main/runtime/tomcat/resources</java.resources.override>
      </properties>
    </profile>

    <profile>
      <id>jboss</id>
      <dependencies>
        <dependency>
          <groupId>org.jboss.resteasy</groupId>
          <artifactId>resteasy-jaxrs</artifactId>
          <scope>provided</scope>
        </dependency>
      </dependencies>
      <properties>
        <web.resources.override>src/main/runtime/jboss/webapp</web.resources.override>
        <java.resources.override>src/main/runtime/jboss/resources</java.resources.override>
      </properties>

      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <configuration>
              <archive>
                <manifest>
                  <!-- Maven project version number -->
                  <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                </manifest>
                <manifestEntries>
                  <!-- module dependencies for deployment on AS 7 -->
                  <Dependencies>org.camunda.bpm.camunda-engine</Dependencies>
                </manifestEntries>
              </archive>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>develop</id>
      <dependencies>
        <dependency>
          <groupId>org.jboss.resteasy</groupId>
          <artifactId>resteasy-jaxrs</artifactId>
          <scope>runtime</scope>
        </dependency>
        <dependency>
          <groupId>org.camunda.bpm</groupId>
          <artifactId>camunda-engine</artifactId>
        </dependency>
        <dependency>
          <groupId>org.camunda.bpm.identity</groupId>
          <artifactId>camunda-identity-ldap</artifactId>
          <version>${project.version}</version>
        </dependency>
        <dependency>
          <groupId>com.h2database</groupId>
          <artifactId>h2</artifactId>
        </dependency>
        <dependency>
          <groupId>com.fasterxml.uuid</groupId>
          <artifactId>java-uuid-generator</artifactId>
        </dependency>
        
        <dependency>
          <groupId>org.apache.tomcat</groupId>
          <artifactId>tomcat-jdbc</artifactId>
          <version>7.0.33</version>
        </dependency>
    
        <dependency>
          <groupId>org.apache.tomcat</groupId>
          <artifactId>tomcat-juli</artifactId>
          <version>7.0.33</version>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty-maven-plugin</artifactId>
            <version>8.1.14.v20131031</version>
            <configuration>
              <webAppSourceDirectory>${project.basedir}/target/webapp</webAppSourceDirectory>
              <webAppConfig>
                <contextPath>/camunda</contextPath>
                <defaultsDescriptor>${project.basedir}/src/main/runtime/develop/jetty/webdefault.xml</defaultsDescriptor>
              </webAppConfig>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>add-sources</id>
                <goals>
                  <goal>add-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>src/main/runtime/develop/java</source>
                  </sources>
                </configuration>
              </execution>
              <execution>
                <id>add-resources</id>
                <goals>
                  <goal>add-resource</goal>
                </goals>
                <configuration>
                  <resources>
                    <resource>
                      <directory>src/main/runtime/develop/resources</directory>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <properties>
        <java.resources.override>src/main/runtime/develop/resources</java.resources.override>
      </properties>
    </profile>

    <!-- database QA profiles -->

    <profile>
      <id>database</id>

      <properties>
        <db.properties.file>${user.home}/.camunda/jdbc/cockpit.${database}.properties</db.properties.file>
      </properties>

      <activation>
        <property>
          <name>database</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <!--
              only worked with this version, there might be a bug with antrun
              see http://jira.codehaus.org/browse/MANTRUN-109
            -->
            <version>1.4</version>
            <executions>
              <execution>
                <id>database-test-create-schema</id>
                <phase>process-test-classes</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <tasks>
                    <echo message="updating activiti configuration to db ${database}" />
                    <copy file="target/test-classes/camunda.cfg.db.xml" tofile="target/test-classes/camunda.cfg.xml" overwrite="true">
                      <filterset filtersfile="${db.properties.file}" />
                    </copy>

                    <echo message="dropping schema in ${database}" />
                    <java classname="org.camunda.bpm.engine.impl.db.DbSchemaDrop" classpathref="maven.test.classpath" />
                  </tasks>
                </configuration>
              </execution>
              <execution>
                <id>database-test-drop-schema</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <tasks>
                    <echo message="dropping schema in ${database}" />
                    <java classname="org.camunda.bpm.engine.impl.db.DbSchemaDrop" classpathref="maven.test.classpath" />
                  </tasks>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>oracle</id>
      <activation>
        <property>
          <name>database</name>
          <value>oracle</value>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>com.oracle.jdbc</groupId>
          <artifactId>ojdbc6</artifactId>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>oracle10g</id>
      <activation>
        <property>
          <name>database</name>
          <value>oracle10g</value>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>com.oracle.jdbc</groupId>
          <artifactId>ojdbc14</artifactId>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>db2</id>
      <activation>
        <property>
          <name>database</name>
          <value>db2</value>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>com.ibm.db2.jcc</groupId>
          <artifactId>db2jcc4</artifactId>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>mssql</id>
        <activation>
          <property>
            <name>database</name>
            <value>mssql</value>
          </property>
        </activation>
        <dependencies>
          <dependency>
            <groupId>com.microsoft.sqlserver</groupId>
            <artifactId>sqljdbc4</artifactId>
            <scope>test</scope>
          </dependency>
       </dependencies>
    </profile>

    <profile>
      <id>mssql12</id>
        <activation>
          <property>
            <name>database</name>
            <value>mssql12</value>
          </property>
        </activation>
        <dependencies>
          <dependency>
            <groupId>com.microsoft.sqlserver</groupId>
            <artifactId>sqljdbc4</artifactId>
            <scope>test</scope>
          </dependency>
       </dependencies>
    </profile>

    <profile>
      <id>mysql</id>
        <activation>
          <property>
            <name>database</name>
            <value>mysql</value>
          </property>
        </activation>
        <dependencies>
          <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>test</scope>
          </dependency>
       </dependencies>
    </profile>

    <profile>
      <id>postgresql</id>
        <activation>
        <property>
          <name>database</name>
          <value>postgresql</value>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.postgresql</groupId>
          <artifactId>postgresql</artifactId>
          <scope>test</scope>
        </dependency>
       </dependencies>
    </profile>

    <profile>
      <id>postgresql93</id>
        <activation>
        <property>
          <name>database</name>
          <value>postgresql93</value>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.postgresql</groupId>
          <artifactId>postgresql</artifactId>
          <scope>test</scope>
        </dependency>
       </dependencies>
    </profile>

    <!-- profile for running cockpit testsuite with database table prefix -->
    <profile>
      <id>db-table-prefix</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <!--
              only worked with this version, there might be a bug with antrun
              see http://jira.codehaus.org/browse/MANTRUN-109
            -->
            <version>1.4</version>
            <executions>
              <execution>
                <id>database-test-create-schema</id>
                <phase>process-test-classes</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <tasks>
                    <copy file="target/test-classes/camunda.cfg.prefix.xml" tofile="target/test-classes/camunda.cfg.xml" overwrite="true" />
                  </tasks>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.camunda.bpm.cycle</groupId>
    <artifactId>camunda-cycle-root</artifactId>
    <version>7.2.0-SNAPSHOT</version>
  </parent>
  
  <artifactId>camunda-cycle-glassfish</artifactId>
  <packaging>war</packaging>
  <name>camunda BPM - cycle - Glassfish</name>
  
  <dependencies>
    <dependency>
      <groupId>org.camunda.bpm.cycle</groupId>
      <artifactId>camunda-cycle</artifactId>
      <version>${project.version}</version>
      <type>war</type>
      <scope>runtime</scope>
    </dependency>

    <!-- javax.persistence -->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-entitymanager</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.javassist</groupId>
          <artifactId>javassist</artifactId>        
        </exclusion>
      </exclusions>
    </dependency>
    
    <dependency>
      <groupId>cglib</groupId>
      <artifactId>cglib</artifactId>
    </dependency>
    
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcpg-jdk15on</artifactId>
    </dependency>    
    
    <dependency>
      <groupId>com.sun.jersey.contribs</groupId>
      <artifactId>jersey-spring</artifactId>
      <exclusions>
        <exclusion>
          <groupId>com.sun.jersey</groupId>
          <artifactId>jersey-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.sun.jersey</groupId>
          <artifactId>jersey-servlet</artifactId>
        </exclusion>
        <exclusion>
          <artifactId>asm</artifactId>
          <groupId>asm</groupId>
        </exclusion>        
        <exclusion>
          <artifactId>spring-core</artifactId>
          <groupId>org.springframework</groupId>
        </exclusion>
        <exclusion>
          <artifactId>spring-beans</artifactId>
          <groupId>org.springframework</groupId>
        </exclusion>
        <exclusion>
          <artifactId>spring-context</artifactId>
          <groupId>org.springframework</groupId>
        </exclusion>
        <exclusion>
          <artifactId>spring-web</artifactId>
          <groupId>org.springframework</groupId>
        </exclusion>
        <exclusion>
          <artifactId>spring-aop</artifactId>
          <groupId>org.springframework</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    
    <!-- nekohtml -->
    <dependency>
      <groupId>net.sourceforge.nekohtml</groupId>
      <artifactId>nekohtml</artifactId>
      <exclusions>
        <exclusion>
          <groupId>xml-apis</groupId>
          <artifactId>xml-apis</artifactId>          
        </exclusion>
      </exclusions>
    </dependency>
    
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
    </dependency>

  </dependencies>

  <build>
    <finalName>cycle</finalName>

    <resources>
      <resource>
        <directory>../cycle/src/main/runtime/glassfish/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <!-- Maven project version number -->
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
          </archive>
          <webResources>
            <resource>
              <directory>../cycle/src/main/runtime/glassfish/webapp</directory>
            </resource>
          </webResources>
        </configuration>
      </plugin>
    </plugins>
  </build>  
  
</project><?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>camunda-cycle-root</artifactId>
    <groupId>org.camunda.bpm.cycle</groupId>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <artifactId>camunda-cycle-httpclient</artifactId>
  <packaging>jar</packaging>
  <name>camunda BPM - cycle - httpclient</name>
  
  <dependencies>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>fluent-hc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpmime</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <artifactSet>
                <includes>
                  <include>org.apache.httpcomponents:httpclient</include>
                  <include>org.apache.httpcomponents:httpcore</include>
                  <include>org.apache.httpcomponents:httpmime</include>
                  <include>org.apache.httpcomponents:fluent-hc</include>
                </includes>
              </artifactSet>
              <relocations>
                <relocation>
                  <pattern>org.apache.http</pattern>
                  <shadedPattern>org.camunda.bpm.cycle.http</shadedPattern>
                </relocation>
              </relocations>
            </configuration>
          </execution>
        </executions>
      </plugin>      
    </plugins>
  </build>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.camunda.bpm.cycle</groupId>
    <artifactId>camunda-cycle-root</artifactId>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <artifactId>camunda-cycle-jboss</artifactId>
  <packaging>war</packaging>
  <name>camunda BPM - cycle - JBoss</name>

  <properties>
    <jboss.el.version>2.0.0.GA</jboss.el.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.camunda.bpm.cycle</groupId>
      <artifactId>camunda-cycle</artifactId>
      <version>${project.version}</version>
      <type>war</type>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>cglib</groupId>
      <artifactId>cglib</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jboss.spec</groupId>
      <artifactId>jboss-javaee-web-6.0</artifactId>
      <type>pom</type>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <artifactId>xalan</artifactId>
          <groupId>org.apache.xalan</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    
    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-json</artifactId>
    </dependency>
    <dependency>
      <groupId>com.sun.jersey.contribs</groupId>
      <artifactId>jersey-spring</artifactId>
      <exclusions>
        <exclusion>
          <artifactId>spring-core</artifactId>
          <groupId>org.springframework</groupId>
        </exclusion>
        <exclusion>
          <artifactId>spring-beans</artifactId>
          <groupId>org.springframework</groupId>
        </exclusion>
        <exclusion>
          <artifactId>spring-context</artifactId>
          <groupId>org.springframework</groupId>
        </exclusion>
        <exclusion>
          <artifactId>spring-web</artifactId>
          <groupId>org.springframework</groupId>
        </exclusion>
        <exclusion>
          <artifactId>spring-aop</artifactId>
          <groupId>org.springframework</groupId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>

  <build>
    <finalName>cycle</finalName>

    <resources>
      <resource>
        <directory>../cycle/src/main/runtime/jboss/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <filters>
      <filter>../cycle/src/main/runtime/jboss/config/database.properties</filter>
    </filters>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <!-- Maven project version number -->
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
            <manifestEntries>
              <Dependencies>org.hibernate,org.hibernate.envers,org.hibernate.validator,org.apache.xerces,org.apache.commons.io</Dependencies>
            </manifestEntries>
          </archive>
          <webResources>
            <resource>
              <directory>../cycle/src/main/runtime/jboss/webapp</directory>
            </resource>
          </webResources>
          <overlays>
            <overlay>
              <groupId>org.camunda.bpm.cycle</groupId>
              <artifactId>camunda-cycle</artifactId>
              <excludes>
                <exclude>**/persistence.xml</exclude>
              </excludes>
            </overlay>
          </overlays>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>camunda-cycle-root</artifactId>
    <groupId>org.camunda.bpm.cycle</groupId>
    <version>7.2.0-SNAPSHOT</version>
  </parent>
  
  <artifactId>camunda-cycle-sql-scripts</artifactId>
  <name>camunda BPM - cycle - SQL scripts</name>
  
  <dependencies>
    <dependency>
      <groupId>org.camunda.bpm.cycle</groupId>
      <artifactId>camunda-cycle</artifactId>
      <classifier>core</classifier>
      <version>${project.version}</version>
    </dependency>
    
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-entitymanager</artifactId>
      <exclusions>
        <exclusion>
          <artifactId>slf4j-api</artifactId>
          <groupId>org.slf4j</groupId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <id>create-sql-scripts</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <skip>true</skip>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.2.1</version>
            <executions>
              <execution>
                <id>generate-create-schema-ddl</id>
                <phase>process-classes</phase>
                <goals>
                  <goal>java</goal>
                </goals>
                <configuration>
                  <mainClass>org.camunda.bpm.cycle.SchemaExport</mainClass>
                  <arguments>
                    <argument>--create</argument>
                    <argument>--drop</argument>
                    <argument>--delimiter=;</argument>
                    <argument>--output=${project.basedir}/src/main/resources/sql/@folder@/@dbname@_cycle.sql</argument>
                    <argument>cyclePU</argument> <!-- persistence unit name in persistence.xml -->
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
        <pluginManagement>
          <plugins>
            <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
            <plugin>
              <groupId>org.eclipse.m2e</groupId>
              <artifactId>lifecycle-mapping</artifactId>
              <version>1.0.0</version>
              <configuration>
                <lifecycleMappingMetadata>
                  <pluginExecutions>
                    <pluginExecution>
                      <pluginExecutionFilter>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <versionRange>[1.2.1,)</versionRange>
                        <goals>
                          <goal>java</goal>
                        </goals>
                      </pluginExecutionFilter>
                      <action>
                        <ignore />
                      </action>
                    </pluginExecution>
                  </pluginExecutions>
                </lifecycleMappingMetadata>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
  </profiles>

</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.camunda.bpm.cycle</groupId>
    <artifactId>camunda-cycle-root</artifactId>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <artifactId>camunda-cycle-tomcat</artifactId>
  <packaging>war</packaging>
  <name>camunda BPM - cycle - Tomcat</name>

  <properties>
    <jboss.el.version>2.0.0.GA</jboss.el.version>
  </properties>

  <dependencies>
  
    <dependency>
      <groupId>org.camunda.bpm.cycle</groupId>
      <artifactId>camunda-cycle</artifactId>
      <version>${project.version}</version>
      <type>war</type>
      <scope>runtime</scope>
    </dependency>

	<!-- Java EE APIs not provided on tomcat -->
	<dependency>
	  <groupId>org.hibernate.javax.persistence</groupId>
	  <artifactId>hibernate-jpa-2.0-api</artifactId>
	</dependency>
	
	<dependency>
	  <groupId>org.glassfish</groupId>
	  <artifactId>javax.annotation</artifactId>
	</dependency>
	
	<dependency>
	  <groupId>javax.inject</groupId>
	  <artifactId>javax.inject</artifactId>
	  <version>1</version>
	</dependency>
	
	<dependency>
	  <groupId>org.hibernate</groupId>
	  <artifactId>hibernate-entitymanager</artifactId>
	</dependency>
	
	<dependency>
	  <groupId>cglib</groupId>
	  <artifactId>cglib</artifactId>
	</dependency>
	<!-- apache commons -->
	<dependency>
	  <groupId>commons-io</groupId>
	  <artifactId>commons-io</artifactId>
	</dependency>
	<!-- nekohtml -->
	<dependency>
	  <groupId>net.sourceforge.nekohtml</groupId>
	  <artifactId>nekohtml</artifactId>
	</dependency>   
	<dependency>
	  <groupId>com.sun.jersey</groupId>
	  <artifactId>jersey-json</artifactId>
	</dependency>
	<dependency>
	  <groupId>com.sun.jersey.contribs</groupId>
	  <artifactId>jersey-spring</artifactId>
	  <exclusions>
		<exclusion>
		  <artifactId>spring-core</artifactId>
		  <groupId>org.springframework</groupId>
		</exclusion>
		<exclusion>
		  <artifactId>spring-beans</artifactId>
		  <groupId>org.springframework</groupId>
		</exclusion>
		<exclusion>
		  <artifactId>spring-context</artifactId>
		  <groupId>org.springframework</groupId>
		</exclusion>
		<exclusion>
		  <artifactId>spring-web</artifactId>
		  <groupId>org.springframework</groupId>
		</exclusion>
		<exclusion>
		  <artifactId>spring-aop</artifactId>
		  <groupId>org.springframework</groupId>
		</exclusion>
		<exclusion>
		  <artifactId>asm</artifactId>
		  <groupId>asm</groupId>
		</exclusion>
	  </exclusions>
	</dependency>
		  
	<dependency>
	  <groupId>org.bouncycastle</groupId>
	  <artifactId>bcpg-jdk15on</artifactId>
	</dependency>

  </dependencies>

  <build>
    <finalName>cycle</finalName>
	
	<resources>
      <resource>
        <directory>../cycle/src/main/runtime/tomcat/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
	
	<filters>
      <filter>../cycle/src/main/runtime/tomcat/config/database.properties</filter>
    </filters>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <!-- Maven project version number -->
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
          </archive>
		  <webResources>
            <resource>
              <directory>../cycle/src/main/runtime/tomcat/webapp</directory>
            </resource>
          </webResources>
          <overlays>
            <overlay>
              <groupId>org.camunda.bpm.cycle</groupId>
              <artifactId>camunda-cycle</artifactId>
              <excludes>
                <exclude>**/cycle-persistence.xml</exclude>
              </excludes>
            </overlay>
          </overlays>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project><?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>camunda-cycle-root</artifactId>
    <groupId>org.camunda.bpm.cycle</groupId>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <artifactId>camunda-cycle</artifactId>
  <packaging>war</packaging>
  <name>camunda BPM - cycle - app</name>
  
  <properties>
    <web.resources.override>src/main/runtime/default/webapp</web.resources.override>
    <java.resources.override>src/main/runtime/default/resources</java.resources.override>
    <properties.override>src/main/runtime/default/config.properties</properties.override>
    <netbeans.hint.deploy.server>gfv3ee6</netbeans.hint.deploy.server>
  </properties>
  
  <dependencies>
    <!-- Spring Framework -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-orm</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aop</artifactId>
    </dependency>

    <!-- CGLIB for various things including @Transactional and spring-data-jpa -->
    <dependency>
      <groupId>cglib</groupId>
      <artifactId>cglib</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjrt</artifactId>
      <version>1.7.0</version>
    </dependency>
    
    <!-- libs needed for jax-rs stuff -->
    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-json</artifactId>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <artifactId>jaxb-api</artifactId>
          <groupId>javax.xml.bind</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.sun.jersey.contribs</groupId>
      <artifactId>jersey-spring</artifactId>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <artifactId>spring-core</artifactId>
          <groupId>org.springframework</groupId>
        </exclusion>
        <exclusion>
          <artifactId>spring-beans</artifactId>
          <groupId>org.springframework</groupId>
        </exclusion>
        <exclusion>
          <artifactId>spring-context</artifactId>
          <groupId>org.springframework</groupId>
        </exclusion>
        <exclusion>
          <artifactId>spring-web</artifactId>
          <groupId>org.springframework</groupId>
        </exclusion>
        <exclusion>
          <artifactId>spring-aop</artifactId>
          <groupId>org.springframework</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.glassfish</groupId>
      <artifactId>javax.annotation</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>javax.mail</groupId>
      <artifactId>mail</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <!-- apis -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.5</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <version>1</version>
      <scope>provided</scope>
    </dependency>

    <!-- jpa 2.0 api -->
    <dependency>
      <groupId>org.hibernate.javax.persistence</groupId>
      <artifactId>hibernate-jpa-2.0-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-jcl</artifactId>
      <version>1.6.6</version>
    </dependency>

    <!-- Thymeleaf -->
    <dependency>
      <groupId>org.thymeleaf</groupId>
      <artifactId>thymeleaf</artifactId>
      <version>2.0.12</version>
    </dependency>
    <dependency>
      <groupId>org.thymeleaf</groupId>
      <artifactId>thymeleaf-spring3</artifactId>
      <version>2.0.12</version>
    </dependency>
    <dependency>
      <groupId>net.sourceforge.nekohtml</groupId>
      <artifactId>nekohtml</artifactId>
      <exclusions>
        <exclusion>
          <artifactId>xercesImpl</artifactId>
          <groupId>xerces</groupId>
        </exclusion>
      </exclusions>      
    </dependency>
    <!-- required for i18n with GNU gettext -->
    <dependency>
      <groupId>org.xnap.commons</groupId>
      <artifactId>gettext-commons</artifactId>
      <version>0.9.6</version>
    </dependency>

    <!-- saxon for XSLT transformations (roundtrip) -->
    <dependency>
      <groupId>net.sourceforge.saxon</groupId>
      <artifactId>saxon</artifactId>
      <version>${version.saxon}</version>
    </dependency>
    <dependency>
      <groupId>net.sourceforge.saxon</groupId>
      <artifactId>saxon</artifactId>
      <version>${version.saxon}</version>
      <classifier>dom</classifier>
    </dependency>
    <dependency>
      <groupId>net.sourceforge.saxon</groupId>
      <artifactId>saxon</artifactId>
      <version>${version.saxon}</version>
      <classifier>xpath</classifier>
    </dependency>

    <!-- commons vfs for fs connector -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-vfs2</artifactId>
      <version>2.0</version>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- testing -->
    <dependency>
      <groupId>org.easytesting</groupId>
      <artifactId>fest-assert-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.kubek2k</groupId>
      <artifactId>springockito-annotations</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit-dep</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjweaver</artifactId>
      <version>1.7.0</version>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-entitymanager</artifactId>
      <scope>test</scope>
    </dependency>
    
    <!-- required for SignavioClient -->
    <dependency>
      <groupId>org.camunda.bpm.cycle</groupId>
      <artifactId>camunda-cycle-httpclient</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>1.6</version>
    </dependency>
    
    <!-- required for SignavioConnectorIT -->
    <dependency>
      <groupId>xmlunit</groupId>
      <artifactId>xmlunit</artifactId>
      <version>1.5</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>spring-beans</artifactId>
          <groupId>org.springframework</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    
    <!-- required for SvnConnector -->
    <dependency>
      <groupId>org.tigris.subversion</groupId>
      <artifactId>svnclientadapter</artifactId>
      <version>0.9.100</version>
    </dependency>
    <dependency>
      <groupId>org.tmatesoft.svnkit</groupId>
      <artifactId>svnkit</artifactId>
      <version>1.3.4</version>
    </dependency>
    <dependency>
      <groupId>org.tmatesoft.svnkit</groupId>
      <artifactId>svnkit-javahl</artifactId>
      <version>1.3.4</version>
    </dependency>
    
    <!-- for testing the email service -->
    <dependency>
      <groupId>org.subethamail</groupId>
      <artifactId>subethasmtp-wiser</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- encryption library -->
    <dependency>
      <groupId>org.jasypt</groupId>
      <artifactId>jasypt</artifactId>
      <version>1.8</version>
    </dependency>
      
  </dependencies>

  <build>
    <finalName>cycle</finalName>
    <filters>
      <filter>src/test/resources/config/test.properties</filter>
      <filter>${properties.override}</filter>
    </filters>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
      <resource>
        <directory>${java.resources.override}</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
      </testResource>
      <testResource>
        <directory>src/test/javascript</directory>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <id>create-jar</id>
            <goals>
              <goal>jar</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <classifier>core</classifier>
              <includes>
                <include>**/org/camunda/bpm/cycle/**</include>
                <include>**/org/camunda/bpm/cycle/web/dto/*</include>
              </includes>
              <excludes>
                <exclude>**/org/camunda/bpm/cycle/web/*</exclude>
                <exclude>**/org/camunda/bpm/cycle/web/filter/**</exclude>
                <exclude>**/org/camunda/bpm/cycle/web/jaxrs/**</exclude>
                <exclude>**/org/camunda/bpm/cycle/web/service/**</exclude>
              </excludes>
            </configuration>
          </execution>
          <execution>
            <id>create-test-jar</id>
            <goals>
              <goal>test-jar</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <classifier>test</classifier>
              <includes>
                <include>**/org/camunda/bpm/cycle/connector/test/util/RepositoryUtil.*</include>
              </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <webResources>
            <resource>
              <filtering>true</filtering>
              <directory>${web.resources.override}</directory>
            </resource>
            <resource>
              <filtering>true</filtering>
              <directory>src/main/webapp</directory>
              <!-- no filtering for favicon because linux destroys images through carriage return -->
              <excludes>
                <exclude>assets/img/favicon.ico</exclude>
              </excludes>
            </resource>
          </webResources>
          <archive>
            <manifest>
              <!-- Maven project version number -->
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
          </archive>
        </configuration>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <runOrder>alphabetical</runOrder>
          <excludes>
            <!-- skip signavio connector test in default profile -->
            <exclude>**/SignavioConnectorTest.java</exclude>
          </excludes>
        </configuration>
      </plugin>
         
    </plugins>
  </build>
  
  <profiles>
    
    <profile>
      <id>distro</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <excludes>
                <exclude>**/AbstractConnectorTestBase.java</exclude>
                <exclude>**/SvnConnectorTest.java</exclude>
                <exclude>**/VfsConnectorTest.java</exclude>
                <exclude>**/SignavioConnectorTest.java</exclude>
              </excludes>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    
    <!-- enables signavio integration test -->
    <profile>
      <id>signavio</id>
      <build>
        <plugins>          
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <excludes>
                 <exclude>none</exclude>
              </excludes>
              <includes>
                  <include>**/SignavioConnectorTest.java</include>
              </includes>              
            </configuration>
            <executions>
              <execution>
                <id>test-signavio-connector</id>
                <phase>test</phase>
                <goals>
                  <goal>test</goal>
                </goals>                
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <excludes>
                <exclude>**/SignavioClientProxyIT.java</exclude>
              </excludes>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <dependencies>
        <!-- javax.persistence -->
        <dependency>
          <groupId>org.hibernate</groupId>
          <artifactId>hibernate-entitymanager</artifactId>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>com.h2database</groupId>
          <artifactId>h2</artifactId>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>proxy</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <skipTests>true</skipTests>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <includes>
                <include>**/SignavioClientProxyIT.java</include>
              </includes>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <dependencies>
        <!-- javax.persistence -->
        <dependency>
          <groupId>org.hibernate</groupId>
          <artifactId>hibernate-entitymanager</artifactId>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>com.h2database</groupId>
          <artifactId>h2</artifactId>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>js-test</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.searls</groupId>
            <artifactId>jasmine-maven-plugin</artifactId>
            <version>1.2.0.1-SNAPSHOT</version>
            <extensions>true</extensions>
            <executions>
              <execution>
                <goals>
                  <goal>test</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <jsSrcDir>${project.basedir}/src/main/webapp/assets/js</jsSrcDir>
              <jsTestSrcDir>${project.basedir}/src/test/javascript</jsTestSrcDir>
              <include>*_spec.js</include>
              <preloadSources>
                <!-- some base lib -->
                <source>lib/jquery-1.7.2.min.js</source>
                <source>lib/bootstrap/bootstrap.js</source>
                <source>lib/angular/angular.js</source>
                <source>lib/angular/angular-resource.js</source>
                <source>lib/angular/angular-mocks.js</source>
              </preloadSources>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>tomcat</id>
      <dependencies>
    
        <!-- dependencies only used for testing (not added to cycle-tomcat.war in distribution) -->
        <dependency>
          <groupId>com.h2database</groupId>
          <artifactId>h2</artifactId>
        </dependency>
    
        <dependency>
          <groupId>javax.mail</groupId>
          <artifactId>mail</artifactId>
        </dependency>

        <!-- Java EE APIs not provided on tomcat -->
        <dependency>
          <groupId>org.hibernate.javax.persistence</groupId>
          <artifactId>hibernate-jpa-2.0-api</artifactId>
        </dependency>
    
        <dependency>
          <groupId>org.glassfish</groupId>
          <artifactId>javax.annotation</artifactId>
        </dependency>
    
        <dependency>
          <groupId>javax.inject</groupId>
          <artifactId>javax.inject</artifactId>
          <version>1</version>
        </dependency>
    
        <dependency>
          <groupId>org.hibernate</groupId>
          <artifactId>hibernate-entitymanager</artifactId>
        </dependency>
    
        <dependency>
          <groupId>cglib</groupId>
          <artifactId>cglib</artifactId>
        </dependency>
        <!-- apache commons -->
        <dependency>
          <groupId>commons-io</groupId>
          <artifactId>commons-io</artifactId>
        </dependency>
        <!-- nekohtml -->
        <dependency>
          <groupId>net.sourceforge.nekohtml</groupId>
          <artifactId>nekohtml</artifactId>
        </dependency>   
        <dependency>
          <groupId>com.sun.jersey</groupId>
          <artifactId>jersey-json</artifactId>
        </dependency>
        <dependency>
          <groupId>com.sun.jersey.contribs</groupId>
          <artifactId>jersey-spring</artifactId>
          <exclusions>
            <exclusion>
              <artifactId>spring-core</artifactId>
              <groupId>org.springframework</groupId>
            </exclusion>
            <exclusion>
              <artifactId>spring-beans</artifactId>
              <groupId>org.springframework</groupId>
            </exclusion>
            <exclusion>
              <artifactId>spring-context</artifactId>
              <groupId>org.springframework</groupId>
            </exclusion>
            <exclusion>
              <artifactId>spring-web</artifactId>
              <groupId>org.springframework</groupId>
            </exclusion>
            <exclusion>
              <artifactId>spring-aop</artifactId>
              <groupId>org.springframework</groupId>
            </exclusion>
            <exclusion>
              <artifactId>asm</artifactId>
              <groupId>asm</groupId>
            </exclusion>
          </exclusions>
        </dependency>
              
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <!-- required for i18n with GNU gettext -->
            <!-- run 'mvn gettext:gettext gettext:merge gettext:dist' to update po 
              files and generate a updated message bundle class -->
            <groupId>org.xnap.commons</groupId>
            <artifactId>maven-gettext-plugin</artifactId>
            <version>1.2.3</version>
            <configuration>
              <!-- Unix shellscript that runs xgettext and parses views -->
              <xgettextCmd>${basedir}/src/main/po/xgettext.sh</xgettextCmd>
              <!-- directory, into which message catalogs will be generated -->
              <poDirectory>${basedir}/src/main/po</poDirectory>
              <!-- same as AbstractI18n.getMessageBundleName() -->
              <targetBundle>i18n.Messages</targetBundle>
              <!-- directory, into which resource bundles will be generated -->
              <outputDirectory>${basedir}/src/main/resources</outputDirectory>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.tomcat.maven</groupId>
            <artifactId>tomcat7-maven-plugin</artifactId>
            <version>2.0-beta-1</version>
            <executions>
              <execution>
                <id>tomcat-run</id>
                <goals>
                  <goal>exec-war-only</goal>
                </goals>
                <phase>package</phase>
                <configuration>
                  <path>cycle</path>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <properties>
        <maven.tomcat.additionalConfigFilesDir>${basedir}/src/main/runtime/tomcat/config</maven.tomcat.additionalConfigFilesDir>
      </properties>
    </profile>
    <profile>
      <id>glassfish</id>
      <dependencies>
        <!-- javax.persistence -->
        <dependency>
          <groupId>org.hibernate</groupId>
          <artifactId>hibernate-entitymanager</artifactId>
          <exclusions>
            <exclusion>
              <groupId>org.javassist</groupId>
              <artifactId>javassist</artifactId>        
            </exclusion>
          </exclusions>          
        </dependency>
        <dependency>
          <groupId>cglib</groupId>
          <artifactId>cglib</artifactId>
        </dependency>
        <dependency>
          <groupId>com.sun.jersey.contribs</groupId>
          <artifactId>jersey-spring</artifactId>
          <exclusions>
            <exclusion>
              <groupId>com.sun.jersey</groupId>
              <artifactId>jersey-core</artifactId>
            </exclusion>        
            <exclusion>
              <groupId>asm</groupId>
              <artifactId>asm</artifactId>
            </exclusion>        
            <exclusion>
              <artifactId>spring-core</artifactId>
              <groupId>org.springframework</groupId>
            </exclusion>
            <exclusion>
              <artifactId>spring-beans</artifactId>
              <groupId>org.springframework</groupId>
            </exclusion>
            <exclusion>
              <artifactId>spring-context</artifactId>
              <groupId>org.springframework</groupId>
            </exclusion>
            <exclusion>
              <artifactId>spring-web</artifactId>
              <groupId>org.springframework</groupId>
            </exclusion>
            <exclusion>
              <artifactId>spring-aop</artifactId>
              <groupId>org.springframework</groupId>
            </exclusion>
          </exclusions>
        </dependency>
        <!-- nekohtml -->
        <dependency>
          <groupId>net.sourceforge.nekohtml</groupId>
          <artifactId>nekohtml</artifactId>
          <exclusions>
            <exclusion>
              <groupId>xml-apis</groupId>
              <artifactId>xml-apis</artifactId>          
            </exclusion>
          </exclusions>
        </dependency>
        <dependency>
          <groupId>commons-io</groupId>
          <artifactId>commons-io</artifactId>
        </dependency>
      </dependencies>
      <properties>
        <web.resources.override>src/main/runtime/glassfish/webapp</web.resources.override>
        <java.resources.override>src/main/runtime/glassfish/resources</java.resources.override>
      </properties>
    </profile>
    <profile>
      <id>jboss</id>
      <dependencies>
        <dependency>
          <groupId>cglib</groupId>
          <artifactId>cglib</artifactId>
        </dependency>
        <dependency>
          <groupId>com.sun.jersey</groupId>
          <artifactId>jersey-json</artifactId>
        </dependency>
        <dependency>
          <groupId>com.sun.jersey.contribs</groupId>
          <artifactId>jersey-spring</artifactId>
          <exclusions>
            <exclusion>
              <artifactId>spring-core</artifactId>
              <groupId>org.springframework</groupId>
            </exclusion>
            <exclusion>
              <artifactId>spring-beans</artifactId>
              <groupId>org.springframework</groupId>
            </exclusion>
            <exclusion>
              <artifactId>spring-context</artifactId>
              <groupId>org.springframework</groupId>
            </exclusion>
            <exclusion>
              <artifactId>spring-web</artifactId>
              <groupId>org.springframework</groupId>
            </exclusion>
            <exclusion>
              <artifactId>spring-aop</artifactId>
              <groupId>org.springframework</groupId>
            </exclusion>
            <exclusion>
              <artifactId>asm</artifactId>
              <groupId>asm</groupId>
            </exclusion>
          </exclusions>
        </dependency>
      </dependencies>
      <properties>
        <web.resources.override>src/main/runtime/jboss/webapp</web.resources.override>
        <java.resources.override>src/main/runtime/jboss/resources</java.resources.override>
        <properties.override>src/main/runtime/jboss/config/database.properties</properties.override>
      </properties>
      <build>
        <plugins>         
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <configuration>
              <archive>
                <manifest>
                  <!-- Maven project version number -->
                  <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                </manifest>
                <manifestEntries>
                  <Dependencies>org.hibernate,org.hibernate.envers,org.hibernate.validator,org.apache.xerces,org.apache.commons.io</Dependencies>
                </manifestEntries>
              </archive>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>   
  </profiles>
  
  
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.camunda.bpm.cycle</groupId>
  <artifactId>camunda-cycle-root</artifactId>
  <packaging>pom</packaging>
  <name>camunda BPM - cycle - root</name>
  
  <parent>
    <groupId>org.camunda.bpm</groupId>
    <artifactId>camunda-parent</artifactId>
    <relativePath>../../parent</relativePath>
    <version>7.2.0-SNAPSHOT</version>
  </parent>
  
  <properties>
    <!-- versions -->
    <version.springframework>3.1.2.RELEASE</version.springframework>
    <version.hibernate>4.2.0.SP1</version.hibernate>
    <version.jersey>1.11</version.jersey>
    <version.apache.httpclient>4.2.2</version.apache.httpclient>
    <version.saxon>9.1.0.8</version.saxon>
    <version.cglib>2.2.2</version.cglib>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
  
  <modules>
    <module>cycle</module>
    <module>cycle-sql</module>
    <module>cycle-jboss</module>
    <module>cycle-glassfish</module>
    <module>cycle-tomcat</module>
	  <module>cycle-httpclient</module>
  </modules>
  
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>cglib</groupId>
        <artifactId>cglib</artifactId>
        <version>${version.cglib}</version>
      </dependency>
      <dependency>
        <groupId>cglib</groupId>
        <artifactId>cglib-nodep</artifactId>
        <version>${version.cglib}</version>
      </dependency>
      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-entitymanager</artifactId>
        <version>${version.hibernate}</version>
      </dependency>
      <dependency>
        <groupId>org.hibernate.javax.persistence</groupId>
        <artifactId>hibernate-jpa-2.0-api</artifactId>
        <version>1.0.1.Final</version>
      </dependency>
      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>fluent-hc</artifactId>
        <version>${version.apache.httpclient}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpmime</artifactId>
        <version>${version.apache.httpclient}</version>
      </dependency>
      <dependency>
        <groupId>net.sourceforge.nekohtml</groupId>
        <artifactId>nekohtml</artifactId>
        <version>1.9.16</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>2.1</version>
      </dependency>
      <!-- testing -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit-dep</artifactId>
        <version>4.10</version>
      </dependency>
      <dependency>
        <groupId>org.kubek2k</groupId>
        <artifactId>springockito-annotations</artifactId>
        <version>1.0.8</version>
      </dependency>
      <dependency>
        <groupId>org.easytesting</groupId>
        <artifactId>fest-assert-core</artifactId>
        <version>2.0M10</version>
      </dependency>
      <!-- spring framework -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-web</artifactId>
        <version>${version.springframework}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-orm</artifactId>
        <version>${version.springframework}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-aop</artifactId>
        <version>${version.springframework}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-security-web</artifactId>
        <version>${version.springframework}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-test</artifactId>
        <version>${version.springframework}</version>
      </dependency>
      <!-- jersey framework -->
      <dependency>
        <groupId>com.sun.jersey</groupId>
        <artifactId>jersey-json</artifactId>
        <version>${version.jersey}</version>
      </dependency>
      <dependency>
        <groupId>com.sun.jersey.contribs</groupId>
        <artifactId>jersey-spring</artifactId>
        <version>${version.jersey}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish</groupId>
        <artifactId>javax.annotation</artifactId>
        <version>3.1</version>
      </dependency>      
    </dependencies>
  </dependencyManagement>
  
  <!-- 
    We need this repository to fetch the ancient libraries

      org.tigris.subversion:svnclientadapter:0.9.100
      org.xnap.commons:gettext-commons:0.9.6
  -->
  <repositories>
    <repository>
      <id>camunda public</id>
      <name>camunda</name>
      <url>https://app.camunda.com/nexus/content/groups/public/</url>
    </repository>
  </repositories>
</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>camunda-h2-webapp</artifactId>
  <groupId>org.camunda.bpm.distro</groupId>
  <packaging>war</packaging>

  <parent>
    <groupId>org.camunda.bpm</groupId>
    <artifactId>camunda-parent</artifactId>
    <relativePath>../../parent</relativePath>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <name>camunda BPM - H2 Webapp</name>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <warSourceDirectory>src/main/webapp</warSourceDirectory>          
          <archive>
            <manifestEntries>
              <Dependencies>com.h2database.h2</Dependencies>
            </manifestEntries>
          </archive>          
        </configuration>        
      </plugin>
            
    </plugins>
  </build>
</project>
