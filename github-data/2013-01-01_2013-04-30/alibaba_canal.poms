<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation=" ">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.alibaba.otter</groupId>
		<artifactId>canal</artifactId>
		<version>1.0.18-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	<groupId>com.alibaba.otter</groupId>
	<artifactId>canal.client</artifactId>
	<packaging>jar</packaging>
	<name>canal client module for otter ${project.version}</name>
	<dependencies>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>canal.protocol</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- junit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
	</dependencies>
	
	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
				<property>
					<name>env</name>
					<value>!javadoc</value>
				</property>
			</activation>
		</profile>

		<profile>
			<id>javadoc</id>
			<activation>
				<property>
					<name>env</name>
					<value>javadoc</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>2.9.1</version>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<aggregate>true</aggregate>
							<show>public</show>
							<nohelp>true</nohelp>
							<header>${project.artifactId}-${project.version}</header>
							<footer>${project.artifactId}-${project.version}</footer>
							<doctitle>${project.artifactId}-${project.version}</doctitle>
							<links>
								<link>https://github.com/alibaba/canal</link>
							</links>
							<outputDirectory>${project.build.directory}/apidocs/apidocs/${pom.version}</outputDirectory>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-scm-publish-plugin</artifactId>
						<version>1.0-beta-2</version>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<phase>package</phase>
								<goals>
									<goal>publish-scm</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<checkoutDirectory>${project.build.directory}/scmpublish</checkoutDirectory>
							<checkinComment>Publishing javadoc for ${project.artifactId}:${project.version}</checkinComment>
							<content>${project.build.directory}/apidocs</content>
							<skipDeletedFiles>true</skipDeletedFiles>
							<pubScmUrl>scm:git:git@github.com:alibaba/canal.git</pubScmUrl>
							<scmBranch>gh-pages</scmBranch> 
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.alibaba.otter</groupId>
		<artifactId>canal</artifactId>
		<version>1.0.18-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	<groupId>com.alibaba.otter</groupId>
	<artifactId>canal.common</artifactId>
	<packaging>jar</packaging>
	<name>canal common module for otter ${project.version}</name>
	<url>http://b2b-doc.alibaba-inc.com/display/opentech/Otter</url>
	<dependencies>
		<!-- zk -->
		<dependency>
			<groupId>org.apache.zookeeper</groupId>
			<artifactId>zookeeper</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.sgroschupf</groupId>
			<artifactId>zkclient</artifactId>
		</dependency>
		<!-- external -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring</artifactId>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
		</dependency>
		<!-- log -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<!-- junit -->
		<dependency>
		  <groupId>junit</groupId>
		  <artifactId>junit</artifactId>
		</dependency>
  </dependencies>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.alibaba.otter</groupId>
		<artifactId>canal</artifactId>
		<version>1.0.18-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	<groupId>com.alibaba.otter</groupId>
	<artifactId>canal.parse.dbsync</artifactId>
	<packaging>jar</packaging>
	<name>canal dbsync module for otter ${project.version}</name>
	<dependencies>
		<!-- log -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<!-- test dependency -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.alibaba.otter</groupId>
		<artifactId>canal</artifactId>
		<version>1.0.18-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	<groupId>com.alibaba.otter</groupId>
	<artifactId>canal.deployer</artifactId>
	<packaging>jar</packaging>
	<name>canal deployer module for otter ${project.version}</name>
	<dependencies>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>canal.server</artifactId>
			<version>${project.version}</version>
		</dependency>
	</dependencies>
	
	<build>
		<plugins>
			<!-- deploy模块的packaging通常是jar，如果项目中没有java 源代码或资源文件，加上这一段配置使项目能通过构建 -->
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<addMavenDescriptor>true</addMavenDescriptor>
					</archive>
					<excludes>
						<exclude>**/logback.xml</exclude>
						<exclude>**/canal.properties</exclude>
						<exclude>**/spring/**</exclude>
						<exclude>**/example/**</exclude>
					</excludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<!-- 这是最新版本，推荐使用这个版本 -->
				<version>2.2.1</version>
				<executions>
					<execution>
						<id>assemble</id>
						<goals>
							<goal>single</goal>
						</goals>
						<phase>package</phase>
					</execution>
				</executions>
				<configuration>
					<appendAssemblyId>false</appendAssemblyId>
					<attach>false</attach>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
				<property>
					<name>env</name>
					<value>!release</value>
				</property>
			</activation>

			<build>
				<plugins>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<configuration>
							<!-- maven assembly插件需要一个描述文件 来告诉插件包的结构以及打包所需的文件来自哪里 -->
							<descriptors>
								<descriptor>${basedir}/src/main/assembly/dev.xml</descriptor>
							</descriptors>
							<finalName>canal</finalName>
							<outputDirectory>${project.build.directory}</outputDirectory>
						</configuration>
					</plugin>
				</plugins>
			</build>

		</profile>

		<profile>
			<id>release</id>
			<activation>
				<property>
					<name>env</name>
					<value>release</value>
				</property>
			</activation>

			<build>
				<plugins>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<configuration>
							<!-- 发布模式使用的maven assembly插件描述文件 -->
							<descriptors>
								<descriptor>${basedir}/src/main/assembly/release.xml</descriptor>
							</descriptors>
							<!-- 如果一个应用的包含多个deploy模块，如果使用同样的包名， 如果把它们复制的一个目录中可能会失败，所以包名加了 artifactId以示区分 -->
							<finalName>${project.artifactId}-${project.version}</finalName>
							<!-- scm 要求 release 模式打出的包放到顶级目录下的target子目录中 -->
							<outputDirectory>${project.parent.build.directory}</outputDirectory>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.alibaba.otter</groupId>
		<artifactId>canal</artifactId>
		<version>1.0.18-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	<groupId>com.alibaba.otter</groupId>
	<artifactId>canal.parse.driver</artifactId>
	<packaging>jar</packaging>
	<name>canal driver module for otter ${project.version}</name>
	<dependencies>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>canal.common</artifactId>
			<version>${project.version}</version>
		</dependency>
		<!-- log -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.netty</groupId>
			<artifactId>netty</artifactId>
		</dependency>
		<!-- test dependency -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.alibaba.otter</groupId>
		<artifactId>canal</artifactId>
		<version>1.0.18-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	<groupId>com.alibaba.otter</groupId>
	<artifactId>canal.example</artifactId>
	<packaging>jar</packaging>
	<name>canal example module for otter ${project.version}</name>
	<dependencies>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>canal.client</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>canal.protocol</artifactId>
			<version>${project.version}</version>
		</dependency>
		<!-- test dependency -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	
	<build>
		<plugins>
			<!-- deploy模块的packaging通常是jar，如果项目中没有java 源代码或资源文件，加上这一段配置使项目能通过构建 -->
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<addMavenDescriptor>true</addMavenDescriptor>
					</archive>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<!-- 这是最新版本，推荐使用这个版本 -->
				<version>2.2.1</version>
				<executions>
					<execution>
						<id>assemble</id>
						<goals>
							<goal>single</goal>
						</goals>
						<phase>package</phase>
					</execution>
				</executions>
				<configuration>
					<appendAssemblyId>false</appendAssemblyId>
					<attach>false</attach>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
				<property>
					<name>env</name>
					<value>!release</value>
				</property>
			</activation>

			<build>
				<plugins>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<configuration>
							<!-- maven assembly插件需要一个描述文件 来告诉插件包的结构以及打包所需的文件来自哪里 -->
							<descriptors>
								<descriptor>${basedir}/src/main/assembly/dev.xml</descriptor>
							</descriptors>
							<finalName>canal-example</finalName>
							<outputDirectory>${project.build.directory}</outputDirectory>
						</configuration>
					</plugin>
				</plugins>
			</build>

		</profile>

		<profile>
			<id>release</id>
			<activation>
				<property>
					<name>env</name>
					<value>release</value>
				</property>
			</activation>

			<build>
				<plugins>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<configuration>
							<!-- 发布模式使用的maven assembly插件描述文件 -->
							<descriptors>
								<descriptor>${basedir}/src/main/assembly/release.xml</descriptor>
							</descriptors>
							<!-- 如果一个应用的包含多个deploy模块，如果使用同样的包名， 如果把它们复制的一个目录中可能会失败，所以包名加了 artifactId以示区分 -->
							<finalName>${project.artifactId}-${project.version}</finalName>
							<!-- scm 要求 release 模式打出的包放到顶级目录下的target子目录中 -->
							<outputDirectory>${project.parent.build.directory}</outputDirectory>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.alibaba.otter</groupId>
		<artifactId>canal</artifactId>
		<version>1.0.18-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	<groupId>com.alibaba.otter</groupId>
	<artifactId>canal.filter</artifactId>
	<packaging>jar</packaging>
	<name>canal sink module for otter ${project.version}</name>
	<dependencies>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>canal.common</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>canal.protocol</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.googlecode.aviator</groupId>
			<artifactId>aviator</artifactId>
		</dependency>
		<dependency>
			<groupId>oro</groupId>
			<artifactId>oro</artifactId>
		</dependency>
		<!-- test dependency -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.alibaba.otter</groupId>
		<artifactId>canal</artifactId>
		<version>1.0.18-SNAPSHOT</version>
		<relativePath>../../pom.xml</relativePath>
	</parent>
	<groupId>com.alibaba.otter</groupId>
	<artifactId>canal.instance.core</artifactId>
	<packaging>jar</packaging>
	<name>canal instance core module for otter ${project.version}</name>
	<dependencies>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>canal.common</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>canal.store</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>canal.meta</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>canal.parse</artifactId>
			<version>${project.version}</version>
		</dependency>
	</dependencies>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.alibaba.otter</groupId>
		<artifactId>canal</artifactId>
		<version>1.0.18-SNAPSHOT</version>
		<relativePath>../../pom.xml</relativePath>
	</parent>
	<groupId>com.alibaba.otter</groupId>
	<artifactId>canal.instance.manager</artifactId>
	<packaging>jar</packaging>
	<name>canal instance manager module for otter ${project.version}</name>
	<dependencies>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>canal.instance.core</artifactId>
			<version>${project.version}</version>
		</dependency>
	</dependencies>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.alibaba.otter</groupId>
		<artifactId>canal</artifactId>
		<version>1.0.18-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	<groupId>com.alibaba.otter</groupId>
	<artifactId>canal.instance</artifactId>
	<packaging>pom</packaging>
	<name>canal instance module for otter ${project.version}</name>
	
	<modules>
		<module>core</module>
		<module>manager</module>
		<module>spring</module>
	</modules>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.alibaba.otter</groupId>
		<artifactId>canal</artifactId>
		<version>1.0.18-SNAPSHOT</version>
		<relativePath>../../pom.xml</relativePath>
	</parent>
	<groupId>com.alibaba.otter</groupId>
	<artifactId>canal.instance.spring</artifactId>
	<packaging>jar</packaging>
	<name>canal instance spring module for otter ${project.version}</name>
	<dependencies>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>canal.instance.core</artifactId>
			<version>${project.version}</version>
		</dependency>
		<!-- test dependency -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.alibaba.otter</groupId>
		<artifactId>canal</artifactId>
		<version>1.0.18-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	<groupId>com.alibaba.otter</groupId>
	<artifactId>canal.meta</artifactId>
	<packaging>jar</packaging>
	<name>canal meta module for otter ${project.version}</name>
	<dependencies>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>canal.common</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>canal.protocol</artifactId>
			<version>${project.version}</version>
		</dependency>
		<!-- test dependency -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.alibaba.otter</groupId>
		<artifactId>canal</artifactId>
		<version>1.0.18-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	<groupId>com.alibaba.otter</groupId>
	<artifactId>canal.parse</artifactId>
	<packaging>jar</packaging>
	<name>canal parse module for otter ${project.version}</name>
	<dependencies>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>canal.common</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>canal.protocol</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>canal.meta</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>canal.sink</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>canal.parse.dbsync</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>canal.filter</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>canal.parse.driver</artifactId>
			<version>${project.version}</version>
		</dependency>
		<!-- test dependency -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.alibaba.otter</groupId>
	<artifactId>canal</artifactId>
	<packaging>pom</packaging>
	<name>canal module for otter ${project.version}</name>
	<version>1.0.18-SNAPSHOT</version>
	<url>https://github.com/alibaba/canal</url>
	<parent>
	    <groupId>org.sonatype.oss</groupId>
	    <artifactId>oss-parent</artifactId>
	    <version>7</version>
	</parent>
	<developers>
		<developer>
			<name>agapple</name>
			<url>http://agapple.iteye.com</url>
			<email>jianghang115@gmail.com</email>
			<timezone>8</timezone>
		</developer>
		<developer>
			<name>zavakid</name>
			<url>http://www.zavakid.com</url>
			<email>zava.kid@gmail.com</email>
			<timezone>8</timezone>
		</developer>
		<developer>
			<name>in355hz</name>
			<url>http://in355hz.iteye.com</url>
			<email>in355hz@gmail.com</email>
			<timezone>8</timezone>
		</developer>
	</developers>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0</url>
		</license>
	</licenses>

	<scm>
		<url>git@github.com:alibaba/canal.git</url>
		<connection>scm:git:git@github.com:alibaba/canal.git</connection>
		<developerConnection>scm:git:git@github.com:alibaba/canal.git</developerConnection>
	</scm>
	
	<repositories>
		<repository>
			<id>central</id>
			<url>http://repo1.maven.org/maven2</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>java.net</id>
			<url>http://download.java.net/maven/2/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>alibaba</id>
			<url>http://code.alibabatech.com/mvn/releases/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>sonatype</id>
			<name>sonatype</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>sonatype-release</id>
			<name>sonatype-release</name>
			<url>https://oss.sonatype.org/service/local/repositories/releases/content</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!--maven properties-->
		<maven.test.skip>true</maven.test.skip>
		<downloadSources>true</downloadSources>
		<!-- compiler settings properties -->
		<java_source_version>1.6</java_source_version>
		<java_target_version>1.6</java_target_version>
		<file_encoding>UTF-8</file_encoding>
	</properties>
	
	<modules>
		<module>common</module>
		<module>meta</module>
		<module>dbsync</module>
		<module>filter</module>	
		<module>driver</module>
		<module>parse</module>
		<module>sink</module>
		<module>store</module>
		<module>protocol</module>
		<module>instance</module>
		<module>server</module>
		<module>client</module>
		<module>deployer</module>
		<module>example</module>
	</modules>
	
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring</artifactId>
				<version>2.5.6</version>
			</dependency>
            <!-- external -->
            <dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>2.6</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.4</version>
			</dependency>
			<dependency>
				<groupId>org.apache.zookeeper</groupId>
				<artifactId>zookeeper</artifactId>
				<version>3.4.5</version>
				<exclusions>
				  <exclusion>
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
				  </exclusion>
				  <exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				  </exclusion>
				  <exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				  </exclusion>
				  <exclusion>
					<groupId>jline</groupId>
					<artifactId>jline</artifactId>
				  </exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>com.github.sgroschupf</groupId>
				<artifactId>zkclient</artifactId>
				<version>0.1</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>1.1.26</version>
			</dependency>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>r09</version>
			</dependency>
			<dependency>
				<groupId>com.googlecode.aviator</groupId>
				<artifactId>aviator</artifactId>
				<version>2.2.1</version>
			</dependency>
			<dependency>
				<groupId>oro</groupId>
				<artifactId>oro</artifactId>
				<version>2.0.8</version>
			</dependency>
			<dependency>
			  <groupId>org.jboss.netty</groupId>
			  <artifactId>netty</artifactId>
			  <version>3.2.5.Final</version>
			</dependency>
			<dependency>
				<groupId>com.google.protobuf</groupId>
				<artifactId>protobuf-java</artifactId>
				<version>2.4.1</version>
			</dependency>
            <!-- log -->
            <dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-core</artifactId>
				<version>1.0.6</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>1.0.6</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>1.6.0</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>1.6.0</version>
			</dependency>
			<!-- test dependency -->
            <dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.5</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>5.1.12</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	
	<build>
		<extensions>
			<extension>
				<groupId>org.jvnet.wagon-svn</groupId>
				<artifactId>wagon-svn</artifactId>
				<version>1.9</version>
			</extension>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-http-shared</artifactId>
				<version>1.0-beta-7</version>
			</extension>
		</extensions>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java_source_version}</source>
					<target>${java_target_version}</target>
					<encoding>${file_encoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
			   <groupId>org.apache.maven.plugins</groupId>  
			   <artifactId>maven-eclipse-plugin</artifactId>  
			   <version>2.5.1</version>  
			   <configuration>  
				  <additionalConfig>  
					 <file>  
						<name>.settings/org.eclipse.core.resources.prefs</name>  
						<content>  
						   <![CDATA[eclipse.preferences.version=1${line.separator}encoding/<project>=${file_encoding}${line.separator}]]>  
						</content>  
					 </file>  
				  </additionalConfig>  
			   </configuration>  
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.5</version>
				<configuration>
				  <includes>
					<include>**/*Test.java</include>
				  </includes>
				  <excludes>
					<exclude>**/*NoRunTest.java</exclude>
				  </excludes>
				</configuration>
			</plugin>
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.5</version>
            </plugin>
            <!-- javadoc -->
            <!--
            <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.7</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				<configuration>
				  <encoding>${file_encoding}</encoding>
				  <charset>${file_encoding}</charset>
				  <doclet>org.jboss.apiviz.APIviz</doclet>
				  <docletArtifact>
					<groupId>org.jboss.apiviz</groupId>
					<artifactId>apiviz</artifactId>
					<version>1.3.0.GA</version>
				  </docletArtifact>
				  <useStandardDocletOptions>true</useStandardDocletOptions>
				  <breakiterator>true</breakiterator>
				  <version>true</version>
				  <author>true</author>
				  <keywords>true</keywords>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<aggregate>true</aggregate>
					<destDir>${project.basedir}/docs/sources</destDir>
					<linkJavadoc>true</linkJavadoc>
					<javadocDir>${project.basedir}/docs/javadoc</javadocDir>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.1.2</version>
				<executions>
					<execution>
					<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			-->
		</plugins>
		<sourceDirectory>src/main/java</sourceDirectory>  
		<testSourceDirectory>src/test/java</testSourceDirectory>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*</include>
				</includes>
				<excludes>
					<exclude>**/.svn/</exclude>
				</excludes>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<includes>
					<include>**/*</include>
				</includes>
				<excludes>
					<exclude>**/.svn/</exclude>
				</excludes>
			</testResource>
		</testResources>
	</build>
	
	<distributionManagement>
		<snapshotRepository>
			<id>sonatype-nexus-snapshots</id>
			<name>Sonatype Nexus Snapshots</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
		</snapshotRepository>
		<repository>
			<id>sonatype-nexus-staging</id>
			<name>Nexus Release Repository</name>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.alibaba.otter</groupId>
		<artifactId>canal</artifactId>
		<version>1.0.18-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	<groupId>com.alibaba.otter</groupId>
	<artifactId>canal.protocol</artifactId>
	<packaging>jar</packaging>
	<name>canal protocol module for otter ${project.version}</name>
	<url>http://b2b-doc.alibaba-inc.com/display/opentech/Otter</url>

	<dependencies>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>canal.common</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.protobuf</groupId>
			<artifactId>protobuf-java</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
		</dependency>
	</dependencies>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.alibaba.otter</groupId>
		<artifactId>canal</artifactId>
		<version>1.0.18-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	<groupId>com.alibaba.otter</groupId>
	<artifactId>canal.server</artifactId>
	<packaging>jar</packaging>
	<name>canal server module for otter ${project.version}</name>
	<dependencies>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>canal.instance.core</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>canal.instance.spring</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>canal.instance.manager</artifactId>
			<version>${project.version}</version>
		</dependency>
		
		<!-- test dependency -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.alibaba.otter</groupId>
		<artifactId>canal</artifactId>
		<version>1.0.18-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	<groupId>com.alibaba.otter</groupId>
	<artifactId>canal.sink</artifactId>
	<packaging>jar</packaging>
	<name>canal sink module for otter ${project.version}</name>
	<dependencies>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>canal.common</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>canal.protocol</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>canal.filter</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>canal.store</artifactId>
			<version>${project.version}</version>
		</dependency>
		<!-- test dependency -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.alibaba.otter</groupId>
		<artifactId>canal</artifactId>
		<version>1.0.18-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	<groupId>com.alibaba.otter</groupId>
	<artifactId>canal.store</artifactId>
	<packaging>jar</packaging>
	<name>canal store module for otter ${project.version}</name>
	<dependencies>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>canal.common</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>canal.protocol</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>canal.meta</artifactId>
			<version>${project.version}</version>
		</dependency>
		<!-- test dependency -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>
