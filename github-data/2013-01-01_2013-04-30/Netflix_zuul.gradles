ext.githubProjectName = rootProject.name

buildscript {
    repositories { mavenCentral() }
    apply from: file('gradle/buildscript.gradle'), to: buildscript 
}

allprojects {
    repositories { mavenCentral() }
}

apply plugin: 'idea'
apply from: file('gradle/convention.gradle')
apply from: file('gradle/maven.gradle')
//apply from: file('gradle/check.gradle')
apply from: file('gradle/license.gradle')
apply from: file('gradle/release.gradle')

subprojects {

    group = "com.netflix.${githubProjectName}"

    sourceSets.test.java.srcDir 'src/main/java'

    tasks.withType(Javadoc).each {
        it.classpath = sourceSets.main.compileClasspath
    }



    idea {
        module {
            languageLevel = '1.7'
        }
    }
}







// Prevent contrib project from being published
// project('hystrix-contrib').task('uploadMavenCentral', overwrite:true) { }
apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'

dependencies {
    compile 'commons-io:commons-io:2.4'
    compile 'org.codehaus.groovy:groovy-all:2.0.2'
    compile 'org.mockito:mockito-all:1.8.5'
    compile 'org.slf4j:slf4j-api:1.7.5'

    compile 'com.netflix.archaius:archaius-core:0.5.11'
    compile 'com.netflix.servo:servo-core:0.4.44'
    compile 'com.netflix.netflix-commons:netflix-commons-util:0.1.1'

    provided 'junit:junit-dep:4.10'
    provided 'javax.servlet:servlet-api:2.5'

    // would be nice to only reference the version in one place
    groovy "org.codehaus.groovy:groovy-all:2.0.2"
}


javadoc {
    // the exclude isn't working, nor is there a subPackages options as docs suggest there should be
    // we do not want the com.netflix.hystrix.util package include
    // exclude '**/util/**'

    options {
        doclet = "org.benjchristensen.doclet.DocletExclude"
        docletpath = [rootProject.file('./gradle/doclet-exclude.jar')]
        stylesheetFile = rootProject.file('./gradle/javadocStyleSheet.css')
        windowTitle = "Zuul Javadoc ${project.version}"
    }
    //todo add Zuul logo
//    options.addStringOption('top').value = '<a href="https://github.com/Netflix/Hystrix"><img width="92" height="79" border="0" align="left" src="http://netflix.github.com/Hystrix/images/hystrix-logo-small.png"></a><h2 class="title" style="padding-top:40px">Hystrix: Latency and Fault Tolerance for Distributed Systems</h2>'
}

eclipse {
    classpath {
        // include 'provided' dependencies on the classpath
        plusConfigurations += configurations.provided
        downloadSources = true
        downloadJavadoc = true
    }
}


idea {
    module {
        // include 'provided' dependencies on the classpath
        scopes.PROVIDED.plus += configurations.provided
    }
}
apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'jetty'

dependencies {

    compile project(':zuul-core')
    compile project(':zuul-netflix')
    compile project(':zuul-scripts')

    runtime project(':zuul-scripts')

    compile 'com.netflix.karyon:karyon-core:2.0.02'
    compile 'com.netflix.karyon:karyon-admin:2.0.02'
    compile 'com.netflix.karyon:karyon-admin-web:2.0.02'
    compile 'com.netflix.karyon:karyon-extensions:2.0.02'
    compile 'com.netflix.blitz4j:blitz4j:1.31'
}

javadoc {
    options {
        doclet = "org.benjchristensen.doclet.DocletExclude"
        docletpath = [rootProject.file('./gradle/doclet-exclude.jar')]
        stylesheetFile = rootProject.file('./gradle/javadocStyleSheet.css')
        windowTitle = "Zuul Javadoc ${project.version}"
    }
}

eclipse {
    classpath {
        // include 'provided' dependencies on the classpath
        plusConfigurations += configurations.provided
        downloadSources = true
        downloadJavadoc = true
    }
}


idea {
    module {
        // include 'provided' dependencies on the classpath
        languageLevel = '1.7'
        scopes.PROVIDED.plus += configurations.provided
    }
}

def findJar(prefix) {
    def name = ""
    configurations.runtime.each {
        if (it.name.startsWith(prefix)) {
            name = it
        }
    }
    return name;
}

tasks.war.doFirst {
    webInf {
        def jar = findJar('zuul-scripts')
        from(zipTree(jar)) {
            include '**/*.groovy'
        }
    }
}

// runs webapp at root context
jettyRun.contextPath = '/'

jettyRun.doFirst {
    System.setProperty("archaius.deployment.applicationId", "zuul")
}apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'

dependencies {
    compile project(':zuul-core')

    compile 'com.netflix.astyanax:astyanax-cassandra:1.56.43'
    compile 'com.netflix.astyanax:astyanax-thrift:1.56.43'
    compile 'com.netflix.hystrix:hystrix-core:1.3.8'
    compile 'commons-io:commons-io:2.4'
    compile 'commons-fileupload:commons-fileupload:1.2.2'
    compile 'org.codehaus.groovy:groovy-all:2.0.2'
    compile 'org.mockito:mockito-all:1.8.5'
    compile 'org.slf4j:slf4j-api:1.7.0'

    compile 'com.netflix.ribbon:ribbon-core:0.3.2'
    compile 'com.netflix.ribbon:ribbon-eureka:0.3.2'
    compile 'com.netflix.ribbon:ribbon-httpclient:0.3.2'
    compile 'com.netflix.turbine:turbine-core:0.4'

    //compile 'org.json:json:1.0'
    compile 'org.json:json:20090211'

    provided 'junit:junit-dep:4.10'
    provided 'org.powermock:powermock-api-mockito:1.5'
}

jar {
    from sourceSets.main.allGroovy
}

javadoc {
    // the exclude isn't working, nor is there a subPackages options as docs suggest there should be
    // we do not want the com.netflix.hystrix.util package include
    // exclude '**/util/**'

    options {
        doclet = "org.benjchristensen.doclet.DocletExclude"
        docletpath = [rootProject.file('./gradle/doclet-exclude.jar')]
        stylesheetFile = rootProject.file('./gradle/javadocStyleSheet.css')
        windowTitle = "Zuul Javadoc ${project.version}"
    }
//    options.addStringOption('top').value = '<a href="https://github.com/Netflix/Hystrix"><img width="92" height="79" border="0" align="left" src="http://netflix.github.com/Hystrix/images/hystrix-logo-small.png"></a><h2 class="title" style="padding-top:40px">Hystrix: Latency and Fault Tolerance for Distributed Systems</h2>'
}

eclipse {
    classpath {
        // include 'provided' dependencies on the classpath
        plusConfigurations += configurations.provided
        downloadSources = true
        downloadJavadoc = true
    }
}


idea {
    module {
        // include 'provided' dependencies on the classpath
        scopes.PROVIDED.plus += configurations.provided
    }
}
apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'

dependencies {
    compile project(':zuul-core')
    compile project(':zuul-netflix')
    compile 'org.codehaus.groovy:groovy-all:2.0.2'

    // would be nice to only reference the version in one place
    groovy "org.codehaus.groovy:groovy-all:2.0.2"
}

jar {
    from sourceSets.main.allGroovy
}

javadoc {
    // the exclude isn't working, nor is there a subPackages options as docs suggest there should be
    // we do not want the com.netflix.hystrix.util package include
    // exclude '**/util/**'

    options {
        doclet = "org.benjchristensen.doclet.DocletExclude"
        docletpath = [rootProject.file('./gradle/doclet-exclude.jar')]
        stylesheetFile = rootProject.file('./gradle/javadocStyleSheet.css')
        windowTitle = "Zuul Javadoc ${project.version}"
    }
//    options.addStringOption('top').value = '<a href="https://github.com/Netflix/Hystrix"><img width="92" height="79" border="0" align="left" src="http://netflix.github.com/Hystrix/images/hystrix-logo-small.png"></a><h2 class="title" style="padding-top:40px">Hystrix: Latency and Fault Tolerance for Distributed Systems</h2>'
}

eclipse {
    classpath {
        // include 'provided' dependencies on the classpath
        plusConfigurations += configurations.provided
        downloadSources = true
        downloadJavadoc = true
    }
}


idea {
    module {
        // include 'provided' dependencies on the classpath
        scopes.PROVIDED.plus += configurations.provided
    }
}
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'jetty'


dependencies {
    compile project(":zuul-core")
    
    compile 'log4j:log4j:1.2.17'
    compile 'org.slf4j:slf4j-log4j12:1.6.1'
    compile 'org.apache.httpcomponents:httpclient:4.2.2'
    
    provided 'junit:junit-dep:4.10'
    provided 'javax.servlet:servlet-api:2.5'
}

eclipse {
  classpath {
        // include 'provided' dependencies on the classpath
        plusConfigurations += configurations.provided
        downloadSources = true
        downloadJavadoc = true
  }
}


idea {
    module {
        // include 'provided' dependencies on the classpath
        scopes.PROVIDED.plus += configurations.provided
    }
}

// runs webapp at root context
jettyRun.contextPath = '/' 

jettyRun.doFirst {
    System.setProperty("zuul.filter.root", "src/main/filters")    
}