<project name="slim3-blank" default="gen-controller" basedir=".">
    <property file="build.properties" />

    <path id="classpath">
        <fileset dir="war/WEB-INF/classes">
            <include name="**/*.class" />
        </fileset>
        <fileset dir="war/WEB-INF/lib">
            <include name="**/*.jar" />
        </fileset>
        <fileset dir="lib">
            <include name="**/*.jar" />
        </fileset>
    </path>

    <taskdef name="gen-model" classname="org.slim3.gen.task.GenModelTask" classpathref="classpath"/>
    <taskdef name="gen-view" classname="org.slim3.gen.task.GenViewTask" classpathref="classpath"/>
	<taskdef name="gen-service" classname="org.slim3.gen.task.GenServiceTask" classpathref="classpath"/>
	<taskdef name="gen-controller" classname="org.slim3.gen.task.GenControllerTask" classpathref="classpath"/>
    <taskdef name="gen-gwt-service" classname="org.slim3.gen.task.GenGWTServiceTask" classpathref="classpath"/>
    <taskdef name="gen-gwt-service-impl" classname="org.slim3.gen.task.GenGWTServiceImplTask" classpathref="classpath"/>
    
    <target name="gen-controller">
        <input message="Input a controller path." addproperty="controllerPath"/>
        <gen-controller srcdir="${srcDir}" testdir="${testDir}" wardir="${warDir}" controllerpath="${controllerPath}"
             useView="true"/>
        <gen-view wardir="${warDir}" controllerPath="${controllerPath}"/>
    </target>

    <target name="gen-controller-without-view">
        <input message="Input a controller path." addproperty="controllerPath"/>
        <gen-controller srcdir="${srcDir}" testdir="${testDir}" wardir="${warDir}" controllerpath="${controllerPath}"
            useView="false"/>
    </target>

    <target name="gen-model">
        <input message="Input a model name. (ex.  Foo -> root.model.Foo,  bar.Foo -> root.model.bar.Foo). Sub-model extends Super-model." addproperty="modelDefinition"/>
        <gen-model srcdir="${srcDir}" testdir="${testDir}" wardir="${warDir}" modelDefinition="${modelDefinition}" modelClassNameProperty="modelClassName"/>
    </target>

    <target name="gen-service">
        <input message="Input a service name. (ex.  FooService -> root.service.FooService,  bar.FooService -> root.service.bar.FooService)" addproperty="serviceDefinition"/>
        <gen-service srcdir="${srcDir}" testdir="${testDir}" wardir="${warDir}" serviceDefinition="${serviceDefinition}"/>
    </target>
   
	<target name="gen-gwt-service">
        <input message="Input a GWT service name. (ex.  FooService -> root.client.service.FooService,  bar.FooService -> root.client.service.bar.FooService)" addproperty="serviceDefinition"/>
        <gen-gwt-service srcdir="${srcDir}" testdir="${testDir}" wardir="${warDir}" serviceDefinition="${serviceDefinition}" serviceClassNameProperty="serviceClassName"/>
        <gen-gwt-service-impl srcdir="${srcDir}" testdir="${testDir}" wardir="${warDir}" serviceDefinition="${serviceDefinition}" serviceClassName="${serviceClassName}"/>
    </target>
    
    <target name="copy">
        <copy todir="war/WEB-INF/lib" file="../slim3/target/slim3-${ver}.jar"/>
        <copy todir="libsrc" file="../slim3/target/slim3-${ver}-sources.jar"/>
        <copy todir="lib" file="../slim3-gen/target/slim3-gen-${ver}.jar"/>
        <copy todir="libsrc" file="../slim3-gen/target/slim3-gen-${ver}-sources.jar"/>
        <copy todir="src" file="../slim3/src/main/resources/application_en.properties"/>
        <copy todir="src" file="../slim3/src/main/resources/application_ja.properties"/>
    </target>

    <target name="dist">
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="target"/>
        </delete>
        <mkdir dir="target"/>
        <zip zipfile="target/slim3-blank-${ver}.zip">
            <zipfileset prefix="slim3-blank" dir=".">
                <exclude name="target/**"/>
                <exclude name="war/WEB-INF/classes/**"/>
            </zipfileset>
        </zip>
    </target>
</project>#set($dollar = '$')
#set($lcurly = '{')
<project name="slim3-blank" default="gen-controller" basedir=".">
    <property file="build.properties" />

    <path id="classpath">
        <fileset dir="war/WEB-INF/classes">
            <include name="**/*.class" />
        </fileset>
        <fileset dir="war/WEB-INF/lib">
            <include name="**/*.jar" />
        </fileset>
        <fileset dir="eclipse.lib">
            <include name="**/*.jar" />
        </fileset>
    </path>

    <taskdef name="gen-model" classname="org.slim3.gen.task.GenModelTask" classpathref="classpath"/>
    <taskdef name="gen-dao" classname="org.slim3.gen.task.GenDaoTask" classpathref="classpath"/>
    <taskdef name="gen-view" classname="org.slim3.gen.task.GenViewTask" classpathref="classpath"/>
	<taskdef name="gen-service" classname="org.slim3.gen.task.GenServiceTask" classpathref="classpath"/>
	<taskdef name="gen-controller" classname="org.slim3.gen.task.GenControllerTask" classpathref="classpath"/>
    <taskdef name="gen-gwt-service" classname="org.slim3.gen.task.GenGWTServiceTask" classpathref="classpath"/>
    <taskdef name="gen-gwt-service-impl" classname="org.slim3.gen.task.GenGWTServiceImplTask" classpathref="classpath"/>

    <target name="gen-controller">
        <input message="Input a controller path." addproperty="controllerPath"/>
        <gen-controller srcdir="${dollar}${lcurly}srcDir}" testdir="${dollar}${lcurly}testDir}" wardir="${dollar}${lcurly}warDir}" controllerpath="${dollar}${lcurly}controllerPath}"
             useView="true"/>
        <gen-view wardir="${dollar}${lcurly}warDir}" controllerPath="${dollar}${lcurly}controllerPath}"/>
    </target>

    <target name="gen-controller-without-view">
        <input message="Input a controller path." addproperty="controllerPath"/>
        <gen-controller srcdir="${dollar}${lcurly}srcDir}" testdir="${dollar}${lcurly}testDir}" wardir="${dollar}${lcurly}warDir}" controllerpath="${dollar}${lcurly}controllerPath}"
            useView="false"/>
    </target>

    <target name="gen-model">
        <input message="Input a model name. (ex.  Foo -> root.model.Foo,  bar.Foo -> root.model.bar.Foo). Sub-model extends Super-model." addproperty="modelDefinition"/>
        <gen-model srcdir="${dollar}${lcurly}srcDir}" testdir="${dollar}${lcurly}testDir}" wardir="${dollar}${lcurly}warDir}" modelDefinition="${dollar}${lcurly}modelDefinition}" modelClassNameProperty="modelClassName"/>
    </target>

    <target name="gen-model-with-dao">
        <input message="Input a model name. (ex.  Foo -> root.model.Foo,  bar.Foo -> root.model.bar.Foo). Sub-model extends Super-model." addproperty="modelDefinition"/>
        <gen-model srcdir="${dollar}${lcurly}srcDir}" testdir="${dollar}${lcurly}testDir}" wardir="${dollar}${lcurly}warDir}" modelDefinition="${dollar}${lcurly}modelDefinition}" modelClassNameProperty="modelClassName"/>
        <gen-dao srcdir="${dollar}${lcurly}srcDir}" testdir="${dollar}${lcurly}testDir}" wardir="${dollar}${lcurly}warDir}" modelDefinition="${dollar}${lcurly}modelDefinition}" daoClassNameProperty="daoClassName"/>
    </target>

    <target name="gen-service">
        <input message="Input a service name. (ex.  FooService -> root.service.FooService,  bar.FooService -> root.service.bar.FooService)" addproperty="serviceDefinition"/>
        <gen-service srcdir="${dollar}${lcurly}srcDir}" testdir="${dollar}${lcurly}testDir}" wardir="${dollar}${lcurly}warDir}" serviceDefinition="${dollar}${lcurly}serviceDefinition}"/>
    </target>

	<target name="gen-gwt-service">
        <input message="Input a GWT service name. (ex.  FooService -> root.client.service.FooService,  bar.FooService -> root.client.service.bar.FooService)" addproperty="serviceDefinition"/>
        <gen-gwt-service srcdir="${dollar}${lcurly}srcDir}" testdir="${dollar}${lcurly}testDir}" wardir="${dollar}${lcurly}warDir}" serviceDefinition="${dollar}${lcurly}serviceDefinition}" serviceClassNameProperty="serviceClassName"/>
        <gen-gwt-service-impl srcdir="${dollar}${lcurly}srcDir}" testdir="${dollar}${lcurly}testDir}" wardir="${dollar}${lcurly}warDir}" serviceDefinition="${dollar}${lcurly}serviceDefinition}" serviceClassName="${dollar}${lcurly}serviceClassName}"/>
    </target>

    <target name="copy">
        <copy todir="war/WEB-INF/lib" file="../slim3/target/slim3-${dollar}${lcurly}ver}.jar"/>
        <copy todir="libsrc" file="../slim3/target/slim3-${dollar}${lcurly}ver}-sources.jar"/>
        <copy todir="lib" file="../slim3-gen/target/slim3-gen-${dollar}${lcurly}ver}.jar"/>
        <copy todir="libsrc" file="../slim3-gen/target/slim3-gen-${dollar}${lcurly}ver}-sources.jar"/>
        <copy todir="src" file="../slim3/src/main/resources/application_en.properties"/>
        <copy todir="src" file="../slim3/src/main/resources/application_ja.properties"/>
    </target>

    <target name="dist">
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="target"/>
        </delete>
        <mkdir dir="target"/>
        <zip zipfile="target/slim3-blank-${dollar}${lcurly}ver}.zip">
            <zipfileset prefix="slim3-blank" dir=".">
                <exclude name="target/**"/>
                <exclude name="war/WEB-INF/classes/**"/>
            </zipfileset>
        </zip>
    </target>
</project>
#set($dollar = '$')
#set($lcurly = '{')
<project name="slim3-blank" default="gen-controller" basedir=".">
    <property file="build.properties" />

    <path id="classpath">
        <fileset dir="src/main/webapp/WEB-INF/classes">
            <include name="**/*.class" />
        </fileset>
        <fileset dir="src/main/webapp">
            <include name="**/*.jar" />
        </fileset>
        <fileset dir="eclipse.lib">
            <include name="**/*.jar" />
        </fileset>
    </path>

    <taskdef name="gen-model" classname="org.slim3.gen.task.GenModelTask" classpathref="classpath"/>
    <taskdef name="gen-dao" classname="org.slim3.gen.task.GenDaoTask" classpathref="classpath"/>
    <taskdef name="gen-view" classname="org.slim3.gen.task.GenViewTask" classpathref="classpath"/>
	<taskdef name="gen-service" classname="org.slim3.gen.task.GenServiceTask" classpathref="classpath"/>
	<taskdef name="gen-controller" classname="org.slim3.gen.task.GenControllerTask" classpathref="classpath"/>
    <taskdef name="gen-gwt-service" classname="org.slim3.gen.task.GenGWTServiceTask" classpathref="classpath"/>
    <taskdef name="gen-gwt-service-impl" classname="org.slim3.gen.task.GenGWTServiceImplTask" classpathref="classpath"/>
    
    <target name="gen-controller">
        <input message="Input a controller path." addproperty="controllerPath"/>
        <gen-controller srcdir="${dollar}${lcurly}srcDir}" testdir="${dollar}${lcurly}testDir}" wardir="${dollar}${lcurly}warDir}" controllerpath="${dollar}${lcurly}controllerPath}"
             useView="true"/>
        <gen-view wardir="${dollar}${lcurly}warDir}" controllerPath="${dollar}${lcurly}controllerPath}"/>
    </target>

    <target name="gen-controller-without-view">
        <input message="Input a controller path." addproperty="controllerPath"/>
        <gen-controller srcdir="${dollar}${lcurly}srcDir}" testdir="${dollar}${lcurly}testDir}" wardir="${dollar}${lcurly}warDir}" controllerpath="${dollar}${lcurly}controllerPath}"
            useView="false"/>
    </target>

    <target name="gen-model">
        <input message="Input a model name. (ex.  Foo -> root.model.Foo,  bar.Foo -> root.model.bar.Foo). Sub-model extends Super-model." addproperty="modelDefinition"/>
        <gen-model srcdir="${dollar}${lcurly}srcDir}" testdir="${dollar}${lcurly}testDir}" wardir="${dollar}${lcurly}warDir}" modelDefinition="${dollar}${lcurly}modelDefinition}" modelClassNameProperty="modelClassName"/>
    </target>

    <target name="gen-model-with-dao">
        <input message="Input a model name. (ex.  Foo -> root.model.Foo,  bar.Foo -> root.model.bar.Foo). Sub-model extends Super-model." addproperty="modelDefinition"/>
        <gen-model srcdir="${dollar}${lcurly}srcDir}" testdir="${dollar}${lcurly}testDir}" wardir="${dollar}${lcurly}warDir}" modelDefinition="${dollar}${lcurly}modelDefinition}" modelClassNameProperty="modelClassName"/>
        <gen-dao srcdir="${dollar}${lcurly}srcDir}" testdir="${dollar}${lcurly}testDir}" wardir="${dollar}${lcurly}warDir}" modelDefinition="${dollar}${lcurly}modelDefinition}" daoClassNameProperty="daoClassName"/>
    </target>

    <target name="gen-service">
        <input message="Input a service name. (ex.  FooService -> root.service.FooService,  bar.FooService -> root.service.bar.FooService)" addproperty="serviceDefinition"/>
        <gen-service srcdir="${dollar}${lcurly}srcDir}" testdir="${dollar}${lcurly}testDir}" wardir="${dollar}${lcurly}warDir}" serviceDefinition="${dollar}${lcurly}serviceDefinition}"/>
    </target>
   
	<target name="gen-gwt-service">
        <input message="Input a GWT service name. (ex.  FooService -> root.client.service.FooService,  bar.FooService -> root.client.service.bar.FooService)" addproperty="serviceDefinition"/>
        <gen-gwt-service srcdir="${dollar}${lcurly}srcDir}" testdir="${dollar}${lcurly}testDir}" wardir="${dollar}${lcurly}warDir}" serviceDefinition="${dollar}${lcurly}serviceDefinition}" serviceClassNameProperty="serviceClassName"/>
        <gen-gwt-service-impl srcdir="${dollar}${lcurly}srcDir}" testdir="${dollar}${lcurly}testDir}" wardir="${dollar}${lcurly}warDir}" serviceDefinition="${dollar}${lcurly}serviceDefinition}" serviceClassName="${dollar}${lcurly}serviceClassName}"/>
    </target>
    
    <target name="copy">
        <copy todir="src/main/webapp/WEB-INF/lib" file="../slim3/target/slim3-${dollar}${lcurly}ver}.jar"/>
        <copy todir="libsrc" file="../slim3/target/slim3-${dollar}${lcurly}ver}-sources.jar"/>
        <copy todir="lib" file="../slim3-gen/target/slim3-gen-${dollar}${lcurly}ver}.jar"/>
        <copy todir="libsrc" file="../slim3-gen/target/slim3-gen-${dollar}${lcurly}ver}-sources.jar"/>
        <copy todir="src" file="../slim3/src/main/resources/application_en.properties"/>
        <copy todir="src" file="../slim3/src/main/resources/application_ja.properties"/>
    </target>

    <target name="dist">
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="target"/>
        </delete>
        <mkdir dir="target"/>
        <zip zipfile="target/slim3-blank-${dollar}${lcurly}ver}.zip">
            <zipfileset prefix="slim3-blank" dir=".">
                <exclude name="target/**"/>
                <exclude name="src/main/webapp/WEB-INF/classes/**"/>
            </zipfileset>
        </zip>
    </target>
</project>
<project name="slim3-blank" default="gen-controller" basedir=".">
    <property file="build.properties" />

    <path id="classpath">
        <fileset dir="war/WEB-INF/classes">
            <include name="**/*.class" />
        </fileset>
        <fileset dir="war/WEB-INF/lib">
            <include name="**/*.jar" />
        </fileset>
        <fileset dir="lib">
            <include name="**/*.jar" />
        </fileset>
    </path>

    <taskdef name="gen-model" classname="org.slim3.gen.task.GenModelTask" classpathref="classpath"/>
    <taskdef name="gen-dao" classname="org.slim3.gen.task.GenDaoTask" classpathref="classpath"/>
    <taskdef name="gen-view" classname="org.slim3.gen.task.GenViewTask" classpathref="classpath"/>
	<taskdef name="gen-service" classname="org.slim3.gen.task.GenServiceTask" classpathref="classpath"/>
	<taskdef name="gen-controller" classname="org.slim3.gen.task.GenControllerTask" classpathref="classpath"/>
    <taskdef name="gen-gwt-service" classname="org.slim3.gen.task.GenGWTServiceTask" classpathref="classpath"/>
    <taskdef name="gen-gwt-service-impl" classname="org.slim3.gen.task.GenGWTServiceImplTask" classpathref="classpath"/>
    
    <target name="gen-controller">
        <input message="Input a controller path." addproperty="controllerPath"/>
        <gen-controller srcdir="${srcDir}" testdir="${testDir}" wardir="${warDir}" controllerpath="${controllerPath}"
             useView="true"/>
        <gen-view wardir="${warDir}" controllerPath="${controllerPath}"/>
    </target>

    <target name="gen-controller-without-view">
        <input message="Input a controller path." addproperty="controllerPath"/>
        <gen-controller srcdir="${srcDir}" testdir="${testDir}" wardir="${warDir}" controllerpath="${controllerPath}"
            useView="false"/>
    </target>

    <target name="gen-model">
        <input message="Input a model name. (ex.  Foo -> root.model.Foo,  bar.Foo -> root.model.bar.Foo). Sub-model extends Super-model." addproperty="modelDefinition"/>
        <gen-model srcdir="${srcDir}" testdir="${testDir}" wardir="${warDir}" modelDefinition="${modelDefinition}" modelClassNameProperty="modelClassName"/>
    </target>

    <target name="gen-model-with-dao">
        <input message="Input a model name. (ex.  Foo -> root.model.Foo,  bar.Foo -> root.model.bar.Foo). Sub-model extends Super-model." addproperty="modelDefinition"/>
        <gen-model srcdir="${srcDir}" testdir="${testDir}" wardir="${warDir}" modelDefinition="${modelDefinition}" modelClassNameProperty="modelClassName"/>
        <gen-dao srcdir="${srcDir}" testdir="${testDir}" wardir="${warDir}" modelDefinition="${modelDefinition}" daoClassNameProperty="daoClassName"/>
    </target>

	<target name="gen-service">
        <input message="Input a service name. (ex.  FooService -> root.service.FooService,  bar.FooService -> root.service.bar.FooService)" addproperty="serviceDefinition"/>
        <gen-service srcdir="${srcDir}" testdir="${testDir}" wardir="${warDir}" serviceDefinition="${serviceDefinition}"/>
    </target>
   
	<target name="gen-gwt-service">
        <input message="Input a GWT service name. (ex.  FooService -> root.client.service.FooService,  bar.FooService -> root.client.service.bar.FooService)" addproperty="serviceDefinition"/>
        <gen-gwt-service srcdir="${srcDir}" testdir="${testDir}" wardir="${warDir}" serviceDefinition="${serviceDefinition}" serviceClassNameProperty="serviceClassName"/>
        <gen-gwt-service-impl srcdir="${srcDir}" testdir="${testDir}" wardir="${warDir}" serviceDefinition="${serviceDefinition}" serviceClassName="${serviceClassName}"/>
    </target>
    
    <target name="copy">
        <copy todir="war/WEB-INF/lib" file="../slim3/target/slim3-${ver}.jar"/>
        <copy todir="libsrc" file="../slim3/target/slim3-${ver}-sources.jar"/>
        <copy todir="lib" file="../slim3-gen/target/slim3-gen-${ver}.jar"/>
        <copy todir="libsrc" file="../slim3-gen/target/slim3-gen-${ver}-sources.jar"/>
        <copy todir="src" file="../slim3/src/main/resources/application_en.properties"/>
        <copy todir="src" file="../slim3/src/main/resources/application_ja.properties"/>
    </target>

    <target name="dist">
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="target"/>
        </delete>
        <mkdir dir="target"/>
        <zip zipfile="target/slim3-blank-${ver}.zip">
            <zipfileset prefix="slim3-blank" dir=".">
                <exclude name="target/**"/>
                <exclude name="war/WEB-INF/classes/**"/>
            </zipfileset>
        </zip>
    </target>
</project><project name="slim3-gen-extension-example" default="dist" basedir=".">

    <property file="build.properties" />

    <target name="dist" depends="clean,copy">
        <jar jarfile="target/slim3-gen-${ver}.jar" basedir="${build}" />
        <jar jarfile="target/slim3-gen-${ver}-sources.jar" basedir="${src}" />
    </target>

    <target name="clean">
        <delete dir="target" failonerror="false"/>
        <mkdir dir="target"/>
        <mkdir dir="${build}"/>
    </target>

    <target name="copy">
        <copy todir="${build}">
            <fileset dir="../slim3-gen/build/classes">
                <exclude name="META-INF/services/**" />
            </fileset>
        </copy>
    	<copy todir="${build}">
    	    <fileset dir="build/classes">
    	    </fileset>
    	</copy>
    </target>
</project><project name="slim3-gen" default="dist" basedir=".">

    <property file="build.properties" />

    <path id="classpath">
    </path>

    <target name="dist" depends="clean,compile,copy">
        <jar jarfile="target/slim3-gen-${ver}.jar" basedir="${build}" />
        <jar jarfile="target/slim3-gen-${ver}-sources.jar" basedir="${src}" />
    </target>

    <target name="clean">
        <delete dir="target" failonerror="false"/>
        <mkdir dir="target"/>
        <mkdir dir="${build}"/>
    </target>

    <target name="compile" depends="clean">
        <javac fork="yes" srcdir="${src}" compiler="javac1.5"
            classpathref="classpath" destdir="${build}" debug="on" encoding="UTF-8">
        </javac>
    </target>

    <target name="copy" depends="compile">
        <filter token="VERSION" value="${ver}" />
        <copy todir="${build}" filtering="true">
            <fileset dir="${resources}">
                <include name="**/*.properties" />
                <include name="**/*.xml" />
                <include name="**/*.dtd" />
            	<include name="META-INF/**" />
            </fileset>
        </copy>
    </target>
</project><project name="slim3-gen" default="dist" basedir=".">

    <property file="build.properties" />

    <path id="classpath">
    </path>

    <target name="dist" depends="clean,compile,copy">
        <jar jarfile="target/slim3-gen-${ver}.jar" basedir="${build}" />
        <jar jarfile="target/slim3-gen-${ver}-sources.jar" basedir="${src}" />
    </target>

    <target name="clean">
        <delete dir="target" failonerror="false"/>
        <mkdir dir="target"/>
        <mkdir dir="${build}"/>
    </target>

    <target name="compile" depends="clean">
        <javac fork="yes" srcdir="${src}" compiler="javac1.5"
            classpathref="classpath" destdir="${build}" debug="on" encoding="UTF-8">
        </javac>
    </target>

    <target name="copy" depends="compile">
        <filter token="VERSION" value="${ver}" />
        <copy todir="${build}" filtering="true">
            <fileset dir="${resources}">
                <include name="**/*.properties" />
                <include name="**/*.xml" />
                <include name="**/*.dtd" />
            	<include name="META-INF/**" />
            </fileset>
        </copy>
    </target>
</project><project name="slim3" default="dist" basedir=".">

	<property file="build.properties" />
	
	<target name="update-ver">
        <replaceregexp
            match="(ver=)(.+)"
            replace="\1${ver}" encoding="UTF-8">
            <fileset dir="../slim3-blank" includes="build.properties" />
        	<fileset dir="../slim3demo" includes="build.properties" />
        	<fileset dir="../slim3-gen" includes="build.properties" />
        </replaceregexp>
	</target>

    <path id="project.classpath">
        <pathelement path="build/classes" />
	    <fileset dir="lib">
            <include name="**/*.jar" />
        </fileset>
    </path>

	<target name="dist" depends="clean">
		<copy file="src/main/resources/org/slim3/gwt/emul/com/google/appengine/api/datastore/Key_CustomFieldSerializer.java" tofile="build/classes/org/slim3/gwt/emul/com/google/appengine/api/datastore/Key_CustomFieldSerializer.java"/>
		<copy file="src/main/resources/org/slim3/gwt/emul/com/google/appengine/api/datastore/AppIdNamespace_CustomFieldSerializer.java" tofile="build/classes/org/slim3/gwt/emul/com/google/appengine/api/datastore/AppIdNamespace_CustomFieldSerializer.java"/>
		<copy file="src/main/resources/org/slim3/gwt/emul/com/google/appengine/api/datastore/KeyFactory.java" tofile="build/classes/org/slim3/gwt/emul/com/google/appengine/api/datastore/KeyFactory.java"/>
		<copy file="src/main/resources/org/slim3/gwt/emul/com/google/appengine/api/datastore/Key.java" tofile="build/classes/org/slim3/gwt/emul/com/google/appengine/api/datastore/Key.java"/>
		<copy file="src/main/resources/org/slim3/gwt/emul/com/google/appengine/api/datastore/AppIdNamespace.java" tofile="build/classes/org/slim3/gwt/emul/com/google/appengine/api/datastore/AppIdNamespace.java"/>
		<copy file="src/main/resources/org/slim3/gwt/emul/com/google/appengine/api/datastore/Transaction.java" tofile="build/classes/org/slim3/gwt/emul/com/google/appengine/api/datastore/Transaction.java"/>
		<copy file="src/main/resources/org/slim3/gwt/emul/com/google/appengine/api/datastore/Entity.java" tofile="build/classes/org/slim3/gwt/emul/com/google/appengine/api/datastore/Entity.java"/>
		<copy file="src/main/resources/org/slim3/gwt/emul/com/google/appengine/api/datastore/Query.java" tofile="build/classes/org/slim3/gwt/emul/com/google/appengine/api/datastore/Query.java"/>
		<copy file="src/main/resources/org/slim3/gwt/emul/com/google/appengine/api/datastore/Blob_CustomFieldSerializer.java" tofile="build/classes/org/slim3/gwt/emul/com/google/appengine/api/datastore/Blob_CustomFieldSerializer.java"/>
		<copy file="src/main/resources/org/slim3/gwt/emul/com/google/appengine/api/datastore/Entity_CustomFieldSerializer.java" tofile="build/classes/org/slim3/gwt/emul/com/google/appengine/api/datastore/Entity_CustomFieldSerializer.java"/>
		<copy file="src/main/resources/org/slim3/gwt/emul/com/google/appengine/api/datastore/Text_CustomFieldSerializer.java" tofile="build/classes/org/slim3/gwt/emul/com/google/appengine/api/datastore/Text_CustomFieldSerializer.java"/>
		<copy file="src/main/resources/org/slim3/gwt/emul/com/google/appengine/api/datastore/Text.java" tofile="build/classes/org/slim3/gwt/emul/com/google/appengine/api/datastore/Text.java"/>
		<copy file="src/main/resources/org/slim3/gwt/emul/com/google/appengine/api/datastore/Blob.java" tofile="build/classes/org/slim3/gwt/emul/com/google/appengine/api/datastore/Blob.java"/>
		<copy file="src/main/resources/org/slim3/gwt/emul/com/google/appengine/api/datastore/Category_CustomFieldSerializer.java" tofile="build/classes/org/slim3/gwt/emul/com/google/appengine/api/datastore/Category_CustomFieldSerializer.java"/>
		<copy file="src/main/resources/org/slim3/gwt/emul/com/google/appengine/api/datastore/Category.java" tofile="build/classes/org/slim3/gwt/emul/com/google/appengine/api/datastore/Category.java"/>
		<copy file="src/main/resources/org/slim3/gwt/emul/com/google/appengine/api/datastore/Email_CustomFieldSerializer.java" tofile="build/classes/org/slim3/gwt/emul/com/google/appengine/api/datastore/Email_CustomFieldSerializer.java"/>
		<copy file="src/main/resources/org/slim3/gwt/emul/com/google/appengine/api/datastore/Email.java" tofile="build/classes/org/slim3/gwt/emul/com/google/appengine/api/datastore/Email.java"/>
		<copy file="src/main/resources/org/slim3/gwt/emul/com/google/appengine/api/datastore/GeoPt_CustomFieldSerializer.java" tofile="build/classes/org/slim3/gwt/emul/com/google/appengine/api/datastore/GeoPt_CustomFieldSerializer.java"/>
		<copy file="src/main/resources/org/slim3/gwt/emul/com/google/appengine/api/datastore/GeoPt.java" tofile="build/classes/org/slim3/gwt/emul/com/google/appengine/api/datastore/GeoPt.java"/>
		<copy file="src/main/resources/org/slim3/gwt/emul/com/google/appengine/api/datastore/Link_CustomFieldSerializer.java" tofile="build/classes/org/slim3/gwt/emul/com/google/appengine/api/datastore/Link_CustomFieldSerializer.java"/>
		<copy file="src/main/resources/org/slim3/gwt/emul/com/google/appengine/api/datastore/Link.java" tofile="build/classes/org/slim3/gwt/emul/com/google/appengine/api/datastore/Link.java"/>
		<copy file="src/main/resources/org/slim3/gwt/emul/com/google/appengine/api/datastore/PhoneNumber_CustomFieldSerializer.java" tofile="build/classes/org/slim3/gwt/emul/com/google/appengine/api/datastore/PhoneNumber_CustomFieldSerializer.java"/>
		<copy file="src/main/resources/org/slim3/gwt/emul/com/google/appengine/api/datastore/PhoneNumber.java" tofile="build/classes/org/slim3/gwt/emul/com/google/appengine/api/datastore/PhoneNumber.java"/>
		<copy file="src/main/resources/org/slim3/gwt/emul/com/google/appengine/api/datastore/PostalAddress_CustomFieldSerializer.java" tofile="build/classes/org/slim3/gwt/emul/com/google/appengine/api/datastore/PostalAddress_CustomFieldSerializer.java"/>
		<copy file="src/main/resources/org/slim3/gwt/emul/com/google/appengine/api/datastore/PostalAddress.java" tofile="build/classes/org/slim3/gwt/emul/com/google/appengine/api/datastore/PostalAddress.java"/>
		<copy file="src/main/resources/org/slim3/gwt/emul/com/google/appengine/api/datastore/Rating_CustomFieldSerializer.java" tofile="build/classes/org/slim3/gwt/emul/com/google/appengine/api/datastore/Rating_CustomFieldSerializer.java"/>
		<copy file="src/main/resources/org/slim3/gwt/emul/com/google/appengine/api/datastore/Rating.java" tofile="build/classes/org/slim3/gwt/emul/com/google/appengine/api/datastore/Rating.java"/>
		<copy file="src/main/resources/org/slim3/gwt/emul/com/google/appengine/api/datastore/ShortBlob_CustomFieldSerializer.java" tofile="build/classes/org/slim3/gwt/emul/com/google/appengine/api/datastore/ShortBlob_CustomFieldSerializer.java"/>
		<copy file="src/main/resources/org/slim3/gwt/emul/com/google/appengine/api/datastore/ShortBlob.java" tofile="build/classes/org/slim3/gwt/emul/com/google/appengine/api/datastore/ShortBlob.java"/>
		<copy file="src/main/resources/org/slim3/gwt/emul/com/google/appengine/api/users/User_CustomFieldSerializer.java" tofile="build/classes/org/slim3/gwt/emul/com/google/appengine/api/users/User_CustomFieldSerializer.java"/>
		<copy file="src/main/resources/org/slim3/gwt/emul/com/google/appengine/api/users/User.java" tofile="build/classes/org/slim3/gwt/emul/com/google/appengine/api/users/User.java"/>
		
		<copy file="src/main/resources/org/slim3/gwt/emul/org/slim3/datastore/ModelMeta.java" tofile="build/classes/org/slim3/gwt/emul/org/slim3/datastore/ModelMeta.java"/>
		<copy file="src/main/resources/org/slim3/gwt/emul/org/slim3/datastore/AbstractModelRef.java" tofile="build/classes/org/slim3/gwt/emul/org/slim3/datastore/AbstractModelRef.java"/>
		<copy file="src/main/resources/org/slim3/gwt/emul/org/slim3/datastore/ModelRef.java" tofile="build/classes/org/slim3/gwt/emul/org/slim3/datastore/ModelRef.java"/>
		<copy file="src/main/resources/org/slim3/gwt/emul/org/slim3/datastore/AbstractInverseModelRef.java" tofile="build/classes/org/slim3/gwt/emul/org/slim3/datastore/AbstractInverseModelRef.java"/>
		<copy file="src/main/resources/org/slim3/gwt/emul/org/slim3/datastore/InverseModelRef.java" tofile="build/classes/org/slim3/gwt/emul/org/slim3/datastore/InverseModelRef.java"/>
		<copy file="src/main/resources/org/slim3/gwt/emul/org/slim3/datastore/InverseModelListRef.java" tofile="build/classes/org/slim3/gwt/emul/org/slim3/datastore/InverseModelListRef.java"/>
		<copy file="src/main/resources/org/slim3/gwt/emul/org/slim3/datastore/Sort.java" tofile="build/classes/org/slim3/gwt/emul/org/slim3/datastore/Sort.java"/>
		<copy file="src/main/resources/org/slim3/gwt/emul/org/slim3/datastore/S3QueryResultList.java" tofile="build/classes/org/slim3/gwt/emul/org/slim3/datastore/S3QueryResultList.java"/>
	    <jar jarfile="target/slim3-${ver}.jar" basedir="build/classes"/>
	    <jar jarfile="target/slim3-${ver}-sources.jar" basedir="src/main/java"/>
	</target>

    <target name="clean">
        <delete dir="target" failonerror="false"/>
        <mkdir dir="target"/>
    </target>
	
	<target name="copyJavadoc">
		<copy todir="javadoc">
			<fileset dir="target/site/apidocs">
			</fileset>
	    </copy>
    </target>
</project><project name="slim3demo" default="gen-controller" basedir=".">
	<property file="build.properties" />

    <path id="classpath">
        <fileset dir="war/WEB-INF/classes">
            <include name="**/*.class" />
        </fileset>
        <fileset dir="war/WEB-INF/lib">
            <include name="**/*.jar" />
        </fileset>
        <fileset dir="lib">
            <include name="**/*.jar" />
        </fileset>
    </path>

    <taskdef name="gen-model" classname="org.slim3.gen.task.GenModelTask" classpathref="classpath"/>
    <taskdef name="gen-dao" classname="org.slim3.gen.task.GenDaoTask" classpathref="classpath"/>
    <taskdef name="gen-view" classname="org.slim3.gen.task.GenViewTask" classpathref="classpath"/>
    <taskdef name="gen-controller" classname="org.slim3.gen.task.GenControllerTask" classpathref="classpath"/>
	<taskdef name="gen-service" classname="org.slim3.gen.task.GenServiceTask" classpathref="classpath"/>
    <taskdef name="gen-gwt-service" classname="org.slim3.gen.task.GenGWTServiceTask" classpathref="classpath"/>
    <taskdef name="gen-gwt-service-impl" classname="org.slim3.gen.task.GenGWTServiceImplTask" classpathref="classpath"/>
	
	<target name="gen-controller">
        <input message="Input a controller path." addproperty="controllerPath"/>
        <gen-controller srcdir="${srcDir}" testdir="${testDir}" wardir="${warDir}" controllerpath="${controllerPath}"
             useView="true"/>
        <gen-view wardir="${warDir}" controllerPath="${controllerPath}"/>
    </target>

    <target name="gen-controller-without-view">
        <input message="Input a controller path." addproperty="controllerPath"/>
        <gen-controller srcdir="${srcDir}" testdir="${testDir}" wardir="${warDir}" controllerpath="${controllerPath}"
            useView="false"/>
    </target>

    <target name="gen-model">
        <input message="Input a model name. (ex.  Foo -> root.model.Foo,  bar.Foo -> root.model.bar.Foo). Sub-model extends Super-model." addproperty="modelDefinition"/>
        <gen-model srcdir="${srcDir}" testdir="${testDir}" wardir="${warDir}" modelDefinition="${modelDefinition}" modelClassNameProperty="modelClassName"/>
    </target>

    <target name="gen-model-with-dao">
        <input message="Input a model name. (ex.  Foo -> root.model.Foo,  bar.Foo -> root.model.bar.Foo). Sub-model extends Super-model." addproperty="modelDefinition"/>
        <gen-model srcdir="${srcDir}" testdir="${testDir}" wardir="${warDir}" modelDefinition="${modelDefinition}" modelClassNameProperty="modelClassName"/>
        <gen-dao srcdir="${srcDir}" testdir="${testDir}" wardir="${warDir}" modelDefinition="${modelDefinition}" daoClassNameProperty="daoClassName"/>
    </target>

	<target name="gen-service">
        <input message="Input a service name. (ex.  FooService -> root.service.FooService,  bar.FooService -> root.service.bar.FooService)" addproperty="serviceDefinition"/>
        <gen-service srcdir="${srcDir}" testdir="${testDir}" wardir="${warDir}" serviceDefinition="${serviceDefinition}"/>
    </target>
	
	<target name="gen-gwt-service">
        <input message="Input a GWT service name. (ex.  FooService -> root.client.service.FooService,  bar.FooService -> root.client.service.bar.FooService)" addproperty="serviceDefinition"/>
        <gen-gwt-service srcdir="${srcDir}" testdir="${testDir}" wardir="${warDir}" serviceDefinition="${serviceDefinition}" serviceClassNameProperty="serviceClassName"/>
        <gen-gwt-service-impl srcdir="${srcDir}" testdir="${testDir}" wardir="${warDir}" serviceDefinition="${serviceDefinition}" serviceClassName="${serviceClassName}"/>
    </target>
	
    <target name="copy">
        <copy todir="war/WEB-INF/lib" file="../slim3/target/slim3-${ver}.jar"/>
        <copy todir="libsrc" file="../slim3/target/slim3-${ver}-sources.jar"/>
        <copy todir="lib" file="../slim3-gen/target/slim3-gen-${ver}.jar"/>
        <copy todir="libsrc" file="../slim3-gen/target/slim3-gen-${ver}-sources.jar"/>
    	<!--
        <copy todir="src" file="../slim3/src/main/resources/application_en.properties"/>
        <copy todir="src" file="../slim3/src/main/resources/application_ja.properties"/>
        -->
    </target>

	<target name="dist">
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="target"/>
        </delete>
        <mkdir dir="target"/>
        <zip zipfile="target/slim3demo-${ver}.zip">
            <zipfileset prefix="slim3demo" dir=".">
                <exclude name="target/**"/>
                <exclude name="war/WEB-INF/classes/**"/>
            </zipfileset>
        </zip>
    </target>
</project>