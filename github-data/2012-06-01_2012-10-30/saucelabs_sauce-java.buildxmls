<?xml version="1.0" encoding="UTF-8"?>
<project name="quickstart-seleniumrc-junit" default="release" basedir=".">

    <property file="build.properties"/>
    <path id="classpath">
        <fileset dir="${lib.dir}">
            <include name="**/*.jar"/>
            <include name="**/*.zip"/>
        </fileset>

        <pathelement location="${test.classes.dir}"/>
        <pathelement location="${lib.dir}"/>
    </path>

    <target name="clean" description="Removes the directories created by previous runs of the build script">
        <delete dir="${test.classes.dir}"/>
        <delete dir="${reports.xml.dir}"/>
        <delete dir="${reports.html.dir}"/>
    </target>

    <target name="init" depends="clean" description="Creates the directories required by the build script">
        <mkdir dir="${test.classes.dir}"/>
        <mkdir dir="${reports.dir}"/>
        <mkdir dir="${reports.xml.dir}"/>
        <mkdir dir="${reports.html.dir}"/>
    </target>

    <target name="test.junit" depends="compile-test" description="Runs the Unit tests">
        <junit fork="yes" printsummary="on" failureProperty="test.failure" haltonerror="false">
            <classpath location="${test.classes.dir}"/>
            <classpath refid="classpath"/>
            <syspropertyset>
                <propertyref builtin="commandline"/>
            </syspropertyset>
            <formatter type="xml" usefile="true"/>
            <batchtest todir="${reports.xml.dir}" fork="yes">
                <fileset dir="${test.src.dir}">
                    <include name="**/*Test.java"/>
                </fileset>
            </batchtest>
        </junit>
        <junitreport todir="${reports.xml.dir}">
            <fileset dir="${reports.xml.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${reports.html.dir}"/>
        </junitreport>
    </target>

    <target name="compile-test" description="Compiles the test files">
        <javac destdir="${test.classes.dir}" debug="${javac.debug}" srcdir="${test.src.dir}" classpathref="classpath"/>
    </target>

    <target name="release" depends="init,test.junit"/>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project name="quickstart-seleniumrc-testng" default="release" basedir=".">

    <property file="build.properties"/>
    <path id="classpath">
        <fileset dir="${lib.dir}">
            <include name="**/*.jar"/>
            <include name="**/*.zip"/>
        </fileset>

        <pathelement location="${test.classes.dir}"/>
        <pathelement location="${lib.dir}"/>
    </path>

    <target name="clean" description="Removes the directories created by previous runs of the build script">
        <delete dir="${test.classes.dir}"/>
        <delete dir="${reports.xml.dir}"/>
        <delete dir="${reports.html.dir}"/>
    </target>

    <target name="init" depends="clean" description="Creates the directories required by the build script">
        <mkdir dir="${test.classes.dir}"/>
        <mkdir dir="${reports.dir}"/>
        <mkdir dir="${reports.xml.dir}"/>
        <mkdir dir="${reports.html.dir}"/>
    </target>

    <taskdef resource="testngtasks" classpath="${lib.dir}/testng-6.1.1.jar"/>

    <target name="test.testng" depends="compile-test" description="Runs the Unit tests">
        <testng outputdir="${reports.xml.dir}" classpathref="classpath">
            <sysproperty key="username" value="${sauce.userName}"/>
            <sysproperty key="key" value="${sauce.accessKey}"/>
            <classfileset dir="${test.classes.dir}" includes="**/*.class"/>
        </testng>
    </target>

    <target name="compile-test" description="Compiles the test files">
        <javac destdir="${test.classes.dir}" debug="${javac.debug}" srcdir="${test.src.dir}" classpathref="classpath"/>
    </target>

    <target name="release" depends="init,test.testng"/>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project name="quickstart-webdriver-junit" default="release" basedir=".">

    <property file="build.properties"/>
    <path id="classpath">
        <fileset dir="${lib.dir}">
            <include name="**/*.jar"/>
            <include name="**/*.zip"/>
        </fileset>

        <pathelement location="${test.classes.dir}"/>
        <pathelement location="${lib.dir}"/>
    </path>

    <target name="clean" description="Removes the directories created by previous runs of the build script">
        <delete dir="${test.classes.dir}"/>
        <delete dir="${reports.xml.dir}"/>
        <delete dir="${reports.html.dir}"/>
    </target>

    <target name="init" depends="clean" description="Creates the directories required by the build script">
        <mkdir dir="${test.classes.dir}"/>
        <mkdir dir="${reports.dir}"/>
        <mkdir dir="${reports.xml.dir}"/>
        <mkdir dir="${reports.html.dir}"/>
    </target>

    <target name="test.junit" depends="compile-test" description="Runs the Unit tests">
        <junit fork="yes" printsummary="on" failureProperty="test.failure" haltonerror="false">
            <classpath location="${test.classes.dir}"/>
            <classpath refid="classpath"/>
            <syspropertyset>
                <propertyref builtin="commandline"/>
            </syspropertyset>
            <formatter type="xml" usefile="true"/>
            <batchtest todir="${reports.xml.dir}" fork="yes">
                <fileset dir="${test.src.dir}">
                    <include name="**/*Test.java"/>
                </fileset>
            </batchtest>
        </junit>
        <junitreport todir="${reports.xml.dir}">
            <fileset dir="${reports.xml.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${reports.html.dir}"/>
        </junitreport>
    </target>

    <target name="compile-test" description="Compiles the test files">
        <javac destdir="${test.classes.dir}" debug="${javac.debug}" srcdir="${test.src.dir}" classpathref="classpath"/>
    </target>

    <target name="release" depends="init,test.junit"/>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project name="quickstart-webdriver-testng" default="release" basedir=".">

    <property file="build.properties"/>
    <path id="classpath">
        <fileset dir="${lib.dir}">
            <include name="**/*.jar"/>
            <include name="**/*.zip"/>
        </fileset>

        <pathelement location="${test.classes.dir}"/>
        <pathelement location="${lib.dir}"/>
    </path>

    <target name="clean" description="Removes the directories created by previous runs of the build script">
        <delete dir="${test.classes.dir}"/>
        <delete dir="${reports.xml.dir}"/>
        <delete dir="${reports.html.dir}"/>
    </target>

    <target name="init" depends="clean" description="Creates the directories required by the build script">
        <mkdir dir="${test.classes.dir}"/>
        <mkdir dir="${reports.dir}"/>
        <mkdir dir="${reports.xml.dir}"/>
        <mkdir dir="${reports.html.dir}"/>
    </target>

    <taskdef resource="testngtasks" classpath="${lib.dir}/testng-6.1.1.jar"/>

    <target name="test.testng" depends="compile-test" description="Runs the Unit tests">
        <testng outputdir="${reports.xml.dir}" classpathref="classpath">
            <sysproperty key="username" value="${sauce.userName}"/>
            <sysproperty key="key" value="${sauce.accessKey}"/>
            <classfileset dir="${test.classes.dir}" includes="**/*.class"/>
        </testng>
    </target>

    <target name="compile-test" description="Compiles the test files">
        <javac destdir="${test.classes.dir}" debug="${javac.debug}" srcdir="${test.src.dir}" classpathref="classpath"/>
    </target>

    <target name="release" depends="init,test.testng"/>
</project>
<project name="ExampleBartProject" default="compile" basedir=".">
  <description>'Simple' Sauce Labs on TestNG project</description>
  
  <!-- set global properties for this build -->
  <property name="src.dir" location="src"/>
  <property name="build.dir" location="build"/>
  <property name="lib.dir" location="lib"/>
  <property name="testng.xml.dir" location="src/test/resources/xml"/>
  <property name="testng.report.dir" location="reports"/>

  <taskdef resource="testngtasks" classpath="lib/testng-5.14.jar"/>

  <path id="classpath.build">
    <fileset dir="${lib.dir}">
      <include name="*.jar"/>
    </fileset>
  </path>
  
  <path id="classpath.run">
    <fileset dir="${lib.dir}">
      <include name="*.jar"/>
    </fileset>
    <pathelement path="${build.dir}"/>
  </path>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${testng.report.dir}"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source">
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src.dir}" destdir="${build.dir}">
      <classpath>
          <path refid="classpath.build"/>
      </classpath>
      <compilerarg value="-Xlint"/>
    </javac>
  </target>

  <target name="tests" depends="compile"
        description="run the test suite">
    <property name="myclasspath" refid="classpath.run"/>
    <echo message="Classpath = ${myclasspath}"/>
    <testng outputDir="${testng.report.dir}"
            classpathref="classpath.run">
      <xmlfileset file="${testng.xml.dir}/BartTest.xml"/>
    </testng>
  </target>

  <target name="cloud" depends="compile"
        description="run the test suite">
    <property name="myclasspath" refid="classpath.run"/>
    <echo message="Classpath = ${myclasspath}"/>
    <testng outputDir="${testng.report.dir}"
            classpathref="classpath.run">
      <xmlfileset file="${testng.xml.dir}/BartOnDemand.xml"/>
    </testng>
  </target>

  <target name="clean"
        description="clean up" >
    <!-- Delete the ${build}directory trees -->
    <delete dir="${build.dir}"/>
  </target>
</project>
