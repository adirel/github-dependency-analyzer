<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>spatial-solr-sandbox</groupId>
    <artifactId>spatial-solr-sandbox</artifactId>
    <version>0.3-SNAPSHOT</version>
  </parent>
  <artifactId>lse</artifactId>

  <name>Lucene Spatial Extensions</name>
  <description>
    Spatial extensions/enhancements for Apache Lucene, Solr, and Spatial4j.
  </description>
  <packaging>jar</packaging>

  <dependencies>

    <!--
    We must have *-test-framework before *-core on the classpath.
    https://issues.apache.org/jira/browse/SOLR-3048
    -->
    <dependency>
      <groupId>org.apache.solr</groupId>
      <artifactId>solr-test-framework</artifactId>
      <version>${lucene.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.vividsolutions</groupId>
      <artifactId>jts</artifactId>
      <version>${jts.version}</version>
      <optional>true</optional>
      <exclusions>
        <exclusion>
          <groupId>xerces</groupId>
          <artifactId>xercesImpl</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.apache.solr</groupId>
      <artifactId>solr-core</artifactId>
      <version>${lucene.version}</version>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.5</version>
      <scope>test</scope>
    </dependency>

    <!-- TESTING -->
  </dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>spatial-solr-sandbox</groupId>
  <artifactId>spatial-solr-sandbox</artifactId>
  <version>0.3-SNAPSHOT</version>
  <packaging>pom</packaging>

  <properties>
    <!-- this magic system property is honored by many plugins: http://docs.codehaus.org/display/MAVENUSER/POM+Element+for+Source+File+Encoding -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <!-- TODO do we really buy anything by putting these here instead of in maven-compiler-plugin ? -->
    <maven.compile.source>1.7</maven.compile.source>
    <maven.compile.target>1.7</maven.compile.target>
    <maven.compile.optimize>true</maven.compile.optimize>
    <maven.compile.deprecation>true</maven.compile.deprecation>
    
    <wicket.version>1.4.21</wicket.version>
    <jetty.version>8.1.2.v20120308</jetty.version>
    <slf4j.version>1.7.2</slf4j.version>
    <lucene.version>5.0-SNAPSHOT</lucene.version>
    <jts.version>1.13</jts.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- v4.10 is what Lucene uses; good to keep in sync -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.10</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <!-- inherited by all modules -->
  <dependencies>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>

    <!-- TESTING -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>${slf4j.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>${project.artifactId}-${project.version}</finalName>
  
    <plugins>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <source>${maven.compile.source}</source>
          <target>${maven.compile.target}</target>
          <optimize>${maven.compile.optimize}</optimize>
          <showDeprecation>${maven.compile.deprecation}</showDeprecation>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.9</version>
        <configuration>
          <!-- This is a small project that should have no problem with tests
          running in the maven JVM. This also conveniently means system
          properties pass through. -->
          <forkMode>never</forkMode>
        </configuration>
      </plugin>

    </plugins>  
  </build>

  <reporting>
    <!-- TODO support maven 3  (& 2?)-->
    <plugins>
    
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>2.5</version>
        <configuration>
          <linkXRef>true</linkXRef>
          <minimumTokens>100</minimumTokens>
          <targetJdk>1.6</targetJdk>
          <!--
          <excludes>
            <exclude>**/*Bean.java</exclude>
            <exclude>**/generated/*.java</exclude>
          </excludes>
          <excludeRoots>
            <excludeRoot>target/generated-sources/stubs</excludeRoot>
          </excludeRoots>
          -->
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <!--<findbugsXmlOutput>true</findbugsXmlOutput> deprecated-->
          <findbugsXmlWithMessages>true</findbugsXmlWithMessages>
          <xmlOutput>true</xmlOutput>
        </configuration>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>2.2</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>2.7.2</version>
      </plugin>

      <plugin>
        <inherited>true</inherited>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.8</version>
        <configuration>
          <maxmemory>1024m</maxmemory>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <version>2.8</version>
        <configuration>
          <downloadSources>true</downloadSources>
        </configuration>
      </plugin>

    </plugins>
  </reporting>

  <!-- note: repositories default: releases=true, snapshots=false -->

  <profiles>
    <profile>
      <id>updateLucene</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <repositories>
        <!-- for Lucene -->
        <repository>
          <id>org.apache.snapshots</id>
          <name>Apache Snapshot Repository</name>
          <url>http://repository.apache.org/snapshots</url>
          <layout>default</layout>
          <releases>
            <enabled>false</enabled>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </repository>
      </repositories>
      
		  <build>
		    <plugins>
		      <plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-eclipse-plugin</artifactId>       
		        <version>2.5</version> <!-- NOTE 2.6 breaks the layout -->
		        <configuration>
		          <downloadSources>true</downloadSources>      
		          <additionalProjectnatures>
		            <projectnature>qwickie.qwickieNature</projectnature>
		          </additionalProjectnatures>
		          <additionalBuildcommands>
		            <buildcommand>qwickie.qwickieBuilder</buildcommand>
		          </additionalBuildcommands>
		        </configuration>
		      </plugin>
		    </plugins>
		  </build>
      
    </profile>

  </profiles>

  <modules>
    <module>LSE</module>
    <module>spatial-demo</module>
  </modules>
  
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  
  <parent>
    <groupId>spatial-solr-sandbox</groupId>
    <artifactId>spatial-solr-sandbox</artifactId>
    <version>0.3-SNAPSHOT</version>
  </parent>
  
  <artifactId>spatial-demo</artifactId>

  <name>Lucene Solr Spatial - Demo</name>
  <description>
    Show Solr + KML stuff
  </description>
  <packaging>war</packaging>

  <dependencies>
    <!-- LUCENE -->
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>lse</artifactId>
      <version>${project.version}</version>
    </dependency>

    <!-- Lets use the latest & greatest Spatial4j
    <dependency>
      <groupId>com.spatial4j</groupId>
      <artifactId>spatial4j</artifactId>
      <version>0.4-SNAPSHOT</version>
    </dependency> -->
    
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>13.0.1 </version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>${slf4j.version}</version>
      <scope>runtime</scope>
    </dependency>

    <!-- OTHER STUFF -->
    <dependency>
      <groupId>com.vividsolutions</groupId>
      <artifactId>jts</artifactId>
      <version>${jts.version}</version>
      <exclusions>
        <exclusion>
          <groupId>xerces</groupId>
          <artifactId>xercesImpl</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>de.micromata.jak</groupId>
      <artifactId>JavaAPIforKml</artifactId>
      <version>2.2.0</version>
    </dependency>

    <dependency>
      <groupId>org.apache.wicket</groupId>
      <artifactId>wicket</artifactId>
      <version>${wicket.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <version>1.7.2</version>
      <scope>runtime</scope>
    </dependency>
    
    <dependency>
      <groupId>org.apache.wicket</groupId>
      <artifactId>wicket-extensions</artifactId>
      <version>${wicket.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!--  JETTY DEPENDENCIES FOR TESTING  -->
    <!-- compile scope due to StartDemo.java -->
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
      <version>${jetty.version}</version>
      <scope>compile</scope>
    </dependency>
    
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-webapp</artifactId>
      <version>${jetty.version}</version>
      <scope>compile</scope>
    </dependency>

  </dependencies>
  
  
  <build>
    <resources>
      <resource>
        <filtering>false</filtering>
        <directory>src/main/resources</directory>
      </resource>
      <resource>
        <filtering>false</filtering>
        <directory>src/main/java</directory>
        <includes>
          <include>**</include>
        </includes>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <filtering>false</filtering>
        <directory>src/test/java</directory>
        <includes>
          <include>**</include>
        </includes>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </testResource>
    </testResources>
    <plugins>
      <plugin>  
      	<groupId>org.mortbay.jetty</groupId>
  			<artifactId>jetty-maven-plugin</artifactId>
        <version>8.1.7.v20120910</version>
        <configuration>
          <scanIntervalSeconds>0</scanIntervalSeconds>
          <webAppConfig>
            <contextPath>/</contextPath>
          </webAppConfig>
          <systemProperties>
            <systemProperty>
              <name>SpatialContextFactory</name>
              <value>com.spatial4j.core.context.jts.JtsSpatialContextFactory</value>
            </systemProperty>
          </systemProperties>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
