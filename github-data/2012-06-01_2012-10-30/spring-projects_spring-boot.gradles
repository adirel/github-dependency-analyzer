buildscript {
	ext {
		springBootVersion = '1.0.0.BUILD-SNAPSHOT'
	}
	repositories {
		// NOTE: You should declare only repositories that you need here
		mavenLocal()
		mavenCentral()
		maven { url "http://repo.spring.io/release" }
		maven { url "http://repo.spring.io/milestone" }
		maven { url "http://repo.spring.io/snapshot" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'

jar {
	baseName = 'spring-boot-sample-actuator'
	version =  '0.0.0'
}

repositories {
	// NOTE: You should declare only repositories that you need here
	mavenLocal()
	mavenCentral()
	maven { url "http://repo.spring.io/release" }
	maven { url "http://repo.spring.io/milestone" }
	maven { url "http://repo.spring.io/snapshot" }
}

dependencies {
	configurations {
		insecure.exclude module: 'spring-boot-starter-security'
	}

	compile("org.springframework.boot:spring-boot-starter-actuator")
	compile("org.springframework.boot:spring-boot-starter-security")
	compile("org.springframework.boot:spring-boot-starter-web")

	testCompile("org.springframework.boot:spring-boot-starter-test")

	insecure configurations.runtime
}

// Slightly odd requirement (package a jar file as an insecure app, exlcuding Spring Security)
// just to demonstrate the "customConfiguration" feature of the Boot gradle plugin.
springBoot {
	customConfiguration = "insecure"
}

task wrapper(type: Wrapper) {
	gradleVersion = '1.6'
}
buildscript {
	ext {
		springBootVersion = '1.0.0.BUILD-SNAPSHOT'
	}
	repositories {
		// NOTE: You should declare only repositories that you need here
		mavenLocal()
		mavenCentral()
		maven { url "http://repo.spring.io/release" }
		maven { url "http://repo.spring.io/milestone" }
		maven { url "http://repo.spring.io/snapshot" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'

jar {
	baseName = 'spring-boot-sample-simple'
	version =  '0.0.0'
}

run {
  systemProperties = System.properties
}

repositories {
	// NOTE: You should declare only repositories that you need here
	mavenLocal()
	mavenCentral()
	maven { url "http://repo.spring.io/release" }
	maven { url "http://repo.spring.io/milestone" }
	maven { url "http://repo.spring.io/snapshot" }
}

dependencies {
	compile("org.springframework.boot:spring-boot-starter")
	testCompile("org.springframework.boot:spring-boot-starter-test")
}

task wrapper(type: Wrapper) {
	gradleVersion = '1.6'
}
buildscript {
	ext {
		springBootVersion = '1.0.0.BUILD-SNAPSHOT'
	}
	repositories {
		// NOTE: You should declare only repositories that you need here
		mavenLocal()
		mavenCentral()
		maven { url "http://repo.spring.io/release" }
		maven { url "http://repo.spring.io/milestone" }
		maven { url "http://repo.spring.io/snapshot" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}


apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'war'

mainClassName = "sample.ui.SampleWebStaticApplication"

war {
	baseName = 'spring-boot-sample-web-static'
	version =  '0.0.0'
}

repositories {
	// NOTE: You should declare only repositories that you need here
	mavenLocal()
	mavenCentral()
	maven { url "http://repo.spring.io/release" }
	maven { url "http://repo.spring.io/milestone" }
	maven { url "http://repo.spring.io/snapshot" }
}

configurations {
	providedRuntime
}

dependencies {
	compile("org.springframework.boot:spring-boot-starter-web")
	compile("org.webjars:bootstrap:3.0.3")
	compile("org.webjars:jquery:2.0.3-1")
	providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
	testCompile("org.springframework.boot:spring-boot-starter-test")
}

task wrapper(type: Wrapper) { gradleVersion = '1.6' }
buildscript {
	ext {
		springBootVersion = '1.0.0.BUILD-SNAPSHOT'
		springLoadedVersion = '1.1.5.RELEASE'
	}
	repositories {
		// NOTE: You should declare only repositories that you need here
		mavenLocal()
		mavenCentral()
		maven { url "http://repo.spring.io/release" }
		maven { url "http://repo.spring.io/milestone" }
		maven { url "http://repo.spring.io/snapshot" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.springframework:springloaded:${springLoadedVersion}")
	}
}


apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'

mainClassName = "sample.ui.SampleWebUiApplication"

jar {
	baseName = 'spring-boot-sample-web-ui'
	version =  '0.0.0'
}

repositories {
	// NOTE: You should declare only repositories that you need here
	mavenLocal()
	mavenCentral()
	maven { url "http://repo.spring.io/release" }
	maven { url "http://repo.spring.io/milestone" }
	maven { url "http://repo.spring.io/snapshot" }
}

dependencies {
	compile("org.springframework.boot:spring-boot-starter-thymeleaf")
	compile("org.hibernate:hibernate-validator")
	testCompile("org.springframework.boot:spring-boot-starter-test")
}

task wrapper(type: Wrapper) { gradleVersion = '1.6' }
