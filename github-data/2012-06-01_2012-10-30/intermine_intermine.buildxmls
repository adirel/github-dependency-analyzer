
<project name="genomic-tasks" default="default" basedir=".">
  <description>build genomic tasks</description>
  <import file="../../../imbuild/library.xml"/> 
</project>

<project name="bio-postprocess-core-test" default="default" basedir=".">

  <description>perform core post processing tests</description>

  <import file="../../../imbuild/tests.xml"/>

  

</project>
<project name="bio-postprocess" default="default" basedir=".">

  <description>perform post processing operations</description>
  
  <import file="../../../imbuild/library.xml"/>

</project>
<project name="bio-postprocess-core-test" default="default" basedir=".">

  <description>perform core post processing tests</description>

  <import file="../../../imbuild/tests.xml"/>

  

</project>
<project name="${mine-dir}-dbmodel" default="default" basedir=".">
  <description>represents the production objectstore and the model therein</description>
  <import file="../../imbuild/objectstore.xml"/>

  <target name="create-so-model" depends="init, -init-deps">
    <taskdef name="so-model" classname="org.intermine.bio.task.SOToModelTask">
      <classpath refid="task.class.path"/>
    </taskdef>
    <so-model
       soTermListFile="${so.termlist.file}"
       soFile="${so.obo.file}"
       outputFile="${so.output.file}"/>
  </target>

  <target name="-pre-init-merge" depends="create-so-model"/>

</project>

<project name="${mine-dir}-integration" default="default" basedir=".">
  <description>perform integration</description>
  
  <!-- To load just one data source, run "ant -Dsource=<whatever>" -->
  <!-- To empty the production database, go to ${mine-dir}/dbmodel, and type "ant clean" and then "ant build-db" -->

  <import file="../../imbuild/integrate.xml"/>

  <target name="acceptance-tests" depends="-init-properties, -init-integrate, -init-deps">
    <acceptance-tests configFile="resources/${mine-dir}_acceptance_test.conf"
                      outputFile="build/acceptance_test.html"
                      database="db.production"/>
  </target>
</project>

<project name="${mine-dir}-postprocess" default="default" basedir=".">

  <description>perform post processing for ${mine-dir}</description>

  <import file="../../imbuild/postprocess.xml"/>

</project>
<project name="${mine-dir}-postprocess" default="default" basedir=".">

    <description>perform post processing operations</description>

    <import file="../../../imbuild/library.xml"/>
</project>
<project name="${mine-dir}-webapp" default="default" basedir=".">

  <description>build, test, package ${mine-dir}-webapp</description>
  <import file="../../imbuild/application.xml"/>

  <target name="-pre-jar"
          depends="application.-pre-jar, -add-struts-config"/>

  <target name="-add-struts-config"
          description="Append the struts config modifications to the webapp"
  	  depends="-pre-init">
    <unwar src="${dist.war}" dest="${build.dir}/webapp/">
      <patternset>
  	<include name="WEB-INF/struts-config.xml"/>
        <include name="WEB-INF/tiles-defs.xml"/>
        <include name="WEB-INF/classes/InterMineWebApp.properties"/>  
        <include name="WEB-INF/classes/model.properties"/>
        <include name="WEB-INF/web.xml"/>
      </patternset>
    </unwar>

    <loadfile property="model.struts.config" srcFile="./resources/struts-config-model.xml"/>

    <replace file="${build.dir}/webapp/WEB-INF/struts-config.xml" value="${model.struts.config}">
      <!-- can't use normal token as xml must be parseable before this replacement -->
      <replacetoken><![CDATA[<!--@MODEL_INCLUDE@-->]]></replacetoken>
    </replace>


    <loadfile property="model.struts.form.config" 
              srcFile="./resources/struts-config-form-model.xml"/>

    <replace file="${build.dir}/webapp/WEB-INF/struts-config.xml"
             value="${model.struts.form.config}">
      <!-- can't use normal token as xml must be parseable before this replacement -->
      <replacetoken><![CDATA[<!--@MODEL_FORM_INCLUDE@-->]]></replacetoken>
    </replace>


    <loadfile property="model.tiles.defs" srcFile="./resources/tiles-defs-model.xml"/>

    <replace file="${build.dir}/webapp/WEB-INF/tiles-defs.xml" value="${model.tiles.defs}">
      <!-- can't use normal token as xml must be parseable before this replacement -->
      <replacetoken><![CDATA[<!--@MODEL_INCLUDE@-->]]></replacetoken>
    </replace>

    <loadfile property="model.web" srcFile="./resources/web-model.xml"/>

    <replace file="${build.dir}/webapp/WEB-INF/web.xml" value="${model.web}">
      <!-- can't use normal token as xml must be parseable before this replacement -->
      <replacetoken><![CDATA[<!--@MODEL_INCLUDE@-->]]></replacetoken>
    </replace>

 <!-- merge InterMine and model internationalisation properties files --> 
 <concat destfile="${build.dir}/webapp/WEB-INF/classes/InterMineWebApp.properties" append="yes"> 
   <fileset file="resources/model.properties"/> 
 </concat> 
 
    <war destfile="${dist.war}" update="true" >
      <webinf dir="${build.dir}/webapp/WEB-INF/">
  	<filename name="struts-config.xml" />
        <filename name="tiles-defs.xml" />
      </webinf>
    </war>

  </target>
</project>
<project name="${source-name}" default="default" basedir=".">
  <description>build, test, package ${source-name}</description>
  
  <import file="../../../imbuild/source.xml"/>
</project>
<project name="${source-name}-tasks" default="default" basedir=".">
  <description>build ${source-name} tasks</description>
  <import file="../../../../imbuild/library.xml"/> 
</project>
<project name="sources-${source-name}-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-${source-name}-test</description>

  <import file="../../../../imbuild/tests.xml"/>
  <import file="../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="bar" default="default" basedir=".">
  <description>build, test, package bar</description>
  
  <import file="../../../imbuild/source.xml"/>
</project>
<project name="bar-tasks" default="default" basedir=".">
  <description>build bar tasks</description>
  <import file="../../../../imbuild/library.xml"/> 
</project>
<project name="sources-bar-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-bar-test</description>

  <import file="../../../../imbuild/tests.xml"/>
  <import file="../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="biogrid" default="default" basedir=".">
  <description>build, test, package biogrid</description>
  
  <import file="../../../imbuild/source.xml"/>
  
</project>

<project name="biogrid-tasks" default="default" basedir=".">
  <description>build biogrid tasks</description>
  <import file="../../../../imbuild/library.xml"/> 
</project>

<project name="sources-biogrid-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-biogrid-test</description>

  <import file="../../../../imbuild/tests.xml"/>
  <import file="../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="biopax" default="default" basedir=".">
  <description>build, test, package biopax</description>
  
  <import file="../../../imbuild/source.xml"/>
</project>
<project name="biopax-tasks" default="default" basedir=".">
  <description>build biopax tasks</description>
  <import file="../../../../imbuild/library.xml"/> 
</project>
<project name="sources-biopax-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-biopax-test</description>

  <import file="../../../../imbuild/tests.xml"/>
  <import file="../../../../imbuild/task.xml"/>

  <target name="-pre-test" depends="build-db.bio-fulldata-test"/>

  <target name="-init-build-db" depends="init, -init-deps, -init-task-xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

  <target name="build-db.bio-fulldata-test" depends="-init-build-db">
    <imdbproj:build-db osname="os.bio-fulldata-test"
                       model="fulldata"/>
  </target>

  <!-- index the fulldata test database -->
  <target name="create-indexes-genomic-fulldata-test" depends="-init-build-db">
    <create-indexes alias="os.bio-fulldata-test" attributeIndexes="false"/>
  </target>


</project>
<project name="chado-db" default="default" basedir=".">

  <description>build, test, package Chado database source</description>

  <import file="../../../imbuild/source.xml"/>

</project>

<project name="chado-db-main" default="default" basedir=".">
  <description>build chado-db code</description>
  <import file="../../../../imbuild/library.xml"/> 
</project>
<project name="sources-chado-db-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-chado-db-test</description>

  <import file="../../../../imbuild/tests.xml"/>
  <import file="../../../../imbuild/task.xml"/>

  <target name="-pre-test" depends="build-db.bio-fulldata-test"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

  <target name="-init-build-db" depends="init, -init-deps, -init-task-xml"/>

  <target name="build-db.bio-fulldata-test" depends="-init-build-db">
    <imdbproj:build-db osname="os.bio-fulldata-test"
                       model="fulldata"/>
  </target>

  <!-- index the fulldata test database -->
  <target name="create-indexes-genomic-fulldata-test" depends="-init-build-db">
    <create-indexes alias="os.bio-fulldata-test" attributeIndexes="false"/>
  </target>

</project>
<project name="ensembl-compara" default="default" basedir=".">
  <description>build, test, package ensembl-compara</description>
  
  <import file="../../../../imbuild/source.xml"/>
</project>
<project name="ensembl-compara-tasks" default="default" basedir=".">
  <description>build ensembl-compara tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>
<project name="sources-ensembl-compara-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-ensembl-compara-test</description>

  <import file="../../../../../imbuild/tests.xml"/>
  <import file="../../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="ensembl" default="default" basedir=".">
  <description>build, test, package ensembl</description>

  <import file="../../../../imbuild/source.xml"/>
</project>
<project name="ensembl-gwas-db" default="default" basedir=".">
  <description>build, test, package ensembl-gwas-db</description>
  
  <import file="../../../../imbuild/source.xml"/>
</project>
<project name="ensembl-gwas-db-tasks" default="default" basedir=".">
  <description>build ensembl-gwas-db tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>
<project name="sources-ensembl-gwas-db-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-ensembl-gwas-db-test</description>

  <import file="../../../../../imbuild/tests.xml"/>
  <import file="../../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="ensembl-snp-db" default="default" basedir=".">
  <description>build, test, package ensembl-snp-db</description>
  
  <import file="../../../../imbuild/source.xml"/>
</project>
<project name="ensembl-snp-db-tasks" default="default" basedir=".">
  <description>build ensembl-snp-db tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>
<project name="sources-ensembl-snp-db-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-ensembl-snp-db-test</description>

  <import file="../../../../../imbuild/tests.xml"/>
  <import file="../../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="entrez-organism" default="default" basedir=".">
  <description>build entrez-organism tasks</description>
  <import file="../../../imbuild/source.xml"/> 

  <!-- special case to create a ${tgt.xml.file} (in InterMine XML format) by
       finding the taxon ids in the objectstore, then retrieving the species name
       and genus from Entrez into the file -->
  <target name="-pre-retrieve" depends="source.-pre-retrieve">
    <property name="cp" refid="task.class.path"/>

    <taskdef name="retrieve-organisms" 
             classname="org.intermine.bio.dataconversion.EntrezOrganismRetriever">
      <classpath refid="task.class.path"/>
    </taskdef>
    
    <echo message="retrieving from ${src.data.file}"/>

    <retrieve-organisms osAlias="os.production" outputFile="${src.data.file}"/>
  </target>
</project>
<project name="main-tasks" default="default" basedir=".">
  <description>build main tasks</description>
  <import file="../../../../imbuild/library.xml"/> 
</project>
<project name="sources-entrez-organism-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">
  <description>build test tasks for entrez-organism</description>

  <import file="../../../../imbuild/tests.xml"/>

</project>
<project name="kegg-example" default="default" basedir=".">
  <description>build, test, package kegg-example</description>
  <import file="../../../imbuild/source.xml"/>
</project>

<project name="kegg-example-tasks" default="default" basedir=".">
  <description>build kegg-example tasks</description>
  <import file="../../../../imbuild/library.xml"/> 
</project>
<project name="kegg-identifiers" default="default" basedir=".">
  <description>build, test, package kegg-identifiers</description>
  
  <import file="../../../imbuild/source.xml"/>
</project>
<project name="kegg-identifiers-tasks" default="default" basedir=".">
  <description>build kegg-identifiers tasks</description>
  <import file="../../../../imbuild/library.xml"/> 
</project>
<project name="malaria-gff" default="default" basedir=".">
  <description>build, test, package malaria gff</description>
  <import file="../../../../imbuild/source.xml"/>
</project>
<project name="malaria-gff-tasks" default="default" basedir=".">
  <description>build malaria-gff tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>
<!--
  a bit of an odd source as it writes straight to the production database
  and deals with model objects (and therefore the "main" sub-project depends on
  the production model).
-->
<project name="fasta" default="default" basedir=".">
  <description>build, test, package fasta</description>
  
  <import file="../../../imbuild/source.xml"/>
  
  <!-- no retrieve -->
  <target name="retrieve"/>
  
  <target name="-init-suffix" unless="fasta.idSuffix">
    <!-- set the default -->
    <property name="fasta.idSuffix" value=""/>
  </target>

  <target name="-init-attribute" unless="fasta.classAttribute">
    <!-- set the default -->
    <property name="fasta.classAttribute" value="primaryIdentifier"/>
  </target>
 
  <target name="-init-loader-classname" unless="fasta.loaderClassName">
    <!-- set the default -->
    <property name="fasta.loaderClassName"
              value="org.intermine.bio.dataconversion.FastaLoaderTask"/>
  </target>

  <!-- NOTE: we can do this with dynamic properties -->
  <target name="load" depends="-init-suffix, -init-attribute, -init-loader-classname, init, -init-deps">
    <taskdef name="read-fasta"
      classname="${fasta.loaderClassName}"
      classpathref="task.class.path"/>
    <read-fasta integrationWriterAlias="integration.production"
                sourceName="${source.name}"
                sourceType="${source.type}"
                idSuffix="${fasta.idSuffix}"
                className="${fasta.className}"
                classAttribute="${fasta.classAttribute}"
                dataSetTitle="${fasta.dataSetTitle}"
                dataSourceName="${fasta.dataSourceName}"
                sequenceType="${fasta.sequenceType}"
                fastaTaxonId="${fasta.taxonId}">
      <fileset dir="${src.data.dir}" includes="${fasta.includes}"/>
    </read-fasta>
  </target>
  
</project>


<project name="fasta-tasks" default="default" basedir=".">
  <description>build fasta tasks</description>
  <import file="../../../../imbuild/library.xml"/> 
</project>

<project name="sources-fasta-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-flybase-gff-test</description>

  <import file="../../../../imbuild/tests.xml"/>
  <import file="../../../../imbuild/task.xml"/>

  <target name="-pre-test" depends="build-db.bio-fulldata-test"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

  <target name="-init-build-db" depends="init, -init-deps, -init-task-xml"/>

  <target name="build-db.bio-fulldata-test" depends="-init-build-db">
    <imdbproj:build-db osname="os.bio-fulldata-test"
                       model="fulldata"/>
  </target>

  <!-- index the fulldata test database -->
  <target name="create-indexes-genomic-fulldata-test" depends="-init-build-db">
    <create-indexes alias="os.bio-fulldata-test" attributeIndexes="false"/>
  </target>

</project>

<project name="Affy probes" default="default" basedir=".">
  <description>build, test, package Affy probes</description>
  
  <import file="../../../../imbuild/source.xml"/>
  
</project>

<project name="affy-probes-tasks" default="default" basedir=".">
  <description>build affy-probes tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>
<project name="sources-affy-probes-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-affy-probes-test</description>

  <import file="../../../../../imbuild/tests.xml"/>
  <import file="../../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>

<project name="arbeitman-items-xml" default="default" basedir=".">
  <description>build, test, package arbeitman-items-xml</description>
  
  <import file="../../../../imbuild/source.xml"/>
  
</project>

<project name="arbeitman-items-xml-tasks" default="default" basedir=".">
  <description>build arbeitman-items-xml tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>
<project name="bdgp-clone" default="default" basedir=".">
  <description>build, test, package BDGP cDNA clone</description>
  <import file="../../../../imbuild/source.xml"/>
</project>

<project name="bdgp-clone-tasks" default="default" basedir=".">
  <description>build bdgp-clone tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>
<project name="sources-bdgp-clone-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-bdgp-clone-test</description>

  <import file="../../../../../imbuild/tests.xml"/>
  <import file="../../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>

<project name="bdgp-insitu" default="default" basedir=".">
  <description>build, test, package bdgp-insitu</description>
  
  <import file="../../../../imbuild/source.xml"/>
  
</project>


<project name="bdgp-insitu-tasks" default="default" basedir=".">
  <description>build bdgp-insitu tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>

<project name="sources-bdgp-insitu-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-bdgp-insitu-test</description>

  <import file="../../../../../imbuild/tests.xml"/>
  <import file="../../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="drosdel-gff" default="default" basedir=".">

  <description>build, test, package drosdel-gff</description>

  <import file="../../../../imbuild/source.xml"/>

</project>

<project name="drosdel-gff-tasks" default="default" basedir=".">
  <description>build drosdel-gff tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>

<project name="drosophila-homology" default="default" basedir=".">
  <description>build, test, package drosophila-homology</description>
  
  <import file="../../../../imbuild/source.xml"/>
  
</project>

<project name="drosophila-homology-tasks" default="default" basedir=".">
  <description>build drosophila-homology tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>
<project name="sources-drosophila-homology-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-flybae-identifiers-test</description>

  <import file="../../../../../imbuild/tests.xml"/>
  <import file="../../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>

<project name="fly-anatomy-ontology" default="default" basedir=".">
  <description>build, test, package fly-anatomy-ontology</description>
  
  <import file="../../../../imbuild/source.xml"/>
  
</project>


<project name="fly-development-ontology" default="default" basedir=".">
  <description>build, test, package fly-development-ontology</description>
  
  <import file="../../../../imbuild/source.xml"/>
  
</project>


<project name="fly-fish" default="default" basedir=".">
  <description>build, test, package fly-fish</description>
  
  <import file="../../../../imbuild/source.xml"/>
  
</project>


<project name="fly-fish-tasks" default="default" basedir=".">
  <description>build fly-fish tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>

<project name="sources-fly-fish-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-fly-fish-test</description>

  <import file="../../../../../imbuild/tests.xml"/>
  <import file="../../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="fly-misc-cvterms" default="default" basedir=".">
  <description>build, test, package fly-misc-cvterms</description>

  <import file="../../../../imbuild/source.xml"/>
</project>


<project name="FlyAtlas" default="default" basedir=".">
  <description>build, test, package FlyAtlas</description>
  
  <import file="../../../../imbuild/source.xml"/>
  
</project>

<project name="flyatlas-tasks" default="default" basedir=".">
  <description>build flyatlas tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>
<project name="sources-flyatlas-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-flyatlas-test</description>

  <import file="../../../../../imbuild/tests.xml"/>
  <import file="../../../../../imbuild/task.xml"/>

  <target name="-pre-test" depends="build-db.bio-fulldata-test"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

  <target name="-init-build-db" depends="init, -init-deps, -init-task-xml"/>

  <target name="build-db.bio-fulldata-test" depends="-init-build-db">
    <imdbproj:build-db osname="os.bio-fulldata-test"
                       model="fulldata"/>
  </target>

  <!-- index the fulldata test database -->
  <target name="create-indexes-genomic-fulldata-test" depends="-init-build-db">
    <create-indexes alias="os.bio-fulldata-test" attributeIndexes="false"/>
  </target>

</project>
<project name="flybase-expression" default="default" basedir=".">
  <description>build, test, package flybase-expression</description>
  
  <import file="../../../../imbuild/source.xml"/>
</project>
<project name="flybase-expression-tasks" default="default" basedir=".">
  <description>build flybase-expression tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>
<project name="sources-flybase-expression-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-flybase-expression-test</description>

  <import file="../../../../imbuild/tests.xml"/>
  <import file="../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="flyreg" default="default" basedir=".">
  <description>build, test, package flyreg</description>

  <import file="../../../../imbuild/source.xml"/>

</project>
<project name="flyreg-tasks" default="default" basedir=".">
  <description>build flyreg tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>
<project name="sources-flyreg-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-flyreg-test</description>

  <import file="../../../../../imbuild/tests.xml"/>
  <import file="../../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="long-oligo" default="default" basedir=".">
  <description>build, test, package long_oligo</description>
  <import file="../../../../imbuild/source.xml"/>
</project>

<project name="long-oligo-tasks" default="default" basedir=".">
  <description>build long-oligo tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>
<project name="sources-long-oligo-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-long_oligo-test</description>

  <import file="../../../../../imbuild/tests.xml"/>
  <import file="../../../../../imbuild/task.xml"/>

  <target name="-pre-test" depends="build-db.bio-fulldata-test"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

  <target name="-init-build-db" depends="init, -init-deps, -init-task-xml"/>

  <target name="build-db.bio-fulldata-test" depends="-init-build-db">
    <imdbproj:build-db osname="os.bio-fulldata-test"
                       model="fulldata"/>
  </target>

  <!-- index the fulldata test database -->
  <target name="create-indexes-genomic-fulldata-test" depends="-init-build-db">
    <create-indexes alias="os.bio-fulldata-test" attributeIndexes="false"/>
  </target>

</project>
<project name="miranda" default="default" basedir=".">
  <description>build, test, package miranda</description>  
  <import file="../../../../imbuild/source.xml"/>  
</project>

<project name="miranda-tasks" default="default" basedir=".">
  <description>build miranda tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>
<project name="sources-miranda-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-miranda-test</description>

  <import file="../../../../imbuild/tests.xml"/>
  <import file="../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="redfly" default="default" basedir=".">

  <description>build, test, package redfly</description>

  <import file="../../../../imbuild/source.xml"/>

</project>

<project name="tiling_path-tasks" default="default" basedir=".">
  <description>build tiling_path tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>
<project name="test-tasks" default="default" basedir=".">
  <description>build test tasks</description>
  <import file="../../../../../imbuild/tests.xml"/>
</project>
<project name="flyrnai-screens-tasks" default="default" basedir=".">
  <description>build flyrnai-screens tasks</description>
  <import file="../../../../imbuild/source.xml"/>
</project>
<project name="main-tasks" default="default" basedir=".">
  <description>build main tasks</description>
  <import file="../../../../../imbuild/library.xml"/>
</project>
<project name="test-tasks" default="default" basedir=".">
  <description>build test tasks</description>
  <import file="../../../../../imbuild/tests.xml"/>
  <import file="../../../../../imbuild/task.xml"/>
</project>

<project name="homophila" default="default" basedir=".">
  <description>build, test, package homophila</description>
  
  <import file="../../../../imbuild/source.xml"/>
  
</project>


<project name="homophila-tasks" default="default" basedir=".">
  <description>build homophila tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>

<project name="sources-homophila-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-homophila-test</description>

  <import file="../../../../../imbuild/tests.xml"/>
  <import file="../../../../../imbuild/task.xml"/>

  <target name="-pre-test" depends="build-db.bio-fulldata-test"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

  <target name="-init-build-db" depends="init, -init-deps, -init-task-xml"/>

  <target name="build-db.bio-fulldata-test" depends="-init-build-db">
    <imdbproj:build-db osname="os.bio-fulldata-test"
                       model="fulldata"/>
  </target>

  <!-- index the fulldata test database -->
  <target name="create-indexes-genomic-fulldata-test" depends="-init-build-db">
    <create-indexes alias="os.bio-fulldata-test" attributeIndexes="false"/>
  </target>

</project>

<project name="orthologue" default="default" basedir=".">
  <description>build, test, package orthologue</description>
  
  <import file="../../../imbuild/source.xml"/>
  
</project>

<project name="orthologue-tasks" default="default" basedir=".">
  <description>build orthologue tasks</description>
  <import file="../../../../imbuild/library.xml"/> 
</project>
<project name="sources-orthologue-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-orthologue-test</description>

  <import file="../../../../imbuild/tests.xml"/>
  <import file="../../../../imbuild/task.xml"/>

  <target name="-pre-test" depends="build-db.bio-fulldata-test"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

  <target name="-init-build-db" depends="init, -init-deps, -init-task-xml"/>

  <target name="build-db.bio-fulldata-test" depends="-init-build-db">
    <imdbproj:build-db osname="os.bio-fulldata-test"
                       model="fulldata"/>
  </target>

  <!-- index the fulldata test database -->
  <target name="create-indexes-genomic-fulldata-test" depends="-init-build-db">
    <create-indexes alias="os.bio-fulldata-test" attributeIndexes="false"/>
  </target>

</project>
<project name="protein-structure" default="default" basedir=".">
  <description>build, test, package protein_structure</description>

  <import file="../../../../imbuild/source.xml"/>

  <target name="-retrieve-tgt-from-custom-file" if="have.file.custom.tgt">
    <convert-file      
       modelName="${target.model}"
       clsName="${converter.class}"
       osName="osw.${common.os.prefix}-tgt-items">
      <fileset dir="${src.data.dir}" >
        <include name="**/*.xml"/>
	  </fileset>
    </convert-file>
  </target>

</project>
<project name="protein-structure-tasks" default="default" basedir=".">
  <description>build protein-structure tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>
<project name="sources-protein-structure-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-protein-structure-test</description>

  <import file="../../../../../imbuild/tests.xml"/>
  <import file="../../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="tiffin-expression" default="default" basedir=".">
  <description>build, test, package tiffin-expression</description>
  <import file="../../../../imbuild/source.xml"/>
</project>

<project name="tiffin-expression-tasks" default="default" basedir=".">
  <description>build tiffin-expression tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>

<project name="sources-fly-fish-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-fly-fish-test</description>

  <import file="../../../../../imbuild/tests.xml"/>
  <import file="../../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="tiffin" default="default" basedir=".">

  <description>build, test, package tiffin</description>

  <import file="../../../../imbuild/source.xml"/>

</project>

<project name="tiffin-tasks" default="default" basedir=".">
  <description>build tiffin tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>
<project name="tiling-path" default="default" basedir=".">
  <description>build, test, package tiling_path</description>
  <import file="../../../../imbuild/source.xml"/>
</project>

<project name="tiling-path-tasks" default="default" basedir=".">
  <description>build tiling_path tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>
<project name="sources-tiling-path-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-tiling-path-test</description>

  <import file="../../../../../imbuild/tests.xml"/>
  <import file="../../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>

<project name="rnai" default="default" basedir=".">
  <description>build, test, package rnai</description>
  
  <import file="../../../../imbuild/source.xml"/>
  
</project>

<project name="rnai-tasks" default="default" basedir=".">
  <description>build rnai tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>
<project name="sources-rnai-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-rnai-test</description>

  <import file="../../../../../imbuild/tests.xml"/>
  <import file="../../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="rnai" default="default" basedir=".">
  <description>build, test, package rnai</description>
  <import file="../../../../imbuild/source.xml"/>
</project>
<project name="rnai-tasks" default="default" basedir=".">
  <description>build rnai tasks</description>
  <import file="../../../../../imbuild/library.xml"/>
</project>
<project name="sources-rnai-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-rnai-test</description>

  <import file="../../../../../imbuild/tests.xml"/>
  <import file="../../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="gff" default="default" basedir=".">
  <description>build, test, package gff</description>
  
  <import file="../../../imbuild/source.xml"/>
</project>
<project name="go-annotation" default="default" basedir=".">
  <description>build, test, package go-annotation</description>
  
  <import file="../../../imbuild/source.xml"/>
  
</project>

<project name="go-annotation-tasks" default="default" basedir=".">
  <description>build go-annotation tasks</description>
  <import file="../../../../imbuild/library.xml"/> 
</project>
<project name="sources-go-annotation-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-go-annotation-test</description>

  <import file="../../../../imbuild/tests.xml"/>
  <import file="../../../../imbuild/task.xml"/>

  <target name="-pre-test" depends="build-db.bio-fulldata-test"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-init-build-db" depends="init, -init-deps, -init-task-xml"/>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <pathelement location="${resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

  <target name="build-db.bio-fulldata-test" depends="-init-build-db">
    <imdbproj:build-db osname="os.bio-fulldata-test"
                       model="fulldata"/>
  </target>

  <!-- index the fulldata test database -->
  <target name="create-indexes-genomic-fulldata-test" depends="-init-build-db">
    <create-indexes alias="os.bio-fulldata-test" attributeIndexes="false"/>
  </target>

</project>
<project name="go" default="default" basedir=".">
  <description>build, test, package go</description>
  
  <import file="../../../imbuild/source.xml"/>
  
</project>

<project name="homologene" default="default" basedir=".">
  <description>build, test, package homologene</description>
  
  <import file="../../../imbuild/source.xml"/>
</project>
<project name="homologene-tasks" default="default" basedir=".">
  <description>build homologene tasks</description>
  <import file="../../../../imbuild/library.xml"/> 
</project>
<project name="sources-homologene-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-homologene-test</description>

  <import file="../../../../imbuild/tests.xml"/>
  <import file="../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="arrayexpress-atlas" default="default" basedir=".">
  <description>build, test, package arrayexpress-atlas</description>
  
  <import file="../../../../imbuild/source.xml"/>
</project>
<project name="arrayexpress-atlas-tasks" default="default" basedir=".">
  <description>build arrayexpress-atlas tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>
<project name="sources-arrayexpress-atlas-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-arrayexpress-atlas-test</description>

  <import file="../../../../../imbuild/tests.xml"/>
  <import file="../../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="ensembl-hgnc" default="default" basedir=".">
  <description>build, test, package ensembl-hgnc</description>
  
  <import file="../../../../imbuild/source.xml"/>
</project>
<project name="ensembl-hgnc-tasks" default="default" basedir=".">
  <description>build ensembl-hgnc tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>
<project name="sources-ensembl-hgnc-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-ensembl-hgnc-test</description>

  <import file="../../../../../imbuild/tests.xml"/>
  <import file="../../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="hgnc" default="default" basedir=".">
  <description>build, test, package hgnc</description>
  
  <import file="../../../imbuild/source.xml"/>
</project>
<project name="hgnc-tasks" default="default" basedir=".">
  <description>build hgnc tasks</description>
  <import file="../../../../imbuild/library.xml"/> 
</project>
<project name="sources-hgnc-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-hgnc-test</description>

  <import file="../../../../imbuild/tests.xml"/>
  <import file="../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="hpo-annotation" default="default" basedir=".">
  <description>build, test, package hpo-annotation</description>
  
  <import file="../../../../imbuild/source.xml"/>
  
</project>

<project name="hpo-annotation-tasks" default="default" basedir=".">
  <description>build hpo-annotation tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>
<project name="sources-hpo-annotation-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-hpo-annotation-test</description>

  <import file="../../../../../imbuild/tests.xml"/>
  <import file="../../../../../imbuild/task.xml"/>

  <target name="-pre-test" depends="build-db.bio-fulldata-test"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-init-build-db" depends="init, -init-deps, -init-task-xml"/>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <pathelement location="${resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

  <target name="build-db.bio-fulldata-test" depends="-init-build-db">
    <imdbproj:build-db osname="os.bio-fulldata-test"
                       model="fulldata"/>
  </target>

  <!-- index the fulldata test database -->
  <target name="create-indexes-genomic-fulldata-test" depends="-init-build-db">
    <create-indexes alias="os.bio-fulldata-test" attributeIndexes="false"/>
  </target>

</project>
<project name="hpo" default="default" basedir=".">
  <description>build, test, package uberon</description>
  
  <import file="../../../../imbuild/source.xml"/>
</project>
<project name="huge-gwas" default="default" basedir=".">
  <description>build, test, package huge-gwas</description>
  
  <import file="../../../../imbuild/source.xml"/>
</project>
<project name="huge-gwas-tasks" default="default" basedir=".">
  <description>build huge-gwas tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>
<project name="sources-huge-gwas-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-huge-gwas-test</description>

  <import file="../../../../../imbuild/tests.xml"/>
  <import file="../../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="human-gene" default="default" basedir=".">
  <description>build, test, package human-gene</description>
  
  <import file="../../../../imbuild/source.xml"/>
</project>
<project name="human-gene-tasks" default="default" basedir=".">
  <description>build human-gene tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>
<project name="sources-human-gene-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-human-gene-test</description>

  <import file="../../../../../imbuild/tests.xml"/>
  <import file="../../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="ncbi-gene" default="default" basedir=".">
  <description>build, test, package ncbi-gene</description>
  
  <import file="../../../../imbuild/source.xml"/>
</project>
<project name="ncbi-gene-tasks" default="default" basedir=".">
  <description>build ncbi-gene tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>
<project name="sources-ncbi-gene-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-ncbi-gene-test</description>

  <import file="../../../../../imbuild/tests.xml"/>
  <import file="../../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="ncbi-summaries" default="default" basedir=".">
  <description>build, test, package ncbi-summaries</description>
  
  <import file="../../../../imbuild/source.xml"/>
</project>
<project name="ncbi-summaries-tasks" default="default" basedir=".">
  <description>build ncbi-summaries tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>
<project name="sources-ncbi-summaries-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-ncbi-summaries-test</description>

  <import file="../../../../../imbuild/tests.xml"/>
  <import file="../../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="omim" default="default" basedir=".">
  <description>build, test, package omim</description>
  
  <import file="../../../../imbuild/source.xml"/>
</project>
<project name="omim-tasks" default="default" basedir=".">
  <description>build omim tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>
<project name="sources-omim-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-omim-test</description>

  <import file="../../../../../imbuild/tests.xml"/>
  <import file="../../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="protein-atlas" default="default" basedir=".">
  <description>build, test, package protein-atlas</description>
  
  <import file="../../../../imbuild/source.xml"/>
</project>
<project name="protein-atlas-tasks" default="default" basedir=".">
  <description>build protein-atlas tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>
<project name="sources-protein-atlas-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-protein-atlas-test</description>

  <import file="../../../../../imbuild/tests.xml"/>
  <import file="../../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>

<project name="anopheles-identifiers" default="default" basedir=".">
  <description>build, test, package anopheles-identifiers</description>
  
  <import file="../../../../imbuild/source.xml"/>
  
</project>

<project name="anopheles-identifiers-tasks" default="default" basedir=".">
  <description>build anopheles-identifiers tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>
<project name="sources-anopheles-identifiers-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-flybae-identifiers-test</description>

  <import file="../../../../../imbuild/tests.xml"/>
  <import file="../../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="ensembl-identifiers" default="default" basedir=".">
  <description>build, test, package ensembl-identifiers</description>
  
  <import file="../../../imbuild/source.xml"/>
</project>
<project name="ensembl-identifiers-tasks" default="default" basedir=".">
  <description>build ensembl-identifiers tasks</description>
  <import file="../../../../imbuild/library.xml"/> 
</project>
<project name="sources-ensembl-identifiers-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-ensembl-identifiers-test</description>

  <import file="../../../../imbuild/tests.xml"/>
  <import file="../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="flybase-identifiers" default="default" basedir=".">
  <description>build, test, package flybase-identifiers</description>
  
  <import file="../../../../imbuild/source.xml"/>
</project>
<project name="flybase-identifiers-tasks" default="default" basedir=".">
  <description>build flybase-identifiers tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>
<project name="sources-flybase-identifiers-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-flybase-identifiers-test</description>

  <import file="../../../../../imbuild/tests.xml"/>
  <import file="../../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="mgi-identifiers" default="default" basedir=".">
  <description>build, test, package mgi-identifiers</description>
  
  <import file="../../../../imbuild/source.xml"/>
</project>
<project name="mgi-identifiers-tasks" default="default" basedir=".">
  <description>build mgi-identifiers tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>
<project name="sources-mgi-identifiers-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-mgi-identifiers-test</description>

  <import file="../../../../../imbuild/tests.xml"/>
  <import file="../../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="rgd-identifiers" default="default" basedir=".">
  <description>build, test, package rgd-identifiers</description>
  
  <import file="../../../../imbuild/source.xml"/>
</project>
<project name="rgd-identifiers-tasks" default="default" basedir=".">
  <description>build rgd-identifiers tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>
<project name="sources-rgd-identifiers-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-rgd-identifiers-test</description>

  <import file="../../../../../imbuild/tests.xml"/>
  <import file="../../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="sgd-identifiers" default="default" basedir=".">
  <description>build, test, package sgd-identifiers</description>
  
  <import file="../../../../imbuild/source.xml"/>
</project>
<project name="sgd-identifiers-tasks" default="default" basedir=".">
  <description>build sgd-identifiers tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>
<project name="sources-sgd-identifiers-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-sgd-identifiers-test</description>

  <import file="../../../../../imbuild/tests.xml"/>
  <import file="../../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>

<project name="wormbase-identifiers" default="default" basedir=".">
  <description>build, test, package wormbase-identifiers</description>
  
  <import file="../../../../imbuild/source.xml"/>
  
</project>

<project name="wormbase-identifiers-tasks" default="default" basedir=".">
  <description>build wormbase-identifiers tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>
<project name="sources-wormbase-identifiers-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-wormbase-identifiers-test</description>

  <import file="../../../../../imbuild/tests.xml"/>
  <import file="../../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="zfin-identifiers" default="default" basedir=".">
  <description>build, test, package zfin-identifiers</description>
  
  <import file="../../../../imbuild/source.xml"/>
</project>
<project name="zfin-identifiers-tasks" default="default" basedir=".">
  <description>build zfin-identifiers tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>
<project name="sources-zfin-identifiers-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-zfin-identifiers-test</description>

  <import file="../../../../../imbuild/tests.xml"/>
  <import file="../../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>

<project name="flymine-static" default="default" basedir=".">
  <description>build, test, package flymine-static</description>
  
  <import file="../../../imbuild/source.xml"/>
  
</project>


<project name="flymine-static" default="default" basedir=".">
  <description>build, test, package flymine-static</description>
  
  <import file="../../../imbuild/source.xml"/>
  
</project>

<project name="interpro-go" default="default" basedir=".">
  <description>build, test, package interpro-go</description>
  
  <import file="../../../imbuild/source.xml"/>
</project>
<project name="interpro-go-tasks" default="default" basedir=".">
  <description>build interpro-go tasks</description>
  <import file="../../../../imbuild/library.xml"/> 
</project>
<project name="sources-interpro-go-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-interpro-go-test</description>

  <import file="../../../../imbuild/tests.xml"/>
  <import file="../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="interpro" default="default" basedir=".">
    <description>build, test, package interpro</description>
    <import file="../../../imbuild/source.xml"/>
</project>

<project name="interpro-tasks" default="default" basedir=".">
  <description>build interpro tasks</description>
  <import file="../../../../imbuild/library.xml"/> 
</project>
<project name="sources-interpro-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-interpro-test</description>

  <import file="../../../../imbuild/tests.xml"/>
  <import file="../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="kegg-orthologues" default="default" basedir=".">
  <description>build, test, package kegg-orthologues</description>
  
  <import file="../../../imbuild/source.xml"/>
</project>
<project name="kegg-orthologues-tasks" default="default" basedir=".">
  <description>build kegg-orthologues tasks</description>
  <import file="../../../../imbuild/library.xml"/> 
</project>
<project name="sources-kegg-orthologues-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-kegg-orthologues-test</description>

  <import file="../../../../imbuild/tests.xml"/>
  <import file="../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>

<project name="kegg_pathway" default="default" basedir=".">
  <description>build, test, package kegg_pathway</description>
  
  <import file="../../../imbuild/source.xml"/>
  
</project>

<project name="kegg_pathway-tasks" default="default" basedir=".">
  <description>build kegg-pathway tasks</description>
  <import file="../../../../imbuild/library.xml"/> 
</project>
<project name="kegg-pathway-identifiers-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test kegg-pathway-test</description>

  <import file="../../../../imbuild/tests.xml"/>
  <import file="../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="mammalian-phenotype-ontology" default="default" basedir=".">
  <description>build, test, package mammalian-phenotype-ontology</description>
  
  <import file="../../../imbuild/source.xml"/>
</project>
<project name="cdna-clone" default="default" basedir=".">
  <description>build, test, package cdna-clones</description>
  
  <import file="../../../../imbuild/source.xml"/>
</project>
<project name="cdna-clone-tasks" default="default" basedir=".">
  <description>build cDNA-clone tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>
<project name="sources-cDNA-clones-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-cDNA-clones-test</description>

  <import file="../../../../../imbuild/tests.xml"/>
  <import file="../../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="fly-expression-score" default="default" basedir=".">
  <description>build, test, package fly-expression-score</description>

  <import file="../../../../imbuild/source.xml"/>
</project>
<project name="fly-expression-score-tasks" default="default" basedir=".">
  <description>build fly-expression-score tasks</description>
  <import file="../../../../../imbuild/library.xml"/>
</project>
<project name="sources-fly-expression-score-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-fly-expression-score-test</description>

  <import file="../../../../imbuild/tests.xml"/>
  <import file="../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="tf-mrna-network" default="default" basedir=".">
  <description>build, test, package tf-mrna-network</description>
  
  <import file="../../../../imbuild/source.xml"/>
</project>
<project name="tf-mrna-network-tasks" default="default" basedir=".">
  <description>build tf-mrna-network tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>
<project name="sources-tf-mrna-network-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-tf-mrna-network-test</description>

  <import file="../../../../../imbuild/tests.xml"/>
  <import file="../../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="worm-expression-score" default="default" basedir=".">
  <description>build, test, package worm-expression-score</description>
  
  <import file="../../../../imbuild/source.xml"/>
</project>
<project name="worm-expression-score-tasks" default="default" basedir=".">
  <description>build worm-expression-score tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>
<project name="sources-worm-expression-score-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-worm-expression-score-test</description>

  <import file="../../../../imbuild/tests.xml"/>
  <import file="../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="worm-network" default="default" basedir=".">
  <description>build, test, package worm-network</description>
  
  <import file="../../../../imbuild/source.xml"/>
</project>
<project name="worm-network-tasks" default="default" basedir=".">
  <description>build worm-network tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>
<project name="sources-worm-network-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-worm-network-test</description>

  <import file="../../../../../imbuild/tests.xml"/>
  <import file="../../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>

<project name="AnoEST" default="default" basedir=".">
  <description>build, test, package AnoEST</description>
  
  <import file="../../../../imbuild/source.xml"/>
  
</project>

<project name="anoest-tasks" default="default" basedir=".">
  <description>build anoest tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>
<project name="sources-anoest-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-anoest-test</description>

  <import file="../../../../../imbuild/tests.xml"/>
  <import file="../../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>

<project name="anoph-expr" default="default" basedir=".">
  <description>build, test, package anoph-expr</description>
  
  <import file="../../../../imbuild/source.xml"/>
  
</project>


<project name="anoph-expr-tasks" default="default" basedir=".">
  <description>build anoph-expr tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>

<project name="sources-anoph-expr-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-anoph-expr-test</description>

  <import file="../../../../../imbuild/tests.xml"/>
  <import file="../../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="mgi-alleles" default="default" basedir=".">
  <description>build, test, package mgi-alleles</description>
  
  <import file="../../../../imbuild/source.xml"/>
</project>
<project name="mgi-alleles-tasks" default="default" basedir=".">
  <description>build mgi-alleles tasks</description>
  <import file="../../../../../imbuild/library.xml"/> 
</project>
<project name="sources-mgi-alleles-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-mgi-alleles-test</description>

  <import file="../../../../../imbuild/tests.xml"/>
  <import file="../../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="orthodb" default="default" basedir=".">
  <description>build, test, package orthodb</description>
  
  <import file="../../../imbuild/source.xml"/>
</project>
<project name="orthodb-tasks" default="default" basedir=".">
  <description>build orthodb tasks</description>
  <import file="../../../../imbuild/library.xml"/> 
</project>
<project name="sources-orthodb-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-orthodb-test</description>

  <import file="../../../../imbuild/tests.xml"/>
  <import file="../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="panther" default="default" basedir=".">
  <description>build, test, package panther</description>
  
  <import file="../../../imbuild/source.xml"/>
</project>
<project name="panther-tasks" default="default" basedir=".">
  <description>build panther tasks</description>
  <import file="../../../../imbuild/library.xml"/> 
</project>
<project name="sources-panther-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-panther-test</description>

  <import file="../../../../imbuild/tests.xml"/>
  <import file="../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="pdb" default="default" basedir=".">
  <description>build, test, package pdb</description>
  <import file="../../../imbuild/source.xml"/>
</project>

<project name="pdb-tasks" default="default" basedir=".">
  <description>build pdb tasks</description>
  <import file="../../../../imbuild/library.xml"/> 
</project>
<project name="sources-pdb-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-pdb-test</description>

  <import file="../../../../imbuild/tests.xml"/>
  <import file="../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>

<project name="psi-mi-ontology" default="default" basedir=".">
  <description>build, test, package psi-mi-ontology</description>
  
  <import file="../../../imbuild/source.xml"/>
  
</project>

<project name="psi" default="default" basedir=".">
  <description>build, test, package psi</description>
  
  <import file="../../../imbuild/source.xml"/>
  
</project>

<project name="psi-tasks" default="default" basedir=".">
  <description>build ensembl tasks</description>
  <import file="../../../../imbuild/library.xml"/> 
</project>

<project name="sources-psi-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-psi-test</description>

  <import file="../../../../imbuild/tests.xml"/>
  <import file="../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="pubmed-gene-tasks" default="default" basedir=".">
  <description>build pubmed-gene tasks</description>
  <import file="../../../imbuild/source.xml"/>
</project>
<project name="main-tasks" default="default" basedir=".">
  <description>build main tasks</description>
  <import file="../../../../imbuild/library.xml"/>
</project>
<project name="test-tasks" default="default" basedir=".">
  <description>build test tasks</description>
  <import file="../../../../imbuild/tests.xml"/>
  <import file="../../../../imbuild/task.xml"/>
</project>
<project name="reactome" default="default" basedir=".">
  <description>build, test, package reactome</description>
  
  <import file="../../../imbuild/source.xml"/>
</project>
<project name="reactome-tasks" default="default" basedir=".">
  <description>build reactome tasks</description>
  <import file="../../../../imbuild/library.xml"/> 
</project>
<project name="sources-reactome-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-reactome-test</description>

  <import file="../../../../imbuild/tests.xml"/>
  <import file="../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="so" default="default" basedir=".">
  <description>build, test, package so</description>
  <import file="../../../imbuild/source.xml"/>
</project>

<project name="so-tasks" default="default" basedir=".">
  <description>build so tasks</description>
  <import file="../../../../imbuild/library.xml"/> 
</project>
<project name="synbio-gff" default="default" basedir=".">
  <description>build, test, package synbio-gff</description>
  
  <import file="../../../imbuild/source.xml"/>
</project>
<project name="synbio-gff-tasks" default="default" basedir=".">
  <description>build synbio-gff tasks</description>
  <import file="../../../../imbuild/library.xml"/> 
</project>
<project name="sources-synbio-gff-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-synbio-gff-test</description>

  <import file="../../../../imbuild/tests.xml"/>
  <import file="../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="treefam" default="default" basedir=".">
  <description>build, test, package treefam</description>
  
  <import file="../../../imbuild/source.xml"/>
</project>
<project name="treefam-tasks" default="default" basedir=".">
  <description>build treefam tasks</description>
  <import file="../../../../imbuild/library.xml"/> 
</project>
<project name="sources-treefam-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-treefam-test</description>

  <import file="../../../../imbuild/tests.xml"/>
  <import file="../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="uberon" default="default" basedir=".">
  <description>build, test, package uberon</description>
  
  <import file="../../../imbuild/source.xml"/>
</project>

<project name="uniprot-keywords" default="default" basedir=".">
  <description>load uniprot keyword descriptions</description>
  
  <import file="../../../imbuild/source.xml"/>
  

  
</project>




<project name="uniprot-keywords-tasks" default="default" basedir=".">
  <description>build uniprot keywords tasks</description>
  <import file="../../../../imbuild/library.xml"/> 
</project>

<project name="sources-uniprot-keywords-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-uniprot-keywords-test</description>

  <import file="../../../../imbuild/tests.xml"/>
  <import file="../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="uniprot" default="default" basedir=".">
  <description>build, test, package uniprot</description>

  <import file="../../../imbuild/source.xml"/>

  <target name="-pre-retrieve" if="use.filter">
    <property name="build.data.dir" location="${build.dir}/data/${uniprot.organisms}"/>
    <mkdir dir="${build.data.dir}"/>
    <taskdef name="filter-uniprot"
      classname="org.intermine.bio.dataconversion.UniprotFilterTask"
      classpathref="project.compile.path"/>
    <filter-uniprot tgtDir="${build.data.dir}" organisms="${uniprot.organisms}">
      <fileset dir="${src.data.dir}" includes="*.xml"/>
    </filter-uniprot>
  </target>

  <target name="-retrieve-tgt-from-custom-dir" depends="-retrieve-tgt-from-custom-dir-filtered,-retrieve-tgt-from-custom-dir-whole"/>

  <target name="-retrieve-tgt-from-custom-dir-whole" unless="use.filter">
    <convert-dir
       modelName="${target.model}"
       clsName="${converter.class}"
       osName="osw.${common.os.prefix}-tgt-items"
       dataDir="${src.data.dir}" />    
  </target>

  <target name="-retrieve-tgt-from-custom-dir-filtered" if="use.filter">
    <convert-dir
       modelName="${target.model}"
       clsName="${converter.class}"
       osName="osw.${common.os.prefix}-tgt-items"
       dataDir="${build.data.dir}" />  
  </target>
</project>




<project name="uniprot-tasks" default="default" basedir=".">
  <description>build uniprot tasks</description>
  <import file="../../../../imbuild/library.xml"/> 
</project>

<project name="sources-uniprot-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-uniprot-test</description>

  <import file="../../../../imbuild/tests.xml"/>
  <import file="../../../../imbuild/task.xml"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

</project>
<project name="update-data-sources" default="default" basedir=".">
  <description>build update-data-sources tasks</description>
  <import file="../../../imbuild/source.xml"/> 

  <!-- special case to create a ${tgt.xml.file} (in InterMine XML format) by
       finding the taxon ids in the objectstore, then retrieving the species name
       and genus from Entrez into the file -->
  <target name="-pre-retrieve" depends="source.-pre-retrieve">
    <property name="cp" refid="task.class.path"/>

    <taskdef name="update-data-sources" 
             classname="org.intermine.bio.dataconversion.DataSourceUpdater">
      <classpath refid="task.class.path"/>
    </taskdef>
    
    <echo message="retrieving from ${src.data.file}"/>

    <update-data-sources osAlias="os.production" outputFile="${src.data.file}" dataSourceFile="${dataSourceFile}" />
  </target>
</project>
<project name="main-tasks" default="default" basedir=".">
  <description>build main tasks</description>
  <import file="../../../../imbuild/library.xml"/> 
</project>
<project name="sources-update-data-sources-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">
  <description>build test tasks for update-data-sources</description>

  <import file="../../../../imbuild/tests.xml"/>

</project>
<project name="update-publications" default="default" basedir=".">
  <description>update-publications retrieve and load tasks</description>
  <import file="../../../imbuild/source.xml"/>

  <!-- special case to create a ${src.data.file} (in InterMine XML format) by
       finding the pubmed ids in the objectstore, then retrieving the details
       from Entrez into the file -->
  <target name="-pre-retrieve" depends="source.-pre-retrieve">
    <property name="cp" refid="task.class.path"/>

    <taskdef name="retrieve-publications"
             classname="org.intermine.bio.dataconversion.EntrezPublicationsRetriever">
      <classpath refid="task.class.path"/>
    </taskdef>

    <echo message="retrieving from ${src.data.file}"/>

    <retrieve-publications osAlias="os.production" 
                           outputFile="${src.data.file}"
                           cacheDirName="${cacheDirName}" 
                           loadFullRecord="${loadFullRecord}" />
  </target>
</project>
<project name="main-tasks" default="default" basedir=".">
  <description>build main tasks</description>
  <import file="../../../../imbuild/library.xml"/> 
</project>
<project name="sources-update-publications-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">
  <description>build test tasks for update-publications</description>

  <import file="../../../../imbuild/tests.xml"/>

</project>
<project name="worm-development-ontology" default="default" basedir=".">
  <description>build, test, package worm-development-ontology</description>
  
  <import file="../../../../imbuild/source.xml"/>
</project>
<project name="bio-test-all" default="default" basedir="."
  xmlns:lib="http://www.intermine.org/ns/im-lib-proj/1"
  xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
  xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">
  
  <description>wrapper project for build/testing/cleaning everything in bio</description>

  <import file="../../imbuild/task.xml"/>
  <import file="../../imbuild/objectstore.xml"/>
  
  <target name="-pre-init" depends="library.-pre-init">
    <property name="test.results.dir" location="${build.dir}/test/results"/>
  </target>
  
  <target name="build-db.bio-test" depends="init, -init-build-db, -init-deps, -init-task-xml">
    <imdbproj:build-db osname="os.bio-test" model="genomic"/>
  </target>

  <target name="-init-fulltest" depends="-init-properties, build-db.bio-test, init">
    <mkdir dir="${test.results.dir}"/>
  </target>
  
  <target name="fulltest" depends="init, -init-fulltest, -do-fulltest, test-report"/>
  
  <target name="-do-fulltest">
    <subant inheritAll="false">
      <property name="test.results.dir" value="${test.results.dir}"/>
      <property name="generate.report" value="false"/>
      <property name="no.dep" value="false"/>
      <!--<property name="test.fork" value="yes"/>-->
      <fileset dir="../..">
        <include name="bio/sources/**/test/build.xml" />
        <include name="bio/*/test/build.xml"/>
        <include name="bio/postprocess/core/test/build.xml"/>
        <exclude name="bio/sources/experimental-sources/**/test/build.xml"/>
      </fileset>
    </subant>
  </target>
  
  <target name="test-report" depends="init">
    <junitreport todir="${test.results.dir}">
      <fileset dir="${test.results.dir}">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${test.results.dir}"/>
    </junitreport>
  </target>
  
  <target name="do-checkstyle" depends="-init-macrodef-checkstyle">
    <lib:checkstyle>
      <customize>
        <fileset dir="..">
          <include name="sources/*/test/**/*.java"/>
        </fileset>
      </customize>
    </lib:checkstyle>
  </target>
  
  <target name="jar"/>
  
  <target name="compile" depends="init, -init-deps"/>
  
  <target name="default" depends="fulltest"/>
</project>
<project name="genomic-test-dbmodel" default="default" basedir=".">

  <description>represents the production objectstore and the model therein</description>
  <import file="../../../imbuild/objectstore.xml"/>


  <target name="create-so-model" depends="init, -init-deps">
    <taskdef name="so-model" classname="org.intermine.bio.task.SOToModelTask">
      <classpath refid="task.class.path"/>
    </taskdef>
    <so-model
       soTermListFile="${so.termlist.file}"
       soFile="${so.obo.file}"
       outputFile="${so.output.file}"/>
  </target>   

  <target name="-pre-init-merge" depends="create-so-model"/>


  <target name="-merge-models" if="doing.build.db">
    <merge-additions file="bio/test-all/dbmodel/build/model/so_additions.xml"/>
    <merge-additions file="bio/core/genomic_additions.xml"/>
    <merge-additions file="bio/sources/human/ncbi-gene/ncbi-gene_additions.xml"/>
    <merge-additions file="bio/sources/ensembl/ensembl-snp-db/ensembl-snp-db_additions.xml"/>
    <merge-additions file="bio/sources/human/huge-gwas/huge-gwas_additions.xml"/>
    <merge-additions file="bio/sources/psi/psi_additions.xml"/>
    <merge-additions file="bio/sources/fly/rnai/rnai_additions.xml"/>
    <merge-additions file="bio/sources/go/go_additions.xml"/>
    <merge-additions file="bio/sources/go-annotation/go-annotation_additions.xml"/>
    <merge-additions file="bio/sources/uniprot/uniprot_additions.xml"/>
    <merge-additions file="bio/sources/pdb/pdb_additions.xml"/>
    <merge-additions file="bio/sources/fly/flyreg/flyreg_additions.xml"/>
    <merge-additions file="bio/sources/fly/long-oligo/long-oligo_additions.xml"/>
    <merge-additions file="bio/sources/chado-db/chado-db_additions.xml"/>
    <merge-additions file="bio/sources/chado-db/flybase-chado-db_additions.xml"/>
    <merge-additions file="bio/sources/interpro/interpro_additions.xml"/>
    <merge-additions file="bio/sources/fly/bdgp-clone/bdgp-clone_additions.xml"/>
    <merge-additions file="bio/sources/fly/drosdel-gff/drosdel-gff_additions.xml"/>
    <merge-additions file="bio/sources/fly/redfly/redfly_additions.xml"/>
    <merge-additions file="bio/sources/fly/affy-probes/affy-probes_additions.xml"/>
    <merge-additions file="bio/sources/fly/arbeitman-items-xml/arbeitman-items-xml_additions.xml"/>
    <merge-additions file="bio/sources/fly/flyatlas/flyatlas_additions.xml"/>
    <merge-additions file="bio/sources/kegg-pathway/kegg-pathway_additions.xml"/>
    <merge-additions file="bio/sources/fly/fly-fish/fly-fish_additions.xml"/>
    <merge-additions file="bio/sources/mosquito/anoph-expr/anoph-expr_additions.xml"/>
    <merge-additions file="bio/sources/fly/bdgp-insitu/bdgp-insitu_additions.xml"/>
    <merge-additions file="bio/sources/biogrid/biogrid_additions.xml"/>
    <merge-additions file="bio/sources/biopax/biopax_additions.xml"/>
    <merge-additions file="bio/sources/treefam/treefam_additions.xml"/>
    <merge-additions file="bio/sources/interpro-go/interpro-go_additions.xml"/>
    <merge-additions file="bio/sources/human/protein-atlas/protein-atlas_additions.xml"/>
    <merge-additions file="bio/sources/human/ncbi-summaries/ncbi-summaries_additions.xml"/>
    <merge-additions file="bio/sources/psi-mi-ontology/psi-mi-ontology_additions.xml"/>
    <merge-additions file="bio/sources/fly/flybase-expression/flybase-expression_additions.xml"/>
    <merge-additions file="bio/sources/panther/panther_additions.xml"/>
    <merge-additions file="bio/sources/homologene/homologene_additions.xml"/>
    <merge-additions file="bio/sources/orthodb/orthodb_additions.xml"/>
    <merge-additions file="bio/sources/human/ncbi-gene/ncbi-gene_additions.xml"/>
    <merge-additions file="bio/sources/human/hpo-annotation/hpo-annotation_additions.xml"/>
  </target>

</project>


<project name="bio-tools" default="default" basedir=".">
  <description>build bio tools</description>
  <import file="../../../imbuild/library.xml"/> 
</project>

<project name="bio-postprocess-core-test" default="default" basedir=".">

  <description>perform core post processing tests</description>

  <import file="../../../imbuild/tests.xml"/>

  

</project>

<project name="bio-webapp-test" default="default" basedir="." xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1" xmlns:task="http://www.intermine.org/ns/im-task-proj/1">

	<description>build, test, package intermine-web-test</description>
	<import file="../../../imbuild/tests.xml" />
	<import file="../../../imbuild/task.xml" />
    <import file="../../../imbuild/application.xml" />

	<target name="-init-build-db" depends="init, -init-deps, -init-task-xml"/>
	
	<target name="build-db-unittest" depends="-init-build-db">
		<task:build-db osname="os.unittest" model="genomic" />
	</target>

	<target name="-pre-test" depends="create-db-userprofile, build-db-unittest" />

</project>


<project name="bio-webapp" default="default" basedir=".">
  
  <description>build, test, package bio-webapp</description>
  <import file="../../imbuild/application.xml"/>
  <import file="../../imbuild/webapp.xml"/>
  
  <target name="-pre-jar"
          depends="application.-pre-jar, -add-struts-config"/>

  <target name="-add-struts-config"
    description="Append the struts config modifications to the webapp"
    depends="-pre-init">

    <unwar src="${dist.war}" dest="${build.dir}/webapp/">
      <patternset>
        <include name="WEB-INF/web.xml"/>
      </patternset>
    </unwar>

    <loadfile property="bio.web" srcFile="./resources/webapp/WEB-INF/web-bio.xml"/>
    <replace file="${build.dir}/webapp/WEB-INF/web.xml" value="${bio.web}">
      <!-- can't use normal token as xml must be parseable before this replacement -->
      <replacetoken><![CDATA[<!--@MODEL_INCLUDE@-->]]></replacetoken>
    </replace>

     <war destfile="${dist.war}" update="true" >
      <webinf dir="${build.dir}/webapp/WEB-INF/">
      </webinf>
    </war>

  </target>
</project>
<project name="flymine-dbmodel" default="default" basedir=".">
  <description>represents the production objectstore and the model therein</description>
  <import file="../../imbuild/objectstore.xml"/>


  <target name="create-so-model" depends="init, -init-deps">
    <taskdef name="so-model" classname="org.intermine.bio.task.SOToModelTask">
      <classpath refid="task.class.path"/>
    </taskdef>
    <so-model
       soTermListFile="${so.termlist.file}"
       soFile="${so.obo.file}"
       outputFile="${so.output.file}"/>
  </target>   

  <target name="-pre-init-merge" depends="create-so-model"/>

</project>
<project name="flymine-gbrowse" default="default" basedir=".">
  <description>build gbrowse tasks</description>
  <import file="../../imbuild/gbrowse.xml"/>
</project>

<project name="flymine-integration" default="default" basedir=".">
  <description>perform integration</description>
  
  <!-- To load just one data source, run "ant -Dsource=<whatever>" -->
  <!-- To empty the production database, go to flymine/dbmodel, and type "ant clean" and then "ant build-db" -->

  <import file="../../imbuild/integrate.xml"/>

  <target name="test" depends="init, -init-deps">
      <ant inheritAll="false" antfile="../../sources/uniprot/build.xml" target="retrieve">
        <property name="intermine.properties.file" value="${intermine.properties.file}"/>
        <property name="default.intermine.properties.file" location="${default.intermine.properties.file}"/>
        <property name="source.name" value="uniprot-dros"/>
        <property name="target.model" value="genomic"/>
        <property name="uniprot.organisms" value="7227"/>
        <property name="src.data.dir" location="/shared/data/uniprot/6.8"/>
        <property name="path.to.production.model.jar" location="../production/dist/genomic.jar"/>
      </ant>

  </target>

  <target name="test-task" depends="init">
    <integrate projectXml="../project.xml" basedir="../.." source="uniprot" action="retrieve"/>
  </target>

  <target name="acceptance-tests" depends="-init-properties, -init-integrate, -init-deps">
    <acceptance-tests configFile="../../bio/core/test/resources/flymine_acceptance_test.conf"
                      outputFile="build/acceptance_test.html"
                      database="db.production"/>
  </target>
</project>

<project name="flymine-postprocess" default="default" basedir=".">

  <description>perform post processing for flymine</description>

  <import file="../../imbuild/postprocess.xml"/>

</project>
<project name="flymine-postprocess" default="default" basedir=".">

    <description>perform post processing operations</description>

    <import file="../../../imbuild/library.xml"/>
</project>
<project name="flymine-webapp" default="default" basedir=".">

  <description>build, test, package flymine-webapp</description>
  <import file="../../imbuild/application.xml"/>

  <target name="-pre-jar"
          depends="application.-pre-jar, -add-struts-config"/>

  <target name="-add-struts-config"
          description="Append the struts config modifications to the webapp"
      depends="-pre-init">
    <unwar src="${dist.war}" dest="${build.dir}/webapp/">
      <patternset>
        <include name="WEB-INF/struts-config.xml"/>
        <include name="WEB-INF/tiles-defs.xml"/>
        <include name="WEB-INF/classes/InterMineWebApp.properties"/>
        <include name="WEB-INF/classes/model.properties"/>
        <include name="WEB-INF/web.xml"/>
      </patternset>
    </unwar>

    <loadfile property="model.struts.config" srcFile="./resources/struts-config-model.xml"/>

    <replace file="${build.dir}/webapp/WEB-INF/struts-config.xml" value="${model.struts.config}">
      <!-- can't use normal token as xml must be parseable before this replacement -->
      <replacetoken><![CDATA[<!--@MODEL_INCLUDE@-->]]></replacetoken>
    </replace>

    <loadfile property="model.struts.form.config" srcFile="./resources/struts-config-form-model.xml"/>

    <replace file="${build.dir}/webapp/WEB-INF/struts-config.xml"
             value="${model.struts.form.config}">
      <!-- can't use normal token as xml must be parseable before this replacement -->
      <replacetoken><![CDATA[<!--@MODEL_FORM_INCLUDE@-->]]></replacetoken>
    </replace>

    <loadfile property="model.tiles.defs" srcFile="./resources/tiles-defs-model.xml"/>

    <replace file="${build.dir}/webapp/WEB-INF/tiles-defs.xml" value="${model.tiles.defs}">
      <!-- can't use normal token as xml must be parseable before this replacement -->
      <replacetoken><![CDATA[<!--@MODEL_INCLUDE@-->]]></replacetoken>
    </replace>

    <loadfile property="model.web" srcFile="./resources/web-model.xml"/>

    <replace file="${build.dir}/webapp/WEB-INF/web.xml" value="${model.web}">
      <!-- can't use normal token as xml must be parseable before this replacement -->
      <replacetoken><![CDATA[<!--@MODEL_INCLUDE@-->]]></replacetoken>
    </replace>

    <!-- merge InterMine and model internationalisation properties files -->
    <concat destfile="${build.dir}/webapp/WEB-INF/classes/InterMineWebApp.properties" append="yes">
      <fileset file="resources/model.properties"/>
    </concat>

    <war destfile="${dist.war}" update="true" >
      <webinf dir="${build.dir}/webapp/WEB-INF/">
    <filename name="struts-config.xml" />
        <filename name="tiles-defs.xml" />
      </webinf>
    </war>

   </target>

</project>
<project name="humanmine-dbmodel" default="default" basedir=".">
  <description>represents the production objectstore and the model therein</description>
  <import file="../../imbuild/objectstore.xml"/>

  <target name="create-so-model" depends="init, -init-deps">
    <taskdef name="so-model" classname="org.intermine.bio.task.SOToModelTask">
      <classpath refid="task.class.path"/>
    </taskdef>
    <so-model
       soTermListFile="${so.termlist.file}"
       soFile="${so.obo.file}"
       outputFile="${so.output.file}"/>
  </target>

  <target name="-pre-init-merge" depends="create-so-model"/>

</project>

<project name="humanmine-integration" default="default" basedir=".">
  <description>perform integration</description>
  
  <!-- To load just one data source, run "ant -Dsource=<whatever>" -->
  <!-- To empty the production database, go to humanmine/dbmodel, and type "ant clean" and then "ant build-db" -->

  <import file="../../imbuild/integrate.xml"/>

  <target name="acceptance-tests" depends="-init-properties, -init-integrate, -init-deps">
    <acceptance-tests configFile="resources/humanmine_acceptance_test.conf"
                      outputFile="build/acceptance_test.html"
                      database="db.production"/>
  </target>
</project>

<project name="humanmine-postprocess" default="default" basedir=".">

  <description>perform post processing for humanmine</description>

  <import file="../../imbuild/postprocess.xml"/>

</project>
<project name="humanmine-postprocess" default="default" basedir=".">

    <description>perform post processing operations</description>

    <import file="../../../imbuild/library.xml"/>
</project>
<project name="humanmine-webapp" default="default" basedir=".">

  <description>build, test, package humanmine-webapp</description>
  <import file="../../imbuild/application.xml"/>

  <target name="-pre-jar"
          depends="application.-pre-jar, -add-struts-config"/>

  <target name="-add-struts-config"
          description="Append the struts config modifications to the webapp"
  	  depends="-pre-init">
    <unwar src="${dist.war}" dest="${build.dir}/webapp/">
      <patternset>
  	<include name="WEB-INF/struts-config.xml"/>
        <include name="WEB-INF/tiles-defs.xml"/>
        <include name="WEB-INF/classes/InterMineWebApp.properties"/>  
 	<include name="WEB-INF/classes/model.properties"/>  
      </patternset>
    </unwar>

    <loadfile property="model.struts.config" srcFile="./resources/struts-config-model.xml"/>

    <replace file="${build.dir}/webapp/WEB-INF/struts-config.xml" value="${model.struts.config}">
      <!-- can't use normal token as xml must be parseable before this replacement -->
      <replacetoken><![CDATA[<!--@MODEL_INCLUDE@-->]]></replacetoken>
    </replace>


    <loadfile property="model.struts.form.config" 
              srcFile="./resources/struts-config-form-model.xml"/>

    <replace file="${build.dir}/webapp/WEB-INF/struts-config.xml"
             value="${model.struts.form.config}">
      <!-- can't use normal token as xml must be parseable before this replacement -->
      <replacetoken><![CDATA[<!--@MODEL_FORM_INCLUDE@-->]]></replacetoken>
    </replace>


    <loadfile property="model.tiles.defs" srcFile="./resources/tiles-defs-model.xml"/>

    <replace file="${build.dir}/webapp/WEB-INF/tiles-defs.xml" value="${model.tiles.defs}">
      <!-- can't use normal token as xml must be parseable before this replacement -->
      <replacetoken><![CDATA[<!--@MODEL_INCLUDE@-->]]></replacetoken>
    </replace>

 <!-- merge InterMine and model internationalisation properties files --> 
 <concat destfile="${build.dir}/webapp/WEB-INF/classes/InterMineWebApp.properties" append="yes"> 
   <fileset file="resources/model.properties"/> 
 </concat> 
 
    <war destfile="${dist.war}" update="true" >
      <webinf dir="${build.dir}/webapp/WEB-INF/">
  	<filename name="struts-config.xml" />
        <filename name="tiles-defs.xml" />
      </webinf>
    </war>

  </target>
</project>

<project name="im-ant-tasks" default="default" basedir=".">
  <description>build, test, package build tasks</description>
  <import file="../library.xml"/>
  
  <target name="-post-jar">
    <copy file="${dist.jar}" toDir="../lib"/>
  </target>
  
</project>


<project name="intermine-javadoc" default="javadoc" basedir=".">
  
  <description>create combined javadoc for intermine public apis</description>
  <import file="../library.xml"/>
  
  <target name="-javadoc-build" depends="-init-javadoc">
    <javadoc destdir="${build.javadoc.dir}" source="${javac.source}" notree="${javadoc.notree}"
            use="${javadoc.use}" nonavbar="${javadoc.nonavbar}" noindex="${javadoc.noindex}"
            splitindex="${javadoc.splitindex}" author="${javadoc.author}" version="${javadoc.version}"
            windowtitle="${javadoc.windowtitle}" private="${javadoc.private}"
            additionalparam="${javadoc.additionalparam}" failonerror="false" breakiterator="yes">
      <classpath refid="project.compile.path"/>
      <sourcepath>
        <pathelement location="../../intermine/webtasks/main/src"/>
        <pathelement location="../../intermine/webapp/main/src"/>
        <pathelement location="../../intermine/webservice/client/main/src"/>
        <pathelement location="../../intermine/web/main/src"/>
        <pathelement location="../../intermine/web/model/userprofile/build/main/src"/>
        <pathelement location="../../intermine/pathquery/main/src"/>
        <pathelement location="../../intermine/api/main/src"/>
        <pathelement location="../../intermine/objectstore/main/src"/>
        <pathelement location="../../intermine/integrate/main/src"/>
        <pathelement location="../../intermine/integrate/model/fulldata/build/main/src"/>
        <pathelement location="../../flymine-private/experimental-sources/biojava-flatfile/main/src"/>
        <pathelement location="../../bio/postprocess/main/src"/>
        <pathelement location="../../bio/tools/main/src"/>
        <pathelement location="../../bio/core/main/src"/>
        <pathelement location="../../bio/sources/miranda/main/src"/>
        <pathelement location="../../bio/sources/chado-xml/main/src"/>
        <pathelement location="../../bio/sources/fasta/main/src"/>
        <pathelement location="../../bio/sources/pride/main/src"/>
        <pathelement location="../../bio/sources/anoph-expr/main/src"/>
        <pathelement location="../../bio/sources/mage/main/src"/>
        <pathelement location="../../bio/sources/rnai/main/src"/>
        <pathelement location="../../bio/sources/redfly/main/src"/>
        <pathelement location="../../bio/sources/flyatlas/main/src"/>
        <pathelement location="../../bio/sources/firstef/main/src"/>
        <pathelement location="../../bio/sources/long_oligo/main/src"/>
        <pathelement location="../../bio/sources/anoest/main/src"/>
        <pathelement location="../../bio/sources/diseaseregion/main/src"/>
        <pathelement location="../../bio/sources/drosophila-homology/main/src"/>
        <pathelement location="../../bio/sources/bdgp-insitu/main/src"/>
        <pathelement location="../../bio/sources/pim/main/src"/>
        <pathelement location="../../bio/sources/omim/main/src"/>
        <pathelement location="../../bio/sources/region/main/src"/>
        <pathelement location="../../bio/sources/biogrid/main/src"/>
        <pathelement location="../../bio/sources/kegg-pathway/main/src"/>
        <pathelement location="../../bio/sources/uniprot/main/src"/>
        <pathelement location="../../bio/sources/bdgp-clone/main/src"/>
        <pathelement location="../../bio/sources/interpro/main/src"/>
        <pathelement location="../../bio/sources/wormbase-identifiers/main/src"/>
        <pathelement location="../../bio/sources/chado-db/main/src"/>
        <pathelement location="../../bio/sources/tiffin/main/src"/>
        <pathelement location="../../bio/sources/tiffin-expression/main/src"/>
        <pathelement location="../../bio/sources/haem-atlas/main/src"/>
        <pathelement location="../../bio/sources/orthologue/main/src"/>
        <pathelement location="../../bio/sources/drosdel-gff/main/src"/>
        <pathelement location="../../bio/sources/pdb/main/src"/>
        <pathelement location="../../bio/sources/pubmed-gene/main/src"/>
        <pathelement location="../../bio/sources/tiling_path/main/src"/>
        <pathelement location="../../bio/sources/malaria-gff/main/src"/>
        <pathelement location="../../bio/sources/ensembl/main/src"/>
        <pathelement location="../../bio/sources/update-publications/main/src"/>
        <pathelement location="../../bio/sources/uniprot-keywords/main/src"/>
        <pathelement location="../../bio/sources/tfbscluster/main/src"/>
        <pathelement location="../../bio/sources/affy-probes/main/src"/>
        <pathelement location="../../bio/sources/entrez-organism/main/src"/>
        <pathelement location="../../bio/sources/homophila/main/src"/>
        <pathelement location="../../bio/sources/biogrid-human/biogrid-human/main/src"/>
        <pathelement location="../../bio/sources/protein_structure/main/src"/>
        <pathelement location="../../bio/sources/so/main/src"/>
        <pathelement location="../../bio/sources/fly-fish/main/src"/>
        <pathelement location="../../bio/sources/flyrnai-screens/main/src"/>
        <pathelement location="../../bio/sources/tfbs/main/src"/>
        <pathelement location="../../bio/sources/flyreg/main/src"/>
        <pathelement location="../../bio/sources/anopheles-identifiers/main/src"/>
        <pathelement location="../../bio/sources/go-annotation/main/src"/>
        <pathelement location="../../bio/sources/psi/main/src"/>
        <pathelement location="../../bio/network/main/src"/>
        <pathelement location="../../modmine/postprocess/main/src"/>
        <pathelement location="../../flymine/postprocess/main/src"/>
        <pathelement location="../../log/logwebapp/resources/main/src"/>
        <pathelement location="../../stemcellmine/webapp/resources/main/src"/>
      </sourcepath>
    </javadoc>
  </target>
  
</project>


<project name="test-all" default="default" basedir="."
  xmlns:lib="http://www.intermine.org/ns/im-lib-proj/1">
  
  <description>wrapper project for build/testing/cleaning everything</description>

  <import file="../../imbuild/library.xml"/> 
  <import file="../../imbuild/task.xml"/> 

  <target name="-pre-init" depends="library.-pre-init">
    <property name="test.results.dir" location="${build.dir}/test/results"/>
  </target>
  
  <target name="-init-fulltest" depends="init">
    <mkdir dir="${test.results.dir}"/>
  </target>
  
  <target name="fulltest" 
          depends="init, -init-properties, -init-fulltest, -do-fulltest, test-report"/>
  
  <target name="-do-fulltest">
    <subant inheritAll="false">
      <property name="test.results.dir" value="${test.results.dir}"/>
      <property name="generate.report" value="false"/>
      <!--<property name="test.fork" value="yes"/>-->
      <fileset dir="../.." includes="intermine/objectstore/test/build.xml"/>
      <fileset dir="../.." includes="intermine/integrate/test/build.xml"/>
      <fileset dir="../.." includes="intermine/web/test/build.xml"/>
      <fileset dir="../.." includes="intermine/pathquery/test/build.xml"/>
      <fileset dir="../.." includes="intermine/webservice/client/test/build.xml"/>
      <fileset dir="../.." includes="intermine/api/test/build.xml"/>
<!--      <fileset dir="../.." includes="testmodel/webapp/test/build.xml"/>-->
    </subant>
  </target>
  
  <target name="test-report" depends="init">
    <junitreport todir="${test.results.dir}">
      <fileset dir="${test.results.dir}">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${test.results.dir}"/>
    </junitreport>
  </target>
  
  <target name="do-checkstyle" depends="-init-macrodef-checkstyle">
    <lib:checkstyle>
      <customize>
        <fileset dir="../..">
	  <include name="intermine/api/main/src/**/*.java"/>
          <include name="intermine/objectstore/main/src/**/*.java"/>
          <include name="intermine/integrate/main/src/**/*.java"/>
          <include name="intermine/web/main/src/**/*.java"/>
          <include name="intermine/webapp/main/src/**/*.java"/>
          <include name="intermine/objectstore/model/logmodel/src/**/*.java"/>
        </fileset>
      </customize>
    </lib:checkstyle>
  </target>
  
  <target name="jar"/>
  
  <target name="compile" depends="init, -init-deps"/>
  
</project>


<project name="intermine-api" default="default" basedir=".">
  
  <description>build, test, package intermine-api</description>
  <import file="../../../imbuild/library.xml"/>
    
</project>


<project name="userprofile" default="default" basedir=".">
  
  <description>build userprofile model</description>
  <import file="../../../../imbuild/model.xml"/>
  
</project>


<project name="intermine-api-test" default="default" basedir="." xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1" xmlns:task="http://www.intermine.org/ns/im-task-proj/1">

	<description>build, test, package intermine-api-test</description>
    <property name="default.template.queries" location="resources/default-template-queries.xml"/>
	<import file="../../../imbuild/tests.xml" />
	<import file="../../../imbuild/task.xml" />
    <import file="../../../imbuild/application.xml" />

	<target name="-init-build-db" depends="init, -init-deps, -init-task-xml"/>
	
	<target name="build-db-unittest" depends="-init-build-db">
		<task:build-db osname="os.unittest" model="testmodel" />
	</target>

	<target name="-pre-test" depends="create-db-userprofile, build-db-unittest"/>
</project>


<project name="intermine-integrate" default="default" basedir=".">
  <description>build, test, package intermine-integrate</description>
  <import file="../../../imbuild/library.xml"/>

</project>


<project name="fulldata" default="default" basedir=".">
  
  <description>build fulldata model</description>
  <import file="../../../../imbuild/model.xml"/>
  
</project>


<project name="intermine-integrate-test" default="default" basedir="."
  xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
  xmlns:task="http://www.intermine.org/ns/im-task-proj/1">
  
  <description>build, test, package intermine-integrate-test</description>
  
  <import file="../../../imbuild/tests.xml"/>
  <import file="../../../imbuild/task.xml"/>

  <target name="-pre-test" depends="build-db-fulldatatest, build-db-unittest"/>
  
  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>
  
  <target name="build-db-fulldatatest" depends="init, -init-deps, -init-task-xml">
    <task:build-db osname="os.fulldatatest"
                   model="fulldata"/>
  </target>
  
  <target name="build-db-unittest" depends="init, -init-deps, -init-task-xml">
    <task:build-db osname="os.unittest"
                   model="testmodel"/>
  </target>

</project>


<project name="intermine-jbrowse-endpoint" default="default" basedir=".">
  
  <description>build, test, package intermine-web</description>
  <import file="../../../imbuild/library.xml"/>
    
</project>


<project name="intermine-objectstore" default="default" basedir=".">
  
  <description>build, test, package intermine-objectstore</description>
  <property name="generating.code" value="true"/>
  <import file="../../../imbuild/library.xml"/>
  
  <target name="do-generate">
    <mkdir dir="${gen.src.dir}/org/intermine/sql/query"/>
    <mkdir dir="${gen.src.dir}/org/intermine/objectstore/query/iql"/>
    <antlr target="${src.dir}/org/intermine/sql/query/intermine_sql.g"
           outputdirectory="${gen.src.dir}/org/intermine/sql/query">
      <classpath refid="project.compile.path"/>
    </antlr>
    <antlr target="${src.dir}/org/intermine/objectstore/query/iql/intermine_iql.g"
           outputdirectory="${gen.src.dir}/org/intermine/objectstore/query/iql">
      <classpath refid="project.compile.path"/>
    </antlr>
  </target>
  
</project>


<project name="logmodel" default="default" basedir=".">
  <description>build logmodel</description>
  <property name="have.xml" value="true"/>
  <import file="../../../../imbuild/core-model.xml"/>
</project>

<project name="testmodel" default="default" basedir=".">
  <description>build testmodel model</description>
  <import file="../../../../imbuild/model.xml"/> 
</project>


<project name="intermine-objectstore-test" default="default" basedir="."
  xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
  xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">
  
  <description>build, test, package intermine-objectstore-test</description>
  
  <import file="../../../imbuild/tests.xml"/>
  <import file="../../../imbuild/task.xml"/>
  
  <target name="-pre-test" depends="build-db-flatmodeunittest, build-db-unittest,
                                    build-db-truncunittest,
                                    build-db-notxmlunittest"/>
  
  <target name="do-test" depends="-init-macrodef-junit">
     <!--<imtestsproj:junit fork="yes" includes="org/intermine/util/CacheMapTest.class">
      <customize>
        <jvmarg value="-Xmx50M"/>
      </customize>
    </imtestsproj:junit>-->
    <imtestsproj:junit excludes="org/intermine/util/CacheMapTest.class"/>
  </target>
  
  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="${build.task.dir}"/>
      <pathelement location="${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>
  
  <target name="-init-build-db" depends="init, -init-deps, -init-task-xml"/>
  
  <target name="build-db-unittest" depends="-init-build-db">
    <imdbproj:build-db osname="os.unittest"
                       model="testmodel"/>
  </target>
  
  <target name="build-db-truncunittest" depends="-init-build-db">
    <imdbproj:build-db osname="os.truncunittest"
                       model="testmodel"/>
  </target>

  <target name="build-db-notxmlunittest" depends="-init-build-db">
    <imdbproj:build-db osname="os.notxmlunittest"
                       model="testmodel"/>
  </target>

  <target name="build-db-flatmodeunittest" depends="-init-build-db">
    <imdbproj:build-db osname="os.flatmodeunittest"
                       model="testmodel"/>
  </target>

  <target name="build-db-logtest" depends="-init-build-db">
    <imdbproj:build-db osname="os.log"
                       model="log"/>
  </target>



  <target name="build-db-logdbtest" depends="-init-build-db">
    <imdbproj:build-db osname="os.imLogger"
                       model="logmodel"/>
  </target>


  <target name="test-intermine-logging" depends="build-db-logdbtest, init-test, -init-macrodef-junit">
    <imtestsproj:junit includes="org/intermine/objectstore/log/ObjectStoreInterMineLogWriterTest.class" excludes="org/intermine/objectstore/**"/>
  </target>



  <!-- index the unittest database -->
  <target name="create-indexes-unittest" depends="-init-build-db">
    <create-indexes alias="os.unittest" attributeIndexes="false"/>
  </target>

  <!-- index the truncated unittest database -->
  <target name="create-indexes-truncunittest" depends="-init-build-db">
    <create-indexes alias="os.truncunittest" attributeIndexes="false"/>
  </target>

  <!-- index the withNotXml unittest database -->
  <target name="create-indexes-notxmlunittest" depends="-init-build-db">
    <create-indexes alias="os.notxmlunittest" attributeIndexes="false"/>
  </target>

  <!-- index the flatmode unittest database -->
  <target name="create-indexes-flatmodeunittest" depends="-init-build-db">
    <create-indexes alias="os.flatmodeunittest" attributeIndexes="false"/>
  </target>

  <target name="create-indexes-unittest-attribute" depends="-init-build-db">
    <create-indexes alias="os.unittest" attributeIndexes="true"/>
  </target>
  
</project>

<project name="intermine-pathquery" default="default" basedir=".">
  <description>build genomic tasks</description>
  <import file="../../../imbuild/library.xml"/> 
  
  <property name="generating.code" value="true"/>
  
  <target name="do-generate">
    <mkdir dir="${gen.src.dir}/org/intermine/pathquery"/>
    <antlr target="${src.dir}/org/intermine/pathquery/logic.g"
           outputdirectory="${gen.src.dir}/org/intermine/pathquery">
      <classpath refid="project.compile.path"/>
    </antlr>
  </target>
</project>


<project name="intermine-pathquery-test" default="default" basedir="."
  xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1">
  
  <description>build, test, package intermine-pathquery-test</description>
  
  <import file="../../../imbuild/tests.xml"/>

</project>

<project name="performancetest1-dbmodel" default="default" basedir=".">
  <description>represents the production objectstore and the model therein</description>
  <import file="../../../../imbuild/objectstore.xml"/>
</project>
<project name="performancetest1-integration" default="default" basedir=".">
  <description>perform integration</description>
  <import file="../../../../imbuild/integrate.xml"/>
</project>
<project name="Random data" default="default" basedir=".">
  <description>build, test, package Random data</description>
  
  <import file="../../../../../imbuild/source.xml"/>
  
</project>

<project name="random-tasks" default="default" basedir=".">
  <description>build random data tasks</description>
  <import file="../../../../../../imbuild/library.xml"/> 
</project>
<project name="Random data" default="default" basedir=".">
  <description>build, test, package Random data</description>
  
  <import file="../../../../../imbuild/source.xml"/>
  
</project>

<project name="random-tasks" default="default" basedir=".">
  <description>build random data tasks</description>
  <import file="../../../../../../imbuild/library.xml"/> 
</project>
<project name="Random data" default="default" basedir=".">
  <description>build, test, package Random data</description>
  
  <import file="../../../../../imbuild/source.xml"/>
  
</project>

<project name="random-tasks" default="default" basedir=".">
  <description>build random data tasks</description>
  <import file="../../../../../../imbuild/library.xml"/> 
</project>
<project name="Random data" default="default" basedir=".">
  <description>build, test, package Random data</description>
  
  <import file="../../../../../imbuild/source.xml"/>
  
</project>

<project name="random-tasks" default="default" basedir=".">
  <description>build random data tasks</description>
  <import file="../../../../../../imbuild/library.xml"/> 
</project>

<project name="intermine-web" default="default" basedir=".">
  
  <description>build, test, package intermine-web</description>
  <import file="../../../imbuild/library.xml"/>
    
</project>


<project name="intermine-web-test" default="default" basedir="." xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1" xmlns:task="http://www.intermine.org/ns/im-task-proj/1">

	<description>build, test, package intermine-web-test</description>
	<import file="../../../imbuild/tests.xml" />
	<import file="../../../imbuild/task.xml" />
        <import file="../../../imbuild/application.xml" />

	<target name="-init-build-db" depends="init, -init-deps, -init-task-xml"/>
	
	<target name="build-db-unittest" depends="-init-build-db">
		<task:build-db osname="os.unittest" model="testmodel" />
	</target>

	<target name="-pre-test" depends="create-db-userprofile, build-db-unittest" />

</project>


<project name="intermine-webapp" default="default" basedir=".">
  
  <description>build, test, package intermine-webapp</description>
  <import file="../../../imbuild/webapp.xml"/>
  
</project>

<project name="intermine-webservice-download" default="jar" basedir=".">
  
  <description>build, test, package intermine-webservice-client</description>

  <property name="dist.dir" value="dist" />

  <target name="clean">
    <delete dir="${dist.dir}" failonerror="false"/>
  </target>

  <!-- jar target actually produces a zip for this project -->
  <target name="jar" depends="clean">
    <mkdir dir="${dist.dir}"/>
    <ant antfile="../main/develop.xml" target="dist" dir="../main" inheritall="false">
      <property name="exclude.samples" value="true"/>
    </ant>
    <copy todir="${dist.dir}">
      <fileset dir="../main/client-dist/"/>
    </copy>
  </target>
    
</project>

<project name="intermine-webservice-client" default="default" basedir=".">
  
  <description>build, test, package intermine-webservice-client</description>
  <import file="../../../../imbuild/library.xml"/>
    
</project>


<project name="intermine-webservice-client-test" default="default" basedir="." xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1" xmlns:task="http://www.intermine.org/ns/im-task-proj/1">

  <description>build, test, package intermine-webservice-client-test</description>
  <import file="../../../../imbuild/tests.xml" />
  <import file="../../../../imbuild/task.xml" />

</project>


<project name="intermine-webapp-tasks" default="default" basedir=".">
  
  <description>build, test, package intermine-webapp-tasks</description>
  <import file="../../../imbuild/library.xml"/>
  
</project>

<project name="mastermine-dbmodel" default="default" basedir=".">
  <description>represents the production objectstore and the model therein</description>
  <import file="../../imbuild/objectstore.xml"/>

  <target name="create-so-model" depends="init, -init-deps">
    <taskdef name="so-model" classname="org.intermine.bio.task.SOToModelTask">
      <classpath refid="task.class.path"/>
    </taskdef>
    <so-model
       soTermListFile="${so.termlist.file}"
       soFile="${so.obo.file}"
       outputFile="${so.output.file}"/>
  </target>

  <target name="-pre-init-merge" depends="create-so-model"/>

</project>

<project name="mastermine-integration" default="default" basedir=".">
  <description>perform integration</description>
  
  <!-- To load just one data source, run "ant -Dsource=<whatever>" -->
  <!-- To empty the production database, go to mastermine/dbmodel, and type "ant clean" and then "ant build-db" -->

  <import file="../../imbuild/integrate.xml"/>

  <target name="acceptance-tests" depends="-init-properties, -init-integrate, -init-deps">
    <acceptance-tests configFile="resources/mastermine_acceptance_test.conf"
                      outputFile="build/acceptance_test.html"
                      database="db.production"/>
  </target>
</project>

<project name="mastermine-postprocess" default="default" basedir=".">

  <description>perform post processing for mastermine</description>

  <import file="../../imbuild/postprocess.xml"/>

</project>
<project name="mastermine-postprocess" default="default" basedir=".">

    <description>perform post processing operations</description>

    <import file="../../../imbuild/library.xml"/>
</project>
<project name="mastermine-webapp" default="default" basedir=".">

  <description>build, test, package mastermine-webapp</description>
  <import file="../../imbuild/application.xml"/>

  <target name="-pre-jar"
          depends="application.-pre-jar, -add-struts-config"/>

  <target name="-add-struts-config"
          description="Append the struts config modifications to the webapp"
  	  depends="-pre-init">
    <unwar src="${dist.war}" dest="${build.dir}/webapp/">
      <patternset>
  	<include name="WEB-INF/struts-config.xml"/>
        <include name="WEB-INF/tiles-defs.xml"/>
        <include name="WEB-INF/classes/InterMineWebApp.properties"/>  
 	<include name="WEB-INF/classes/model.properties"/>  
      </patternset>
    </unwar>

    <loadfile property="model.struts.config" srcFile="./resources/struts-config-model.xml"/>

    <replace file="${build.dir}/webapp/WEB-INF/struts-config.xml" value="${model.struts.config}">
      <!-- can't use normal token as xml must be parseable before this replacement -->
      <replacetoken><![CDATA[<!--@MODEL_INCLUDE@-->]]></replacetoken>
    </replace>


    <loadfile property="model.struts.form.config" 
              srcFile="./resources/struts-config-form-model.xml"/>

    <replace file="${build.dir}/webapp/WEB-INF/struts-config.xml"
             value="${model.struts.form.config}">
      <!-- can't use normal token as xml must be parseable before this replacement -->
      <replacetoken><![CDATA[<!--@MODEL_FORM_INCLUDE@-->]]></replacetoken>
    </replace>


    <loadfile property="model.tiles.defs" srcFile="./resources/tiles-defs-model.xml"/>

    <replace file="${build.dir}/webapp/WEB-INF/tiles-defs.xml" value="${model.tiles.defs}">
      <!-- can't use normal token as xml must be parseable before this replacement -->
      <replacetoken><![CDATA[<!--@MODEL_INCLUDE@-->]]></replacetoken>
    </replace>

 <!-- merge InterMine and model internationalisation properties files --> 
 <concat destfile="${build.dir}/webapp/WEB-INF/classes/InterMineWebApp.properties" append="yes"> 
   <fileset file="resources/model.properties"/> 
 </concat> 
 
    <war destfile="${dist.war}" update="true" >
      <webinf dir="${build.dir}/webapp/WEB-INF/">
  	<filename name="struts-config.xml" />
        <filename name="tiles-defs.xml" />
      </webinf>
    </war>

  </target>
</project>
<project name="metabolicmine-dbmodel" default="default" basedir=".">
  <description>represents the production objectstore and the model therein</description>
  <import file="../../imbuild/objectstore.xml"/>

  <target name="create-so-model" depends="init, -init-deps">
    <taskdef name="so-model" classname="org.intermine.bio.task.SOToModelTask">
      <classpath refid="task.class.path"/>
    </taskdef>
    <so-model
       soTermListFile="${so.termlist.file}"
       soFile="${so.obo.file}"
       outputFile="${so.output.file}"/>
  </target>

  <target name="-pre-init-merge" depends="create-so-model"/>

</project>
<project name="metabolicmine-gbrowse" default="default" basedir=".">
  <description>build gbrowse tasks</description>
  <import file="../../imbuild/gbrowse.xml"/>
</project>

<project name="metabolicmine-integration" default="default" basedir=".">
  <description>perform integration</description>
  
  <!-- To load just one data source, run "ant -Dsource=<whatever>" -->
  <!-- To empty the production database, go to metabolicmine/dbmodel, and type "ant clean" and then "ant build-db" -->

  <import file="../../imbuild/integrate.xml"/>

  <target name="test" depends="init, -init-deps">
      <ant inheritAll="false" antfile="../../sources/uniprot/build.xml" target="retrieve">
        <property name="intermine.properties.file" value="${intermine.properties.file}"/>
        <property name="default.intermine.properties.file" location="${default.intermine.properties.file}"/>
        <property name="source.name" value="uniprot-dros"/>
        <property name="target.model" value="genomic"/>
        <property name="uniprot.organisms" value="7227"/>
        <property name="src.data.dir" location="/shared/data/uniprot/6.8"/>
        <property name="path.to.production.model.jar" location="../production/dist/genomic.jar"/>
      </ant>

  </target>

  <target name="test-task" depends="init">
    <integrate projectXml="../project.xml" basedir="../.." source="uniprot" action="retrieve"/>
  </target>

  <target name="acceptance-tests" depends="-init-properties, -init-integrate, -init-deps">
    <acceptance-tests configFile="resources/metabolicmine_acceptance_test.conf"
                      outputFile="build/acceptance_test.html"
                      database="db.production"/>
  </target>
</project>

<project name="metabolicmine-postprocess" default="default" basedir=".">

  <description>perform post processing for metabolicmine</description>

  <import file="../../imbuild/postprocess.xml"/>

</project>
<project name="metabolicmine-postprocess" default="default" basedir=".">

    <description>perform post processing operations</description>

    <import file="../../../imbuild/library.xml"/>
</project>
<project name="metabolicmine-webapp" default="default" basedir=".">

  <description>build, test, package metabolicmine-webapp</description>
  <import file="../../imbuild/application.xml"/>

  <target name="-pre-jar"
          depends="application.-pre-jar, -add-struts-config"/>

  <target name="-add-struts-config"
          description="Append the struts config modifications to the webapp"
      depends="-pre-init">
    <unwar src="${dist.war}" dest="${build.dir}/webapp/">
      <patternset>
    <include name="WEB-INF/struts-config.xml"/>
        <include name="WEB-INF/tiles-defs.xml"/>
        <include name="WEB-INF/classes/InterMineWebApp.properties"/>
   <include name="WEB-INF/classes/model.properties"/>
   <include name="WEB-INF/web.xml"/>
      </patternset>
    </unwar>

    <loadfile property="model.struts.config" srcFile="./resources/struts-config-model.xml"/>

    <replace file="${build.dir}/webapp/WEB-INF/struts-config.xml" value="${model.struts.config}">
      <!-- can't use normal token as xml must be parseable before this replacement -->
      <replacetoken><![CDATA[<!--@MODEL_INCLUDE@-->]]></replacetoken>
    </replace>

    <loadfile property="model.struts.form.config"
              srcFile="./resources/struts-config-form-model.xml"/>

    <replace file="${build.dir}/webapp/WEB-INF/struts-config.xml"
             value="${model.struts.form.config}">
      <!-- can't use normal token as xml must be parseable before this replacement -->
      <replacetoken><![CDATA[<!--@MODEL_FORM_INCLUDE@-->]]></replacetoken>
    </replace>

    <loadfile property="model.tiles.defs" srcFile="./resources/tiles-defs-model.xml"/>

    <replace file="${build.dir}/webapp/WEB-INF/tiles-defs.xml" value="${model.tiles.defs}">
      <!-- can't use normal token as xml must be parseable before this replacement -->
      <replacetoken><![CDATA[<!--@MODEL_INCLUDE@-->]]></replacetoken>
    </replace>

    <loadfile property="model.web" srcFile="./resources/web-model.xml"/>

    <replace file="${build.dir}/webapp/WEB-INF/web.xml" value="${model.web}">
      <!-- can't use normal token as xml must be parseable before this replacement -->
      <replacetoken><![CDATA[<!--@MODEL_INCLUDE@-->]]></replacetoken>
    </replace>

 <!-- merge InterMine and model internationalisation properties files -->
 <concat destfile="${build.dir}/webapp/WEB-INF/classes/InterMineWebApp.properties" append="yes">
   <fileset file="resources/model.properties"/>
 </concat>

    <war destfile="${dist.war}" update="true" >
      <webinf dir="${build.dir}/webapp/WEB-INF/">
    <filename name="struts-config.xml" />
        <filename name="tiles-defs.xml" />
      </webinf>
    </war>

  </target>
</project>
<project name="modmine-dbmodel" default="default" basedir=".">
  <description>represents the production objectstore and the model therein</description>
  <import file="../../imbuild/objectstore.xml"/>

  
    <target name="create-so-model" depends="init, -init-deps">
    <taskdef name="so-model" classname="org.intermine.bio.task.SOToModelTask">
      <classpath refid="task.class.path"/>
    </taskdef>
    <so-model
       soTermListFile="${so.termlist.file}"
       soFile="${so.obo.file}"
       outputFile="${so.output.file}"/>
  </target>   

  <target name="-pre-init-merge" depends="create-so-model"/>
  
</project>
<project name="modmine-gbrowse" default="default" basedir=".">
  <description>build gbrowse tasks</description>
  <import file="../../imbuild/gbrowse.xml"/>
</project>

<project name="modmine-integration" default="default" basedir=".">
  <description>perform integration</description>
  
  <!-- To load just one data source, run "ant -Dsource=<whatever>" -->
  <!-- To empty the production database, go to modmine/dbmodel, and type "ant clean" and then "ant build-db" -->

  <import file="../../imbuild/integrate.xml"/>

  <target name="test" depends="init, -init-deps">
      <ant inheritAll="false" antfile="../../sources/uniprot/build.xml" target="retrieve">
        <property name="intermine.properties.file" value="${intermine.properties.file}"/>
        <property name="default.intermine.properties.file" location="${default.intermine.properties.file}"/>
        <property name="source.name" value="uniprot-dros"/>
        <property name="target.model" value="genomic"/>
        <property name="uniprot.organisms" value="7227"/>
        <property name="src.data.dir" location="/shared/data/uniprot/6.8"/>
        <property name="path.to.production.model.jar" location="../production/dist/genomic.jar"/>
      </ant>

  </target>

  <target name="test-task" depends="init">
    <integrate projectXml="../project.xml" basedir="../.." source="uniprot" action="retrieve"/>
  </target>

  <target name="acceptance-tests-metadata" depends="-init-properties, -init-integrate, -init-deps">
    <acceptance-tests configFile="../../bio/core/test/resources/modmine_acceptance_test_metadata.conf"
                      outputFile="build/acceptance_test.html"
                      database="db.production"/>
  </target>
	<target name="acceptance-tests" depends="-init-properties, -init-integrate, -init-deps">
		<acceptance-tests configFile="../../bio/core/test/resources/modmine_acceptance_test.conf"
											outputFile="build/acceptance_test.html"
											database="db.production"/>
	</target>
</project>

<project name="flymine-postprocess" default="default" basedir=".">

  <description>perform post processing for flymine</description>

  <import file="../../imbuild/postprocess.xml"/>

</project>
<project name="modmine-postprocess" default="default" basedir=".">

    <description>perform post processing operations</description>

    <import file="../../../imbuild/library.xml"/>
</project>

<project name="modmine-tools" default="default" basedir=".">
  <description>build modmine tools</description>
  <import file="../../../imbuild/library.xml"/> 
</project>

<project name="modmine-webapp" default="default" basedir=".">

  <description>build, test, package modmine-webapp</description>
  <import file="../../imbuild/application.xml"/>

  <target name="-pre-jar"
          depends="application.-pre-jar, -add-struts-config"/>

  <target name="-add-struts-config"
          description="Append the struts config modifications to the webapp"
      depends="-pre-init">
    <unwar src="${dist.war}" dest="${build.dir}/webapp/">
      <patternset>
    <include name="WEB-INF/struts-config.xml"/>
        <include name="WEB-INF/tiles-defs.xml"/>
        <include name="WEB-INF/classes/InterMineWebApp.properties"/>
   <include name="WEB-INF/classes/model.properties"/>
   <include name="WEB-INF/web.xml"/>
      </patternset>
    </unwar>

    <loadfile property="model.struts.config" srcFile="./resources/struts-config-model.xml"/>

    <replace file="${build.dir}/webapp/WEB-INF/struts-config.xml" value="${model.struts.config}">
      <!-- can't use normal token as xml must be parseable before this replacement -->
      <replacetoken><![CDATA[<!--@MODEL_INCLUDE@-->]]></replacetoken>
    </replace>

    <loadfile property="model.struts.form.config"
              srcFile="./resources/struts-config-form-model.xml"/>

    <replace file="${build.dir}/webapp/WEB-INF/struts-config.xml"
             value="${model.struts.form.config}">
      <!-- can't use normal token as xml must be parseable before this replacement -->
      <replacetoken><![CDATA[<!--@MODEL_FORM_INCLUDE@-->]]></replacetoken>
    </replace>

    <loadfile property="model.tiles.defs" srcFile="./resources/tiles-defs-model.xml"/>

    <replace file="${build.dir}/webapp/WEB-INF/tiles-defs.xml" value="${model.tiles.defs}">
      <!-- can't use normal token as xml must be parseable before this replacement -->
      <replacetoken><![CDATA[<!--@MODEL_INCLUDE@-->]]></replacetoken>
    </replace>

    <loadfile property="model.web" srcFile="./resources/web-model.xml"/>

    <replace file="${build.dir}/webapp/WEB-INF/web.xml" value="${model.web}">
      <!-- can't use normal token as xml must be parseable before this replacement -->
      <replacetoken><![CDATA[<!--@MODEL_INCLUDE@-->]]></replacetoken>
    </replace>

    <!-- merge InterMine and model internationalisation properties files -->
    <concat destfile="${build.dir}/webapp/WEB-INF/classes/InterMineWebApp.properties" append="yes">
      <fileset file="resources/model.properties"/>
    </concat>

    <war destfile="${dist.war}" update="true" >
      <webinf dir="${build.dir}/webapp/WEB-INF/">
    <filename name="struts-config.xml" />
        <filename name="tiles-defs.xml" />
      </webinf>
    </war>

   </target>
</project>

<project name="testmodel-dbmodel" default="default" basedir=".">
   
  <description>perform actions on the testmodel database</description>
  <import file="../../imbuild/objectstore.xml"/>
  
  <target name="insert-data-unittest" depends="build-db">
    <!-- Invalidate (delete) summary properties -->
    <delete file="${objectstoresummary.properties}"/>
    <insert-xml-data integrationWriter="integration.unittestmulti"
                     xmlResource="testmodel_webapp_data.xml"
                     sourceName="testsource"
                     sourceType="testsource"/>
  </target>

  <target name="loadsadata" depends="insert-data-unittest">
    <!-- Invalidate (delete) summary properties -->
    <delete file="${objectstoresummary.properties}"/>
    <insert-xml-data integrationWriter="integration.unittestmulti"
                     xmlResource="testmodel_extra_data.xml"
                     sourceName="testsource"
                     sourceType="testsource"/>
  </target>

  <target name="enormocorp" depends="loadsadata">
    <!-- Invalidate (delete) summary properties -->
    <delete file="${objectstoresummary.properties}"/>
    <insert-xml-data integrationWriter="integration.unittestmulti"
                     xmlResource="testmodel_enormo_data.xml"
                     sourceName="enormocorp"
                     sourceType="testsource"/>
  </target>
  <!-- OVERRIDEN TO ADD MODEL XML TO JAR -->

  <target name="-init-presetdef-jar" depends="-pre-init">
    <presetdef name="jar" uri="http://www.intermine.org/ns/im-lib-proj/1">
      <jar compress="${jar.compress}" jarfile="${dist.jar}">
        <fileset dir="${build.classes.dir}"/>
        <fileset dir="${resources.dir}"/>
        <fileset file="${build.dir}/model/${model.name}_model.xml"/>
        <fileset file="${build.dir}/model/class_keys.properties"/>
      </jar>
    </presetdef>
  </target>


</project>

<project name="testmodel-webapp" default="default" basedir=".">
  <description>build, test, package testmodel-webapp</description>
  <import file="../../../imbuild/application.xml"/>

  <target name="build-test-userprofile-withuser" depends="create-db-userprofile, -load-testuser, -load-default-templates">
  </target>
  <target name="-load-testuser">
    <read-userprofile-xml fileName="${resources.dir}/userprofile-withuser.xml" osAlias="${objectstore.name}"
                          userProfileAlias="${userprofile.objectstorewriter.name}"/>
  </target>
</project>


<project name="testmodel-webapp-test" default="default" basedir="."
  xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1">
  
  <description>build, test, package testmodel-webapp-test</description>
  
  <import file="../../../imbuild/tests.xml"/>
  <import file="../../../imbuild/task.xml"/>
  
  <target name="test" depends="-clear-dbs, tests.test"/>
  
  <target name="-clear-dbs" unless="no.test.init">
    <!--
      Build and init user-profile and unittest databases early, before building dependencies
      (so that objectstore summary reflects new database).
    -->
    <ant antfile="../../dbmodel/build.xml" target="insert-data-unittest" inheritAll="false"/>
    <ant antfile="../main/build.xml" target="build-db-userprofile" inheritAll="false"/>
  </target>
  
  <target name="redeploy-webapp">
    <ant antfile="../main/build.xml" target="remove-webapp" inheritAll="false"/>
    <ant antfile="../main/build.xml" target="release-webapp" inheritAll="false"/>
  </target>
  
  <target name="init-test" depends="tests.init-test, -copy-build-properties, redeploy-webapp"/>
  
  <target name="-copy-build-properties">
    <!-- need for the web unit tests to know where the webapp is -->
    <copy file="${user.home}/.intermine/testmodel.properties"
          tofile="${build.test.resources.dir}/intermine.properties"/>
  </target>
  
</project>


<project name="testmodel-webapp-test" default="default" basedir="."
  xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1">
  
  <description>build, test, package testmodel-webapp-test</description>
  
  <import file="../../../imbuild/tests.xml"/>
  <import file="../../../imbuild/task.xml"/>
  
  <target name="test" depends="-clear-dbs, tests.test"/>
  
  <target name="-clear-dbs" unless="no.test.init">
    <!--
      Build and init user-profile and unittest databases early, before building dependencies
      (so that objectstore summary reflects new database).
    -->
    <ant antfile="../../dbmodel/build.xml" target="insert-data-unittest" inheritAll="false"/>
    <ant antfile="../main/build.xml" target="build-db-userprofile" inheritAll="false"/>
  </target>
  
  <target name="redeploy-webapp">
    <ant antfile="../main/build.xml" target="remove-webapp" inheritAll="false"/>
    <ant antfile="../main/build.xml" target="release-webapp" inheritAll="false"/>
  </target>
  
  <target name="init-test" depends="tests.init-test, -copy-build-properties, redeploy-webapp"/>
  
  <target name="-copy-build-properties">
    <!-- need for the web unit tests to know where the webapp is -->
    <copy file="${user.home}/.intermine/testmodel.properties"
          tofile="${build.test.resources.dir}/intermine.properties"/>
  </target>
  
</project>

