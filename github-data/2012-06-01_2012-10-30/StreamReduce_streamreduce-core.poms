<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>server</artifactId>
        <groupId>com.streamreduce</groupId>
        <version>1.0.1-SNAPSHOT</version>
    </parent>

    <artifactId>analytics</artifactId>
    <name>StreamReduce :: Analytics</name>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>common</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>storm</groupId>
            <artifactId>storm</artifactId>
        </dependency>

        <dependency>
            <groupId>org.mongodb</groupId>
            <artifactId>mongo-java-driver</artifactId>
        </dependency>

        <dependency>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>net.sf.json-lib</groupId>
            <artifactId>json-lib</artifactId>
            <classifier>jdk15</classifier>
        </dependency>

        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-aws</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-camel</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-pool</artifactId>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.6.1</version>
        </dependency>

        <!-- Test Dependencies -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- uses ReflectionTestUtils -->
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.12</version>
                <configuration>
                    <systemPropertyVariables>
                        <quartz.store.type>local</quartz.store.type>
                    </systemPropertyVariables>
                    <forkMode>never</forkMode>
                    <useSystemClassLoader>false</useSystemClassLoader>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>production</id>
            <properties>
                <com.streamreduce.logging.level>INFO</com.streamreduce.logging.level>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <copy file="src/main/overrides/production.properties"
                                              tofile="${project.build.outputDirectory}/override.properties"
                                                />
                                    </tasks>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>staging</id>
            <properties>
                <com.streamreduce.logging.level>INFO</com.streamreduce.logging.level>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <copy file="src/main/overrides/staging.properties"
                                              tofile="${project.build.outputDirectory}/override.properties"
                                                />
                                    </tasks>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>trunk</id>
            <properties>
                <com.streamreduce.logging.level>DEBUG</com.streamreduce.logging.level>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <copy file="src/main/overrides/trunk.properties"
                                              tofile="${project.build.outputDirectory}/override.properties"
                                                />
                                    </tasks>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>development</id>
            <properties>
                <com.streamreduce.logging.level>DEBUG</com.streamreduce.logging.level>
            </properties>
        </profile>
        <!-- Profile for running storm in local mode and inside the java service wrapper-->
        <profile>
            <id>servicewrapper</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>appassembler-maven-plugin</artifactId>
                        <version>1.2.1</version>
                        <configuration>
                            <repositoryLayout>flat</repositoryLayout>
                            <includeConfigurationDirectoryInClasspath>true</includeConfigurationDirectoryInClasspath>
                            <daemons>
                                <daemon>
                                    <id>nodeable-analytics</id>
                                    <mainClass>com.streamreduce.storm.RunStorm</mainClass>
                                    <commandLineArguments>
                                        <commandLineArgument>local</commandLineArgument>
                                    </commandLineArguments>
                                    <platforms>
                                        <platform>jsw</platform>
                                    </platforms>
                                    <generatorConfigurations>
                                        <generatorConfiguration>
                                            <generator>jsw</generator>
                                            <includes>
                                                <include>linux-x86-64</include>
                                                <include>windows-x86-32</include>
                                                <include>macosx-x86-universal-32</include>
                                            </includes>
                                            <configuration>
                                                <property>
                                                    <name>wrapper.logfile</name>
                                                    <value>logs/wrapper.YYYYMMDD.log</value>
                                                </property>
                                                <property>
                                                    <name>wrapper.logfile.rollmode</name>
                                                    <value>DATE</value>
                                                </property>
                                                <property>
                                                    <name>wrapper.logfile.maxfiles</name>
                                                    <value>3</value>
                                                </property>
                                            </configuration>
                                        </generatorConfiguration>
                                    </generatorConfigurations>
                                    <jvmSettings>
                                        <initialMemorySize>1024</initialMemorySize>
                                        <maxMemorySize>4096</maxMemorySize>
                                        <systemProperties>
                                            <systemProperty>com.sun.management.jmxremote</systemProperty>
                                            <systemProperty>com.sun.management.jmxremote.port=6400</systemProperty>
                                            <systemProperty>com.sun.management.jmxremote.authenticate=false</systemProperty>
                                            <systemProperty>com.sun.management.jmxremote.ssl=false</systemProperty>
                                        </systemProperties>
                                        <extraArguments>
                                            <extraArgument>-server</extraArgument>
                                            <extraArgument>-verbosegc</extraArgument>
                                            <extraArgument>-XX:+PrintGCDetails</extraArgument>
                                            <extraArgument>-XX:+PrintGCApplicationConcurrentTime</extraArgument>
                                            <extraArgument>-XX:+PrintGCApplicationStoppedTime</extraArgument>
                                            <extraArgument>-XX:+PrintGCTimeStamps</extraArgument>
                                            <extraArgument>-Xloggc:/usr/local/nodeable/debug/gc-analytics.log</extraArgument>
                                            <extraArgument>-XX:+HeapDumpOnOutOfMemoryError</extraArgument>
                                            <extraArgument>-XX:HeapDumpPath=/usr/local/nodeable/debug/</extraArgument>
                                            <extraArgument>-XX:OnOutOfMemoryError=/usr/local/nodeable/debug/nodeable_analytics_jvm_oome</extraArgument>
                                            <extraArgument>-XX:ParallelGCThreads=8</extraArgument>
                                            <extraArgument>-XX:+UseConcMarkSweepGC</extraArgument>
                                        </extraArguments>
                                    </jvmSettings>
                                </daemon>
                            </daemons>
                        </configuration>
                        <executions>
                            <execution>
                                <id>generate-jsw-scripts</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>generate-daemons</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <finalName>${project.artifactId}</finalName>
                            <descriptors>
                                <descriptor>assembly.xml</descriptor>
                            </descriptors>
                            <appendAssemblyId>false</appendAssemblyId>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- leaving an inactive profile in for when storm goes to cluster mode and we abolish running
        storm in local mode -->
        <profile>
            <id>stormcluster</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-shade-plugin</artifactId>
                        <version>1.5</version>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>shade</goal>
                                </goals>
                                <configuration>
                                    <artifactSet>
                                        <!-- this will cause storm to freak out in a production cluster -->
                                        <excludes>
                                            <exclude>storm:storm</exclude>
                                        </excludes>
                                    </artifactSet>
                                    <transformers>
                                        <transformer
                                                implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                            <mainClass>com.streamreduce.storm.RunStorm</mainClass>
                                        </transformer>
                                        <transformer
                                                implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                            <resource>META-INF/log4j.properties</resource>
                                        </transformer>
                                    </transformers>
                                    <shadedArtifactAttached>true</shadedArtifactAttached>
                                    <shadedClassifierName>jar-with-dependencies</shadedClassifierName>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

    <parent>
        <artifactId>server</artifactId>
        <groupId>com.streamreduce</groupId>
        <version>1.0.1-SNAPSHOT</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <artifactId>bus</artifactId>
    <name>StreamReduce :: Bus</name>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>server</artifactId>
        <groupId>com.streamreduce</groupId>
        <version>1.0.1-SNAPSHOT</version>
    </parent>

    <artifactId>common</artifactId>
    <name>StreamReduce :: Common</name>
    <description>
        Common resources, properties files, and classes that are used between both the analytics and core modules.
    </description>

    <dependencies>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>

        <dependency>
            <groupId>net.sf.json-lib</groupId>
            <artifactId>json-lib</artifactId>
            <classifier>jdk15</classifier>
        </dependency>

        <dependency>
            <groupId>org.mongodb</groupId>
            <artifactId>mongo-java-driver</artifactId>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-spring</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>1.3.2</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>commons-validator</groupId>
            <artifactId>commons-validator</artifactId>
            <version>1.4.0</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <finalName>streamreduce-common</finalName>
    </build>

    <profiles>
        <profile>
            <id>development</id>
            <!-- Overrides found in common -->
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <copy file="src/main/overrides/development-override.properties"
                                              tofile="${project.build.outputDirectory}/override.properties"
                                              failonerror="false"
                                                />
                                    </tasks>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <parent>
        <groupId>com.streamreduce</groupId>
        <artifactId>server</artifactId>
        <version>1.0.1-SNAPSHOT</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <artifactId>server-core</artifactId>
    <packaging>jar</packaging>
    <name>StreamReduce :: Core</name>
    <description>Core library of the Nodeable Server middle-tier. Includes integration to external providers, and
        services for client access.
    </description>

    <build>
        <finalName>streamreduce-core</finalName>

        <plugins>
            <plugin>
                <groupId>org.zeroturnaround</groupId>
                <artifactId>jrebel-maven-plugin</artifactId>
                <version>1.1.3</version>
                <executions>
                    <execution>
                        <id>generate-rebel-xml</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.11</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.12</version>
                <configuration>
                    <useSystemClassLoader>false</useSystemClassLoader>
                    <forkMode>never</forkMode>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.3.2</version>
            </plugin>
        </plugins>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>

    <!-- plugins for creating site reports -->
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <configLocation>http://mulesoft.org/download/attachments/92/checkstyle.xml?version=1
                    </configLocation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.5.1</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>2.3</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <source>${jdk.version}</source>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>jdepend-maven-plugin</artifactId>
                <version>2.0-beta-2</version>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>2.3.2</version>
            </plugin>
        </plugins>
    </reporting>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>common</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-aws</artifactId>
            <version>2.10.0</version>
            <exclusions>
                <exclusion>
                    <groupId>org.codehaus.jackson</groupId>
                    <artifactId>jackson-core-asl</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-spring</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-camel</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-pool</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.2.1</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>

        <dependency>
            <groupId>rome</groupId>
            <artifactId>rome</artifactId>
        </dependency>

        <!-- Spring Dependencies -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
            <version>2.2.2</version>
        </dependency>

        <!-- AspectJ Dependencies -->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>1.6.11</version>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>1.6.11</version>
        </dependency>

        <!-- memcached  Dependencies -->
        <!--<dependency>-->
        <!--<groupId>spy</groupId>-->
        <!--<artifactId>spymemcached</artifactId>-->
        <!--<version>2.8</version>-->
        <!--</dependency>-->
        <!--<dependency>-->
        <!--<groupId>net.nelz.simplesm</groupId>-->
        <!--<artifactId>simple-spring-memcached-parent</artifactId>-->
        <!--<version>1.0.1</version>-->
        <!--</dependency>-->

        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.4</version>
        </dependency>

        <dependency>
            <groupId>asm</groupId>
            <artifactId>asm</artifactId>
            <version>3.1</version>
        </dependency>

        <dependency>
            <groupId>asm</groupId>
            <artifactId>asm-tree</artifactId>
            <version>3.1</version>
        </dependency>

        <dependency>
            <groupId>asm</groupId>
            <artifactId>asm-commons</artifactId>
            <version>3.1</version>
        </dependency>

        <!-- Shiro Security -->
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-spring</artifactId>
            <version>${shiro.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-core</artifactId>
            <version>${shiro.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>com.thoughtworks.proxytoys</groupId>
            <artifactId>proxytoys</artifactId>
            <version>1.0</version>
            <type>jar</type>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.18</version>
        </dependency>

        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>1.4</version>
        </dependency>

        <!-- mongo -->
        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.0-api</artifactId>
            <version>1.0.0.Final</version>
        </dependency>

        <dependency>
            <groupId>com.google.code.morphia</groupId>
            <artifactId>morphia</artifactId>
            <!-- dated snapshot stored in the Nodeable nexus repo -->
            <version>0.99.1-05112012</version>
        </dependency>

        <dependency>
            <groupId>com.google.code.morphia</groupId>
            <artifactId>morphia-validation</artifactId>
            <version>0.99</version>
        </dependency>

        <dependency>
            <!-- used by morphia validator -->
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>4.2.0.Final</version>
        </dependency>
        <dependency>
            <!--  used by hibernate validator -->
            <groupId>rhino</groupId>
            <artifactId>js</artifactId>
            <version>1.7R2</version>
        </dependency>

        <dependency>
            <groupId>org.mongodb</groupId>
            <artifactId>mongo-java-driver</artifactId>
        </dependency>

        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache-core</artifactId>
            <version>2.4.2</version>
        </dependency>

        <!-- xml and json parsing -->
        <dependency>
            <groupId>org.apache.abdera</groupId>
            <artifactId>abdera-parser</artifactId>
            <version>1.1.2</version>
        </dependency>

        <dependency>
            <groupId>net.sf.json-lib</groupId>
            <artifactId>json-lib</artifactId>
            <classifier>jdk15</classifier>
        </dependency>

        <dependency>
            <groupId>xom</groupId>
            <artifactId>xom</artifactId>
            <version>1.2.5</version>
        </dependency>

        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
        </dependency>

        <!-- jclouds -->
        <dependency>
            <groupId>org.jclouds.provider</groupId>
            <artifactId>aws-ec2</artifactId>
            <version>${jclouds.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jclouds.provider</groupId>
            <artifactId>aws-s3</artifactId>
            <version>${jclouds.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jclouds.provider</groupId>
            <artifactId>aws-cloudwatch</artifactId>
            <version>${jclouds.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jclouds.driver</groupId>
            <artifactId>jclouds-sshj</artifactId>
            <version>${jclouds.version}</version>
        </dependency>

        <!-- KeyService and friends -->
        <dependency>
            <groupId>bouncycastle</groupId>
            <artifactId>bcprov-jdk15</artifactId>
            <version>140</version>
        </dependency>

        <!-- SFDC integration lib -->
        <dependency>
            <groupId>com.force.api</groupId>
            <artifactId>force-wsc</artifactId>
            <version>23.0.0</version>
            <scope>compile</scope>
            <exclusions>
                <exclusion>
                    <artifactId>gson</artifactId>
                    <groupId>com.google.code.gson</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk</artifactId>
            <version>${aws-java-sdk.version}</version>
        </dependency>

        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-core-asl</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jdom</groupId>
            <artifactId>jdom</artifactId>
            <version>1.1.1</version>
        </dependency>

        <!-- Google Analytics API -->
        <dependency>
            <groupId>com.google.apis</groupId>
            <artifactId>google-api-services-analytics</artifactId>
            <version>v3-rev11-1.7.2-beta</version>
        </dependency>

        <!--  http://http://metrics.codahale.com/ -->
        <dependency>
            <groupId>com.yammer.metrics</groupId>
            <artifactId>metrics-core</artifactId>
            <version>${metrics.version}</version>
        </dependency>

        <!-- Oauth -->
        <dependency>
            <groupId>org.scribe</groupId>
            <artifactId>scribe</artifactId>
            <version>1.3.1-jalios</version>
        </dependency>

        <dependency>
            <groupId>org.apache.velocity</groupId>
            <artifactId>velocity</artifactId>
            <version>1.7</version>
        </dependency>

        <!-- for testing -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>mockobjects</groupId>
            <artifactId>mockobjects-core</artifactId>
            <version>0.09</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>httpunit</groupId>
            <artifactId>httpunit</artifactId>
            <version>1.7</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>jtidy</groupId>
                    <artifactId>jtidy</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>nekohtml</groupId>
            <artifactId>nekohtml</artifactId>
            <version>1.9.6.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>1.1</version>
        </dependency>
        <dependency>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty</artifactId>
            <version>6.1.26</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.streamreduce</groupId>
    <artifactId>server</artifactId>
    <packaging>pom</packaging>
    <name>StreamReduce :: Parent</name>
    <version>1.0.1-SNAPSHOT</version>
    <description>Parent Module for all StreamReduce Server-Side Java Components.</description>
    <url>http://www.streamreduce.com</url>

    <modules>
        <module>core</module>
        <module>analytics</module>
        <module>common</module>
        <module>system-tests</module>
        <module>rest</module>
        <module>webapp</module>
        <module>bus</module>
    </modules>

    <scm>
        <connection>scm:git:git://github.com/StreamReduce/streamreduce-core.git</connection>
        <url>https://github.com/StreamReduce/streamreduce-core</url>
    </scm>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <jdk.version>1.7</jdk.version>
        <spring.version>3.1.2.RELEASE</spring.version>
        <metrics.version>2.0.3</metrics.version>
        <slf4j.version>1.6.1</slf4j.version>
        <activemq.version>5.6.0</activemq.version>
        <jclouds.version>1.5.0</jclouds.version>
        <camel.version>2.10.0</camel.version>
        <jackson.version>1.9.7</jackson.version>
        <mongo-java-driver.version>2.7.3</mongo-java-driver.version>
        <net.sf.json-lib.version>2.4</net.sf.json-lib.version>
        <joda-time.version>2.1</joda-time.version>
        <shiro.version>1.2.1</shiro.version>
        <jersey.version>1.13</jersey.version>
        <aws-java-sdk.version>1.3.21</aws-java-sdk.version>
    </properties>


    <repositories>

        <repository>
            <id>codehaus-repo</id>
            <name>Codehaus Repository</name>
            <url>http://dist.codehaus.org/mule/dependencies/maven2</url>
            <layout>default</layout>
        </repository>

        <repository>
            <id>codehaus</id>
            <name>Codehaus Maven Release Repository</name>
            <url>http://repository.codehaus.org</url>
        </repository>

        <repository>
            <id>codehaus-snapshots</id>
            <name>Codehaus Maven Snapshots Repository</name>
            <url>http://snapshots.repository.codehaus.org</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>

        <repository>
            <id>codehaus-dist-snapshots</id>
            <name>Codehaus Maven Dist Snapshots Repository</name>
            <url>http://snapshots.dist.codehaus.org/mule/</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>

        <repository>
            <id>maven2-repository.java.net</id>
            <name>Java.net Repository for Maven</name>
            <url>http://download.java.net/maven/2/</url>
            <layout>default</layout>
        </repository>

        <repository>
            <id>jclouds-snapshots</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>

        <repository>
            <id>jboss-maven2-release-repository</id>
            <name>JBoss</name>
            <url>https://repository.jboss.org/nexus/content/groups/public</url>
        </repository>

        <repository>
            <id>Morphia</id>
            <url>http://morphia.googlecode.com/svn/mavenrepo/</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>

        <repository>
            <id>atlassian</id>
            <url>https://maven.atlassian.com/public</url>
        </repository>

        <repository>
            <id>clojars.org</id>
            <url>http://clojars.org/repo</url>
        </repository>

        <repository>
            <id>google-api-services</id>
            <url>http://mavenrepo.google-api-java-client.googlecode.com/hg</url>
        </repository>
    </repositories>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>2.3.2</version>
                    <configuration>
                        <source>${jdk.version}</source>
                        <target>${jdk.version}</target>
                        <encoding>ISO-8859-1</encoding>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <executions>
                        <execution>
                            <goals>
                                <goal>test-jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.11</version>
                    <configuration>
                        <excludes>
                            <exclude>**/*IT*.java</exclude>
                        </excludes>
                    </configuration>
                </plugin>

                <!--
                Use a newer version of the install plugin than what your Maven uses by default. The
                older version failed to install the project if there was no target/classes folder.
                Since we use mule packaging on the project we actually create and attach the zip that
                must be installed.
                -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.3.1</version>
                </plugin>


                <plugin>
                    <groupId>com.github.joelittlejohn.embedmongo</groupId>
                    <artifactId>embedmongo-maven-plugin</artifactId>
                    <version>0.1.4</version>
                </plugin>

            </plugins>
        </pluginManagement>


        <plugins>
            <plugin>
                <groupId>com.github.joelittlejohn.embedmongo</groupId>
                <artifactId>embedmongo-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>start</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                            <!-- use the 'run' goal instead to start mongodb and wait -->
                        </goals>
                        <configuration>
                            <port>37017</port>
                            <!-- optional, default 27017 -->
                            <version>2.0.2</version>
                            <!-- optional, default 2.1.1 --> <!-- 2.0.2 is current Nodeable production version -->
                            <logging>none</logging>
                            <!-- optional (file|console|none), default console -->
                            <bindIp>127.0.0.1</bindIp>
                            <!-- optional, default is to listen on all interfaces -->
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop</id>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                        <phase>post-integration-test</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>1.6.1</version>
            </dependency>

            <dependency>
                <groupId>org.mongodb</groupId>
                <artifactId>mongo-java-driver</artifactId>
                <version>${mongo-java-driver.version}</version>
            </dependency>

            <dependency>
                <groupId>net.sf.json-lib</groupId>
                <artifactId>json-lib</artifactId>
                <version>${net.sf.json-lib.version}</version>
                <classifier>jdk15</classifier>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>12.0</version>
            </dependency>

            <dependency>
                <groupId>storm</groupId>
                <artifactId>storm</artifactId>
                <version>0.8.0</version>
            </dependency>

            <dependency>
                <groupId>org.apache.activemq</groupId>
                <artifactId>activemq-pool</artifactId>
                <version>${activemq.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.activemq</groupId>
                <artifactId>activemq-camel</artifactId>
                <version>${activemq.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-aws</artifactId>
                <version>${camel.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-spring</artifactId>
                <version>${camel.version}</version>
            </dependency>

            <dependency>
                <groupId>rome</groupId>
                <artifactId>rome</artifactId>
                <version>0.9</version>
            </dependency>

            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda-time.version}</version>
            </dependency>

            <!-- Managed Test Dependencies -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.8.1</version>
            </dependency>

            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>1.8.4</version>
            </dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>servlet-api</artifactId>
                <version>3.0.20100224</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
</project>
<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.streamreduce</groupId>
        <artifactId>server</artifactId>
        <version>1.0.1-SNAPSHOT</version>
    </parent>

    <artifactId>rest</artifactId>
    <name>StreamReduce :: REST API</name>
    <description>All JAX-RS annotated resources that comprise the Nodeable Server REST API.</description>

    <dependencies>
        <dependency>
            <groupId>com.streamreduce</groupId>
            <artifactId>server-core</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-core</artifactId>
            <version>${jersey.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-server</artifactId>
            <version>${jersey.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-json</artifactId>
            <version>${jersey.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.wordnik</groupId>
            <artifactId>swagger-jaxrs_2.9.1</artifactId>
            <version>1.2.1-SNAPSHOT</version>
        </dependency>

        <!-- Test Dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.8.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- shiro security -->
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-spring</artifactId>
            <version>${shiro.version}</version>
        </dependency>

        <dependency>
            <groupId>com.streamreduce</groupId>
            <artifactId>server-core</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
            <type>test-jar</type>
        </dependency>
    </dependencies>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.streamreduce</groupId>
        <artifactId>server</artifactId>
        <version>1.0.1-SNAPSHOT</version>
    </parent>

    <artifactId>system-tests</artifactId>
    <packaging>pom</packaging>
    <name>StreamReduce :: System Tests</name>
    <description>Module used to contain system tests ran in Nodeable</description>

    <modules>
        <module>system-tests-external</module>
    </modules>

    <dependencies>
        <dependency>
            <groupId>com.streamreduce</groupId>
            <artifactId>server-core</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.streamreduce</groupId>
            <artifactId>common</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.streamreduce</groupId>
            <artifactId>rest</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.streamreduce</groupId>
            <artifactId>server-core</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
            <type>test-jar</type>
        </dependency>

        <dependency>
            <groupId>com.streamreduce</groupId>
            <artifactId>rest</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
            <type>test-jar</type>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
        </dependency>
    </dependencies>
</project>
<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.streamreduce</groupId>
        <artifactId>system-tests</artifactId>
        <version>1.0.1-SNAPSHOT</version>
    </parent>

    <artifactId>system-tests-external</artifactId>
    <name>StreamReduce :: External System Tests</name>
    <description>Module used to contain automated tests for exercising external systems. If a test actually
        needs to hit an external provider (e.g. s3, github) it should be contained here.
    </description>


    <dependencies>

        <dependency>
            <groupId>rome</groupId>
            <artifactId>rome</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-server</artifactId>
            <version>${jersey.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <additionalClasspathElements>
                        <additionalClasspathElement>${basedir}/../../dist/src/main/resources
                        </additionalClasspathElement>
                    </additionalClasspathElements>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.streamreduce</groupId>
        <artifactId>server</artifactId>
        <version>1.0.1-SNAPSHOT</version>
    </parent>

    <artifactId>webapp</artifactId>
    <packaging>war</packaging>
    <name>StreamReduce :: Webapp</name>


    <dependencies>

        <dependency>
            <groupId>com.streamreduce</groupId>
            <artifactId>server-core</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>com.streamreduce</groupId>
            <artifactId>rest</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-server</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey.contribs</groupId>
            <artifactId>jersey-spring</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-json</artifactId>
            <version>${jersey.version}</version>
        </dependency>

        <!-- shiro security -->
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-spring</artifactId>
            <version>${shiro.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-ehcache</artifactId>
            <version>${shiro.version}</version>
        </dependency>

        <dependency>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>streamreduce-app</finalName>
        <plugins>
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <configuration>
                    <webAppSourceDirectory>${project.basedir}/src/main/webapp</webAppSourceDirectory>
                    <classesDirectory>${project.build.directory}/classes</classesDirectory>
                </configuration>
            </plugin>
        </plugins>

    </build>

    <profiles>
        <profile>
            <id>jetty-run</id>
            <activation>
                <property>
                    <name>jetty.run</name>
                    <value>true</value>
                </property>
            </activation>

            <dependencies>
                <dependency>
                    <groupId>com.streamreduce</groupId>
                    <artifactId>analytics</artifactId>
                    <version>${project.version}</version>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.eclipse.jetty</groupId>
                        <artifactId>jetty-maven-plugin</artifactId>
                        <configuration>
                            <webAppSourceDirectory>${project.basedir}/src/main/webapp</webAppSourceDirectory>
                            <classesDirectory>${project.build.directory}/classes</classesDirectory>
                            <webAppConfig>
                                <sessionHandler implementation="org.eclipse.jetty.server.session.SessionHandler">
                                    <sessionManager implementation="org.eclipse.jetty.server.session.HashSessionManager">
                                        <!-- Disable url sessions using JSessionID -->
                                        <sessionIdPathParameterName>none</sessionIdPathParameterName>
                                    </sessionManager>
                                </sessionHandler>
                            </webAppConfig>
                        </configuration>
                        <executions>
                            <execution>
                                <id>jetty-run-execution</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
