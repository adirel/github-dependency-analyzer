apply plugin: 'java'
apply plugin: 'maven'

archivesBaseName = 'carballo-applet'

dependencies {
    compile project(':core')
    compile project(':jse')
}
allprojects {
    group = 'com.alonsoruibal'
    version = '0.8'

    repositories {
        mavenLocal()
        mavenCentral()
    }
}apply plugin: 'java'
apply plugin: 'maven'

archivesBaseName = 'carballo-core'

sourceCompatibility = 1.6
targetCompatibility = 1.6

task sourcesJar(type: Jar, dependsOn:classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}apply plugin: 'java'
apply plugin: 'maven'

archivesBaseName = 'carballo-gwt'

dependencies {
    compile 'com.google.gwt:gwt-user:2.6.0'
    compile 'com.google.gwt:gwt-dev:2.6.0'
    compile project(':core')
}

task sourcesJar(type: Jar, dependsOn:classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}apply plugin: 'java'
apply plugin: 'maven'

archivesBaseName = 'carballo-jse'

sourceCompatibility = 1.6
targetCompatibility = 1.6

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'net.sf.proguard:proguard-gradle:4.9'
    }
}

dependencies {
    compile project(':core')
    testCompile 'junit:junit:4.11'
}

task proguard(type: proguard.gradle.ProGuardTask, dependsOn: 'jar') {
    doFirst {
        configurations.compile.each { println it.name}
    }

    ext {
        outDir = file("${buildDir}/proguard")
        obfuscatedJar = "${outDir}/carballo.jar"
    }
    outDir.mkdirs()

    injars jar.archivePath
    injars configurations.compile
    outjars obfuscatedJar

    //printmapping "${outDir}/mappings.out"
    //libraryjars configurations.compile
    libraryjars "<java.home>/lib/rt.jar"

    optimizationpasses 5

    allowaccessmodification
    dontskipnonpubliclibraryclassmembers
    keep "public class com.alonsoruibal.chess.uci.Uci { *; }"

    doLast {
        logger.lifecycle "[Proguard] Generated obfuscated JAR in ${obfuscatedJar}"
    }
}

jar {
    manifest.attributes("Main-Class": "com.alonsoruibal.chess.uci.Uci")
}


apply plugin: 'java'

archivesBaseName = 'webtvchess'

dependencies {
    compile 'com.google.gwt:gwt-user:2.6.0'
    compile 'com.google.gwt:gwt-dev:2.6.0'
    compile 'org.vectomatic:lib-gwt-svg:0.5.7'
    compile project(':core')
    compile project(path: ':core', configuration: 'archives')
    compile project(':gwt')
    compile project(path: ':gwt', configuration: 'archives')
}

task compileGwt (dependsOn: classes, type: JavaExec) {
    ext.buildDir = "${project.projectDir}/src/main/webapp/"
    ext.extraDir = "${project.buildDir}/extra"

    inputs.source sourceSets.main.java.srcDirs
    inputs.dir sourceSets.main.output.resourcesDir
    outputs.dir buildDir

    doFirst {
        file(buildDir).mkdirs()
        //classpath.each { println it.name}
    }

    main = 'com.google.gwt.dev.Compiler'

    classpath {
        [
                sourceSets.main.java.srcDirs,           // Java source
                sourceSets.main.output.resourcesDir,    // Generated resources
                sourceSets.main.output.classesDir,      // Generated classes
                sourceSets.main.compileClasspath,       // Deps
        ]
    }

    args =
        [
                'org.vectomatic.libgwtsvgchess',
                '-war', buildDir,
                '-extra', extraDir,
                '-logLevel', 'INFO',
                '-localWorkers', '2',
                //'-style', 'PRETTY',
                //'-optimize', '9',        // No effect?
                '-XdisableCastChecking',   // Disables runtime checking of cast operations. This can reduce compiled file sizes.
                '-XdisableClassMetadata',  // Disables some java.lang.Class methods. This can reduce compiled file sizes.
                //'-XenableClosureCompiler', // This should create smaller JavaScript output. Not compatible with the compile report
                '-compileReport',
                '-XsoycDetailed',
                '-XcompilerMetrics',
        ]

    maxHeapSize = '256M'
}

jar.dependsOn compileGwt

task runSuperDevMode (dependsOn: classes, type: JavaExec) {
    ext.buildDir = "${project.projectDir}/src/main/webapp/"
    ext.extraDir = "${project.buildDir}/extra"

    inputs.source sourceSets.main.java.srcDirs
    inputs.dir sourceSets.main.output.resourcesDir
    outputs.dir buildDir

    doFirst {
        file(buildDir).mkdirs()
        //classpath.each { println it.name}
    }

    main = 'com.google.gwt.dev.Compiler'

    classpath {
        [
                sourceSets.main.java.srcDirs,           // Java source
                sourceSets.main.output.resourcesDir,    // Generated resources
                sourceSets.main.output.classesDir,      // Generated classes
                sourceSets.main.compileClasspath,       // Deps
        ]
    }

    args =
        [
                'org.vectomatic.libgwtsvgchess',
                '-war', buildDir,
                '-extra', extraDir,
                '-logLevel', 'INFO',
                '-localWorkers', '2',
                //'-optimize', '9',        // No effect?
                '-XdisableCastChecking',   // Disables runtime checking of cast operations. This can reduce compiled file sizes.
                '-XdisableClassMetadata',  // Disables some java.lang.Class methods. This can reduce compiled file sizes.
                //'-XenableClosureCompiler', // This should create smaller JavaScript output. Not compatible with the compile report
                '-compileReport',
                '-XsoycDetailed',
                '-XcompilerMetrics',
        ]

    maxHeapSize = '256M'
}