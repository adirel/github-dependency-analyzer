//version = '0.4-beta-2'  // Last released version
version '0.4-SNAPSHOT'
group 'com.xebialabs.restito'

defaultTasks 'build'

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'idea'

sourceCompatibility = '1.6'
targetCompatibility = '1.6'

repositories {
    mavenCentral()
}

configurations {
    provided
    provided.extendsFrom(compile)
}

sourceSets {
    main { compileClasspath += configurations.provided }
}

idea {
    module {
        scopes.PROVIDED.plus += configurations.provided
    }
}

dependencies {

    provided 'junit:junit:4.11'

    compile 'org.slf4j:slf4j-api:1.7.5'
    testCompile 'org.slf4j:slf4j-simple:1.7.5'

    compile 'org.mockito:mockito-core:1.9.0'
    compile 'com.google.guava:guava:14.0.1'

    compile 'org.glassfish.grizzly:grizzly-http-server:2.2.18'
    compile 'com.sun.jersey:jersey-grizzly2:1.14'

    compile 'org.apache.mina:mina-core:2.0.4'

    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'junit:junit:4.11'
    testCompile 'com.jayway.restassured:rest-assured:1.8.0'
}

tasks.withType(Compile) { compile ->
    compile.options.compilerArgs << '-Xlint:deprecation'
    compile.options.compilerArgs << '-Xlint:unchecked'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

signing {
    required { gradle.taskGraph.hasTask('uploadArchives') }
    sign configurations.archives
}

uploadArchives {
    if (project.hasProperty("sonatypeUsername")) {
	    repositories {
	        mavenDeployer {
	            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
	
	            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
	                authentication(userName: sonatypeUsername, password: sonatypePassword)
	            }
	
	            pom.project {
	                name 'Restito'
	                packaging 'jar'
	                description 'Restito - testing framework for rest clients'
	                url 'http://mkotsur.github.com/restito'
	
	                scm {
	                    url 'scm:git@github.com:mkotsur/restito.git'
	                    connection 'scm:git@github.com:mkotsur/restito.git'
	                    developerConnection 'scm:git@github.com:mkotsur/restito.git'
	                }
	
	                licenses {
	                    license {
	                        name 'MIT'
	                        url 'https://raw.github.com/mkotsur/restito/master/LICENSE'
	                        distribution 'repo'
	                    }
	                }
	
	                developers {
	                    developer {
	                        id 'mkotsur'
	                        name 'Mykhailo Kotsur'
	                    }
	                }
	            }
	        }
	    }
    }
}

apply plugin: 'java'
apply plugin:'application'


sourceCompatibility = 1.5
version = '1.0'


repositories {
    mavenCentral()
}

dependencies {
  testCompile 'com.xebialabs.restito:restito:0.4-beta-1' //  Restito dependency

  //  Note, that to have nice logging from Restito, you must have one of slf4j bindings on the classpath
  //  More info here: http://slf4j.org/faq.html#configure_logging
  testCompile 'org.slf4j:slf4j-jdk14:1.6.2'

  //  Restito can run with jUnit, or other test runner of your choice
  testCompile 'junit:junit:4.11'

  //  Dependencies needed by our 'Application' itself
  compile 'com.google.code.gson:gson:2.1'
  compile 'com.google.guava:guava:14.0.1'
}

mainClassName = "com.xebialabs.restito.examples.App"
apply plugin: 'java'
apply plugin:'application'


sourceCompatibility = 1.5
version = '1.0'


repositories {
    mavenCentral()
}

dependencies {
  compile 'com.xebialabs.restito:restito:0.4-beta-1' //  Restito dependency
}

mainClassName = "com.xebialabs.restito.examples.MyServer"
