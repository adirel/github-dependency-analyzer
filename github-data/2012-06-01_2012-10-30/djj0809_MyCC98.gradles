buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath 'com.android.tools.build:gradle:0.6.+'
	}
}
apply plugin: 'android-library'

dependencies {
  compile 'com.android.support:support-v4:18.0.+'
}

android {
  compileSdkVersion 16
  buildToolsVersion '18.0.1'

  sourceSets {
    main {
      manifest.srcFile 'AndroidManifest.xml'
      java.srcDirs = ['src']
      res.srcDirs = ['res']
    }
  }
}
buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath 'com.android.tools.build:gradle:0.6.+'
	}
}
apply plugin: 'android-library'


dependencies {
	repositories {
		mavenCentral()
	}
}
	
dependencies {
	compile 'com.nineoldandroids:library:2.4.0'
	compile project(':JazzyListViewLibrary')
}

android {
	compileSdkVersion 16
	buildToolsVersion "18.0.1"
	defaultConfig {
		minSdkVersion 8
		targetSdkVersion 16
	}

    sourceSets {
        main {
            manifest.srcFile './AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        instrumentTest.setRoot('tests')
    }
}
buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath 'com.android.tools.build:gradle:0.6.+'
	}
}
apply plugin: 'android-library'

repositories {
  mavenCentral()
}


dependencies {
	compile project(':ActionBarSherklockLibrary')
    compile 'com.android.support:support-v4:18.0.0' 
}

android {
	compileSdkVersion 16
	buildToolsVersion '18.0.1'
	defaultConfig {
		minSdkVersion 8
		targetSdkVersion 16
	}

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        instrumentTest.setRoot('tests')
    }
}
buildscript {
	repositories {
		mavenCentral()
	}

	dependencies {
		classpath 'com.android.tools.build:gradle:0.6.+'
	}
}
apply plugin: 'android-library'
repositories {
	mavenCentral()
}

dependencies {
	compile 'com.nineoldandroids:library:2.4.0'
}

android {
	compileSdkVersion 16
	buildToolsVersion "18.0.1"
	defaultConfig {
		minSdkVersion 8
		targetSdkVersion 16
	}

    sourceSets {
        main {
            manifest.srcFile './AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        instrumentTest.setRoot('tests')
    }
}
buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath 'com.android.tools.build:gradle:0.6.+'
	}
}
apply plugin: 'android-library'

repositories {
	mavenCentral()
}

dependencies {
    compile 'com.android.support:support-v4:18.0.0' 
	compile 'com.nineoldandroids:library:2.4.0'
}

android {
	compileSdkVersion 16
	buildToolsVersion "18.0.1"
	defaultConfig {
		minSdkVersion 8
		targetSdkVersion 16
	}

    sourceSets {
        main {
            manifest.srcFile './AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        instrumentTest.setRoot('tests')
    }
}
buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath 'com.android.tools.build:gradle:0.6.+'
	}
}
apply plugin: 'android-library'

dependencies {
    compile 'com.android.support:support-v4:18.0.0' 
}

android {
	compileSdkVersion 16
	buildToolsVersion "18.0.1"
	defaultConfig {
		minSdkVersion 8
		targetSdkVersion 16
	}

    sourceSets {
        main {
            manifest.srcFile './AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        instrumentTest.setRoot('tests')
    }
}

buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath 'com.android.tools.build:gradle:0.6.+'
	}
}
apply plugin: 'android-library'


dependencies {
 }

android {

	compileSdkVersion 16
	buildToolsVersion "18.0.1"
	defaultConfig {
		minSdkVersion 8
		targetSdkVersion 16
	}

    sourceSets {
        main {
            manifest.srcFile './AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        instrumentTest.setRoot('tests')
    }
}
buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath 'com.android.tools.build:gradle:0.6.+'
	}
}
apply plugin: 'android-library'

repositories {
  mavenCentral()
}

dependencies {
 	compile fileTree(dir: 'libs', include: '*.jar')	
	compile project(':FadingActionBarLibrary')
}

android {
	compileSdkVersion 16
	buildToolsVersion "18.0.1"
	defaultConfig {
		minSdkVersion 8
		targetSdkVersion 16
	}

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        instrumentTest.setRoot('tests')
    }
}
buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath 'com.android.tools.build:gradle:0.6.+'
	}
}
apply plugin: 'android-library'
repositories {
  mavenCentral()
}

dependencies {
     compile project(':Robosherlock')
}

android {

	compileSdkVersion 16
	buildToolsVersion "18.0.1"
	defaultConfig {
		minSdkVersion 8
		targetSdkVersion 16
	}

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        instrumentTest.setRoot('tests')
    }
}
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.6.+'
    }
}
apply plugin: 'android-library'

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.android.support:support-v4:18.0.+'
    compile  project(":SlidingMenuLibrary")

}

android {
    compileSdkVersion 16
    buildToolsVersion "18.0.1"

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 16
    }
}
apply plugin: "android"
buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath 'com.android.tools.build:gradle:0.6.+'
	}
}

repositories {
	mavenCentral()
}



dependencies {  
 
	compile  fileTree(dir: 'libs', include: '*.jar')	
 	compile 'org.apache.commons:commons-lang3:3.1'
    compile ('de.keyboardsurfer.android.widget:crouton:1.8.1') {
        exclude module: 'support-v4'
    }
	compile  project(":AndroidPullToRefreshLibrary")
	compile  project(":PagerSlidingTabStripLibrary")
	compile  project(":SwipeBackLayoutLibrary")
 	compile  project(":PhotoViewLibrary")
 	compile  project(":JazzyViewPagerLibrary")
	compile  project(":FadingActionBarLibrary")
	compile 'com.google.code.gson:gson:2.2.4'
	compile ('com.octo.android.robospice:robospice:1.4.6')  {
		exclude module: 'support-v4'
	}
}
	
android {
 	compileSdkVersion 16
	buildToolsVersion "18.0.1"
	defaultConfig {

		minSdkVersion 8
		targetSdkVersion 16
	}

    signingConfigs {
		releaseConfig {
            storeFile file("key.keystore")
            storePassword signPwd
            keyAlias signKeyAlias
            keyPassword signKeyPwd
        }
    }

    buildTypes {
		debug {
 		}
		release {
		    runProguard true
			proguardFile ('proguard-project.txt')
			signingConfig signingConfigs.releaseConfig
 		}
	}
}



	
  
allprojects {
	tasks.withType(Compile) {
		options.encoding = 'UTF-8'
	}
}