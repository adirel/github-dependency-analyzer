<?xml version="1.0" encoding="UTF-8"?>
<project name="SensorRecordFromDevice" default="help">
<!-- !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
     If Eclipse does not let you build the project because
     it claims the "help" target above does not exist,
     go to Window->preferences->Ant->Editor->Problems tab
     and add "build.xml" to the ignore list.
     !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
-->
	
<!-- #############################################
     OpenIntents modifications to build.xml follow
     ############################################# -->

    <!-- Private build properties are not shared via svn, 
         developers must have there own copy. -->	 
    <property file="build-private.properties" />

	<!-- Read manifest properties , e.g. 
	     manifest(android:versionName) or manifest.package -->
	<xmlproperty file="AndroidManifest.xml" />
	<property name="version" value="${manifest(android:versionName)}" />

	<!-- Overwrite default release file name -->
    <property name="out.release.file.name"
                  value="${ant.project.name}-${version}.apk" />

	<!-- Path for java doc -->
    <property name="out.doc.dir"
                  value="doc" />
	
<!-- ################################################
     The default Android 2.3 build.xml script follows
     ################################################ -->

<!-- The local.properties file is created and updated by the 'android'
     tool.
     It contains the path to the SDK. It should *NOT* be checked into
     Version Control Systems. -->
    <property file="local.properties" />

    <!-- The build.properties file can be created by you and is never touched
         by the 'android' tool. This is the place to change some of the
         default property values used by the Ant rules.
         Here are some properties you may want to change/update:

         source.dir
             The name of the source directory. Default is 'src'.
         out.dir
             The name of the output directory. Default is 'bin'.

         Properties related to the SDK location or the project target should
         be updated using the 'android' tool with the 'update' action.

         This file is an integral part of the build system for your
         application and should be checked into Version Control Systems.

         -->
    <property file="build.properties" />

    <!-- The default.properties file is created and updated by the 'android'
         tool, as well as ADT.
         This file is an integral part of the build system for your
         application and should be checked into Version Control Systems. -->
    <property file="default.properties" />

    <!-- Custom Android task to deal with the project target, and import the
         proper rules.
         This requires ant 1.6.0 or above. -->
    <path id="android.antlibs">
        <pathelement path="${sdk.dir}/tools/lib/anttasks.jar" />
        <pathelement path="${sdk.dir}/tools/lib/sdklib.jar" />
        <pathelement path="${sdk.dir}/tools/lib/androidprefs.jar" />
    </path>

    <taskdef name="setup"
        classname="com.android.ant.SetupTask"
        classpathref="android.antlibs" />

<!-- extension targets. Uncomment the ones where you want to do custom work
     in between standard targets -->
<!--
    <target name="-pre-build">
    </target>
    <target name="-pre-compile">
    </target>

    [This is typically used for code obfuscation.
     Compiled code location: ${out.classes.absolute.dir}
     If this is not done in place, override ${out.dex.input.absolute.dir}]
    <target name="-post-compile">
    </target>
-->


    <!-- Execute the Android Setup task that will setup some properties
         specific to the target, and import the build rules files.

         The rules file is imported from
            <SDK>/platforms/<target_platform>/ant/ant_rules_r#.xml

         To customize existing targets, there are two options:
         - Customize only one target:
             - copy/paste the target into this file, *before* the
               <setup> task.
             - customize it to your needs.
         - Customize the whole script.
             - copy/paste the content of the rules files (minus the top node)
               into this file, *after* the <setup> task
             - disable the import of the rules by changing the setup task
               below to <setup import="false" />.
             - customize to your needs.
    -->
    <setup />


<!-- #############################################
     OpenIntents modifications to build.xml follow
     ############################################# -->

	<!-- ############### Install-release ################ -->
	
	<target name="install-release" depends="release">
		<echo>Reinstalling ${out.release.file.name} onto default emulator or device...</echo>
		<exec executable="${adb}" failonerror="true">
            <arg line="${adb.device.arg}" />
			<arg value="install" />
			<arg value="-r" />
			<arg value="${out.release.file}" />
		</exec>
	</target>
	
	<!-- ############### JavaDoc ####################### -->
	<!-- Create JavaDoc -->
	<target name="javadoc">
		<delete dir="${out.doc.dir}" />
		<javadoc access="public" author="true" destdir="${out.doc.dir}" 
        	nodeprecated="false" nodeprecatedlist="false" noindex="false" nonavbar="false" notree="false" 
        	source="1.6" sourcepath="${source.absolute.dir}" splitindex="true" use="true" version="true">
        </javadoc>
    </target>
		
	<!-- ############ Convencience target ############## -->
	<target name="all" 
		depends="release, javadoc" />
	
	
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project name="SensorSimulatorSettings" default="help">
<!-- !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
     If Eclipse does not let you build the project because
     it claims the "help" target above does not exist,
     go to Window->preferences->Ant->Editor->Problems tab
     and add "build.xml" to the ignore list.
     !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
-->
	
<!-- #############################################
     OpenIntents modifications to build.xml follow
     ############################################# -->

    <!-- Private build properties are not shared via svn, 
         developers must have there own copy. -->	 
    <property file="build-private.properties" />

	<!-- Read manifest properties , e.g. 
	     manifest(android:versionName) or manifest.package -->
	<xmlproperty file="AndroidManifest.xml" />
	<property name="version" value="${manifest(android:versionName)}" />

	<!-- Overwrite default release file name -->
    <property name="out.release.file.name"
                  value="${ant.project.name}-${version}.apk" />

	<!-- Path for library jar file -->
    <property name="out.lib.file.name"
                  value="sensorsimulator-lib-${version}.jar" />

	<!-- Path for java doc -->
    <property name="out.doc.dir"
                  value="doc" />
	
<!-- ################################################
     The default Android 2.3 build.xml script follows
     ################################################ -->

<!-- The local.properties file is created and updated by the 'android'
     tool.
     It contains the path to the SDK. It should *NOT* be checked into
     Version Control Systems. -->
    <property file="local.properties" />

    <!-- The build.properties file can be created by you and is never touched
         by the 'android' tool. This is the place to change some of the
         default property values used by the Ant rules.
         Here are some properties you may want to change/update:

         source.dir
             The name of the source directory. Default is 'src'.
         out.dir
             The name of the output directory. Default is 'bin'.

         Properties related to the SDK location or the project target should
         be updated using the 'android' tool with the 'update' action.

         This file is an integral part of the build system for your
         application and should be checked into Version Control Systems.

         -->
    <property file="build.properties" />

    <!-- The default.properties file is created and updated by the 'android'
         tool, as well as ADT.
         This file is an integral part of the build system for your
         application and should be checked into Version Control Systems. -->
    <property file="default.properties" />

    <!-- Custom Android task to deal with the project target, and import the
         proper rules.
         This requires ant 1.6.0 or above. -->
    <path id="android.antlibs">
        <pathelement path="${sdk.dir}/tools/lib/anttasks.jar" />
        <pathelement path="${sdk.dir}/tools/lib/sdklib.jar" />
        <pathelement path="${sdk.dir}/tools/lib/androidprefs.jar" />
    </path>

    <taskdef name="setup"
        classname="com.android.ant.SetupTask"
        classpathref="android.antlibs" />

<!-- extension targets. Uncomment the ones where you want to do custom work
     in between standard targets -->
<!--
    <target name="-pre-build">
    </target>
    <target name="-pre-compile">
    </target>

    [This is typically used for code obfuscation.
     Compiled code location: ${out.classes.absolute.dir}
     If this is not done in place, override ${out.dex.input.absolute.dir}]
    <target name="-post-compile">
    </target>
-->


    <!-- Execute the Android Setup task that will setup some properties
         specific to the target, and import the build rules files.

         The rules file is imported from
            <SDK>/platforms/<target_platform>/ant/ant_rules_r#.xml

         To customize existing targets, there are two options:
         - Customize only one target:
             - copy/paste the target into this file, *before* the
               <setup> task.
             - customize it to your needs.
         - Customize the whole script.
             - copy/paste the content of the rules files (minus the top node)
               into this file, *after* the <setup> task
             - disable the import of the rules by changing the setup task
               below to <setup import="false" />.
             - customize to your needs.
    -->
    <setup />


<!-- #############################################
     OpenIntents modifications to build.xml follow
     ############################################# -->

	<!-- ############### Install-release ################ -->
	
	<target name="install-release" depends="release">
		<echo>Reinstalling ${out.release.file.name} onto default emulator or device...</echo>
		<exec executable="${adb}" failonerror="true">
            <arg line="${adb.device.arg}" />
			<arg value="install" />
			<arg value="-r" />
			<arg value="${out.release.file}" />
		</exec>
	</target>
	
	<!-- ############### Library jar file ################ -->
	
	<!-- Create the library -->
	<!-- Content is defined in "build-lib-content.txt" -->
    <property name="out.lib.file"
            location="${out.absolute.dir}/${out.lib.file.name}" />
	<target name="lib"  depends="compile" >
		<jar
			destfile="${out.lib.file}"
			basedir="${out.classes.absolute.dir}"
			includesfile="build-lib-content.txt" >
		</jar>
	</target> 
	
	<!-- ############### JavaDoc ####################### -->
	<!-- Create JavaDoc -->
	<target name="javadoc">
		<delete dir="${out.doc.dir}" />
		<javadoc access="public" author="true" destdir="${out.doc.dir}" 
        	nodeprecated="false" nodeprecatedlist="false" noindex="false" nonavbar="false" notree="false" 
        	source="1.6" sourcepath="${source.absolute.dir}" splitindex="true" use="true" version="true">
        </javadoc>
    </target>
		
	<!-- ############ Convencience target ############## -->
	<target name="all" 
		depends="release, lib, javadoc" />
	
	
</project>
<?xml version="1.0" ?>
<project name="SensorSimulator-Release" default="help">

	<!-- 
	    ==============================================================
	    Use this Ant script to build the complete release.
	    
	    Targets:
	    - "release": the full openintents release, including
	       binary + source + javadoc.
	    - "release-zip": create release zip-files, including
	      binary + source + javadoc.
	    ==============================================================
	    
		~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		To run the release script directly in Eclipse:
		
		* In the Package Explorer, open the project OpenIntents
		* Right-click on "build-release.xml" / "Run As" / 
		  "2 Ant Build..."
		* Check targets to execute: "release-zip"
		* Click "Run"
		
		The release files and corresponding zip files are created in 
		OpenIntents/release.
		~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		
	-->
	
	<!-- Read properties from OpenIntents property file -->
	<property file="build.properties" />
	<property file="${build.properties.dir}/build.properties" />

	<!-- Read manifest properties , e.g. 
	     manifest(android:versionName) or manifest.package -->
	<xmlproperty file="${build.properties.dir}/AndroidManifest.xml" />
	<property name="version" value="${manifest(android:versionName)}" />

	<!-- Base name of the release files -->
	<property name="sensorsimulator-name" value="sensorsimulator-${version}" />
		
	<!-- release dir: this is where all the completed files go -->
	<property name="release-dir" value="release" />
	<property name="sensorsimulator-dir" value="${release-dir}/${sensorsimulator-name}" />
		
	<!-- subdirectories in the release-dir -->
	<property name="sensorsimulator-bin-dir" value="${sensorsimulator-dir}/bin" />
	<property name="sensorsimulator-lib-dir" value="${sensorsimulator-dir}/lib" />
						
	<!-- (sub)project folders  -->
	<property name="base-dir" value="${build.properties.dir}" />
	<property name="buildrelease-dir" value="." />
	<property name="lib-dir" value="../SensorSimulatorSettings/bin" />
	<property name="thisrelease-dir" value="." />
	<property name="sensorsimulator-source-dir" value="../SensorSimulator" />
	<property name="sensorsimulator-samples-dir" value="../samples" />
	<property name="sensorrecordfromdevice-dir" value="../SensorRecordFromDevice" />

	<!-- standard lib file -->
	<property name="sensorsimulator-lib-file" value="${sensorsimulator-lib-dir}/sensorsimulator-lib-${version}.jar" />
	
	<target
		name="help"
		>
		<echo>----------openintents.org buildscript ${version}</echo>
		<echo>use release for a full openintents release.</echo>
		<echo>use release-zip for creating release zip-files.</echo>

	</target>

	<!-- delete release directory and set up structure -->
	<target name="setup.dirs">
		<delete dir="${release-dir}"/>
		<mkdir dir="${release-dir}"/>
		<mkdir dir="${sensorsimulator-dir}"/>
		<mkdir dir="${sensorsimulator-bin-dir}"/>
		<mkdir dir="${sensorsimulator-lib-dir}"/>
		<mkdir dir="${sensorsimulator-dir}/release"/>
		
		<!-- Now copy global readme files -->
		<copy 
			file="../readme.txt" 
			todir="${sensorsimulator-dir}" />

		<!-- Copy the source files -->
		<!--
		<copy todir="${source-dir}/openintents">
		    <fileset dir="${base-dir}">
		    	<exclude name="**/bin/**" />
		    	<exclude name="**/doc/**" />
		    	<exclude name="**/doc-lib/**" />
		    	<exclude name="**/release/**" />
	    		<exclude name="**/.svn" />
		    </fileset>
		</copy>
		-->
		
		<!-- Copy the build-release files -->
		<copy todir="${sensorsimulator-dir}/release">
		    <fileset dir="${buildrelease-dir}">
	    		<exclude name="**/release/**" />
	    		<exclude name="**/.svn" />
		    </fileset>
		</copy>
		
	</target>

	<target 
		name="SensorSimulatorSettings"		
		depends="setup.dirs"
		>
		<echo>------------------------------SensorSimulatorSettings + lib----------------------</echo>
		<ant
			dir="${base-dir}"
			antfile="build.xml"
			target="all"
		/>
		<copy todir="${sensorsimulator-bin-dir}" flatten="true">
			<fileset dir="${base-dir}">
				<include name="bin/SensorSimulatorSettings-${version}.apk" />
				<include name="readme_SensorSimulatorSettings.txt" />				
			</fileset>
		</copy>
		<!-- Copy lib to binary release -->
		<copy
			file="${base-dir}/bin/sensorsimulator-lib-${version}.jar"
			tofile="${sensorsimulator-lib-file}"
			/>
		<!-- Copy to source release -->
		<copy todir="${sensorsimulator-dir}/SensorSimulatorSettings">
		    <fileset dir="${base-dir}">
		    	<exclude name="**/bin/**" />
		    	<exclude name="**/doc/**" />
		    	<exclude name="**/gen/**" />
				<exclude name="**/release/**" />
				<exclude name="**/tmp/**" />
				<exclude name="**/translations/**" />
	    		<exclude name="**/.svn" />
	    		<exclude name="**/build-private.properties" />
	    		<exclude name="**/local.properties" />
		    </fileset>
		</copy>
	</target>


	<target 
		name="SensorRecordFromDevice"		
		depends="setup.dirs"
		>
		<echo>------------------------------SensorRecordFromDevice----------------------</echo>
		<ant
			dir="${sensorrecordfromdevice-dir}"
			antfile="build.xml"
			target="all"
		/>
		<copy todir="${sensorsimulator-bin-dir}" flatten="true">
			<fileset dir="${sensorrecordfromdevice-dir}">
				<include name="bin/SensorRecordFromDevice-${version}.apk" />
				<include name="readme_SensorRecordFromDevice.txt" />				
			</fileset>
		</copy>
		<!-- Copy to source release -->
		<copy todir="${sensorsimulator-dir}/SensorRecordFromDevice">
		    <fileset dir="${sensorrecordfromdevice-dir}">
		    	<exclude name="**/bin/**" />
		    	<exclude name="**/doc/**" />
		    	<exclude name="**/gen/**" />
				<exclude name="**/release/**" />
				<exclude name="**/tmp/**" />
				<exclude name="**/translations/**" />
	    		<exclude name="**/.svn" />
	    		<exclude name="**/build-private.properties" />
	    		<exclude name="**/local.properties" />
		    </fileset>
		</copy>
	</target>


	<target name="SensorSimulator">
		<echo>------------------------------SensorSimulator----------------------</echo>
		<!-- Compile -->
		<ant
			dir="${sensorsimulator-source-dir}"
			antfile="build-release.xml"
			target="all"
			>
		</ant>
		<!-- Copy to binary release -->
		<copy todir="${sensorsimulator-bin-dir}" flatten="true">
			<fileset dir="${sensorsimulator-source-dir}">
				<include name="bin/sensorsimulator-${version}.jar" />
				<include name="readme_SensorSimulator.txt" />
			</fileset>
		</copy>
		
		<!-- Copy to source release -->
		<copy todir="${sensorsimulator-dir}/SensorSimulator">
		    <fileset dir="${sensorsimulator-source-dir}">
		    	<exclude name="**/bin/**" />
		    	<exclude name="**/doc/**" />
		    	<exclude name="**/gen/**" />
	    		<exclude name="**/.svn" />
	    		<exclude name="**/MANIFEST.MF" />
	    		<exclude name="**/SensorData.txt" />
		    </fileset>
		</copy>
	</target>	

	<target name="samples">
		<echo>------------------------------samples----------------------</echo>
		<!-- Copy to source release -->
		<copy todir="${sensorsimulator-dir}/samples">
		    <fileset dir="${sensorsimulator-samples-dir}">
		    	<exclude name="**/bin/**" />
		    	<exclude name="**/doc/**" />
		    	<exclude name="**/gen/**" />
				<exclude name="**/release/**" />
				<exclude name="**/tmp/**" />
				<exclude name="**/translations/**" />
	    		<exclude name="**/.svn" />
	    		<exclude name="**/build-private.properties" />
	    		<exclude name="**/local.properties" />
		    </fileset>
		</copy>
	</target>	

	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!-- Release -->
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<target
		name="release"		
		depends="
			SensorSimulatorSettings,
			SensorRecordFromDevice,
			SensorSimulator,
			samples"
		>
	</target>

	<!-- Zip the release directories -->
	<target 
		name="release-zip"
		depends="release">
		<echo>------------------------------Zipping files----------------------</echo>
		<zip destfile="${sensorsimulator-dir}.zip">
			<zipfileset dir="${sensorsimulator-dir}" prefix="${sensorsimulator-name}"/>
		</zip>
	</target>
</project>
