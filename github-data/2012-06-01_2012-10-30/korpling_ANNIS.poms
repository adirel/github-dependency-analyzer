<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <artifactId>annis-all</artifactId>
    <groupId>de.hu-berlin.german.korpling.annis</groupId>
    <version>3.1.2</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <artifactId>annis-gui</artifactId>
  <packaging>war</packaging>

  <organization>
    <name>Corpuslinguistic working group Humboldt University Berlin</name>
    <url>http://www.linguistik.hu-berlin.de/institut/professuren/korpuslinguistik/</url>
  </organization>
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <netbeans.hint.deploy.server>Tomcat</netbeans.hint.deploy.server>
  </properties>

  <build>
    <finalName>annis-gui</finalName>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
      <resource>
        <directory>${basedir}/target/extra-resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <plugins>
   
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.2</version>
        <configuration>
          <webResources>
            <webResource>
              <directory>${basedir}/src/main/webapp/WEB-INF</directory>
              <includes>
                <include>web.xml</include>
              </includes>
              <targetPath>WEB-INF</targetPath>
              <filtering>true</filtering>
            </webResource>
          </webResources>
        </configuration>
      </plugin>
      
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.6</version>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>compile</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/${project.build.finalName}/</outputDirectory>
              <resources>          
                <resource>
                  <directory>../</directory>
                  <includes>
                    <include>NOTICE</include>
                    <include>CHANGELOG</include>
                    <include>LICENSE</include>
                  </includes>
                  <filtering>true</filtering>
                </resource>
                <resource>
                  <directory>THIRD-PARTY</directory>
                  <targetPath>THIRD-PARTY</targetPath>
                  <excludes />
                </resource>
              </resources>              
            </configuration>            
          </execution>
        </executions>
      </plugin>
   
      <!-- 
      Maven does not copy the "bundle" artifacts to WEB-INF/lib so we have to do it by ourself. 
      See http://jira.codehaus.org/browse/MWAR-267 for the bug report and
      http://maven.apache.org/plugins/maven-dependency-plugin/examples/copying-artifacts.html
      for the workaround that was applied here
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.4</version>
        <executions>
          <execution>
            <id>copy</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>de.hu_berlin.german.korpling.saltnpepper</groupId>
                  <artifactId>salt-saltCommon</artifactId>
                  <version>1.1.7</version>
                  <type>bundle</type>
                </artifactItem>
                <artifactItem>
                  <groupId>de.hu_berlin.german.korpling.saltnpepper</groupId>
                  <artifactId>salt-graph</artifactId>
                  <version>1.1.7</version>
                  <type>bundle</type>
                </artifactItem>
                <artifactItem>
                  <groupId>de.hu_berlin.german.korpling.saltnpepper</groupId>
                  <artifactId>salt-saltCore</artifactId>
                  <version>1.1.7</version>
                  <type>bundle</type>
                </artifactItem>
              </artifactItems>
              <outputDirectory>${project.build.directory}/${project.build.finalName}/WEB-INF/lib/</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
   
      <!-- A simple Jetty test server at http://localhost:8080/annis-gui can 
      be launched with the Maven goal jetty:run and stopped with jetty:stop -->
      <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>9.0.4.v20130625</version>
        <configuration>
          <webApp>
            <contextPath>/annis-gui</contextPath>
            <baseResource implementation="org.eclipse.jetty.util.resource.ResourceCollection">
              <resourcesAsCSV>target/annis-gui/,src/main/webapp/</resourcesAsCSV>
            </baseResource>
          </webApp>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-continuation</artifactId>
            <version>9.0.4.v20130625</version>
          </dependency>
        </dependencies>
      </plugin>
      
      <!-- workaround for automatically compile SCSS file in maven
      http://dev.vaadin.com/ticket/10291
      -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.2.1</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>java</goal>
            </goals>
            <configuration>
              <classpathScope>compile</classpathScope>
              <mainClass>com.vaadin.sass.SassCompiler</mainClass>
              <arguments>
                <argument>src/main/webapp/VAADIN/themes/annis/styles.scss</argument>
                <argument>src/main/webapp/VAADIN/themes/annis/styles.css</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      
    </plugins>
  </build>

  <dependencies>
    
    <dependency>
      <groupId>de.hu-berlin.german.korpling.annis</groupId>
      <artifactId>annis-libgui</artifactId>
      <version>${project.version}</version>
      <scope>compile</scope>
      <!-- do not use commons logging -->
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    
    <dependency>
      <groupId>de.hu-berlin.german.korpling.annis</groupId>
      <artifactId>annis-visualizers</artifactId>
      <version>${project.version}</version>
      <type>jar</type>
    </dependency>
    
    <dependency>
      <groupId>net.sf.opencsv</groupId>
      <artifactId>opencsv</artifactId>
      <version>2.3</version>
      <type>jar</type>
    </dependency>
    
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.5</version>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
 

  </dependencies>
  <name>annis-gui</name>
</project>
<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>annis-all</artifactId>
    <groupId>de.hu-berlin.german.korpling.annis</groupId>
    <version>3.1.2</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <packaging>jar</packaging>
  <artifactId>annis-interfaces</artifactId>
  
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
  <dependencies>
    
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.5</version>
      <scope>compile</scope>
    </dependency>
    
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>16.0</version>
      <scope>compile</scope>
    </dependency>
    
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.2.1</version>
      <scope>compile</scope>
    </dependency>
    
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    
    
    <dependency>
      <groupId>de.hu_berlin.german.korpling.saltnpepper</groupId>
      <artifactId>salt-saltCommon</artifactId>
      <version>1.1.7</version>
      <type>bundle</type>
      <exclusions>
        <exclusion>  
          <groupId>org.apache.felix</groupId>  
          <artifactId>javax.servlet</artifactId>
        </exclusion>
      </exclusions> 
      <scope>compile</scope>
    </dependency>
    
    <dependency>
      <groupId>javax.ws.rs</groupId>
      <artifactId>jsr311-api</artifactId>
      <version>1.1.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-io</artifactId>
      <version>1.3.2</version>
      <scope>compile</scope>
    </dependency>
    
    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <version>20140107</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>net.xeoh.plugins</groupId>
      <artifactId>jspf-core</artifactId>
      <version>1.0.2</version>
      <scope>compile</scope>
    </dependency>
    



    
  </dependencies>
  <name>annis-interfaces</name>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <artifactId>annis-all</artifactId>
    <groupId>de.hu-berlin.german.korpling.annis</groupId>
    <version>3.1.2</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <artifactId>annis-kickstarter</artifactId>
  <name>annis-kickstarter</name>

  <packaging>jar</packaging>

  <distributionManagement>
    <repository>
      <id>korpling</id>
      <name>korpling maven repo</name>
      <url>scpexe://korpling.german.hu-berlin.de/srv/www/maven2/</url>
    </repository>
  </distributionManagement>


  <build>
    <plugins>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.4</version>
        <executions>
          <execution>
            <id>dist</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/main/assembly/kickstart.xml</descriptor>
              </descriptors>
              <finalName />
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.6</version>
        <configuration>
          <encoding>${project.build.sourceEncoding}</encoding>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.4</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <classpathPrefix>lib/</classpathPrefix>
              <mainClass>de.hu_berlin.german.korpling.annis.kickstarter.MainFrame</mainClass>
            </manifest>
            <manifestEntries>
              <Version>${project.version}</Version>
              <Implementation-Version>${project.version}-${buildNumber}</Implementation-Version>
              <SplashScreen-Image>splashscreen.gif</SplashScreen-Image>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
     
    </plugins>
  </build>
  <dependencies>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.6.6</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>de.hu-berlin.german.korpling.annis</groupId>
      <artifactId>annis-service</artifactId>
      <version>${project.version}</version>
      <scope>compile</scope>
      <type>jar</type>
    </dependency>

    <dependency>
      <groupId>de.hu-berlin.german.korpling.annis</groupId>
      <artifactId>annis-service</artifactId>
      <version>${project.version}</version>
      <scope>compile</scope>
      <classifier>distribution-lite</classifier>
      <type>zip</type>
    </dependency>

    <dependency>
      <groupId>de.hu-berlin.german.korpling.annis</groupId>
      <artifactId>annis-gui</artifactId>
      <version>${project.version}</version>
      <type>war</type>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.10</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-client</artifactId>
      <version>8.1.14.v20131031</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
      <version>8.1.14.v20131031</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-webapp</artifactId>
      <version>8.1.14.v20131031</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-websocket</artifactId>
      <version>8.1.14.v20131031</version>
    </dependency>
    
    <dependency>
      <groupId>javax.servlet.jsp</groupId>
      <artifactId>jsp-api</artifactId>
      <version>2.2</version>
    </dependency>
  </dependencies>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
</project>

<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>de.hu-berlin.german.korpling.annis</groupId>
    <artifactId>annis-all</artifactId>
    <version>3.1.2</version>
  </parent>
  <groupId>de.hu-berlin.german.korpling.annis</groupId>
  <artifactId>annis-libgui</artifactId>
  <name>annis-libgui</name>
  <packaging>jar</packaging>
  <description>Base project for a Vaadin based GUI.</description>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <vaadin.version>7.1.13</vaadin.version>
  </properties>
  
    
  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
  </build>
  
  <dependencies>
    
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-server</artifactId>
      <version>${vaadin.version}</version>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-themes</artifactId>
      <version>${vaadin.version}</version>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-theme-compiler</artifactId>
      <version>${vaadin.version}</version>
    </dependency>
    
    <dependency>
      <groupId>de.hu-berlin.german.korpling.annis</groupId>
      <artifactId>annis-widgets</artifactId>
      <version>${project.version}</version>
      <scope>compile</scope>
    </dependency> 
   
    <dependency>
      <groupId>de.hu-berlin.german.korpling.annis</groupId>
      <artifactId>annis-interfaces</artifactId>
      <version>${project.version}</version>
      <scope>compile</scope>
    </dependency>
    
    <dependency>
      <groupId>org.jdom</groupId>
      <artifactId>jdom</artifactId>
      <version>1.1.3</version>
      <scope>compile</scope>
    </dependency>
    
    
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>16.0</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.2.1</version>
      <scope>compile</scope>
    </dependency>
    
    <dependency>
      <groupId>net.sourceforge.collections</groupId>
      <artifactId>collections-generic</artifactId>
      <version>4.01</version>
      <scope>compile</scope>
    </dependency>
    
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-email</artifactId>
      <version>1.3.2</version>
      <scope>compile</scope>
    </dependency>
    
    <dependency>
      <groupId>com.sun.jersey.contribs</groupId>
      <artifactId>jersey-apache-client4</artifactId>
      <version>1.18</version>
      <!-- do not use commons logging -->
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.0.13</version>
      <scope>compile</scope>
    </dependency>
    
    <!-- redirect all java util logging to slfj4 -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jul-to-slf4j</artifactId>
      <version>1.7.5</version>
      <scope>compile</scope>
    </dependency>
    
    <!-- provide a binary replacement for commons-logging based on slf4j -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <version>1.7.5</version>
      <scope>compile</scope>
    </dependency>
    
    
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-xc</artifactId>
      <version>1.9.13</version>
      <scope>compile</scope>
    </dependency>
   
       
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.5</version>
      <scope>compile</scope>
    </dependency>
    
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>annis-service</artifactId>
  
  <parent>
    <artifactId>annis-all</artifactId>
    <groupId>de.hu-berlin.german.korpling.annis</groupId>
    <version>3.1.2</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <packaging>jar</packaging>

  <dependencies>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.5</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>de.hu-berlin.german.korpling.annis</groupId>
      <artifactId>annis-interfaces</artifactId>
      <version>${project.version}</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.2.1</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.4</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>1.9</version>
      <scope>compile</scope>
    </dependency>
    
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>3.2.6.RELEASE</version>
      <!-- do not use commons logging -->
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    
    <!-- provide a binary replacement for commons-logging based on slf4j -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <version>1.7.5</version>
      <scope>compile</scope>
    </dependency>
   
    <!-- redirect all java util logging to slfj4 -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jul-to-slf4j</artifactId>
      <version>1.7.5</version>
      <scope>compile</scope>
    </dependency>
    
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <version>3.2.6.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context-support</artifactId>
      <version>3.2.6.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>3.2.6.RELEASE</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>3.2.6.RELEASE</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>9.1-901-1.jdbc4</version>
      <scope>compile</scope>
    </dependency>


    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjweaver</artifactId>
      <version>1.7.4</version>
      <scope>compile</scope>
    </dependency>


    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <version>3.2.1</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
      <version>1.2</version>
      <scope>compile</scope>
    </dependency>
    
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-email</artifactId>
      <version>1.3.2</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>com.carrotsearch</groupId>
      <artifactId>junit-benchmarks</artifactId>
      <version>0.7.2</version>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>1.3.175</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>1.9.5</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <version>1.3</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>cglib</groupId>
      <artifactId>cglib-nodep</artifactId>
      <version>2.2.2</version>
    </dependency>


    <dependency>
      <groupId>jline</groupId>
      <artifactId>jline</artifactId>
      <version>2.11</version>
      <scope>compile</scope>
    </dependency>
    
    <dependency>
      <groupId>net.sf.opencsv</groupId>
      <artifactId>opencsv</artifactId>
      <version>2.3</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
      <version>8.1.14.v20131031</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-servlet</artifactId>
      <version>8.1.14.v20131031</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-servlets</artifactId>
      <version>8.1.14.v20131031</version>
    </dependency>
    
    
    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-server</artifactId>
      <version>1.18</version>
    </dependency>

    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-json</artifactId>
      <version>1.18</version>
    </dependency>
    <dependency>
      <groupId>com.sun.jersey.contribs</groupId>
      <artifactId>jersey-spring</artifactId>
      <version>1.18</version>
      <exclusions>
        <exclusion>  
          <groupId>org.springframework</groupId>  
          <artifactId>spring-aop</artifactId>
        </exclusion>
        <exclusion>  
          <groupId>org.springframework</groupId>  
          <artifactId>spring-web</artifactId>
        </exclusion>
        <exclusion>  
          <groupId>org.springframework</groupId>  
          <artifactId>spring-core</artifactId>
        </exclusion>
        <exclusion>  
          <groupId>org.springframework</groupId>  
          <artifactId>spring-beans</artifactId>
        </exclusion>
        <exclusion>  
          <groupId>org.springframework</groupId>  
          <artifactId>spring-context</artifactId>
        </exclusion>      
      </exclusions> 
    </dependency>
    
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-core</artifactId>
      <version>1.2.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-web</artifactId>
      <version>1.2.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-ehcache</artifactId>
      <version>1.2.2</version>
    </dependency>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.0.13</version>
      <scope>compile</scope>
    </dependency>
    
    <dependency>
      <groupId>com.tunnelvisionlabs</groupId>
      <artifactId>antlr4-runtime</artifactId>
      <version>4.1</version>
      <scope>compile</scope>
    </dependency>
    
    

  </dependencies>


  <build>

    <resources>
      <resource>
        <!-- include everything from src/main/java except *.java files -->
        <directory>${basedir}/src/main/java</directory>
        <includes>
          <include>**/*</include>
        </includes>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </resource>
      <resource>
        <directory>${basedir}/src/main/resources</directory>
        <includes>
          <include>**/*</include>
        </includes>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </resource>
      <resource>
        <directory>src/main/meta-inf/</directory>
        <targetPath>META-INF</targetPath>
      </resource>

    </resources>

    <testResources>
      <testResource>
        <directory>${basedir}/src/test/java</directory>
        <includes>
          <include>**/*</include>
        </includes>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </testResource>
    </testResources>

    <plugins>

      <plugin>
        <groupId>com.tunnelvisionlabs</groupId>
        <artifactId>antlr4-maven-plugin</artifactId>
        <version>4.1</version>
        <executions>
          <execution>
           <goals>
                <goal>antlr4</goal>
              </goals>
           <configuration>
              <sourceDirectory>src/main/antlr4</sourceDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.0.2</version>
        <configuration>
          <encoding>${project.build.sourceEncoding}</encoding>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.4</version>
        <executions>
          <execution>
            <id>create-distribution</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <descriptors>
            <descriptor>src/main/assembly/annis.xml</descriptor>
            <descriptor>src/main/assembly/annis_lite.xml</descriptor>
          </descriptors>
          <finalName />
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.12.4</version>
        <configuration>
          <systemProperties>
            <property>
              <name>annis.home</name>
              <value>src/main/distribution/</value>
            </property>
          </systemProperties>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.4.3</version>
        <configuration>
          <encoding>${project.build.sourceEncoding}</encoding>
        </configuration>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>2.7</version>
        <configuration>
          <skip>false</skip>
        </configuration>
      </plugin>
      
      
    </plugins>

    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ssh-external</artifactId>
        <version>1.0</version>
      </extension>
    </extensions>

  </build>
  <name>annis-service</name>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
</project>
<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>de.hu-berlin.german.korpling.annis</groupId>
    <artifactId>annis-all</artifactId>
    <version>3.1.2</version>
  </parent>
  <groupId>de.hu-berlin.german.korpling.annis</groupId>
  <artifactId>annis-visualizers</artifactId>
  <name>annis-visualizers</name>
  <url>http://maven.apache.org</url>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <distributionManagement>
    <repository>
      <id>korpling</id>
      <name>korpling maven repo</name>
      <url>scpexe://korpling.german.hu-berlin.de/srv/www/maven2/</url>
    </repository>
  </distributionManagement>
    
  <build>
    <plugins>
      <plugin>
        <groupId>org.antlr</groupId>
        <artifactId>antlr4-maven-plugin</artifactId>
        <version>4.1</version>
        <configuration>
          <sourceDirectory>src/main/antlr4</sourceDirectory>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>antlr4</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>de.hu-berlin.german.korpling.annis</groupId>
      <artifactId>annis-libgui</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>16.0</version>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>
    
    <dependency>
      <groupId>com.sun.jersey.contribs</groupId>
      <artifactId>jersey-apache-client4</artifactId>
      <version>1.18</version>
      <!-- do not use commons logging -->
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>net.sf.jung</groupId>
      <artifactId>jung-api</artifactId>
      <version>2.0.1</version>
    </dependency>
    <dependency>
      <groupId>net.sf.jung</groupId>
      <artifactId>jung-graph-impl</artifactId>
      <version>2.0.1</version>
    </dependency>
    
    <dependency>
      <groupId>com.hp.gagawa</groupId>
      <artifactId>gagawa</artifactId>
      <version>1.0.1</version>
      <scope>compile</scope>
    </dependency>
    
    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>antlr4</artifactId>
      <version>4.1</version>
      <scope>compile</scope>
    </dependency>
    
    
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <artifactId>annis-all</artifactId>
    <groupId>de.hu-berlin.german.korpling.annis</groupId>
    <version>3.1.2</version>
  </parent>

  <groupId>de.hu-berlin.german.korpling.annis</groupId>
  <artifactId>annis-widgets</artifactId>
  <packaging>jar</packaging>
  <name>annis-widgets</name>
 

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <vaadin.version>7.1.13</vaadin.version>
  </properties>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <excludes>
            <exclude>VAADIN/widgetsets/WEB-INF/**</exclude>
            <exclude>VAADIN/gwt-unitCache/**</exclude>
          </excludes>
        </configuration>
      </plugin>

      <!-- As we are doing "inplace" GWT compilation, ensure the widgetset -->
      <!-- directory is cleaned properly -->
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>2.4.1</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>src/main/webapp/VAADIN/widgetsets</directory>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.vaadin</groupId>
        <artifactId>vaadin-maven-plugin</artifactId>
        <version>${vaadin.version}</version>
        <configuration>
          <extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
          <!-- <runTarget>mobilemail</runTarget> -->
          <!-- We are doing "inplace" but into subdir VAADIN/widgetsets. This 
          way compatible with Vaadin eclipse plugin. -->
          <webappDirectory>${project.build.outputDirectory}/VAADIN/widgetsets
          </webappDirectory>
          <hostedWebapp>${project.build.outputDirectory}/VAADIN/widgetsets
          </hostedWebapp>
          <noServer>true</noServer>
          <!-- Remove draftCompile when project is ready -->
          <draftCompile>false</draftCompile>
          <compileReport>true</compileReport>
          <style>OBF</style>
          <strict>true</strict>
          <runTarget>http://localhost:8080/</runTarget>
          <localWorkers>2</localWorkers>
        </configuration>
        <executions>
          <execution>
            <configuration>
              <!-- if you don't specify any modules, the plugin will find them -->
              <!-- <modules> <module>com.vaadin.demo.mobilemail.gwt.ColorPickerWidgetSet</module> 
              </modules> -->
            </configuration>
            <goals>
              <goal>resources</goal>
              <goal>update-widgetset</goal>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
    </plugins>

    <!-- This is needed for the sources required by the GWT compiler to be included in the produced JARs -->
    <resources>
      <resource>
        <directory>src/main/java</directory>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
    </resources>
  </build>

  <repositories>
    <repository>
      <id>vaadin-snapshots</id>
      <url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>vaadin-addons</id>
      <url>http://maven.vaadin.com/vaadin-addons</url>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>codehaus-snapshots</id>
      <url>http://nexus.codehaus.org/snapshots</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>false</enabled>
      </releases>
    </pluginRepository>
    <pluginRepository>
      <id>vaadin-snapshots</id>
      <url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>false</enabled>
      </releases>
    </pluginRepository>
  </pluginRepositories>

  <dependencies>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-server</artifactId>
      <version>${vaadin.version}</version>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-client</artifactId>
      <version>${vaadin.version}</version>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-client-compiled</artifactId>
      <version>${vaadin.version}</version>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-client-compiler</artifactId>
      <version>${vaadin.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <version>1.0.0.GA</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <version>1.0.0.GA</version>
      <classifier>sources</classifier>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>de.hu-berlin.german.korpling.annis</groupId>
      <artifactId>annis-interfaces</artifactId>
      <version>${project.version}</version>
      <scope>compile</scope>
    </dependency>
    
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>1.9</version>
      <scope>compile</scope>
    </dependency>

    <!-- other widget sets we use -->
    <dependency>
      <groupId>org.vaadin.addons</groupId>
      <artifactId>popupbutton</artifactId>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava-gwt</artifactId>
      <version>16.0</version>
      <scope>compile</scope>
    </dependency>
  </dependencies>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>de.hu-berlin.german.korpling.annis</groupId>
  <artifactId>annis-all</artifactId>
  <packaging>pom</packaging>
  <name>ANNIS corpus search</name>
  <version>3.1.2</version>
  <description>
    ANNIS is an open source, versatile web browser-based search and
    visualization architecture for complex multilevel linguistic corpora with
    diverse types of annotation. ANNIS, which stands for ANNotation of Information
    Structure, has been designed to provide access to the data of the
    SFB 632 - "Information Structure: The Linguistic Means for Structuring
    Utterances, Sentences and Texts". Since information structure interacts with
    linguistic phenomena on many levels, ANNIS addresses the SFB's need to
    concurrently annotate, query and visualize data from such varied areas as
    syntax, semantics, morphology, prosody, referentiality, lexis and more.
    For projects working with spoken language, support for audio / video
    annotations is also required.
  </description>

  <url>http://www.sfb632.uni-potsdam.de/annis/</url>

  <scm>
    <developerConnection>scm:git:ssh://git@github.com/korpling/ANNIS.git</developerConnection>
  </scm>

  <organization>
    <name>SFB 632</name>
    <url>http://www.sfb632.uni-potsdam.de/</url>
  </organization>
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <distributionManagement>
    <site>
      <id>github</id>
      <url>https://github.com/korpling/ANNIS</url>
    </site>
    
    <repository>
      <id>korpling</id>
      <name>korpling maven repo</name>
      <url>scpexe://korpling.german.hu-berlin.de/srv/www/maven2/</url>
    </repository>
  </distributionManagement>

  <repositories>
    <repository>
      <id>korpling</id>
      <url>http://korpling.german.hu-berlin.de/maven2/</url>
    </repository>
  </repositories>

  <build>

    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>2.3.7</version>
        <extensions>true</extensions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <reportPlugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-project-info-reports-plugin</artifactId>
              <version>2.4</version>
              <configuration>
                <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
              </configuration>
              <reports>
                <report>index</report>
                <report>summary</report>
                <report>license</report>
              </reports>
            </plugin>

            <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>findbugs-maven-plugin</artifactId>
              <version>2.5.3</version>
              <configuration>
                <excludeFilterFile>${basedir}/src/findbugs/excludeFilter.xml</excludeFilterFile>
              </configuration>
            </plugin>


          </reportPlugins>
        </configuration>
      </plugin>

      <!-- update this with
      mvn license:add-third-party license:download-licenses
      -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>1.4</version>
        <configuration>
          <useMissingFile>true</useMissingFile>
          <missingFile>${basedir}/src/license/THIRD-PARTY.properties</missingFile>
          <licensesConfigFile>${basedir}/src/licenses.xml</licensesConfigFile>
          <outputDirectory>${basedir}/THIRD-PARTY</outputDirectory>
          <thirdPartyFilename>${project.name}_dependencies.txt</thirdPartyFilename>
          <licensesOutputDirectory>${basedir}/THIRD-PARTY/licenses</licensesOutputDirectory>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
        <version>1.1</version>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>create</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <doCheck>false</doCheck>
          <doUpdate>false</doUpdate>
        </configuration>
      </plugin>
      
    </plugins>
    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ssh-external</artifactId>
        <version>1.0</version>
      </extension>
    </extensions>
  </build>

  <modules>
    <module>annis-interfaces</module>
    <module>annis-service</module>
    <module>annis-kickstarter</module>
    <module>annis-gui</module>
    <module>annis-widgets</module>
    <module>annis-visualizers</module>
    <module>annis-libgui</module>
  </modules>

</project>
