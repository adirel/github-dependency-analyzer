<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion> 
  <parent>
    <groupId>com.fasterxml.jackson.jaxrs</groupId>
    <artifactId>jackson-jaxrs-providers</artifactId>
    <version>2.4.0-SNAPSHOT</version>
  </parent>
  <artifactId>jackson-jaxrs-base</artifactId>
  <name>Jackson-JAXRS-base</name>
  <packaging>bundle</packaging>
  <description>Pile of code that is shared by all Jackson-based JAX-RS
providers.
  </description>

  <properties>
    <osgi.export>
${project.groupId}.annotation.*;version=${project.version}
,${project.groupId}.base.*;version=${project.version}
,${project.groupId}.cfg.*;version=${project.version}
,${project.groupId}.util.*;version=${project.version}
</osgi.export>
    <osgi.import>com.fasterxml.jackson.annotation
,com.fasterxml.jackson.core
,com.fasterxml.jackson.core.type
,com.fasterxml.jackson.core.util
,com.fasterxml.jackson.databind
,com.fasterxml.jackson.databind.cfg
,com.fasterxml.jackson.databind.introspect
,com.fasterxml.jackson.databind.type
,com.fasterxml.jackson.databind.util
,javax.ws.rs;version="${javax.ws.rs.version}"
,javax.ws.rs.core;version="${javax.ws.rs.version}"
,javax.ws.rs.ext;version="${javax.ws.rs.version}"
</osgi.import>
  </properties>

  <dependencies>
    <!-- Extends Jackson core, mapper -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${version.jackson.core}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${version.jackson.core}</version>
    </dependency>
    <!-- test deps should come from parent -->
  </dependencies>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion> 
  <parent>
    <groupId>com.fasterxml.jackson.jaxrs</groupId>
    <artifactId>jackson-jaxrs-providers</artifactId>
    <version>2.4.0-SNAPSHOT</version>
  </parent>
  <artifactId>jackson-jaxrs-cbor-provider</artifactId>
  <name>Jackson-JAXRS-CBOR</name>
  <packaging>bundle</packaging>
  <description>Functionality to handle CBOR encoded input/output for JAX-RS implementations (like Jersey and RESTeasy) using standard Jackson data binding.
  </description>

  <properties>
    <!-- Generate PackageVersion.java into this directory. -->
    <packageVersion.dir>com/fasterxml/jackson/jaxrs/cbor</packageVersion.dir>
    <packageVersion.package>${project.groupId}.cbor</packageVersion.package>
    <osgi.export>${project.groupId}.smile.*;version=${project.version}</osgi.export>
    <!-- NOTE: JAXB annotations module is optional dependency, need to try to mark
         as such here.
      -->
    <osgi.import>javax.ws.rs
,javax.ws.rs.core
,javax.ws.rs.ext
,com.fasterxml.jackson.annotation
,com.fasterxml.jackson.core
,com.fasterxml.jackson.core.type
,com.fasterxml.jackson.core.util
,com.fasterxml.jackson.databind
,com.fasterxml.jackson.databind.introspect
,com.fasterxml.jackson.databind.type
,com.fasterxml.jackson.databind.util
,com.fasterxml.jackson.dataformat.cbor
,com.fasterxml.jackson.jaxrs.base
,com.fasterxml.jackson.jaxrs.cfg
,com.fasterxml.jackson.module.jaxb;resolution:=optional
</osgi.import>
  </properties>

  <dependencies>
    <!-- builds on shared base JAX-RS handling code... -->
    <dependency>
      <artifactId>jackson-jaxrs-base</artifactId>
      <groupId>${project.groupId}</groupId>
      <version>${project.version}</version>
    </dependency>
    <!-- Extends Jackson core, mapper, and also (sort of optionally) on JAXB annotation handler -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${version.jackson.core}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${version.jackson.core}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-cbor</artifactId>
      <version>${version.jackson.cbor}</version>
    </dependency>
    <!-- may also need JAXB annotation support -->
    <dependency> 
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-jaxb-annotations</artifactId>
      <version>${version.jackson.jaxb}</version>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <!-- Inherited from oss-base. Generate PackageVersion.java.-->
	<groupId>com.google.code.maven-replacer-plugin</groupId>
        <artifactId>replacer</artifactId>
	<executions>
          <execution>
            <id>process-packageVersion</id>
            <phase>process-sources</phase>
          </execution>
	</executions>
      </plugin>
    </plugins>
  </build>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion> 
  <parent>
    <groupId>com.fasterxml.jackson.jaxrs</groupId>
    <artifactId>jackson-jaxrs-providers</artifactId>
    <version>2.4.0-SNAPSHOT</version>
  </parent>
  <artifactId>jackson-jaxrs-json-provider</artifactId>
  <name>Jackson-JAXRS-JSON</name>
  <packaging>bundle</packaging>
  <description>Functionality to handle JSON input/output for JAX-RS implementations (like Jersey and RESTeasy) using standard Jackson data binding.
  </description>

  <properties>
    <!-- Generate PackageVersion.java into this directory. -->
    <packageVersion.dir>com/fasterxml/jackson/jaxrs/json</packageVersion.dir>
    <packageVersion.package>${project.groupId}.json</packageVersion.package>
    <osgi.export>${project.groupId}.json.*;version=${project.version}</osgi.export>
    <!-- NOTE: JAXB annotations module is optional dependency, need to try to mark
         as such here.
      -->
    <osgi.import>javax.ws.rs;version="${javax.ws.rs.version}"
,javax.ws.rs.core;version="${javax.ws.rs.version}"
,javax.ws.rs.ext;version="${javax.ws.rs.version}"
,com.fasterxml.jackson.annotation
,com.fasterxml.jackson.core
,com.fasterxml.jackson.core.type
,com.fasterxml.jackson.core.util
,com.fasterxml.jackson.databind
,com.fasterxml.jackson.databind.introspect
,com.fasterxml.jackson.databind.type
,com.fasterxml.jackson.databind.util
,com.fasterxml.jackson.jaxrs.base
,com.fasterxml.jackson.jaxrs.cfg
,com.fasterxml.jackson.module.jaxb;resolution:=optional
</osgi.import>
  </properties>

  <dependencies>
    <!-- builds on shared base JAX-RS handling code... -->
    <dependency>
      <artifactId>jackson-jaxrs-base</artifactId>
      <groupId>${project.groupId}</groupId>
      <version>${project.version}</version>
    </dependency>
    <!-- Extends Jackson core, mapper, and also (sort of optionally) on JAXB annotation handler -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${version.jackson.core}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${version.jackson.core}</version>
    </dependency>
    <!-- also need JAXB annotation support -->
    <dependency> 
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-jaxb-annotations</artifactId>
      <version>${version.jackson.jaxb}</version>
    </dependency>

    <!-- test deps should mostly come from parent, including jersey -->
    <dependency> 
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jackson2-provider</artifactId>
      <version>3.0.6.Final</version>
      <scope>test</scope>
    </dependency>


  </dependencies>
  <build>
    <plugins>
      <plugin>
        <!-- Inherited from oss-base. Generate PackageVersion.java.-->
	<groupId>com.google.code.maven-replacer-plugin</groupId>
        <artifactId>replacer</artifactId>
	<executions>
          <execution>
            <id>process-packageVersion</id>
            <phase>process-sources</phase>
          </execution>
	</executions>
      </plugin>
    </plugins>
  </build>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion> 
  <parent>
    <groupId>com.fasterxml.jackson</groupId>
    <artifactId>jackson-parent</artifactId>
    <version>2.4</version>
  </parent>
  <groupId>com.fasterxml.jackson.jaxrs</groupId>
  <artifactId>jackson-jaxrs-providers</artifactId>
  <name>Jackson JAX-RS</name>
  <version>2.4.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <description>Parent for Jackson JAX-RS providers
  </description>

  <modules>
    <module>base</module>
    <module>cbor</module>
    <module>json</module>
    <module>smile</module>
    <module>xml</module>
  </modules>
  <url>http://wiki.fasterxml.com/JacksonHome</url>
  <scm>
    <connection>scm:git:git@github.com:FasterXML/jackson-jaxrs-providers.git</connection>
    <developerConnection>scm:git:git@github.com:FasterXML/jackson-jaxrs-providers.git</developerConnection>
    <url>http://github.com/FasterXML/jackson-jaxrs-providers</url>    
    <tag>HEAD</tag>
  </scm>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> 
    <version.jackson.annotations>2.4.0-SNAPSHOT</version.jackson.annotations>
    <!-- core/databind should have same version; data formats, annotations may differ -->
    <version.jackson.core>2.4.0-SNAPSHOT</version.jackson.core>

    <version.jackson.cbor>${version.jackson.core}</version.jackson.cbor>
    <version.jackson.smile>${version.jackson.core}</version.jackson.smile>
    <version.jackson.xml>${version.jackson.core}</version.jackson.xml>

    <version.jackson.jaxb>${version.jackson.core}</version.jackson.jaxb>

    <!--  Need Jersey+Jetty for testing -->
    <version.jersey>1.17.1</version.jersey>
    <version.jetty>8.1.10.v20130312</version.jetty>
    
    <!-- Needed to enable jax-rs 2.0 usage under OSGi -->
    <javax.ws.rs.version>[1.1.1,2.1)</javax.ws.rs.version>
  </properties>

  <dependencies>
     <!-- for testing, JUnit is needed -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.8.2</version>
      <scope>test</scope>
    </dependency>

    <!-- and we need JAX-RS annotations as well; but usually provided by container
        (and app should definitely have direct dep too, when using annotations)
       -->
    <dependency>
      <groupId>javax.ws.rs</groupId>
      <!-- 05-Apr-2014, tatu: JAX-RS 2.x has different artifact-id, "javax.ws.rs-api"
        -->
      <artifactId>jsr311-api</artifactId>
      <version>1.1.1</version>
<!--
      <artifactId>javax.ws.rs-api</artifactId>
      <version>2.0</version>
-->
      <scope>provided</scope>
    </dependency>

    <!-- tests require JAX-RS impl; otherwise components fail to load
        (some oddity with API classes; should NOT be needed...)

        NOTE: use 1.2 as that's JDK 1.5; later (1.8) versions need JDK 1.6
      -->
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
      <version>${version.jetty}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-servlet</artifactId>
      <version>${version.jetty}</version>
      <scope>test</scope>
    </dependency>
        
    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-core</artifactId>
      <version>${version.jersey}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-server</artifactId>
      <version>${version.jersey}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-servlet</artifactId>
      <version>${version.jersey}</version>
      <scope>test</scope>
    </dependency>

  </dependencies>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion> 
  <parent>
    <groupId>com.fasterxml.jackson.jaxrs</groupId>
    <artifactId>jackson-jaxrs-providers</artifactId>
    <version>2.4.0-SNAPSHOT</version>
  </parent>
  <artifactId>jackson-jaxrs-smile-provider</artifactId>
  <name>Jackson-JAXRS-Smile</name>
  <packaging>bundle</packaging>
  <description>Functionality to handle Smile (binary JSON) input/output for JAX-RS implementations (like Jersey and RESTeasy) using standard Jackson data binding.
  </description>

  <properties>
    <!-- Generate PackageVersion.java into this directory. -->
    <packageVersion.dir>com/fasterxml/jackson/jaxrs/smile</packageVersion.dir>
    <packageVersion.package>${project.groupId}.smile</packageVersion.package>
    <osgi.export>${project.groupId}.smile.*;version=${project.version}</osgi.export>
    <!-- NOTE: JAXB annotations module is optional dependency, need to try to mark
         as such here.
      -->
    <osgi.import>javax.ws.rs
,javax.ws.rs.core
,javax.ws.rs.ext
,com.fasterxml.jackson.annotation
,com.fasterxml.jackson.core
,com.fasterxml.jackson.core.type
,com.fasterxml.jackson.core.util
,com.fasterxml.jackson.databind
,com.fasterxml.jackson.databind.introspect
,com.fasterxml.jackson.databind.type
,com.fasterxml.jackson.databind.util
,com.fasterxml.jackson.dataformat.smile
,com.fasterxml.jackson.jaxrs.base
,com.fasterxml.jackson.jaxrs.cfg
,com.fasterxml.jackson.module.jaxb;resolution:=optional
</osgi.import>
  </properties>

  <dependencies>
    <!-- builds on shared base JAX-RS handling code... -->
    <dependency>
      <artifactId>jackson-jaxrs-base</artifactId>
      <groupId>${project.groupId}</groupId>
      <version>${project.version}</version>
    </dependency>
    <!-- Extends Jackson core, mapper, and also (sort of optionally) on JAXB annotation handler -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${version.jackson.core}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${version.jackson.core}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-smile</artifactId>
      <version>${version.jackson.smile}</version>
    </dependency>
    <!-- may also need JAXB annotation support -->
    <dependency> 
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-jaxb-annotations</artifactId>
      <version>${version.jackson.jaxb}</version>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <!-- Inherited from oss-base. Generate PackageVersion.java.-->
	<groupId>com.google.code.maven-replacer-plugin</groupId>
        <artifactId>replacer</artifactId>
	<executions>
          <execution>
            <id>process-packageVersion</id>
            <phase>process-sources</phase>
          </execution>
	</executions>
      </plugin>
    </plugins>
  </build>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion> 
  <parent>
    <groupId>com.fasterxml.jackson.jaxrs</groupId>
    <artifactId>jackson-jaxrs-providers</artifactId>
    <version>2.4.0-SNAPSHOT</version>
  </parent>
  <artifactId>jackson-jaxrs-xml-provider</artifactId>
  <name>Jackson-JAXRS-XML</name>
  <packaging>bundle</packaging>
  <description>Functionality to handle XML input/output for JAX-RS implementations (like Jersey and RESTeasy) using standard Jackson data binding.
  </description>

  <properties>
    <!-- Generate PackageVersion.java into this directory. -->
    <packageVersion.dir>com/fasterxml/jackson/jaxrs/xml</packageVersion.dir>
    <packageVersion.package>${project.groupId}.xml</packageVersion.package>
    <osgi.export>${project.groupId}.xml.*;version=${project.version}</osgi.export>
    <!-- NOTE: JAXB annotations module is optional dependency, need to try to mark
         as such here.
      -->
    <osgi.import>javax.ws.rs
,javax.ws.rs.core
,javax.ws.rs.ext
,com.fasterxml.jackson.annotation
,com.fasterxml.jackson.core
,com.fasterxml.jackson.core.type
,com.fasterxml.jackson.core.util
,com.fasterxml.jackson.databind
,com.fasterxml.jackson.databind.introspect
,com.fasterxml.jackson.databind.type
,com.fasterxml.jackson.databind.util
,com.fasterxml.jackson.dataformat.xml
,com.fasterxml.jackson.dataformat.xml.jaxb
,com.fasterxml.jackson.jaxrs.base
,com.fasterxml.jackson.jaxrs.cfg
,com.fasterxml.jackson.module.jaxb;resolution:=optional
</osgi.import>
  </properties>

  <dependencies>
    <!-- builds on shared base JAX-RS handling code... -->
    <dependency>
      <artifactId>jackson-jaxrs-base</artifactId>
      <groupId>${project.groupId}</groupId>
      <version>${project.version}</version>
    </dependency>
    <!-- Extends Jackson core, mapper, and also (sort of optionally) on JAXB annotation handler -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${version.jackson.core}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${version.jackson.core}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-xml</artifactId>
      <version>${version.jackson.xml}</version>
    </dependency>
    <!-- may also need JAXB annotation support -->
    <dependency> 
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-jaxb-annotations</artifactId>
      <version>${version.jackson.jaxb}</version>
    </dependency>
    <!-- JDK 1.6 provides stax-api (javax.xml.stream), but let's add this for documentation -->
    <dependency>
      <groupId>javax.xml.stream</groupId>
      <artifactId>stax-api</artifactId>
      <version>1.0-2</version>
      <scope>provided</scope>
    </dependency>
    <!--  But Stax2 API must be included -->
    <dependency>
      <groupId>org.codehaus.woodstox</groupId>
      <artifactId>stax2-api</artifactId>
      <!-- Ideally we'd accept range of versions but won't really work with Maven... -->

<!--      <version>[3.0.4, 3.5.0)</version>  -->
      <version>3.1.1</version>
    </dependency>

    <!-- Also: While JDK-included SJSXP almost works, there are some rough edges;
         so let's add full non-test dep to modern Jackson version.
      -->
    <dependency>
      <groupId>org.codehaus.woodstox</groupId>
      <artifactId>woodstox-core-asl</artifactId>
      <version>4.1.4</version>
    </dependency>

  </dependencies>
  <build>
    <plugins>
      <plugin>
        <!-- Inherited from oss-base. Generate PackageVersion.java.-->
	<groupId>com.google.code.maven-replacer-plugin</groupId>
        <artifactId>replacer</artifactId>
	<executions>
          <execution>
            <id>process-packageVersion</id>
            <phase>process-sources</phase>
          </execution>
	</executions>
      </plugin>
    </plugins>
  </build>
</project>
