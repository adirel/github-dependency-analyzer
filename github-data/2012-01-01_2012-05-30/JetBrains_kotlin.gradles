apply plugin: 'java'
apply plugin: 'maven'

version = '1.4'
group = 'org.jetbrains.kotlin'


repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    compile gradleApi()
}


jar {
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    exclude('META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA') 
}

artifacts {
    archives  jar
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.4'
}
Not FoundNot FoundNot FoundNot Foundbuildscript {
  repositories {
    mavenCentral()
    maven {
        url 'file://' + pathToKotlinPlugin
    }
  }
  dependencies {
    classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin-core:0.1-SNAPSHOT'
  }
}

import org.jetbrains.kotlin.gradle.plugin.KotlinPlugin

apply plugin: KotlinPlugin
apply plugin: 'java'

repositories {
  maven {
     url 'file://' + pathToKotlinPlugin
  }
  mavenCentral()
}

sourceSets {
    main {
        java {
            srcDir 'generated/'
        }
    }
}

dependencies {
    compile 'com.google.guava:guava:12.0'
    testCompile  'org.testng:testng:6.8'
    testRuntime  'org.jetbrains.kotlin:kotlin-stdlib:0.1-SNAPSHOT'
}

test {
    useTestNG()
}

task show << {
   buildscript.configurations.classpath.each { println it }
}


compileKotlin {
    kotlinOptions.annotations = "externalAnnotations"
}


task wrapper(type: Wrapper) {
  gradleVersion="1.4"
}buildscript {
  repositories {
    mavenCentral()
    maven {
        url 'file://' + pathToKotlinPlugin
    }
  }
  dependencies {
    classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin-core:0.1-SNAPSHOT'
  }
}

import org.jetbrains.kotlin.gradle.plugin.KotlinPlugin

apply plugin: KotlinPlugin

sourceSets {
  main {
     kotlin {
        srcDir 'src'
     }
  }
}

repositories {
  maven {
     url 'file://' + pathToKotlinPlugin
  }
  mavenCentral()
}

dependencies {
    compile 'com.google.guava:guava:12.0'
    testCompile  'org.testng:testng:6.8'
    testRuntime  'org.jetbrains.kotlin:kotlin-stdlib:0.1-SNAPSHOT'
}

test {
    useTestNG()
}

compileKotlin {
    kotlinOptions.annotations = "externalAnnotations"
}


task wrapper(type: Wrapper) {
  gradleVersion="1.4"
}buildscript {
  repositories {
    mavenCentral()
    maven {
        url 'file://' + pathToKotlinPlugin
    }
  }
  dependencies {
    classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin-core:0.1-SNAPSHOT'
  }
}

import org.jetbrains.kotlin.gradle.plugin.KotlinPlugin

apply plugin: KotlinPlugin

sourceSets {
  main {
     kotlin {
        srcDir 'src'
     }
  }
}

repositories {
  maven {
     url 'file://' + pathToKotlinPlugin
  }
  mavenCentral()
}

dependencies {
    compile 'com.google.guava:guava:12.0'
    testCompile  'org.testng:testng:6.8'
    testRuntime  'org.jetbrains.kotlin:kotlin-stdlib:0.1-SNAPSHOT'
}

test {
    useTestNG()
}

compileKotlin {
    kotlinOptions.annotations = "externalAnnotations"
    kotlinOptions.inline = false
}


task wrapper(type: Wrapper) {
  gradleVersion="1.4"
}buildscript {
  repositories {
    mavenCentral()
    maven {
        url 'file://' + pathToKotlinPlugin
    }
  }
  dependencies {
    classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin-core:0.1-SNAPSHOT'
  }
}

import org.jetbrains.kotlin.gradle.plugin.KotlinPlugin

apply plugin: KotlinPlugin

repositories {
  maven {
     url 'file://' + pathToKotlinPlugin
  }
  mavenCentral()
}

dependencies {
    testCompile  'org.testng:testng:6.8'
    testRuntime  'org.jetbrains.kotlin:kotlin-stdlib:0.1-SNAPSHOT'
}

test {
    useTestNG()
}

compileKotlin {
    kotlinOptions.annotations = "externalAnnotations"
}


task wrapper(type: Wrapper) {
  gradleVersion="1.4"
}buildscript {
  ext.kotlin_version = "0.1-SNAPSHOT"
  repositories {
    mavenCentral()
    maven {
        url 'file://' + pathToKotlinPlugin
    }
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin-core:$kotlin_version"
  }
}

import org.jetbrains.kotlin.gradle.plugin.KotlinPlugin

apply plugin: KotlinPlugin
apply plugin: 'java'

sourceSets {
 deploy
}

repositories {
  maven {
     url 'file://' + pathToKotlinPlugin
  }
  mavenCentral()
}

dependencies {
    compile 'com.google.guava:guava:12.0'
    deployCompile 'com.google.guava:guava:12.0'
    testCompile  'org.testng:testng:6.8'
    testRuntime  "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

test {
    useTestNG()
}

task show << {
   buildscript.configurations.classpath.each { println it }
}


compileKotlin {
    kotlinOptions.annotations = "externalAnnotations"
}


task wrapper(type: Wrapper) {
  gradleVersion="1.4"
}Not FoundNot FoundNot FoundNot Foundbuildscript {
    repositories {
        mavenCentral()
        maven {
            url 'file://' + pathToKotlinPlugin
        }
    }
    dependencies {
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:0.1-SNAPSHOT'
        classpath 'com.android.tools.build:gradle:0.5.+'
    }
}
apply plugin: 'android'
apply plugin: 'kotlin-android'

dependencies {
    compile project(':Lib')
}

android {
    compileSdkVersion 17
    buildToolsVersion "17.0.0"

    kotlinOptions {
        annotations = "kotlinAnnotations"
    }

    defaultConfig {
        minSdkVersion 7
        targetSdkVersion 16
    }

    buildTypes {
        jnidebug.initWith(buildTypes.debug)
        jnidebug {
            packageNameSuffix ".jnidebug"
            jniDebugBuild true
        }
    }

    productFlavors {
        flavor1 {
            packageName "com.example.flavor1"
            versionCode 20
        }

        flavor2 {
            packageName "com.example.flavor2"
            minSdkVersion 14
        }
    }
}
buildscript {
    repositories {
        mavenCentral()
        maven {
            url 'file://' + pathToKotlinPlugin
        }
    }
    dependencies {
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:0.1-SNAPSHOT'
        classpath 'com.android.tools.build:gradle:0.5.+'
    }
}
apply plugin: 'android-library'
apply plugin: 'kotlin-android'

repositories {
    mavenCentral()
}

dependencies {
    compile files('libs/android-support-v4.jar')
}

android {
    compileSdkVersion 17
    buildToolsVersion "17.0.0"

    defaultConfig {
        minSdkVersion 7
        targetSdkVersion 16
    }
}
// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
  repositories {
    mavenCentral()
    maven {
        url 'file://' + pathToKotlinPlugin
    }
  }
  dependencies {
    classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:0.1-SNAPSHOT'
  }
}

apply plugin: "kotlin"


repositories {
  maven {
     url 'file://' + pathToKotlinPlugin
  }
  mavenCentral()
}

dependencies {
    compile 'com.google.guava:guava:12.0'
    testCompile  'org.testng:testng:6.8'
    testRuntime  'org.jetbrains.kotlin:kotlin-stdlib:0.1-SNAPSHOT'
}

test {
    useTestNG()
}

task show << {
   buildscript.configurations.classpath.each { println it }
}

task wrapper(type: Wrapper) {
  gradleVersion="1.4"
}
buildscript {
  repositories {
    mavenCentral()
    maven {
        url 'file://' + pathToKotlinPlugin
    }
  }
  dependencies {
    classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:0.1-SNAPSHOT'
  }
}

apply plugin: "kotlin"
apply plugin: "java"

sourceSets {
 deploy
}

repositories {
  maven {
     url 'file://' + pathToKotlinPlugin
  }
  mavenCentral()
}

dependencies {
    compile 'com.google.guava:guava:12.0'
    deployCompile 'com.google.guava:guava:12.0'
    testCompile  'org.testng:testng:6.8'
    testRuntime  'org.jetbrains.kotlin:kotlin-stdlib:0.1-SNAPSHOT'
}

test {
    useTestNG()
}

task show << {
   buildscript.configurations.classpath.each { println it }
}


compileKotlin {
    kotlinOptions.annotations = "externalAnnotations"
}


task wrapper(type: Wrapper) {
  gradleVersion="1.4"
}
buildscript {
  repositories {
    mavenCentral()
    maven {
        url 'file://' + pathToKotlinPlugin
    }
  }
  dependencies {
    classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:0.1-SNAPSHOT'
  }
}

apply plugin: "kotlin"


repositories {
  maven {
     url 'file://' + pathToKotlinPlugin
  }
  mavenCentral()
}

dependencies {
    compile 'com.google.guava:guava:12.0'
    testCompile  'org.testng:testng:6.8'
    testRuntime  'org.jetbrains.kotlin:kotlin-stdlib:0.1-SNAPSHOT'
}

test {
    useTestNG()
}

task show << {
   buildscript.configurations.classpath.each { println it }
}


compileKotlin {
    kotlinOptions.annotations = "externalAnnotations"
}


task wrapper(type: Wrapper) {
  gradleVersion="1.4"
}
buildscript {
  repositories {
    mavenCentral()
    maven {
        url 'file://' + pathToKotlinPlugin
    }
  }
  dependencies {
    classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:0.1-SNAPSHOT'
  }
}

task wrapper(type: Wrapper) {
  gradleVersion="1.4"
}
apply plugin: "kotlin"

repositories {
  mavenCentral()
  maven {
    url 'file://' + pathToKotlinPlugin
  }
}

dependencies {
    compile 'com.google.guava:guava:12.0'
    testCompile  'org.testng:testng:6.8'
    testRuntime  'org.jetbrains.kotlin:kotlin-stdlib:0.1-SNAPSHOT'
}

test {
    useTestNG()
}