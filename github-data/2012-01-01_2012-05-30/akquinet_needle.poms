<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>de.akquinet.jbosscc</groupId>
    <artifactId>jbosscc-needle</artifactId>
    <url>http://needle.spree.de</url>
    <version>2.3-SNAPSHOT</version>
    <packaging>jar</packaging>
    <name>Needle</name>

    <parent>
        <groupId>org.sonatype.oss</groupId>
        <artifactId>oss-parent</artifactId>
        <version>7</version>
    </parent>

    <description>
        Needle is a lightweight framework for testing Java EE components outside of the container in isolation. 
        It reduces the test setup code by analysing dependencies and automatic injection of mock objects. 
        It will thus maximize the speed of development as well as the execution of unit tests.
    </description>

    <licenses>
        <license>
            <name>lgpl</name>
            <url>http://www.gnu.org/licenses/lgpl-2.1.txt</url>
        </license>
    </licenses>

    <scm>
        <connection>scm:git:git@github.com:akquinet/needle.git</connection>
        <url>git@github.com:akquinet/needle.git</url>
        <developerConnection>scm:git:git@github.com:akquinet/needle.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <developers>
        <developer>
            <id>mdahm</id>
            <name>Markus Dahm</name>
            <email>markus (dot) dahm (at) akquinet.de</email>
            <organization>akquinet AG</organization>
        </developer>

        <developer>
            <id>cerker</id>
            <name>Carsten Erker</name>
            <email>carsten (dot) erker (at) akquinet.de</email>
            <organization>akquinet AG</organization>
        </developer>

        <developer>
            <id>hwilming</id>
            <name>Heinz Wilming</name>
            <email>heinz (dot) wilming (at) akquinet.de</email>
            <organization>akquinet AG</organization>
        </developer>

        <developer>
            <id>jangalinski</id>
            <name>Jan Galinski</name>
            <email>jan (dot) galinski (at) holisticon.de</email>
            <organization>Holisticon AG</organization>
        </developer>
    </developers>

    <organization>
        <name>akquinet AG</name>
        <url>http://www.akquinet.de</url>
    </organization>

    <issueManagement>
        <system>https://github.com/</system>
        <url>https://github.com/akquinet/needle/issues</url>
    </issueManagement>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <slf4j.version>1.6.4</slf4j.version>
    </properties>

    <dependencies>
        <!-- logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${slf4j.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- testing -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>6.1.1</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymock</artifactId>
            <version>3.2</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>1.9.5</version>
            <optional>true</optional>
        </dependency>

        <!-- jpa/persistence -->
        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.0-api</artifactId>
            <version>1.0.0.Final</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>3.6.0.Final</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>javax.transaction</groupId>
            <artifactId>jta</artifactId>
            <version>1.1</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>2.2.8</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.3.170</version>
            <scope>test</scope>
        </dependency>

        <!-- JEE -->
        <dependency>
            <groupId>javax.ejb</groupId>
            <artifactId>ejb-api</artifactId>
            <version>3.0</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>1</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <version>1.1</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.jboss.spec.javax.xml.rpc</groupId>
            <artifactId>jboss-jaxrpc-api_1.1_spec</artifactId>
            <version>1.0.0.Final</version>
            <optional>true</optional>
        </dependency>
    </dependencies>

    <build>
        <defaultGoal>clean install</defaultGoal>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>2.2.1</version>
                </plugin>

                <plugin>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.4</version>
                    <configuration>
                        <releaseProfiles>release</releaseProfiles>
                    </configuration>
                </plugin>

                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.6</version>
                </plugin>

                <plugin>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>2.6</version>
                </plugin>

                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>2.5</version>
                </plugin>

                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.0</version>
                    <configuration>
                        <source>1.6</source>
                        <target>1.6</target>
                    </configuration>
                </plugin>

                <plugin>
                    <artifactId>maven-invoker-plugin</artifactId>
                    <version>1.8</version>
                </plugin>

                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>2.4</version>

                    <configuration>
                        <archive>
                            <manifestEntries>
                                <revision>${SVN_REVISION}</revision>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.13</version>
                </plugin>

                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.4</version>
                </plugin>

                <plugin>
                    <artifactId>maven-verifier-plugin</artifactId>
                    <version>1.0</version>
                </plugin>

                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.7</version>
                </plugin>

                <plugin>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>2.4</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>1.7</version>
                </plugin>

                <plugin>
                    <groupId>de.akquinet.jbosscc.latex</groupId>
                    <artifactId>maven-latex-plugin</artifactId>
                    <version>1.2</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>

                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>

                <executions>
                    <execution>
                        <id>test-testng</id>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <forkMode>once</forkMode>
                            <argLine>-enableassertions</argLine>
                            <junitArtifactName>none:none</junitArtifactName>
                        </configuration>
                    </execution>
                    <execution>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <testNGArtifactName>none:none</testNGArtifactName>
                            <forkMode>once</forkMode>
                            <argLine>-enableassertions</argLine>
                            <excludes>
                                <exclude>**/*TestNGTest.java</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>release</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>1.4</version>
                        <configuration>
                            <passphrase>${gpg.passphrase}</passphrase>
                        </configuration>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>it-tests</id>

            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-invoker-plugin</artifactId>

                        <configuration>
                            <localRepositoryPath>target/local-repo</localRepositoryPath>
                            <settingsFile>src/it-test/settings.xml</settingsFile>
                            <streamLogs>true</streamLogs>
                        </configuration>

                        <executions>
                            <execution>
                                <id>build-examples</id>
                                <configuration>
                                    <projectsDirectory>src/examples</projectsDirectory>
                                    <cloneProjectsTo>target/it-examples</cloneProjectsTo>
                                </configuration>
                                <goals>
                                    <!-- installs this project artifact into a project local repository -->
                                    <goal>install</goal>
                                    <!-- generates a project from the freshly built archetype -->
                                    <goal>run</goal>
                                </goals>
                            </execution>

                        </executions>
                    </plugin>
                </plugins>
            </build>

        </profile>


        <profile>
            <id>distribution</id>
            <build>
                <plugins>

                    <plugin>
                        <artifactId>maven-source-plugin</artifactId>

                        <executions>
                            <execution>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>2.8.1</version>
                        <configuration>
                            <outputDirectory>${project.build.directory}/site/docs/javadocs</outputDirectory>

                        </configuration>

                        <executions>
                            <execution>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>

                        <executions>
                            <execution>
                                <phase>package</phase>

                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>

                        <configuration>
                            <descriptors>
                                <descriptor>src/assemble/dist.xml</descriptor>
                            </descriptors>
                            <appendAssemblyId>false</appendAssemblyId>
                        </configuration>
                    </plugin>

                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>generate-sources</phase>
                                <configuration>
                                    <tasks>
                                        <echo file="${basedir}/target/m2latex/version.tex">${project.version}</echo>
                                    </tasks>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>de.akquinet.jbosscc.latex</groupId>
                        <artifactId>maven-latex-plugin</artifactId>
                        <inherited>false</inherited>

                        <configuration>
                            <settings>
                                <texDirectory>${basedir}/src/docs/tex</texDirectory>
                                <tempDirectory>m2latex</tempDirectory>
                                <cleanUp>false</cleanUp>
                            </settings>
                        </configuration>

                        <executions>
                            <execution>
                                <id>PDF</id>
                                <configuration>
                                    <settings>
                                        <outputDirectory>docs/reference/pdf</outputDirectory>
                                    </settings>
                                </configuration>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>latex</goal>
                                </goals>
                            </execution>

                            <execution>
                                <id>HTML singlepage</id>
                                <configuration>
                                    <settings>
                                        <outputDirectory>docs/reference/html</outputDirectory>
                                        <tex4htCommandArgs>
                                            <tex4htCommandArg>tex4ht,1</tex4htCommandArg>
                                            <tex4htCommandArg />
                                            <tex4htCommandArg />
                                            <tex4htCommandArg>-interaction=nonstopmode
                                                --src-specials
                                            </tex4htCommandArg>
                                        </tex4htCommandArgs>
                                    </settings>
                                </configuration>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>tex4ht</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                </plugins>
            </build>
        </profile>
    </profiles>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<artifactId>jbosscc-blog-example</artifactId>
		<groupId>de.akquinet.jbosscc</groupId>
		<version>1.0-SNAPSHOT</version>
	</parent>

	<artifactId>jbosscc-blog-example-bootstrap</artifactId>
	<packaging>ejb</packaging>

	<name>jbosscc-blog-example Bootstrap module</name>

	<dependencies>

		<dependency>
			<groupId>de.akquinet.jbosscc</groupId>
			<artifactId>jbosscc-blog-example-jpa</artifactId>
		</dependency>


		<dependency>
			<groupId>de.akquinet.jbosscc</groupId>
			<artifactId>jbosscc-blog-example-ejb</artifactId>
			<type>ejb</type>
		</dependency>

		<dependency>
			<groupId>org.jboss.spec.javax.ejb</groupId>
			<artifactId>jboss-ejb-api_3.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>


		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<scope>provided</scope>
		</dependency>


		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<scope>provided</scope>
		</dependency>


		<!-- Test scope dependencies -->
		<dependency>
			<groupId>de.akquinet.jbosscc</groupId>
			<artifactId>jbosscc-blog-example-jpa</artifactId>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>


	</dependencies>





</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <artifactId>jbosscc-blog-example</artifactId>
      <groupId>de.akquinet.jbosscc</groupId>
      <version>1.0-SNAPSHOT</version>
   </parent>

   <artifactId>jbosscc-blog-example-ear</artifactId>
   <packaging>ear</packaging>

   <name>jbosscc-blog-example EAR module</name>

   <dependencies>

      <!-- Depend on the ejb module and war so that we can package them -->
      <dependency>
         <groupId>de.akquinet.jbosscc</groupId>
         <artifactId>jbosscc-blog-example-web</artifactId>
         <type>war</type>
      </dependency>
      <dependency>
         <groupId>de.akquinet.jbosscc</groupId>
         <artifactId>jbosscc-blog-example-ejb</artifactId>
         <type>ejb</type>
      </dependency>

      <dependency>
         <groupId>de.akquinet.jbosscc</groupId>
         <artifactId>jbosscc-blog-example-bootstrap</artifactId>
         <type>ejb</type>
      </dependency>

      <dependency>
         <groupId>de.akquinet.jbosscc</groupId>
         <artifactId>jbosscc-blog-example-jpa</artifactId>
         <type>jar</type>
      </dependency>
   </dependencies>

   <build>
      <finalName>jbosscc-blog-example</finalName>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-ear-plugin</artifactId>
            <version>2.6</version>
            <configuration>
               <!-- Tell Maven we are using Java EE 6 -->
               <version>6</version>
               <!-- Use Java EE ear libraries as needed. Java EE ear libraries
                  are in easy way to package any libraries needed in the ear, and automatically
                  have any modules (EJB-JARs and WARs) use them -->
               <defaultLibBundleDir>lib</defaultLibBundleDir>
               <modules>
                  <!-- Default context root of the web app is /jbosscc-blog-example-web.
                  If a custom context root is needed, uncomment the following snippet to
                  register our War as a web module and set the contextRoot property -->

                  <webModule>
                     <groupId>de.akquinet.jbosscc</groupId>
                     <artifactId>jbosscc-blog-example-web</artifactId>
                     <contextRoot>/blog</contextRoot>
                  </webModule>

               </modules>
            </configuration>
         </plugin>
         <!-- The JBoss AS plugin deploys your ear to a local JBoss AS container -->
         <!-- Due to Maven's lack of intelligence with EARs we need to configure
            the jboss-as maven plugin to skip deployment for all modules. We then enable
            it specifically in the ear module. -->
         <plugin>
            <groupId>org.jboss.as.plugins</groupId>
            <artifactId>jboss-as-maven-plugin</artifactId>
            <configuration>
               <skip>false</skip>
            </configuration>
         </plugin>
      </plugins>
   </build>


</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<artifactId>jbosscc-blog-example</artifactId>
		<groupId>de.akquinet.jbosscc</groupId>
		<version>1.0-SNAPSHOT</version>
	</parent>

	<artifactId>jbosscc-blog-example-ejb</artifactId>
	<packaging>ejb</packaging>

	<name>jbosscc-blog-example EJB module</name>

	<dependencies>

		<dependency>
			<groupId>de.akquinet.jbosscc</groupId>
			<artifactId>jbosscc-blog-example-jpa</artifactId>
		</dependency>

		<!-- Declare the APIs we depend on and need for compilation. All of them
			are provided by JBoss AS 7 -->

		<!-- Import the EJB API, we use provided scope as the API is included in
			JBoss AS 7 -->
		<dependency>
			<groupId>org.jboss.spec.javax.ejb</groupId>
			<artifactId>jboss-ejb-api_3.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the CDI API, we use provided scope as the API is included in
			JBoss AS 7 -->
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the JPA API, we use provided scope as the API is included in
			JBoss AS 7 -->
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- JSR-303 (Bean Validation) Implementation -->
		<!-- Provides portable constraints such as @Email -->
		<!-- Hibernate Validator is shipped in JBoss AS 7 -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<scope>provided</scope>
		</dependency>


		<!-- Test scope dependencies -->
		<dependency>
			<groupId>de.akquinet.jbosscc</groupId>
			<artifactId>jbosscc-blog-example-jpa</artifactId>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>

	</dependencies>


</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<artifactId>jbosscc-blog-example</artifactId>
		<groupId>de.akquinet.jbosscc</groupId>
		<version>1.0-SNAPSHOT</version>
	</parent>

	<artifactId>jbosscc-blog-example-jpa</artifactId>
	<packaging>jar</packaging>

	<name>jbosscc-blog-example - JPA Datamodel module</name>

	<dependencies>
		<dependency>
			<groupId>org.jasypt</groupId>
			<artifactId>jasypt</artifactId>
		</dependency>

		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<scope>provided</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.bsc.maven</groupId>
				<artifactId>maven-processor-plugin</artifactId>

				<executions>
					<execution>
						<id>process</id>
						<goals>
							<goal>process</goal>
						</goals>

						<phase>generate-sources</phase>
						<configuration>
							<!-- source output directory -->
							<outputDirectory>target/metamodel</outputDirectory>

							<processors>
								<processor>org.hibernate.jpamodelgen.JPAMetaModelEntityProcessor
								</processor>
							</processors>
						</configuration>
					</execution>
				</executions>

				<dependencies>
					<dependency>
						<groupId>org.hibernate</groupId>
						<artifactId>hibernate-jpamodelgen</artifactId>
						<version>1.0.0.Final</version>
						<scope>compile</scope>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>

				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>

						<configuration>
							<sources>
								<source>target/metamodel</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<artifactId>jbosscc-blog-example</artifactId>
		<groupId>de.akquinet.jbosscc</groupId>
		<version>1.0-SNAPSHOT</version>
	</parent>

	<artifactId>jbosscc-blog-example-web</artifactId>
	<packaging>war</packaging>

	<name>jbosscc-blog-example Web module</name>

	<dependencies>

		<!-- Dependency on the EJB module so we can use it's services if needed -->
		<dependency>
			<groupId>de.akquinet.jbosscc</groupId>
			<artifactId>jbosscc-blog-example-ejb</artifactId>
			<type>ejb</type>
			<scope>provided</scope>
		</dependency>

		<!-- Import the JAX-RS API, we use provided scope as the API is included
			in JBoss AS 7 -->
		<dependency>
			<groupId>org.jboss.spec.javax.ws.rs</groupId>
			<artifactId>jboss-jaxrs-api_1.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the CDI API, we use provided scope as the API is included in
			JBoss AS 7 -->
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.spec.javax.servlet</groupId>
			<artifactId>jboss-servlet-api_3.0_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.faces</groupId>
			<artifactId>jsf-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the JPA API, we use provided scope as the API is included in
			JBoss AS 7 -->
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<scope>provided</scope>
		</dependency>


		<!-- Test scope dependencies -->
		<dependency>
			<groupId>de.akquinet.jbosscc</groupId>
			<artifactId>jbosscc-blog-example-jpa</artifactId>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<!-- Java EE 6 doesn't require web.xml, Maven needs to catch up! -->
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>de.akquinet.jbosscc</groupId>
	<artifactId>jbosscc-blog-example</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>jbosscc-blog-example application</name>

	<modules>
		<module>jbosscc-blog-example-jpa</module>
		<module>jbosscc-blog-example-bootstrap</module>
		<module>jbosscc-blog-example-ejb</module>
		<module>jbosscc-blog-example-web</module>
		<module>jbosscc-blog-example-ear</module>
	</modules>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- Define the version of JBoss' Java EE 6 APIs we want to import. Any
			dependencies from org.jboss.spec will have their version defined by this
			BOM -->
		<javaee6.web.spec.version>2.0.0.Final</javaee6.web.spec.version>
		<!-- Alternatively, comment out the above line, and un-comment the line
			below to use version 3.0.0.Beta1-redhat-1 which is a release certified to
			work with JBoss EAP 6. It requires you have access to the JBoss EAP 6 maven
			repository. -->
		<!-- <javaee6.web.spec.version>3.0.0.Beta1-redhat-1</javaee6.web.spec.version> -->
		<needle.version>2.3-SNAPSHOT</needle.version>
	</properties>

	<dependencyManagement>
		<dependencies>

			<!-- Define the version of the EJB jar so that we don't need to repeat
				ourselves in every module -->
			<dependency>
				<groupId>de.akquinet.jbosscc</groupId>
				<artifactId>jbosscc-blog-example-jpa</artifactId>
				<version>1.0-SNAPSHOT</version>
				<type>jar</type>
			</dependency>

			<dependency>
				<groupId>de.akquinet.jbosscc</groupId>
				<artifactId>jbosscc-blog-example-jpa</artifactId>
				<version>1.0-SNAPSHOT</version>
				<type>test-jar</type>
				<scope>test</scope>
			</dependency>

			<!-- Define the version of the EJB jar so that we don't need to repeat
				ourselves in every module -->
			<dependency>
				<groupId>de.akquinet.jbosscc</groupId>
				<artifactId>jbosscc-blog-example-ejb</artifactId>
				<version>1.0-SNAPSHOT</version>
				<type>ejb</type>
			</dependency>

			<dependency>
				<groupId>de.akquinet.jbosscc</groupId>
				<artifactId>jbosscc-blog-example-bootstrap</artifactId>
				<version>1.0-SNAPSHOT</version>
				<type>ejb</type>
			</dependency>


			<!-- Define the version of the WAR so that we don't need to repeat ourselves
				in every module -->
			<dependency>
				<groupId>de.akquinet.jbosscc</groupId>
				<artifactId>jbosscc-blog-example-web</artifactId>
				<version>1.0-SNAPSHOT</version>
				<type>war</type>
				<scope>compile</scope>
			</dependency>

			<!-- JBoss distributes a complete set of Java EE 6 APIs including a Bill
				of Materials (BOM). A BOM specifies the versions of a "stack" (or a collection)
				of artifacts. We use this here so that we always get the correct versions
				of artifacts. Here we use the jboss-javaee-web-6.0 stack (you can read this
				as the JBoss stack of the Java EE Web Profile 6 APIs) -->
			<dependency>
				<groupId>org.jboss.spec</groupId>
				<artifactId>jboss-javaee-web-6.0</artifactId>
				<version>${javaee6.web.spec.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- JSR-303 (Bean Validation) Implementation -->
			<!-- Provides portable constraints such as @Email -->
			<!-- Hibernate Validator is shipped in JBoss AS 7 -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>4.1.0.Final</version>
				<scope>provided</scope>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.jasypt</groupId>
				<artifactId>jasypt</artifactId>
				<version>1.9.0</version>
			</dependency>

			<dependency>
				<groupId>org.jboss.spec.javax.servlet</groupId>
				<artifactId>jboss-servlet-api_3.0_spec</artifactId>
				<version>1.0.0.Final</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>javax.faces</groupId>
				<artifactId>jsf-api</artifactId>
				<version>2.0</version>
				<scope>provided</scope>
			</dependency>


		</dependencies>
	</dependencyManagement>


	<dependencies>
		<!-- Test dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>3.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>de.akquinet.jbosscc</groupId>
			<artifactId>jbosscc-needle</artifactId>
			<version>${needle.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.6.4</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>4.0.1.Final</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>2.2.8</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<!-- Compiler plugin enforces Java 1.6 compatibility and activates annotation
					processors -->
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>2.3.2</version>
					<configuration>
						<source>1.6</source>
						<target>1.6</target>
					</configuration>
				</plugin>

				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.4</version>
					<executions>
						<execution>
							<goals>
								<goal>test-jar</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<archive>
							<manifest>
								<addClasspath>true</addClasspath>
							</manifest>
						</archive>
					</configuration>
				</plugin>

				<plugin>
					<artifactId>maven-ejb-plugin</artifactId>
					<version>2.3</version>
					<configuration>
						<!-- Tell Maven we are using EJB 3.1 -->
						<ejbVersion>3.1</ejbVersion>

						<archive>
							<manifest>
								<addClasspath>true</addClasspath>
							</manifest>
						</archive>
					</configuration>


				</plugin>

				<!-- The JBoss AS plugin deploys your ear to a local JBoss AS container -->
				<!-- Due to Maven's lack of intelligence with EARs we need to configure
					the jboss-as maven plugin to skip deployment for all modules. We then enable
					it specifically in the ear module. -->
				<plugin>
					<groupId>org.jboss.as.plugins</groupId>
					<artifactId>jboss-as-maven-plugin</artifactId>
					<version>7.1.0.Beta1b</version>
					<inherited>true</inherited>
					<configuration>
						<skip>true</skip>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.example.jpah2example</groupId>
	<artifactId>jpa-h2-example</artifactId>
	<version>1.0.0-SNAPSHOT</version>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.jboss.spec</groupId>
				<artifactId>jboss-javaee-6.0</artifactId>
				<version>3.0.2.Final</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>de.akquinet.jbosscc</groupId>
			<artifactId>jbosscc-needle</artifactId>
			<version>2.3-SNAPSHOT</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.3.170</version>
			<scope>test</scope>
		</dependency>


		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>4.2.4.Final</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.7.5</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<repositories>
		<repository>
			<id>JBOSS_NEXUS</id>
			<url>http://repository.jboss.org/nexus/content/groups/public</url>
		</repository>
	</repositories>

	<build>
		<finalName>jpa-h2-example</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
