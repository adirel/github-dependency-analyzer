import org.apache.tools.ant.filters.ReplaceTokens
apply plugin: 'java'

version = '1.6.1'

repositories {
    mavenCentral()
    mavenRepo urls: ["http://download.java.net/maven/2/", "https://maven.atlassian.com/repository/public"]
}


configurations {
    izpack
}

dependencies {
    compile (
	[group: 'commons-lang', name: 'commons-lang', version: '2.6'],
	[group: 'net.java.dev.glazedlists', name: 'glazedlists_java15', version: '1.8.0'],
	[group: 'com.thoughtworks.xstream', name: 'xstream', version: '1.3.1'],
	[group: 'net.sourceforge.jexcelapi', name: 'jxl', version: '2.6.10'],
	[group: 'net.sf.opencsv', name: 'opencsv', version: '2.1'],
	[group: 'commons-configuration', name: 'commons-configuration', version: '1.6'],
	[group: 'org.swinglabs', name: 'swingx', version: '1.6.1'],
	[group: 'com.jidesoft', name: 'jide-oss', version: '2.9.7'],
	[group: 'joda-time', name: 'joda-time', version: '1.6.2'],
	[group: 'tablelayout', name: 'TableLayout', version: '20050920'],
	[group: 'log4j', name: 'log4j', version: '1.2.16'],
	[group: 'jfree', name: 'jfreechart', version: '1.0.13'],
	[group: 'jfree', name: 'jcommon', version: '1.0.15'],
	[group: 'findbugs', name: 'annotations', version: '1.0.0'],
	[group: 'com.h2database', name: 'h2', version: '1.3.156']
    )
    testCompile group: 'junit', name: 'junit', version: '4.+'

    izpack group: 'org.codehaus.izpack', name: 'izpack-standalone-compiler', version: '4.3.2'
}


jar {
    manifest {
        attributes 'Implementation-Title': 'Baralga', 
		   'Implementation-Version': version,
		   'Main-Class': 'org.remast.baralga.gui.BaralgaMain',
	       'SplashScreen-Image': 'images/baralga/Baralga-Splash.png',
		   'Class-Path': configurations.compile.files.collect{ it.name }.join(' lib/')
    }
}

task zip(type: Zip, dependsOn: jar) {
    archiveName = "${baseName}-${version}.${extension}"
    into ("${baseName}-${version}") {
        from jar.archivePath
        into('lib') {
            from configurations.compile
        }
    }    
}

task prepareInstaller(type: Copy, dependsOn: jar) {
    into "$buildDir/installer" 
    from('src/main/izpack') {
        // works only for text files
        expand(jarName: '$jar.archivePath.name', version: '2.3.1', INSTALL_PATH: '\$INSTALL_PATH', APP_NAME: '\$APP_NAME')
    }
    from('src/main/izpack-resources')
    from jar.archivePath 
    into('lib') {
        from configurations.compile
    }
 }

task installer(dependsOn: prepareInstaller) {
       ant.taskdef(name: 'izpack', classname: 'com.izforge.izpack.ant.IzPackTask', classpath: configurations.izpack.asPath)
       ant.izpack(input: "$buildDir/installer/install.xml", output:  "${jar.baseName}-${jar.version}-Installer.jar", basedir: "${buildDir}/installer")
}





