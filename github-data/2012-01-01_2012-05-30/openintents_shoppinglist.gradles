buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.7.0'
    }
}
apply plugin: 'android'

repositories {
    mavenCentral()
}

configurations {
    compile.exclude module: 'xpp3'
    compile.exclude module: 'httpclient'
    compile.exclude module: 'junit'
    compile.exclude module: 'android'
    compile.exclude module: 'google-play-services'
}

dependencies {
//    compile files('libs/android-support-v4.jar')
    compile project(':libraries:GooglePlayServices')

    // Require the Google APIs Client Library
    compile 'com.google.api-client:google-api-client:1.15.0-rc'
    compile 'com.google.api-client:google-api-client-android:1.15.0-rc'
    compile 'com.google.apis:google-api-services-mirror:v1-rev11-1.15.0-rc'
//    compile 'com.google.android.gms:play-services:+'
}


android {
    compileSdkVersion 19
    buildToolsVersion "19.0.0"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 19
    }
    buildTypes {
        release {
            runProguard true
            proguardFile getDefaultProguardFile('proguard-android-optimize.txt')
        }
    }
    productFlavors {
        defaultFlavor {
            proguardFile 'proguard-rules.txt'
        }
    }
}
// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        maven { url 'http://repo1.maven.org/maven2' }
    }
    dependencies {
//        classpath 'com.android.tools.build:gradle:0.4.2'
        classpath 'com.android.tools.build:gradle:0.7.0'
    }
}
apply plugin: 'android-library'

archivesBaseName = 'GooglePlayServices'

dependencies {
    compile files('libs/google-play-services.jar')
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.0.0"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 19
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aild.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        instrumentTest.setRoot('tests')
    }
}
