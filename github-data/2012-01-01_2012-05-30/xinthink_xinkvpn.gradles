
task wrap(type: Wrapper) {
    gradleVersion = '1.1'
    scriptFile = 'g'
}

// import android plugin
buildscript {
    repositories {
        //mavenLocal()
        mavenCentral()

        add(new org.apache.ivy.plugins.resolver.URLResolver()) {
            name = 'GitHub'
            addArtifactPattern githubArtifactPattern
        }
    }

    dependencies {
        //classpath 'org.gradle.api.plugins:gradle-android-plugin:1.1.0'
        //classpath 'xink.gradle:gradle-android-plugin:1.1.1-SNAPSHOT'
        classpath 'xinthink:gradle-android-plugin:1.1.1-SNAPSHOT'
        classpath 'xinthink:gradle-ecj:1.0-Beta'
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'ecj'
    apply from: '../.plugin/android.gradle'
    apply from: '../.plugin/javancss.gradle'

    sourceCompatibility = 1.6
    targetCompatibility = 1.6

    repositories {
        //mavenLocal()
        mavenCentral()

        add(new org.apache.ivy.plugins.resolver.URLResolver()) {
            name = 'GitHub'
            addArtifactPattern githubArtifactPattern
        }
    }

    task initSrcDirs << {
        sourceSets*.java.srcDirs*.each { it.mkdirs() }
    }
    eclipseClasspath.dependsOn initSrcDirs

    eclipse.project {
        name = "$prjName-$name"
    }

    jar {
        baseName = prjName
    }

    ecj {
        warn << 'allOver-ann' << 'emptyBlock' << 'null' << 'semicolon'
    }
}
dependencies {
    compile (
        //'com.google.code.gson:gson:2.1',
        'org.slf4j:slf4j-android:1.6.1-RC1', // includes slf4j-api, android tools failed to deal with duplicated classess
        //'org.slf4j:slf4j-api:1.6.4',
        'xinthink:acra:4.2.3-xink',
    )

    //compile ('xink.android:acra:4.2.3-xink') {
    //    transitive = false
    //}

    runtime (
        //'org.slf4j:slf4j-android:1.6.1-RC1',
    )
}

sourceSets {
    main {
        java.srcDirs = [
            'src/domain',
            'src/service',
            'src/activity',
            'src/java',
        ]
        resources.srcDirs = []
    }

    test {
        java.srcDirs = []
        resources.srcDirs = []
    }
}

androidEmulatorStart {
    avdName = ant['avdName']
}
dependencies {
    compile project(':main')
    //compile 'junit:junit:4.10'
    //runtime 'jsankey:android-junit-report:1.2.6'
}

sourceSets {
    main {
        java.srcDirs = [ 'src/android', 'src/junit' ]
        resources.srcDirs = []
    }

    test {
        java.srcDirs = []
        resources.srcDirs = []
    }
}

androidEmulatorStart {
    avdName = ant['avdName']
}

//androidInstrumentationTests {
//    //testReportsTargetPath = file('build/test-results/xxxxx.xml')
//
//    runners {
//        run with: 'com.zutubi.android.junitreport.JUnitReportTestRunner'
//    }
//
//    doLast {
//        "adb pull /data/data/com.youxiangbiao/files/ ${file('build/test-results/')}".execute()
//    }
//}
