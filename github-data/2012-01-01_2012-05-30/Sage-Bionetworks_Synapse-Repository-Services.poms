<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>client</artifactId>
    <groupId>org.sagebionetworks</groupId>
    <version>develop-SNAPSHOT</version>
  </parent>
  <groupId>org.sagebionetworks</groupId>
  <artifactId>commandLineInterface</artifactId>
  <version>develop-SNAPSHOT</version>
  <name>commandLineInterface</name>
  <url>http://maven.apache.org</url>

  <dependencies>
	<dependency>
	  <groupId>org.sagebionetworks</groupId>
	  <artifactId>synapseJavaClient</artifactId>
	</dependency>

	<dependency>
	  <groupId>commons-cli</groupId>
	  <artifactId>commons-cli</artifactId>
	</dependency>

	<dependency>
	  <groupId>junit</groupId>
	  <artifactId>junit</artifactId>
	  <scope>test</scope>
	</dependency>

  </dependencies>

  <build>
    <plugins>
      <!-- We use this assembly to make a zip of the command line tools for distribution. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.2</version>
        <configuration>
          <descriptors>
            <descriptor>synapse-cli-assembly.xml</descriptor>
          </descriptors>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <!-- this is used for inheritance merges -->
            <phase>package</phase>
            <!-- bind to the packaging phase -->
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org\                     /2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0\                              http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.sagebionetworks</groupId>
    <artifactId>platform</artifactId>
    <version>develop-SNAPSHOT</version>
  </parent>

  <groupId>org.sagebionetworks</groupId>
  <artifactId>client</artifactId>
  <packaging>pom</packaging>
  <name>Platform Clients</name>

  <modules>

    <module>synapseJavaClient</module>
    <module>synapsePythonClient</module>
    <module>commandLineInterface</module>
  </modules>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<artifactId>client</artifactId>
		<groupId>org.sagebionetworks</groupId>
		<version>develop-SNAPSHOT</version>
	</parent>

	<groupId>org.sagebionetworks</groupId>
	<artifactId>synapseJavaClient</artifactId>
	<packaging>jar</packaging>
	<name>synapseJavaClient</name>

	<dependencies>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-models</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-auto-generated</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-communicationUtilities</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-securityUtilities</artifactId>
		</dependency>

		<!-- JSON -->
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>${org.json.version}</version>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk</artifactId>
		</dependency>

	</dependencies>

	<build>
		<resources>
			<resource>
				<!-- This will add the source files to the jar, which is needed for GWT compile. -->
				<directory>src/main/java</directory>
			</resource>
			<resource>
				<!-- We also want the resources directory added -->
				<directory>src/main/resources</directory>
			</resource>
		</resources>
		<plugins>
		</plugins>
	</build>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org\
                    /2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0\
                             http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
	<artifactId>client</artifactId>
	<groupId>org.sagebionetworks</groupId>
	<version>develop-SNAPSHOT</version>
  </parent>

  <groupId>org.sagebionetworks</groupId>
  <artifactId>synapsePythonClient</artifactId>
  <packaging>pom</packaging>
  <name>Synapse Python Client</name>

  <build>
    <plugins>
      <!-- We use this assembly to package the R and Python dependencies so they are aviablible for integration testing. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.1</version>
        <configuration>
          <descriptors>
            <descriptor>synapsePythonClient-assembly.xml</descriptor>
          </descriptors>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id> <!-- this is used for inheritance merges -->
            <phase>package</phase> <!-- bind to the packaging phase -->
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.sagebionetworks</groupId>
		<artifactId>platform</artifactId>
		<version>develop-SNAPSHOT</version>
	</parent>

	<artifactId>integration-test</artifactId>
	<packaging>jar</packaging>
	<name>Integration Tests for All services</name>

	<properties>
		<tomcat-version>7.0.32</tomcat-version>
		<tomcat-file>apache-tomcat-${tomcat-version}</tomcat-file>
		<org.sagebionetworks.authenticationservice.privateendpoint>http://localhost:8080/services-authentication-${project.version}/auth/v1</org.sagebionetworks.authenticationservice.privateendpoint>
		<org.sagebionetworks.authenticationservice.publicendpoint>http://localhost:8080/services-authentication-${project.version}/auth/v1</org.sagebionetworks.authenticationservice.publicendpoint>
		<org.sagebionetworks.repositoryservice.endpoint>http://localhost:8080/services-repository-${project.version}/repo/v1</org.sagebionetworks.repositoryservice.endpoint>
		<org.sagebionetworks.searchservice.endpoint>http://localhost:8080/repository-search-${project.version}/search/v1</org.sagebionetworks.searchservice.endpoint>
		<org.sagebionetworks.portal.endpoint>http://localhost:8080/portal-${project.version}/Portal</org.sagebionetworks.portal.endpoint>
		<!-- This is where the repository war will be deployed -->
		<org.sagebionetworks.auth.context>services-authentication-${project.version}</org.sagebionetworks.auth.context>
		<org.sagebionetworks.repository.context>services-repository-${project.version}</org.sagebionetworks.repository.context>
		<org.sagebionetworks.portal.context>portal-${project.version}</org.sagebionetworks.portal.context>
		<tomcat.endpoint>http://localhost:8080</tomcat.endpoint>
		<org.sagebionetworks.auth.servlet.prefix>/auth/v1</org.sagebionetworks.auth.servlet.prefix>
		<org.sagebionetworks.repository.servlet.prefix>/repo/v1</org.sagebionetworks.repository.servlet.prefix>
		<org.sagebionetworks.portal.servlet.prefix>/Portal</org.sagebionetworks.portal.servlet.prefix>
		<org.sagebionetworks.auth.service.base.url>${tomcat.endpoint}/${org.sagebionetworks.auth.context}${org.sagebionetworks.auth.servlet.prefix}/</org.sagebionetworks.auth.service.base.url>
		<org.sagebionetworks.repository.service.base.url>${tomcat.endpoint}/${org.sagebionetworks.repository.context}${org.sagebionetworks.repository.servlet.prefix}/</org.sagebionetworks.repository.service.base.url>
		<org.sagebionetworks.portal.base.url>${tomcat.endpoint}/${org.sagebionetworks.portal.context}${org.sagebionetworks.portal.servlet.prefix}/</org.sagebionetworks.portal.base.url>
		<org.sagebionetworks.stackEncryptionKey>${settings.org.sagebionetworks.stackEncryptionKey}</org.sagebionetworks.stackEncryptionKey>
		<!-- Setting this to true will cause Cargo to setup and start both web
			applications and then wait for shutdown (ctrl-c) This is useful for debugging
			the deployed applications. -->
		<org.sagebionetworks.integration.debug>false</org.sagebionetworks.integration.debug>
	</properties>

	<build>
		<plugins>
			<!-- *** Compiler plugin: we must force test compile because we're using
				a pom packaging that doesn't have this lifecycle mapping. -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- This allows use to run the servlet container from maven via mvn tomcat:run
				or deploy to a local tomcat via tomcat:deploy -->
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.0</version>
				<configuration>
					<!-- Deploy this as the root application -->
					<path>/</path>
				</configuration>
			</plugin>

			<!-- *** Surefire plugin: run unit and exclude integration tests *** -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>**/IT*.java</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- *** Failsafe plugin: run integration tests *** -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<excludes>
						<exclude>**/IT*${bambooITExclude}.java</exclude>
					</excludes>
					<runOrder>alphabetical</runOrder>
					<systemPropertyVariables>
						<local.python27.path>${local.python27.path}</local.python27.path>
						<local.r.path>${local.r.path}</local.r.path>
					</systemPropertyVariables>
				</configuration>
				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>integration-test</goal>
						</goals>
					</execution>
					<execution>
						<id>verify</id>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- *** Cargo plugin: start/stop application server and deploy the ear
				file before/after integration tests *** -->
			<plugin>
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven2-plugin</artifactId>
				<version>1.2.4</version>
				<configuration>
					<wait>${org.sagebionetworks.integration.debug}</wait>
					<!-- Container configuration -->
					<container>
						<timeout>240000</timeout>
						<containerId>tomcat7x</containerId>
						<!-- Download and install tomcat -->
						<zipUrlInstaller>
							<url>http://sagebionetworks.artifactoryonline.com/sagebionetworks/libs-releases-local/apache-tomcat/apache-tomcat/${tomcat-version}/apache-tomcat-${tomcat-version}.zip</url>
							<extractDir>${project.build.directory}/tomcat7x/container</extractDir>
						</zipUrlInstaller>
						<systemProperties>
							<org.sagebionetworks.stackEncryptionKey>${org.sagebionetworks.stackEncryptionKey}</org.sagebionetworks.stackEncryptionKey>
							<org.sagebionetworks.stack.configuration.url>${org.sagebionetworks.stack.configuration.url}</org.sagebionetworks.stack.configuration.url>
							<org.sagebionetworks.stack>${org.sagebionetworks.stack}</org.sagebionetworks.stack>
							<org.sagebionetworks.stack.instance>${org.sagebionetworks.stack.instance}</org.sagebionetworks.stack.instance>
							<org.sagebionetworks.stack.iam.id>${org.sagebionetworks.stack.iam.id}</org.sagebionetworks.stack.iam.id>
							<org.sagebionetworks.stack.iam.key>${org.sagebionetworks.stack.iam.key}</org.sagebionetworks.stack.iam.key>
							<org.sagebionetworks.rest.api.endpoint>${tomcat.endpoint}/${org.sagebionetworks.repository.context}</org.sagebionetworks.rest.api.endpoint>
						</systemProperties>
					</container>
					<configuration>
						<properties>
							<!-- Add the following to 'remote debug' the entire deployment stack
							<cargo.jvmargs>
								-Xdebug
								-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8989
								-Xnoagent
								-Djava.compiler=NONE
							</cargo.jvmargs>
							-->
						</properties>
					</configuration>
					<type>standalone</type>
					<home>${project.build.directory}/tomcat7x/container/${tomcat-file}/bin</home>
					<deployables>
						<deployable>
							<groupId>org.sagebionetworks</groupId>
							<artifactId>services-authentication</artifactId>
							<type>war</type>
							<!-- url to ping to know if deployable is done or not -->
							<!-- <pingURL>${tomcat.endpoint}/${org.sagebionetworks.auth.context}</pingURL> -->
							<!-- How long do we wait until the we timeout (in ms) -->
							<!-- <pingTimeout>2000</pingTimeout> -->
						</deployable>
						<deployable>
							<groupId>org.sagebionetworks</groupId>
							<artifactId>services-repository</artifactId>
							<type>war</type>
							<!-- url to ping to know if deployable is done or not -->
							<!-- <pingURL>${org.sagebionetworks.repository.service.base.url}/dataset/test</pingURL> -->
							<!-- How long do we wait until the we timeout (in ms) -->
							<!-- <pingTimeout>2000</pingTimeout> -->
						</deployable>
						<deployable>
							<groupId>org.sagebionetworks</groupId>
							<artifactId>services-search</artifactId>
							<type>war</type>
						</deployable>
						<deployable>
							<groupId>org.sagebionetworks</groupId>
							<artifactId>services-dynamo</artifactId>
							<type>war</type>
						</deployable>
					</deployables>
				</configuration>

				<executions>
					<!-- before integration tests are run: start server -->
					<execution>
						<id>start-container</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					<!-- after integration tests are run: stop server -->
					<execution>
						<id>stop-container</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>

		<!-- Sage Bionetworks Dependencies -->
		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>services-authentication</artifactId>
			<type>war</type>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>auth-util</artifactId>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>com.springsource.javax.servlet</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>services-repository</artifactId>
			<type>war</type>
		</dependency>
		
		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>services-search</artifactId>
			<type>war</type>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>services-dynamo</artifactId>
			<type>war</type>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-models</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-stackConfiguration</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>synapseJavaClient</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>bccSetup</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>wikiutil</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-communicationUtilities</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>tool-migration-utility</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.web</artifactId>
		</dependency>

		<!-- Jackson JSON Mapper -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.develop</groupId>
			<artifactId>gwt-syncproxy</artifactId>
			<version>0.3.1.sage</version>
		</dependency>

	</dependencies>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<artifactId>lib</artifactId>
		<groupId>org.sagebionetworks</groupId>
		<version>develop-SNAPSHOT</version>
	</parent>

	<groupId>org.sagebionetworks</groupId>
	<artifactId>lib-communicationUtilities</artifactId>
	<name>lib-communicationUtilities</name>
	<version>develop-SNAPSHOT</version>
	<url>http://maven.apache.org</url>

	<dependencies>

		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4</version>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-stackConfiguration</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-net</groupId>
			<artifactId>commons-net</artifactId>
			<version>3.0.1</version>
		</dependency>


		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
		</dependency>

		<!-- jsoup HTML parser library @ http://jsoup.org/ -->
		<!-- JQuery-like HTML parser -->
		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>1.5.2</version>
		</dependency>

		<!-- String utils -->
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
		</dependency>

		<!-- Logging dependencies -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>

	</dependencies>

	<build>
		<plugins>
		</plugins>
	</build>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.sagebionetworks</groupId>
		<artifactId>lib</artifactId>
		<version>develop-SNAPSHOT</version>
	</parent>

	<groupId>org.sagebionetworks</groupId>
	<artifactId>lib-id-generator</artifactId>
	<name>lib-id-generator</name>
	<description>Generates domain unique identifiers</description>
	<version>develop-SNAPSHOT</version>

	<dependencies>
		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-stackConfiguration</artifactId>
		</dependency>
		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-models</artifactId>
		</dependency>

		<!-- MySQL dependencies -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.mysql-connector-java.version}</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.spring-library</artifactId>
			<type>libd</type>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjlib</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>${org.apache.commons.commons-dbcp.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
	</dependencies>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org\
                    /2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0\
                             http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.sagebionetworks</groupId>
		<artifactId>lib</artifactId>
		<version>develop-SNAPSHOT</version>
	</parent>

	<groupId>org.sagebionetworks</groupId>
	<artifactId>lib-jdomodels</artifactId>
	<version>develop-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>Platform Repository Model Objects - JDO Implementation</name>

	<dependencies>

		<!-- Sage Bionetworks Dependencies -->
		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-stackConfiguration</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-models</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-id-generator</artifactId>
		</dependency>

		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>jta</artifactId>
			<version>1.1</version>
		</dependency>

		<!-- MySQL dependencies -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.mysql-connector-java.version}</version>
			<scope>runtime</scope>
		</dependency>

		<!-- Jackson JSON Mapper -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>${jackson.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jukito</groupId>
			<artifactId>jukito</artifactId>
			<version>1.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.spring-library</artifactId>
			<type>libd</type>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjlib</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>${org.apache.commons.commons-dbcp.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
		</dependency>

		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<argLine>-Xmx512m -Xms128m</argLine>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2.1</version>
				<executions>
					<execution>
						<id>exec-one</id>
						<phase>generate-test-sources</phase>
						<configuration>
							<!-- This will drop/create the database schema before running tests. -->
							<mainClass>org.sagebionetworks.repo.model.bootstrap.DatabasePreparation</mainClass>
						</configuration>
						<goals>
							<goal>java</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>lib</artifactId>
		<groupId>org.sagebionetworks</groupId>
		<version>develop-SNAPSHOT</version>
	</parent>

	<groupId>org.sagebionetworks</groupId>
	<artifactId>lib-auto-generated</artifactId>
	<name>lib-auto-generated</name>
	<version>develop-SNAPSHOT</version>
	<packaging>jar</packaging>
	<description>This project contains JSON schemas and the POJOs auto-generated from the schemas</description>
	<build>
		<resources>
			<resource>
				<!-- This will add the source files to the jar, which is needed for GWT
					compile. -->
				<directory>src/main/java</directory>
			</resource>
			<resource>
				<!-- We also want the resources directory added -->
				<directory>src/main/resources</directory>
			</resource>
			<resource>
				<!-- This will add all of the auto-generated sources files, which is
					needed for GWT compile. -->
				<directory>target/auto-generated-pojos</directory>
			</resource>
		</resources>
		<!-- This plugin builds the POJOs from JSON schemas. -->
		<plugins>
			<plugin>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>schema-to-pojo-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<sourceDirectory>src/main/resources/schema</sourceDirectory>
							<outputDirectory>target/auto-generated-pojos</outputDirectory>
							<createRegister>org.sagebionetworks.repo.model.AutoGenFactory</createRegister>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<dependencies>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>schema-to-pojo-lib</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Used to collect JSON files from directories -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- Used to parse JSON files -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
		</dependency>
	</dependencies>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>lib</artifactId>
		<groupId>org.sagebionetworks</groupId>
		<version>develop-SNAPSHOT</version>
	</parent>
	<groupId>org.sagebionetworks</groupId>
	<artifactId>lib-concepts</artifactId>
	<name>lib-concept</name>
	<version>develop-SNAPSHOT</version>
	<packaging>jar</packaging>
	<description>The project for SKOS concepts</description>
	<dependencies>
		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-models</artifactId>
		</dependency>
		<dependency>
			<groupId>com.hp.hpl.jena</groupId>
			<artifactId>tdb</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.spring-library</artifactId>
			<type>libd</type>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjlib</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
		</dependency>

		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
		</dependency>

		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
	</dependencies>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>lib</artifactId>
		<groupId>org.sagebionetworks</groupId>
		<version>develop-SNAPSHOT</version>
		<relativePath>..</relativePath>
	</parent>
	<artifactId>lib-search</artifactId>
	<name>lib-search</name>

	<dependencies>

		<!-- Sage Bionetworks Dependencies -->
		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-stackConfiguration</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-shared-models</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>schema-to-pojo-org-json</artifactId>
		</dependency>

		<!-- All of the AWS clients -->
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-communicationUtilities</artifactId>
		</dependency>
		<!-- Spring dependencies -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.spring-library</artifactId>
			<type>libd</type>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjlib</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
		</dependency>
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
		</dependency>

		<!-- Testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>

	</dependencies>
</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>lib</artifactId>
		<groupId>org.sagebionetworks</groupId>
		<version>develop-SNAPSHOT</version>
	</parent>
	<groupId>org.sagebionetworks</groupId>
	<artifactId>lib-shared-models</artifactId>
	<version>develop-SNAPSHOT</version>
	<name>lib-shared-models</name>
	<description>These model objects are shared between the client and server.  Only GWT compatible models should exist in this project</description>

	<build>
		<resources>
			<resource>
				<!-- This will add the source files to the jar, which is needed for GWT
					compile. -->
				<directory>src/main/java</directory>
			</resource>
			<resource>
				<!-- We also want the resources directory added -->
				<directory>src/main/resources</directory>
			</resource>
			<resource>
				<!-- This will add all of the auto-generated sources files, which is
					needed for GWT compile. -->
				<directory>target/auto-generated</directory>
			</resource>
		</resources>
		<plugins>
			<!-- GWT Maven Plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>2.4.0</version>
				<executions>
					<execution>
						<goals>
							<goal>clean</goal>
							<goal>compile</goal>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
				<!-- Plugin configuration. There are many available options, see gwt-maven-plugin
					documentation at codehaus.org -->
				<configuration>
					<!-- There are the GWT tests -->
					<includes>**/*GwtTest*.java</includes>
					<!-- Run the GWT test with the headless html unit. -->
					<mode>htmlunit</mode>
					<module>org.sagebionetworks.repo.SharedSynpaseDTOs</module>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2.1</version>
				<executions>
					<execution>
						<id>exec-one</id>
						<phase>generate-resources</phase>
						<configuration>
							<!-- This will auto-generate a RegisterConstants.properties file containing
								the current Register.json -->
							<mainClass>org.sagebionetworks.ResourceEncoder</mainClass>
							<arguments>
								<argument>Register.json</argument>
								<argument>${project.build.directory}/auto-generated/org/sagebionetworks/repo/model/RegisterConstants.properties</argument>
								<argument>org.sagebionetworks.entity.register</argument>
							</arguments>
						</configuration>
						<goals>
							<goal>java</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<dependencies>
		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-auto-generated</artifactId>
		</dependency>

		<!-- This must remain at the test scope! It uses GWT non-compatible dependencies
			and cannot be used in a GWT client! -->
		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>schema-to-pojo-org-json</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>schema-to-pojo-gwt</artifactId>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
	</dependencies>


</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>lib</artifactId>
		<groupId>org.sagebionetworks</groupId>
		<version>develop-SNAPSHOT</version>
		<relativePath>..</relativePath>
	</parent>
	<artifactId>lib-worker</artifactId>
	<dependencies>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-stackConfiguration</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-shared-models</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>schema-to-pojo-org-json</artifactId>
		</dependency>

		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk</artifactId>
		</dependency>
		<!-- Spring Framework dependencies -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.spring-library</artifactId>
			<type>libd</type>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjlib</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
		</dependency>

		<!-- Logging dependencies -->
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
			<groupId>opensymphony</groupId>
			<artifactId>quartz-all</artifactId>
		</dependency>

	</dependencies>
</project><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.sagebionetworks</groupId>
		<artifactId>lib</artifactId>
		<version>develop-SNAPSHOT</version>
	</parent>

	<groupId>org.sagebionetworks</groupId>
	<artifactId>lib-logging</artifactId>
	<name>lib-logging</name>
	<description>General utilities for log generating and parsing in Synapse</description>
	<version>develop-SNAPSHOT</version>

	<dependencies>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
		</dependency>

		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjlib</artifactId>
		</dependency>

		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
      <scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org\
                    /2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0\
                             http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.sagebionetworks</groupId>
		<artifactId>lib</artifactId>
		<version>develop-SNAPSHOT</version>
	</parent>

	<groupId>org.sagebionetworks</groupId>
	<artifactId>lib-models</artifactId>
	<version>develop-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>Platform Repository Model Objects</name>

	<dependencies>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>schema-to-pojo-org-json</artifactId>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>

		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-shared-models</artifactId>
		</dependency>

	</dependencies>

	<build>
		<plugins>
		</plugins>
	</build>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.sagebionetworks</groupId>
		<artifactId>platform</artifactId>
		<version>develop-SNAPSHOT</version>
	</parent>

	<groupId>org.sagebionetworks</groupId>
	<artifactId>lib</artifactId>
	<packaging>pom</packaging>
	<name>Libraries</name>

	<modules>
		<module>stackConfiguration</module>
		<module>id-generator</module>
		<module>lib-auto-generated</module>
		<module>lib-shared-models</module>
		<module>lib-concepts</module>
		<module>communicationUtilities</module>
		<module>securityUtilities</module>
		<module>models</module>
		<module>jdomodels</module>
		<module>logging</module>
		<module>lib-search</module>
		<module>lib-worker</module>
	</modules>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <artifactId>lib</artifactId>
    <groupId>org.sagebionetworks</groupId>
    <version>develop-SNAPSHOT</version>
  </parent>

  <groupId>org.sagebionetworks</groupId>
  <artifactId>lib-securityUtilities</artifactId>
  <name>lib-securityUtilities</name>
  <version>develop-SNAPSHOT</version>
  <url>http://maven.apache.org</url>

  <dependencies>

    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>

    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
    </dependency>

  </dependencies>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<artifactId>lib</artifactId>
		<groupId>org.sagebionetworks</groupId>
		<version>develop-SNAPSHOT</version>
	</parent>

	<groupId>org.sagebionetworks</groupId>
	<artifactId>lib-stackConfiguration</artifactId>
	<name>stackConfiguration</name>
	<version>develop-SNAPSHOT</version>
	<packaging>jar</packaging>

	<dependencies>

		<!-- Logging dependencies -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jdom</groupId>
			<artifactId>jdom</artifactId>
			<version>1.1</version>
		</dependency>

		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk</artifactId>
		</dependency>

        <dependency>
          <groupId>org.apache.httpcomponents</groupId>
          <artifactId>httpclient</artifactId>
          <scope>runtime</scope>
        </dependency>

    </dependencies>

	<properties>
		<!-- Build time-determined default property values -->
		<org.sagebionetworks.authenticationservice.privateendpoint>http://localhost:8080/services-authentication-${project.version}/auth/v1</org.sagebionetworks.authenticationservice.privateendpoint>
		<org.sagebionetworks.authenticationservice.publicendpoint>http://localhost:8080/services-authentication-${project.version}/auth/v1</org.sagebionetworks.authenticationservice.publicendpoint>
		<org.sagebionetworks.repositoryservice.endpoint>http://localhost:8080/services-repository-${project.version}/repo/v1</org.sagebionetworks.repositoryservice.endpoint>
		<org.sagebionetworks.searchservice.endpoint>http://localhost:8080/services-search-${project.version}/search/v1</org.sagebionetworks.searchservice.endpoint>
		<org.sagebionetworks.portal.endpoint>http://localhost:8080/portal-${project.version}</org.sagebionetworks.portal.endpoint>
	</properties>

	<build>
		<resources>
			<resource>
				<!-- This writes properties in the pom into *.properties files -->
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
			</resource>
		</resources>
		<plugins>
		</plugins>
	</build>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org\
                    /2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0\
                             http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>org.sagebionetworks</groupId>

	<artifactId>platform</artifactId>
	<!-- This is not the same as the application version. This is a constant. -->
	<version>develop-SNAPSHOT</version>
	<packaging>pom</packaging>
	<url>http://www.sagebase.org/</url>
	<scm>
		<connection>scm:svn:https://sagebionetworks.jira.com/svn/PLFM/trunk
		</connection>
		<url>http://sagebionetworks.jira.com/source/browse/PLFM</url>
	</scm>
	<name>Sage Bionetworks Platform</name>
	<description>
		Sage Bionetworks Platform
	</description>

	<modules>
		<module>lib</module>
		<module>services</module>
		<module>client</module>
		<module>tools</module>
		<module>integration-test</module>
	</modules>

	<repositories>
		<repository>
			<id>sagebionetworks-releases-local</id>
			<name>sagebionetworks-releases-local</name>
			<url>http://sagebionetworks.artifactoryonline.com/sagebionetworks/libs-releases-local
			</url>
		</repository>
		<repository>
			<id>sagebionetworks-ext</id>
			<name>sagebionetworks-releases-ext</name>
			<url>http://sagebionetworks.artifactoryonline.com/sagebionetworks/ext-releases-local
			</url>
		</repository>
		<repository>
			<id>mvn-gae-plugin-repo</id>
			<url>http://maven-gae-plugin.googlecode.com/svn/repository/</url>
		</repository>
		<repository>
			<id>maven-central-rep-1</id>
			<url>http://repo1.maven.org/maven2/</url>
		</repository>
		<repository>
			<id>sun-maven-repository</id>
			<url>http://download.java.net/maven/2/</url>
		</repository>
		<repository>
			<id>apache-repo-releases</id>
			<url>https://repository.apache.org/content/repositories/releases/
			</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>sagebionetworks-plugins-releases-local</id>
			<url>http://sagebionetworks.artifactoryonline.com/sagebionetworks/plugins-releases-local/
			</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</pluginRepository>
		<pluginRepository>
			<id>Codehaus Snapshots</id>
			<url>http://snapshots.repository.codehaus.org/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</pluginRepository>
	</pluginRepositories>

	<!-- Only list global dependencies in this file -->
	<dependencyManagement>
		<dependencies>
			<!-- Logging -->
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>1.2.17</version>
			</dependency>

			<!-- The log4j extras provide more thread safe appenders than the main 
				log4j. Used in the ActivityLogger, and also by the other profilers. -->
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>apache-log4j-extras</artifactId>
				<version>1.1</version>
			</dependency>

			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>1.1.1</version>
			</dependency>
			<!-- Jena provides ontology APIs including loading and querying for RDF -->
			<dependency>
				<groupId>com.hp.hpl.jena</groupId>
				<artifactId>tdb</artifactId>
				<version>0.8.5</version>
			</dependency>

			<!-- Make sure all the Jackson libraries are of the same version -->
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-core-asl</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-jaxrs</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-xc</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-mapper-asl</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			
			<!-- Used for timer triggers (cron-like) -->
			<dependency>
				<groupId>opensymphony</groupId>
				<artifactId>quartz-all</artifactId>
				<version>1.6.3</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>

			<!-- Spring Framework dependencies -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>org.springframework.spring-library</artifactId>
				<type>libd</type>
				<version>${org.springframework.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>org.springframework.web</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
			<!-- This was being pulled in as a child dependency of the springframework 
				but the tomcat plugin needs this to be in scope "provided" -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>com.springsource.javax.servlet</artifactId>
				<version>2.5.0</version>
				<scope>provided</scope>
			</dependency>

			<!-- In a tomcat container, such as Elastic Beanstalk, you have to include 
				jstl.jar manually, hence this entry. -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jstl</artifactId>
				<version>1.2</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${org.springframework.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aspects</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjlib</artifactId>
				<version>${org.aspectj.aspectjlib.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjweaver</artifactId>
				<version>${org.aspectj.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjrt</artifactId>
				<version>${org.aspectj.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>

			<dependency>
				<groupId>cglib</groupId>
				<artifactId>cglib</artifactId>
				<version>2.2</version>
			</dependency>

			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.7</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>1.8.5</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>2.0</version>
			</dependency>

			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-io</artifactId>
				<version>1.3.2</version>
			</dependency>

			<dependency>
				<groupId>commons-cli</groupId>
				<artifactId>commons-cli</artifactId>
				<version>1.1</version>
			</dependency>

			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>2.3</version>
			</dependency>

			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>1.3</version>
			</dependency>

			<dependency>
				<groupId>com.amazonaws</groupId>
				<artifactId>aws-java-sdk</artifactId>
				<version>${com.amazonaws.version}</version>
			</dependency>

			<dependency>
				<groupId>com.amazonaws</groupId>
				<artifactId>aws-java-sdk-flow-build-tools</artifactId>
				<version>${com.amazonaws.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>4.1.2</version>
			</dependency>

			<!-- Synapse internal dependencies -->
			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>schema-to-pojo-lib</artifactId>
				<version>${schema-to-pojo.version}</version>
			</dependency>
			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>schema-to-pojo-org-json</artifactId>
				<version>${schema-to-pojo.version}</version>
			</dependency>

			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>schema-to-pojo-gwt</artifactId>
				<version>${schema-to-pojo.version}</version>
			</dependency>

			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>repository-managers</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>services-authentication</artifactId>
				<version>${project.version}</version>
				<type>war</type>
			</dependency>

			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>services-repository</artifactId>
				<version>${project.version}</version>
				<type>war</type>
			</dependency>
			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>services-search</artifactId>
				<version>${project.version}</version>
				<type>war</type>
			</dependency>
			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>services-dynamo</artifactId>
				<version>${project.version}</version>
				<type>war</type>
			</dependency>
			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>lib-auto-generated</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>lib-shared-models</artifactId>
				<version>${project.version}</version>
			</dependency>
			
			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>lib-worker</artifactId>
				<version>${project.version}</version>
			</dependency>
			
			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>lib-communicationUtilities</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>lib-id-generator</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>lib-concepts</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>lib-jdomodels</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>lib-models</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>lib-search</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>lib-securityUtilities</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>lib-stackConfiguration</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>synapseJavaClient</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>synapsePythonClient</artifactId>
				<version>${project.version}</version>
				<classifier>synapse-python-client-assembly</classifier>
				<type>zip</type>
			</dependency>

			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>DatasetMetadataLoader</artifactId>
				<version>${project.version}</version>
				<classifier>dataset-metadata-loader-assembly</classifier>
				<type>zip</type>
			</dependency>

			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>wikiutil</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>auth-util</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>tool-migration-utility</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>lib-logging</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>com.google.gwt</groupId>
				<artifactId>gwt-servlet</artifactId>
				<version>${gwtVersion}</version>
			</dependency>
			<dependency>
				<groupId>com.google.gwt</groupId>
				<artifactId>gwt-user</artifactId>
				<version>${gwtVersion}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>com.google.gwt</groupId>
				<artifactId>gwt-dev</artifactId>
				<version>${gwtVersion}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.imgscalr</groupId>
				<artifactId>imgscalr-lib</artifactId>
				<version>4.2</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>com.thoughtworks.xstream</groupId>
				<artifactId>xstream</artifactId>
				<version>${xstream.version}</version>
			</dependency>

		</dependencies>
	</dependencyManagement>
	<!-- Only list globally used plugins in this file -->
	<build>
		<pluginManagement>
			<plugins>
				<!-- Tell the eclipse m2e plugin to execute these lifecycle mappings 
					See: http://wiki.eclipse.org/M2E_plugin_execution_not_covered -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>javacc-maven-plugin</artifactId>
										<versionRange>[0,)</versionRange>
										<goals>
											<goal>jjtree-javacc</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.sagebionetworks</groupId>
										<artifactId>schema-to-pojo-maven-plugin</artifactId>
										<versionRange>[0,)</versionRange>
										<goals>
											<goal>generate</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[0,)</versionRange>
										<goals>
											<goal>unpack-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.bsc.maven</groupId>
										<artifactId>maven-processor-plugin</artifactId>
										<versionRange>[0,)</versionRange>
										<goals>
											<goal>process</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>exec-maven-plugin</artifactId>
										<versionRange>[1,)</versionRange>
										<goals>
											<goal>java</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<!-- Java compiler version -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>2.3.2</version>
					<configuration>
						<source>1.6</source>
						<target>1.6</target>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.4.2</version>
				</plugin>

				<!-- Build JavaDocs -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.4.2</version>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<goals>
								<goal>jar</goal>
								<goal>test-jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- Make a WAR file -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.1.1</version>
					<configuration>
						<archive>
							<manifest>
								<addDefaultImplementationEntries>true
								</addDefaultImplementationEntries>
							</manifest>
							<manifestEntries>
								<Implementation-Build>${buildNumber}</Implementation-Build>
								<Implementation-Build-Timestamp>${maven.build.timestamp}
								</Implementation-Build-Timestamp>
							</manifestEntries>
						</archive>
					</configuration>
				</plugin>

				<!-- Make a JAR file -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.3.1</version>
					<configuration>
						<archive>
							<manifest>
								<addDefaultImplementationEntries>true
								</addDefaultImplementationEntries>
							</manifest>
							<manifestEntries>
								<Implementation-Build>${buildNumber}</Implementation-Build>
								<Implementation-Build-Timestamp>${maven.build.timestamp}
								</Implementation-Build-Timestamp>
							</manifestEntries>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.sagebionetworks</groupId>
					<artifactId>schema-to-pojo-maven-plugin</artifactId>
					<version>${schema-to-pojo.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<!-- Specify hard-coded project properties that should be shared here -->
	<!-- Note, do not put in custom developer configuration that should not 
		be shared, esp passwords. Those go in settings.xml -->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- This is just for "eclipse:eclipse" goal to always attempt downloading 
			sources -->
		<downloadSources>true</downloadSources>
		<gwtVersion>2.4.0</gwtVersion>
		<guiceVersion>3.0-rc2</guiceVersion>
		<org.springframework.version>3.0.5.RELEASE
		</org.springframework.version>
		<jackson.version>1.8.1</jackson.version>
		<xstream.version>1.3.1</xstream.version>
		<maven.build.timestamp.format>yyyy-MM-dd'T'HH:mm:ssZ
		</maven.build.timestamp.format>
		<datanucleus.version>1.1.5</datanucleus.version>
		<org.datanucleus.datanucleus-enhancer.version>1.1.4
		</org.datanucleus.datanucleus-enhancer.version>
		<javax.transaction.jta.version>1.1</javax.transaction.jta.version>
		<javax.jdo.jdo2-api.version>2.3-ec</javax.jdo.jdo2-api.version>
		<mysql.mysql-connector-java.version>5.1.13
		</mysql.mysql-connector-java.version>
		<org.aspectj.aspectjlib.version>1.6.2</org.aspectj.aspectjlib.version>
		<org.aspectj.version>1.6.10</org.aspectj.version>
		<org.apache.commons.commons-dbcp.version>1.4
		</org.apache.commons.commons-dbcp.version>
		<schema-to-pojo.version>0.1.21</schema-to-pojo.version>
		<org.json.version>20090211</org.json.version>
		<com.amazonaws.version>1.3.10</com.amazonaws.version>
	</properties>

	<distributionManagement>
		<repository>
			<id>sagebionetworks</id>
			<name>sagebionetworks-releases</name>
			<url>http://sagebionetworks.artifactoryonline.com/sagebionetworks/libs-releases-local
			</url>
		</repository>
		<snapshotRepository>
			<id>sagebionetworks</id>
			<name>sagebionetworks-snapshots</name>
			<url>http://sagebionetworks.artifactoryonline.com/sagebionetworks/libs-snapshots-local
			</url>
			<uniqueVersion>false</uniqueVersion>
		</snapshotRepository>

	</distributionManagement>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.sagebionetworks</groupId>
		<artifactId>services</artifactId>
		<version>develop-SNAPSHOT</version>
	</parent>

	<groupId>org.sagebionetworks</groupId>
	<artifactId>services-authentication</artifactId>
	<packaging>war</packaging>
	<name>Platform Authentication Service</name>

	<dependencies>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>auth-util</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-securityUtilities</artifactId>
		</dependency>

		<!-- ATOM -->
		<dependency>
			<groupId>rome</groupId>
			<artifactId>rome</artifactId>
			<version>0.5</version>
		</dependency>

		<!-- Spring Framework dependencies -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.spring-library</artifactId>
			<type>libd</type>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
		</dependency>


		<!-- This was being pulled in as a child dependency of the springframework
			but the tomcat plugin needs this to be in scope "provided" -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>com.springsource.javax.servlet</artifactId>
			<version>2.5.0</version>
			<scope>provided</scope>
		</dependency>

		<!-- In a tomcat container, such as Elastic Beanstalk, you have to include
			jstl.jar manually, hence this entry. -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>


		<!-- Jackson JSON Mapper -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
		</dependency>

		<!-- Logging dependencies -->
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
		</dependency>

		<dependency>
			<groupId>org.openid4java</groupId>
			<artifactId>openid4java-consumer</artifactId>
			<version>0.9.6</version>
			<type>pom</type>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>

	    <dependency>
          <groupId>org.apache.httpcomponents</groupId>
          <artifactId>httpclient</artifactId>
          <version>4.1.1</version>
        </dependency>

	</dependencies>


	<build>
		<plugins>
			<!-- Make a WAR file -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<webResources>
						<resource>
							<directory>src/main/webapp</directory>
							<filtering>true</filtering>
						</resource>
					</webResources>
				</configuration>
			</plugin>

			<!-- This allows us to run the servlet container from maven via mvn tomcat:run
				or deploy to a local tomcat via tomcat:deploy -->
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.0</version>
				<configuration>
					<!-- Deploy this as the root application -->
					<path>/</path>
				</configuration>
			</plugin>

			<!-- Upload application to the appspot automatically, during release:perform -->
			<!-- plugin> <artifactId>maven-release-plugin</artifactId> <configuration>
				<goals>gae:deploy</goals> </configuration> </plugin -->

			<!-- Added this path to the test classpath so that we do not need to copy
				and paste our servlet config into a separate file even though we want the
				exact same config for testing -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<additionalClasspathElements>
						<element>${project.basedir}/src/main/webapp/WEB-INF/</element>
					</additionalClasspathElements>
				</configuration>
			</plugin>

		</plugins>
	</build>

	<!-- Specify hard-coded project properties here -->
	<properties>
		<!-- Upload to http://test.latest.<applicationName>.appspot.com by default -->
		<gae.application.version>test</gae.application.version>
		<gae.version>1.3.7</gae.version>
		<org.springframework.version>3.0.5.RELEASE</org.springframework.version>
	</properties>

	<profiles>
		<!-- We can configure our integration server to activate this profile and
			perform gae:deploy, thus uploading latest snapshot to the http://1.latest.<applicationName>.appspot.com
			automatically -->
		<profile>
			<id>integration-build</id>
			<properties>
				<gae.application.version>stage</gae.application.version>
			</properties>
		</profile>

		<!-- This profile will activate automatically during release and upload
			application to the http://2.latest.<applicationName>.appspot.com (We might
			want to set the 2nd version as our applications Default version to be accessible
			at http://<applicationName>.appspot.com) -->
		<profile>
			<id>release-build</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>

			<properties>
				<!-- During release, set application version in appengine-web.xml to
					2 -->
				<gae.application.version>release</gae.application.version>
			</properties>
		</profile>
	</profiles>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.sagebionetworks</groupId>
		<artifactId>services</artifactId>
		<version>develop-SNAPSHOT</version>
	</parent>

	<groupId>org.sagebionetworks</groupId>
	<artifactId>auth-util</artifactId>
	<packaging>jar</packaging>
	<name>Platform Authentication and Authorization Utilities</name>

	<dependencies>

		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
		</dependency>

		<!-- Sage Bionetworks Dependencies -->
		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-stackConfiguration</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-communicationUtilities</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-models</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-securityUtilities</artifactId>
		</dependency>

		<!-- Spring Framework dependencies -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.web</artifactId>
		</dependency>

		<!-- Logging dependencies -->
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
		</plugins>
	</build>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>services</artifactId>
		<groupId>org.sagebionetworks</groupId>
		<version>develop-SNAPSHOT</version>
		<relativePath>..</relativePath>
	</parent>
	<name>Synapse DynamoDB Updater</name>
	<artifactId>services-dynamo</artifactId>
	<packaging>war</packaging>

	<dependencies>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-worker</artifactId>
		</dependency>

		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk</artifactId>
		</dependency>

		<!-- Spring Framework dependencies -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.spring-library</artifactId>
			<type>libd</type>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
		</dependency>

		<!-- Needed for running the tomcat plugin -->
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>20040616</version>
		</dependency>

		<!-- In a tomcat container, such as Elastic Beanstalk, you have to include 
			jstl.jar manually, hence this entry. -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<webResources>
						<resource>
							<directory>src/main/webapp</directory>
							<filtering>true</filtering>
						</resource>
					</webResources>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.0</version>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<argLine>-Xmx512m -Xms128m</argLine>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project><?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.sagebionetworks</groupId>
    <artifactId>platform</artifactId>
    <version>develop-SNAPSHOT</version>
  </parent>

  <groupId>org.sagebionetworks</groupId>
  <artifactId>services</artifactId>
  <packaging>pom</packaging>
  <name>Services</name>

  <modules>
    <module>repository-managers</module>
    <module>authutil</module>
    <module>repository</module>
    <module>auth</module>
    <module>search</module>
    <module>dynamo</module>
  </modules>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>services</artifactId>
		<groupId>org.sagebionetworks</groupId>
		<version>develop-SNAPSHOT</version>
		<relativePath>..</relativePath>
	</parent>
	<artifactId>repository-managers</artifactId>

	<dependencies>

		<!-- Sage Bionetworks Dependencies -->
		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-models</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-jdomodels</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-search</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-concepts</artifactId>
		</dependency>
		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>auth-util</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-stackConfiguration</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-securityUtilities</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-logging</artifactId>
		</dependency>

		<!-- Spring Framework dependencies -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.spring-library</artifactId>
			<type>libd</type>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
		</dependency>

		<!-- Logging dependencies -->
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>apache-log4j-extras</artifactId>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>opensymphony</groupId>
			<artifactId>quartz-all</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>20040616</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<!-- We use this to images for previews.-->
		<dependency>
			<groupId>org.imgscalr</groupId>
			<artifactId>imgscalr-lib</artifactId>
		</dependency>

		<!-- Trie library -->
		<dependency>
			<groupId>org.ardverk</groupId>
			<artifactId>patricia-trie</artifactId>
			<version>0.6</version>
		</dependency>


	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<plugins>
			<!-- JavaCC and JJTree parser code generator tool -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>javacc-maven-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>jjtree-javacc</id>
						<goals>
							<goal>jjtree-javacc</goal>
						</goals>
						<configuration>
							<!-- options for JJTree and JavaCC go here -->
							<isStatic>false</isStatic>
							<nodeClass>org.sagebionetworks.repo.queryparser.QueryNode</nodeClass>
							<sourceDirectory>${basedir}/src/main/resources</sourceDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<argLine>-Xmx1024m -Xms128m</argLine>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>schema-to-pojo-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<sourceDirectory>src/test/resources/test-schemas</sourceDirectory>
							<outputDirectory>${project.build.directory}/auto-generated</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project><?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.sagebionetworks</groupId>
		<artifactId>services</artifactId>
		<version>develop-SNAPSHOT</version>
	</parent>

	<groupId>org.sagebionetworks</groupId>
	<artifactId>services-repository</artifactId>
	<packaging>war</packaging>
	<name>Platform Repository Service</name>

	<dependencies>

		<!-- Sage Bionetworks Dependencies -->
		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>repository-managers</artifactId>
		</dependency>
		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>auth-util</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-stackConfiguration</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-securityUtilities</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-logging</artifactId>
		</dependency>

		<!-- This was being pulled in as a child dependency of the springframework 
			but the tomcat plugin needs this to be in scope "provided" -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>com.springsource.javax.servlet</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- In a tomcat container, such as Elastic Beanstalk, you have to include 
			jstl.jar manually, hence this entry. -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>

		<!-- Spring Framework dependencies -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.spring-library</artifactId>
			<type>libd</type>
		</dependency>
		<!-- ATOM -->
		<dependency>
			<groupId>rome</groupId>
			<artifactId>rome</artifactId>
			<version>0.5</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
		</dependency>

		<!-- Jackson JSON Mapper -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
		</dependency>

		<!-- Logging dependencies -->
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>apache-log4j-extras</artifactId>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>

		<dependency>
			<groupId>opensymphony</groupId>
			<artifactId>quartz-all</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>20040616</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
	</dependencies>
	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>


		<plugins>
			<!-- Make a WAR file -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<webResources>
						<resource>
							<directory>src/main/webapp</directory>
							<filtering>true</filtering>
						</resource>
					</webResources>
				</configuration>
			</plugin>

			<!-- This allows use to run the servlet container from maven via mvn tomcat:run 
				or deploy to a local tomcat via tomcat:deploy -->
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.0</version>
				<configuration>
					<!-- Deploy this as the root application -->
					<path>/</path>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<argLine>-Xmx1024m -Xms128m</argLine>
				</configuration>
			</plugin>

			<!-- Added this path to the test classpath so that we do not need to copy 
				and paste our servlet config into a separate file even though we want the 
				exact same config for testing -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.3</version>
				<executions>
					<execution>
						<id>add-test-resource</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-resource</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>src/main/webapp/WEB-INF</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>services</artifactId>
		<groupId>org.sagebionetworks</groupId>
		<version>develop-SNAPSHOT</version>
		<relativePath>..</relativePath>
	</parent>
	<artifactId>services-search</artifactId>
	<packaging>war</packaging>
	<dependencies>
	
			<!-- Sage Bionetworks Dependencies -->
		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>repository-managers</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-stackConfiguration</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-worker</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>schema-to-pojo-org-json</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-search</artifactId>
		</dependency>
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk</artifactId>
		</dependency>

		<!-- This was being pulled in as a child dependency of the springframework 
			but the tomcat plugin needs this to be in scope "provided" -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>com.springsource.javax.servlet</artifactId>
		</dependency>

		<!-- In a tomcat container, such as Elastic Beanstalk, you have to include 
			jstl.jar manually, hence this entry. -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>

		<!-- Spring Framework dependencies -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.spring-library</artifactId>
			<type>libd</type>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-asl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjlib</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
		</dependency>

		<!-- Logging dependencies -->
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
			<groupId>opensymphony</groupId>
			<artifactId>quartz-all</artifactId>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>

	</dependencies>
	<build>
		<plugins>
			<!-- Make a WAR file -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<webResources>
						<resource>
							<directory>src/main/webapp</directory>
							<filtering>true</filtering>
						</resource>
					</webResources>
				</configuration>
			</plugin>

			<!-- This allows use to run the servlet container from maven via mvn tomcat:run 
				or deploy to a local tomcat via tomcat:deploy -->
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.0</version>
				<configuration>
					<!-- Deploy this as the root application -->
					<path>/</path>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<argLine>-Xmx512m -Xms128m</argLine>
				</configuration>
			</plugin>

		</plugins>
	</build>
</project><?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org\
                    /2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0\
                             http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
	<artifactId>tools</artifactId>
	<groupId>org.sagebionetworks</groupId>
	<version>develop-SNAPSHOT</version>
  </parent>

  <groupId>org.sagebionetworks</groupId>
  <artifactId>SynapseDeployer</artifactId>
  <packaging>pom</packaging>
  <name>Synapse Deployer</name>

  <build>
    <plugins>
      <!-- We use this assembly to package the R and Python dependencies so they are aviablible for integration testing. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.1</version>
        <configuration>
          <descriptors>
            <descriptor>synapseDeployer-assembly.xml</descriptor>
          </descriptors>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id> <!-- this is used for inheritance merges -->
            <phase>package</phase> <!-- bind to the packaging phase -->
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

   <parent>
    <artifactId>tools</artifactId>
    <groupId>org.sagebionetworks</groupId>
    <version>develop-SNAPSHOT</version>
  </parent>

  <groupId>org.sagebionetworks</groupId>
  <artifactId>bccSetup</artifactId>
  <name>bccSetup</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

	<repositories>
	<!-- for GData -->
		<repository>
  			<id>mandubian-mvn</id>
  			<url>http://mandubian-mvn.googlecode.com/svn/trunk/mandubian-mvn/repository</url>
		</repository>
	</repositories>

  <dependencies>
		<!-- Sage Bionetworks Dependencies -->
		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-stackConfiguration</artifactId>
		</dependency>

	<dependency>
	  <groupId>com.google.gdata</groupId>
	  <artifactId>gdata-core-1.0</artifactId>
	  <version>1.41.5</version>
	</dependency>

	<dependency>
	  <groupId>com.google.gdata</groupId>
	  <artifactId>gdata-spreadsheet-3.0</artifactId>
	  <version>1.41.5</version>
	</dependency>

	<dependency>
	  <groupId>com.google.gdata</groupId>
	  <artifactId>gdata-docs-3.0</artifactId>
	  <version>1.41.5</version>
	</dependency>

 		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4</version>
		</dependency>


    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<artifactId>platform</artifactId>
		<groupId>org.sagebionetworks</groupId>
		<version>develop-SNAPSHOT</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.sagebionetworks</groupId>
	<artifactId>tools</artifactId>
	<packaging>pom</packaging>
	<name>Platform Tools</name>

    <modules>
      <module>wikiutil</module>
      <module>bccSetup</module>
      <module>SynapseDeployer</module>
      <module>tool-migration-utility</module>
      <module>usageMetrics</module>
  </modules>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>tools</artifactId>
		<groupId>org.sagebionetworks</groupId>
		<version>develop-SNAPSHOT</version>
	</parent>
	<groupId>org.sagebionetworks</groupId>
	<artifactId>tool-migration-utility</artifactId>
	<version>develop-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>tool-migration-utility</name>
	<description>A Utility for migrating Synapse data from one stack to another</description>
	<dependencies>
		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>synapseJavaClient</artifactId>
		</dependency>


		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<properties>
		<!-- Build time-determined default property values -->
		<org.sagebionetworks.authenticationservice.privateendpoint>http://localhost:8080/services-authentication-${project.version}/auth/v1</org.sagebionetworks.authenticationservice.privateendpoint>
		<org.sagebionetworks.authenticationservice.publicendpoint>http://localhost:8080/services-authentication-${project.version}/auth/v1</org.sagebionetworks.authenticationservice.publicendpoint>
		<org.sagebionetworks.repositoryservice.endpoint>http://localhost:8080/services-repository-${project.version}/repo/v1</org.sagebionetworks.repositoryservice.endpoint>
		<org.sagebionetworks.portal.endpoint>http://localhost:8080/portal-${project.version}</org.sagebionetworks.portal.endpoint>
	</properties>

	<build>
		<resources>
			<resource>
				<!-- This writes properties in the pom into *.properties files -->
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id> <!-- this is used for inheritance merges -->
						<phase>package</phase> <!-- bind to the packaging phase -->
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>tools</artifactId>
    <groupId>org.sagebionetworks</groupId>
    <version>develop-SNAPSHOT</version>
  </parent>
  <groupId>org.sagebionetworks</groupId>
  <artifactId>usageMetrics</artifactId>
  <version>develop-SNAPSHOT</version>
  <name>usageMetrics</name>
  <url>http://maven.apache.org</url>
  <dependencies>
		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-models</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>synapseJavaClient</artifactId>
		</dependency>

		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
		</dependency>

 		<dependency>
 			<groupId>junit</groupId>
 			<artifactId>junit</artifactId>
 			<scope>test</scope>
 		</dependency>

 		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>${org.json.version}</version>
		</dependency>
  </dependencies>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<parent>
		<artifactId>tools</artifactId>
		<groupId>org.sagebionetworks</groupId>
		<version>develop-SNAPSHOT</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>

	<!-- Note that this POM is not a child of PLFM/trunk/pom.xml and therefore
		does not inherit any settings from it -->

	<groupId>org.sagebionetworks</groupId>
	<artifactId>wikiutil</artifactId>
	<packaging>jar</packaging>
	<name>Platform Services Wiki Generator Utilities</name>

	<dependencies>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>synapseJavaClient</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
		</dependency>

		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
	</dependencies>
	<build>
		<plugins>
		</plugins>
	</build>
</project>
