apply plugin: 'maven-bom'
apply from: "$rootDir/gradle/maven-deployment.gradle"

generatePom.enabled = false
sonarRunner.skipProject = true

mavenBom {
    projects = coreModuleProjects
}import groovy.text.SimpleTemplateEngine

buildscript {
    repositories {
        maven { url "http://repo.springsource.org/plugins-release" }
    }
    dependencies {
        classpath("org.springframework.build.gradle:propdeps-plugin:0.0.5")
        classpath("org.gradle.api.plugins:gradle-tomcat-plugin:0.9.8")
        classpath('me.champeau.gradle:gradle-javadoc-hotfix-plugin:0.1')
        classpath('org.asciidoctor:asciidoctor-gradle-plugin:0.7.0')
        classpath('org.asciidoctor:asciidoctor-java-integration:0.1.4.preview.1')
    }
}

apply plugin: 'sonar-runner'
apply plugin: 'base'

description = 'Spring Security'

allprojects {
    apply plugin: 'idea'
    apply plugin: 'eclipse'

    ext.releaseBuild = version.endsWith('RELEASE')
    ext.snapshotBuild = version.endsWith('SNAPSHOT')
    ext.springVersion = '4.0.2.RELEASE'
    ext.springLdapVersion = '2.0.1.RELEASE'

    group = 'org.springframework.security'

    repositories {
       mavenCentral()
       maven { url "https://repo.spring.io/libs-snapshot" }
       maven { url "https://repo.spring.io/plugins-release" }
       maven { url "http://repo.terracotta.org/maven2/" }
    }

    eclipse.project.name = "${project.name}-4.0.x"
}

sonarRunner {
    sonarProperties {
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.projectName", "Spring Security"
        property "sonar.jacoco.reportPath", "${buildDir.name}/jacoco.exec"
        property "sonar.links.homepage", 'https://www.springsource.org/spring-security'
        property "sonar.links.ci", 'https://build.springsource.org/browse/SEC-B32X'
        property "sonar.links.issue", 'https://jira.springsource.org/browse/SEC'
        property "sonar.links.scm", 'https://github.com/SpringSource/spring-security'
        property "sonar.links.scm_dev", 'https://github.com/SpringSource/spring-security.git'
        property "sonar.java.coveragePlugin", "jacoco"
    }
}

// Set up different subproject lists for individual configuration
ext.javaProjects = subprojects.findAll { project -> project.name != 'docs' && project.name != 'manual' && project.name != 'guides' && project.name != 'spring-security-bom' }
ext.sampleProjects = subprojects.findAll { project -> project.name.startsWith('spring-security-samples') }
ext.itestProjects = subprojects.findAll { project -> project.name.startsWith('itest') }
ext.coreModuleProjects = javaProjects - sampleProjects - itestProjects
ext.aspectjProjects = [project(':spring-security-aspects'), project(':spring-security-samples-aspectj-xml')]

configure(allprojects - javaProjects) {
    task afterEclipseImport {
        ext.srcFile = file('.classpath')
        inputs.file srcFile
        outputs.dir srcFile

        onlyIf { !srcFile.exists() }

        doLast {
            srcFile << """<?xml version="1.0" encoding="UTF-8"?>
<classpath>
    <classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER"/>
    <classpathentry kind="output" path="bin"/>
</classpath>
"""
        }
    }
}

configure(subprojects - coreModuleProjects - project(':spring-security-samples-messages-jc') - project(':spring-security-bom')) {
    tasks.findByPath("artifactoryPublish")?.enabled = false
    sonarRunner {
        skipProject = true
    }
}

configure(javaProjects) {
    ext.TOMCAT_GRADLE = "$rootDir/gradle/tomcat.gradle"
    ext.WAR_SAMPLE_GRADLE = "$rootDir/gradle/war-sample.gradle"
    apply from: "$rootDir/gradle/javaprojects.gradle"
    apply from: "$rootDir/gradle/release-checks.gradle"
    apply from: "$rootDir/gradle/maven-deployment.gradle"
}

configure(coreModuleProjects) {
    apply plugin: 'emma'

    configurations {
        jacoco //Configuration Group used by Sonar to provide Code Coverage using JaCoCo
    }

    dependencies {
        jacoco "org.jacoco:org.jacoco.agent:0.6.2.201302030002:runtime"
    }
    test {
        jvmArgs "-javaagent:${configurations.jacoco.asPath}=destfile=${buildDir}/jacoco.exec,includes=${project.group}.*"
    }
    integrationTest {
        jvmArgs "-javaagent:${configurations.jacoco.asPath}=destfile=${buildDir}/jacoco.exec,includes=${project.group}.*"
    }
}

configure (aspectjProjects) {
    apply plugin: 'java'
    apply plugin: 'aspectj'
}

task coreBuild {
    dependsOn coreModuleProjects*.tasks*.matching { task -> task.name == 'build' }
}

// Task for creating the distro zip

task dist(type: Zip) {
    dependsOn subprojects*.tasks*.matching { task -> task.name == 'assemble' || task.name.endsWith('Zip') || task.name.endsWith('generatePom') }
    classifier = 'dist'

    evaluationDependsOn(':docs')
    evaluationDependsOn(':docs:manual')

    def zipRootDir = "${project.name}-$version"
    into(zipRootDir) {
        from(rootDir) {
            include '*.txt'
        }
        into('docs') {
            with(project(':docs').apiSpec)
            with(project(':docs:manual').spec)
            with(project(':docs:guides').spec)
        }
        into('dist') {
            from coreModuleProjects.collect {project -> project.libsDir }
        }
        sampleProjects.each { project->
            into("$zipRootDir/samples/$project.name") {
                from(project.projectDir) {
                    include "src/main/**"
                    include "pom.xml"
                }
            }
        }
    }
}

artifacts {
    archives dist
    archives project(':docs').docsZip
    archives project(':docs').schemaZip
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.10-rc-2'
}
apply plugin: 'groovy'

repositories {
    mavenCentral()
    maven {
        name = 'SpringSource Enterprise Release'
        url = 'http://repository.springsource.com/maven/bundles/release'
    }
    maven {
        name = 'SpringSource Enterprise External'
        url = 'http://repository.springsource.com/maven/bundles/external'
    }
}

dependencies {
    compile gradleApi()
}

// GAE
dependencies {
    compile 'com.google.appengine:appengine-tools-sdk:1.4.2'
}

dependencies{
    compile "emma:emma:2.0.5312"
}

// Trang
dependencies {
    compile 'com.thaiopensource:trang:20091111',
            'net.sourceforge.saxon:saxon:9.1.0.8'
}

task ide(type: Copy)  {
    from configurations.runtime
    into 'ide'
}
apply plugin: 'asciidoctor'

asciidoctor {
    baseDir = file('src/asciidoc')
    options = [
      eruby: 'erubis',
      eruby: 'erubis',
      attributes: [
          copycss : '',
          icons : 'font',
          'source-highlighter': 'prettify',
          sectanchors : '',
          toc: '',
          'toc-placement' : 'preamble',
          idprefix: '',
          idseparator: '-',
          doctype: 'book',
          'spring-security-version' : project.version,
          'download-url' : getDownloadUrl(),
          'include-maven-repository' : getMavenRepositoryInclude(),
          revnumber : project.version
      ]
    ]
}

ext.spec = copySpec {
    into ('guides') {
        from(asciidoctor.outputDir)
        exclude 'build', 'Guardfile'
    }
}

def getDownloadUrl() {
    snapshotBuild ? "https://github.com/SpringSource/spring-security/archive/master.zip" : "https://github.com/spring-projects/spring-security/archive/${project.version}.zip"
}


def getMavenRepositoryInclude() {
    if(snapshotBuild) {
        return "_includes/maven-repository-snapshot.asc"
    } else if(releaseBuild) {
        return "_includes/maven-repository-release.asc"
    } else {
        return "_includes/maven-repository-milestone.asc"
    }
}apply from: WAR_SAMPLE_GRADLE

dependencies {

    providedCompile "javax.servlet:javax.servlet-api:3.0.1",
                    'javax.servlet.jsp:jsp-api:2.1'

    compile project(":spring-security-config"),
            project(":spring-security-samples-messages-jc"),
            project(":spring-security-core"),
            project(":spring-security-web"),
            "org.springframework:spring-webmvc:$springVersion",
            "org.springframework:spring-jdbc:$springVersion",
            "org.slf4j:slf4j-api:$slf4jVersion",
            "org.slf4j:log4j-over-slf4j:$slf4jVersion",
            "org.slf4j:jul-to-slf4j:$slf4jVersion",
            "org.slf4j:jcl-over-slf4j:$slf4jVersion",
            "javax.servlet:jstl:1.2",
            "javax.validation:validation-api:1.0.0.GA",
            "org.hibernate:hibernate-validator:4.2.0.Final"

    runtime "opensymphony:sitemesh:2.4.2",
            'cglib:cglib-nodep:2.2.2',
            'ch.qos.logback:logback-classic:0.9.30'
}apply from: WAR_SAMPLE_GRADLE

dependencies {

    providedCompile "javax.servlet:javax.servlet-api:3.0.1",
                    'javax.servlet.jsp:jsp-api:2.1'

    compile project(":spring-security-config"),
            project(":spring-security-samples-messages-jc"),
            project(":spring-security-core"),
            project(":spring-security-web"),
            "org.springframework:spring-webmvc:$springVersion",
            "org.springframework:spring-jdbc:$springVersion",
            "org.slf4j:slf4j-api:$slf4jVersion",
            "org.slf4j:log4j-over-slf4j:$slf4jVersion",
            "org.slf4j:jul-to-slf4j:$slf4jVersion",
            "org.slf4j:jcl-over-slf4j:$slf4jVersion",
            "javax.servlet:jstl:1.2",
            "javax.validation:validation-api:1.0.0.GA",
            "org.hibernate:hibernate-validator:4.2.0.Final"

    runtime "opensymphony:sitemesh:2.4.2",
            'cglib:cglib-nodep:2.2.2',
            'ch.qos.logback:logback-classic:0.9.30'
}apply from: WAR_SAMPLE_GRADLE

dependencies {

    providedCompile "javax.servlet:javax.servlet-api:3.0.1",
                    'javax.servlet.jsp:jsp-api:2.1'

    compile project(":spring-security-config"),
            project(":spring-security-samples-messages-jc"),
            project(":spring-security-core"),
            project(":spring-security-web"),
            "org.springframework:spring-webmvc:$springVersion",
            "org.springframework:spring-jdbc:$springVersion",
            "org.slf4j:slf4j-api:$slf4jVersion",
            "org.slf4j:log4j-over-slf4j:$slf4jVersion",
            "org.slf4j:jul-to-slf4j:$slf4jVersion",
            "org.slf4j:jcl-over-slf4j:$slf4jVersion",
            "javax.servlet:jstl:1.2",
            "javax.validation:validation-api:1.0.0.GA",
            "org.hibernate:hibernate-validator:4.2.0.Final",
            "com.fasterxml.jackson.core:jackson-databind:2.2.1"

    runtime "opensymphony:sitemesh:2.4.2",
            'cglib:cglib-nodep:2.2.2',
            'ch.qos.logback:logback-classic:0.9.30'
}apply from: WAR_SAMPLE_GRADLE

dependencies {

    providedCompile "javax.servlet:javax.servlet-api:3.0.1",
                    'javax.servlet.jsp:jsp-api:2.1'

    compile project(":spring-security-config"),
            project(":spring-security-samples-messages-jc"),
            project(":spring-security-core"),
            project(":spring-security-web"),
            "org.springframework:spring-webmvc:$springVersion",
            "org.springframework:spring-jdbc:$springVersion",
            "org.slf4j:slf4j-api:$slf4jVersion",
            "org.slf4j:log4j-over-slf4j:$slf4jVersion",
            "org.slf4j:jul-to-slf4j:$slf4jVersion",
            "org.slf4j:jcl-over-slf4j:$slf4jVersion",
            "javax.servlet:jstl:1.2",
            "javax.validation:validation-api:1.0.0.GA",
            "org.hibernate:hibernate-validator:4.2.0.Final"

    runtime "opensymphony:sitemesh:2.4.2",
            'cglib:cglib-nodep:2.2.2',
            'ch.qos.logback:logback-classic:0.9.30'
}apply from: WAR_SAMPLE_GRADLE

dependencies {

    providedCompile "javax.servlet:javax.servlet-api:3.0.1",
                    'javax.servlet.jsp:jsp-api:2.1'

    compile project(":spring-security-config"),
            project(":spring-security-web"),
            "javax.servlet:jstl:1.2",
            "org.slf4j:jcl-over-slf4j:$slf4jVersion"

    runtime "ch.qos.logback:logback-classic:$logbackVersion"
}apply from: WAR_SAMPLE_GRADLE

dependencies {

    providedCompile "javax.servlet:javax.servlet-api:3.0.1",
                    'javax.servlet.jsp:jsp-api:2.1'

    compile project(":spring-security-config"),
            project(":spring-security-samples-messages-jc"),
            project(":spring-security-core"),
            project(":spring-security-web"),
            "org.springframework:spring-webmvc:$springVersion",
            "org.springframework:spring-jdbc:$springVersion",
            "org.slf4j:slf4j-api:$slf4jVersion",
            "org.slf4j:log4j-over-slf4j:$slf4jVersion",
            "org.slf4j:jul-to-slf4j:$slf4jVersion",
            "org.slf4j:jcl-over-slf4j:$slf4jVersion",
            "javax.servlet:jstl:1.2",
            "javax.validation:validation-api:1.0.0.GA",
            "org.hibernate:hibernate-validator:4.2.0.Final"

    runtime "opensymphony:sitemesh:2.4.2",
            'cglib:cglib-nodep:2.2.2',
            'ch.qos.logback:logback-classic:0.9.30'
}apply from: WAR_SAMPLE_GRADLE

dependencies {

    providedCompile "javax.servlet:javax.servlet-api:3.0.1",
                    'javax.servlet.jsp:jsp-api:2.1'

    compile "javax.servlet:jstl:1.2",
            "org.slf4j:jcl-over-slf4j:$slf4jVersion"

    runtime "ch.qos.logback:logback-classic:$logbackVersion"
}apply from: WAR_SAMPLE_GRADLE

dependencies {

    providedCompile "javax.servlet:javax.servlet-api:3.0.1",
                    'javax.servlet.jsp:jsp-api:2.1'

    compile project(":spring-security-samples-messages-jc"),
            "org.springframework:spring-webmvc:$springVersion",
            "org.springframework:spring-jdbc:$springVersion",
            "org.slf4j:slf4j-api:$slf4jVersion",
            "org.slf4j:log4j-over-slf4j:$slf4jVersion",
            "org.slf4j:jul-to-slf4j:$slf4jVersion",
            "org.slf4j:jcl-over-slf4j:$slf4jVersion",
            "javax.servlet:jstl:1.2",
            "javax.validation:validation-api:1.0.0.GA",
            "org.hibernate:hibernate-validator:4.2.0.Final"

    runtime "opensymphony:sitemesh:2.4.2",
            'cglib:cglib-nodep:2.2.2',
            'ch.qos.logback:logback-classic:0.9.30'
}apply from: WAR_SAMPLE_GRADLE

dependencies {

    providedCompile "javax.servlet:javax.servlet-api:3.0.1",
                    'javax.servlet.jsp:jsp-api:2.1'

    compile project(":spring-security-config"),
            project(":spring-security-samples-messages-jc"),
            project(":spring-security-core"),
            project(":spring-security-web"),
            "org.springframework:spring-webmvc:$springVersion",
            "org.springframework:spring-jdbc:$springVersion",
            "org.slf4j:slf4j-api:$slf4jVersion",
            "org.slf4j:log4j-over-slf4j:$slf4jVersion",
            "org.slf4j:jul-to-slf4j:$slf4jVersion",
            "org.slf4j:jcl-over-slf4j:$slf4jVersion",
            "javax.servlet:jstl:1.2",
            "javax.validation:validation-api:1.0.0.GA",
            "org.hibernate:hibernate-validator:4.2.0.Final"

    runtime "opensymphony:sitemesh:2.4.2",
            'cglib:cglib-nodep:2.2.2',
            'ch.qos.logback:logback-classic:0.9.30'
}
apply from: WAR_SAMPLE_GRADLE

dependencies {

    providedCompile "javax.servlet:javax.servlet-api:3.0.1",
                    'javax.servlet.jsp:jsp-api:2.1'

    compile project(":spring-security-ldap"),
            apacheds_libs,
            project(":spring-security-config"),
            project(":spring-security-samples-messages-jc"),
            project(":spring-security-core"),
            project(":spring-security-web"),
            "org.springframework:spring-webmvc:$springVersion",
            "org.springframework:spring-jdbc:$springVersion",
            "org.slf4j:slf4j-api:$slf4jVersion",
            "org.slf4j:log4j-over-slf4j:$slf4jVersion",
            "org.slf4j:jul-to-slf4j:$slf4jVersion",
            "org.slf4j:jcl-over-slf4j:$slf4jVersion",
            "javax.servlet:jstl:1.2",
            "javax.validation:validation-api:1.0.0.GA",
            "org.hibernate:hibernate-validator:4.2.0.Final"

    runtime "opensymphony:sitemesh:2.4.2",
            'cglib:cglib-nodep:2.2.2',
            'ch.qos.logback:logback-classic:0.9.30'
}sonarRunner.skipProject = true

dependencies {
    provided "javax.servlet:javax.servlet-api:3.0.1"


    compile project(":spring-security-web"),
            project(":spring-security-config"),
            "org.hibernate.javax.persistence:hibernate-jpa-2.0-api:1.0.0.Final",
            "org.hsqldb:hsqldb:2.2.8",
            "javax.validation:validation-api:1.0.0.GA",
            "org.hibernate:hibernate-validator:4.2.0.Final",
            "org.springframework:spring-webmvc:$springVersion",
            "org.springframework:spring-orm:$springVersion",
            "org.springframework:spring-context:$springVersion",
            "org.springframework:spring-aop:$springVersion",
            "org.springframework:spring-tx:$springVersion",
            "org.springframework:spring-beans:$springVersion",
            "org.springframework:spring-instrument:$springVersion",
            "org.springframework:spring-core:$springVersion",
            "org.springframework:spring-aspects:$springVersion",
            "org.thymeleaf:thymeleaf-spring3:$thymeleafVersion",
            "org.thymeleaf.extras:thymeleaf-extras-tiles2:2.1.0.RELEASE"
      compile('org.hibernate:hibernate-entitymanager:3.6.10.Final') {
            exclude group:'javassist', module: 'javassist'
      }
      compile('org.springframework.data:spring-data-jpa:1.3.4.RELEASE') {
            exclude group:'org.aspectj', module:'aspectjrt'
      }
}
apply from: WAR_SAMPLE_GRADLE

dependencies {

    providedCompile "javax.servlet:javax.servlet-api:3.0.1",
                    'javax.servlet.jsp:jsp-api:2.1'

    compile project(":spring-security-config"),
            project(":spring-security-openid"),
            project(":spring-security-samples-messages-jc"),
            project(":spring-security-core"),
            project(":spring-security-web"),
            "org.springframework:spring-webmvc:$springVersion",
            "org.springframework:spring-jdbc:$springVersion",
            "org.slf4j:slf4j-api:$slf4jVersion",
            "org.slf4j:log4j-over-slf4j:$slf4jVersion",
            "org.slf4j:jul-to-slf4j:$slf4jVersion",
            "org.slf4j:jcl-over-slf4j:$slf4jVersion",
            "javax.servlet:jstl:1.2",
            "javax.validation:validation-api:1.0.0.GA",
            "org.hibernate:hibernate-validator:4.2.0.Final"

    runtime "opensymphony:sitemesh:2.4.2",
            'cglib:cglib-nodep:2.2.2',
            'ch.qos.logback:logback-classic:0.9.30',
            "net.sourceforge.nekohtml:nekohtml:1.9.10"
}apply from: WAR_SAMPLE_GRADLE

dependencies {

    providedCompile "javax.servlet:javax.servlet-api:3.0.1",
                    'javax.servlet.jsp:jsp-api:2.1'

    compile project(":spring-security-config"),
            project(":spring-security-samples-messages-jc"),
            project(":spring-security-core"),
            project(":spring-security-web"),
            "org.springframework:spring-webmvc:$springVersion",
            "org.springframework:spring-jdbc:$springVersion",
            "org.slf4j:slf4j-api:$slf4jVersion",
            "org.slf4j:log4j-over-slf4j:$slf4jVersion",
            "org.slf4j:jul-to-slf4j:$slf4jVersion",
            "org.slf4j:jcl-over-slf4j:$slf4jVersion",
            "javax.servlet:jstl:1.2",
            "javax.validation:validation-api:1.0.0.GA",
            "org.hibernate:hibernate-validator:4.2.0.Final"

    runtime "opensymphony:sitemesh:2.4.2",
            'cglib:cglib-nodep:2.2.2',
            'ch.qos.logback:logback-classic:0.9.30'
}
apply from: WAR_SAMPLE_GRADLE

dependencies {

    providedCompile "javax.servlet:javax.servlet-api:3.0.1",
                    'javax.servlet.jsp:jsp-api:2.1'

    compile project(":spring-security-config"),
            project(":spring-security-samples-messages-jc"),
            project(":spring-security-core"),
            project(":spring-security-web"),
            "org.springframework:spring-webmvc:$springVersion",
            "org.springframework:spring-jdbc:$springVersion",
            "org.slf4j:slf4j-api:$slf4jVersion",
            "org.slf4j:log4j-over-slf4j:$slf4jVersion",
            "org.slf4j:jul-to-slf4j:$slf4jVersion",
            "org.slf4j:jcl-over-slf4j:$slf4jVersion",
            "javax.servlet:jstl:1.2",
            "javax.validation:validation-api:1.0.0.GA",
            "org.hibernate:hibernate-validator:4.2.0.Final"

    runtime "opensymphony:sitemesh:2.4.2",
            'cglib:cglib-nodep:2.2.2',
            'ch.qos.logback:logback-classic:0.9.30'
}
apply from: WAR_SAMPLE_GRADLE


dependencies {

    providedCompile "javax.servlet:javax.servlet-api:3.0.1",
                    'javax.servlet.jsp:jsp-api:2.1'

    compile project(":spring-security-config"),
            project(":spring-security-samples-messages-jc"),
            project(":spring-security-core"),
            project(":spring-security-web"),
            "org.springframework:spring-webmvc:$springVersion",
            "org.springframework:spring-jdbc:$springVersion",
            "org.slf4j:slf4j-api:$slf4jVersion",
            "org.slf4j:log4j-over-slf4j:$slf4jVersion",
            "org.slf4j:jul-to-slf4j:$slf4jVersion",
            "org.slf4j:jcl-over-slf4j:$slf4jVersion",
            "javax.servlet:jstl:1.2",
            "javax.validation:validation-api:1.0.0.GA",
            "org.hibernate:hibernate-validator:4.2.0.Final"

    runtime "opensymphony:sitemesh:2.4.2",
            'cglib:cglib-nodep:2.2.2',
            'ch.qos.logback:logback-classic:0.9.30'
}apply: 'war'
apply: 'jetty'
//apply: 'project-reports'

version = '3.1.0.CI-SNAPSHOT'
springVersion = '3.0.1.RELEASE'
targetCompatibility = '1.5'
sourceCompatibility = '1.5'

repositories {
    mavenRepo name:'Local', urls: "file://" + System.properties['user.home'] + "/.m2/repository"
}

dependencies {
    compile 'aopalliance:aopalliance:1.0',
            "org.springframework.security:spring-security-core:$version",
            "org.springframework.security:spring-security-web:$version",
            "org.springframework:spring-beans:$springVersion",
            "org.springframework:spring-core:$springVersion",
            "org.springframework:spring-context:$springVersion",
            "org.springframework:spring-tx:$springVersion",
            "org.springframework:spring-web:$springVersion",
            "org.springframework:spring-webmvc:$springVersion",
            'org.aspectj:aspectjrt:1.6.8',
            'org.hibernate:ejb3-persistence:1.0.2.GA',
            'javax.persistence:persistence-api:1.0',
            'org.slf4j:jcl-over-slf4j:1.5.11'

    providedCompile "javax.servlet:javax.servlet-api:$servletApiVersion"

    runtime 'org.hibernate:hibernate-entitymanager:3.4.0.GA',
            "org.springframework:spring-context-support:$springVersion",
            "org.springframework.security:spring-security-ldap:$version",
            "org.springframework.security:spring-security-config:$version",
            "org.springframework.security:spring-security-taglibs:$version",
            "org.springframework:spring-orm:$springVersion",
            'org.apache.directory.server:apacheds-core:1.5.5',
            'org.apache.directory.server:apacheds-server-jndi:1.5.5',
            'org.freemarker:freemarker:2.3.16',
            "org.hsqldb:hsqldb:1.8.0.10",
            'org.slf4j:slf4j-log4j12:1.5.11',
            'log4j:log4j:1.2.14'
}
