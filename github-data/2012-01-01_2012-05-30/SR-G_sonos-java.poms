<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.tensin.sonos</groupId>
		<artifactId>sonos-root</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>

	<groupId>org.tensin.sonos</groupId>
	<artifactId>sonos-java</artifactId>
	<version>1.0.0-SNAPSHOT</version>

	<description>SONOS : Module Java</description>
	<name>sonos-java</name>
	<packaging>jar</packaging>

	<build>
		<sourceDirectory>src/main/java</sourceDirectory>
		<resources>
			<resource>
				<directory>src/main/java</directory>
			</resource>
			<resource>
				<directory>src/main/run</directory>
			</resource>
			<resource>
				<directory>src/main/tools</directory>
			</resource>
		</resources>
		<testSourceDirectory>src/test/java</testSourceDirectory>
		<testResources>
			<testResource>
				<directory>src/main/java</directory>
			</testResource>
			<testResource>
				<directory>src/test/java</directory>
			</testResource>
		</testResources>

		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptors>
						<descriptor>
							src/build/distrib.xml
						</descriptor>
					</descriptors>
					<!-- <outputDirectory> -->
					<!-- target/zip-ressources -->
					<!-- </outputDirectory> -->
					<attach>false</attach>
					<!-- <runOnlyAtExecutionRoot>true</runOnlyAtExecutionRoot> -->
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifestEntries>
							<Main-Class>org.tensin.sonos.run.Sonos</Main-Class>
						</manifestEntries>
					</archive>
					<excludes>
						<exclude>**/*.java</exclude>
					</excludes>
				</configuration>
			</plugin>


		</plugins>

	</build>

	<dependencies>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>
		<dependency>
			<groupId>org.simpleframework</groupId>
			<artifactId>simple-xml</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.beust</groupId>
			<artifactId>jcommander</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jdom</groupId>
			<artifactId>jdom</artifactId>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
		</dependency>
		<dependency>
			<groupId>org.teleal.cling</groupId>
			<artifactId>cling-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-queries</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-memory</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-analyzers</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-highlighter</artifactId>
		</dependency>
	</dependencies>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.tensin.sonos</groupId>
	<artifactId>sonos-root</artifactId>
	<version>1.0.0-SNAPSHOT</version>

	<description>SONOS : Module root</description>
	<name>sonos-root</name>
	<packaging>pom</packaging>

	<properties>
		<sourceEncoding>UTF-8</sourceEncoding>
		
		<version.jetty>8.1.8.v20121106</version.jetty>
		<version.slf4j>1.7.2</version.slf4j>
		<version.logback>1.0.9</version.logback>
		<version.junit>4.11</version.junit>
		<version.guava>13.0.1</version.guava>
		<version.simplexml>2.7</version.simplexml>
		<version.jcommander>1.30</version.jcommander>
		<version.lucene>3.6.2</version.lucene>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.3</version>
				<executions>
					<execution>
						<id>add-source</id>
						<!-- <phase>process-resources</phase> -->
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/main/run</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.keyboardsamurais.maven</groupId>
				<artifactId>maven-timestamp-plugin</artifactId>
				<version>1.0</version>
				<configuration>
					<propertyName>timestamp</propertyName>
					<timestampPattern>yyyy-MM-dd HH:mm</timestampPattern>
				</configuration>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Extension-Name>${project.name}</Extension-Name>
							<Specification-Title>${project.description}</Specification-Title>
							<Specification-Vendor>Tensin</Specification-Vendor>
							<Implementation-Vendor>Tensin</Implementation-Vendor>
							<Implementation-Title>${project.name}</Implementation-Title>
							<Implementation-Version>${project.version}</Implementation-Version>
							<Build-Date>${timestamp}</Build-Date>
						</manifestEntries>
					</archive>
					<excludes>
						<exclude>**/*.java</exclude>
					</excludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<configuration>
					<includeScope>compile</includeScope>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<outputDirectory>bin</outputDirectory>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>false</downloadJavadocs> <!-- Car le plugin n'utilise pas M2_REPO pour les javadocs ! http://jira.codehaus.org/browse/MECLIPSE-583 -->
					<additionalConfig>
						<file>
							<name>.settings/org.eclipse.jdt.core.prefs</name>
							<location>settings/org.eclipse.jdt.core.prefs</location>
						</file>
						<file>
							<name>.settings/org.eclipse.jdt.ui.prefs</name>
							<location>settings/org.eclipse.jdt.ui.prefs</location>
						</file>
					</additionalConfig>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>com.inetpsa.pyr00</groupId>
						<artifactId>pyr-eclipse-configuration</artifactId>
						<version>1.0.0</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>

	<modules>
		<module>../sonos-java</module>
		<module>../sonos-web</module>
	</modules>

	<profiles>
		<profile>
			<id>dependencyList</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<configuration>
							<outputFile>target/maven-dependencies.txt</outputFile>
							<outputType>txt</outputType>
						</configuration>
						<!-- Inutilisable avec une phase : il faut que les fichiers soient 
							créés sur disque *avant* compilation du premier module (ltp-start) ... impossible 
							avec maven, donc exécution obligatoire manuelle de "dependency:list" en goal 
							sur la commande mvn : mvn dependency:list install pour créer les jars et 
							avoir le start à jour -->
						<!-- <executions> <execution> <phase>validate</phase> <configuration> 
							<outputFile>target/maven_dependencies.txt</outputFile> <outputType>txt</outputType> 
							</configuration> <goals> <goal>list</goal> </goals> </execution> </executions> -->
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>commons-collections</groupId>
				<artifactId>commons-collections</artifactId>
				<version>3.2.1</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.1</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.4</version>
			</dependency>
			<dependency>
				<groupId>org.tensin.sonos</groupId>
				<artifactId>sonos-java</artifactId>
				<version>1.0.0-SNAPSHOT</version>
			</dependency>

			<dependency>
				<groupId>org.simpleframework</groupId>
				<artifactId>simple-xml</artifactId>
				<version>${version.simplexml}</version>
				<exclusions>
					<exclusion>
						<groupId>stax</groupId>
						<artifactId>stax-api</artifactId>
					</exclusion>
					<exclusion>
						<groupId>stax</groupId>
						<artifactId>stax</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${version.slf4j}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${version.slf4j}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>log4j-over-slf4j</artifactId>
				<version>${version.slf4j}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jul-to-slf4j</artifactId>
				<version>${version.slf4j}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${version.logback}</version>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${version.junit}</version>
				<scope>test</scope>
				<optional>true</optional>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>1.9.5</version>
				<optional>true</optional>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${version.guava}</version>
			</dependency>
			<dependency>
				<groupId>com.beust</groupId>
				<artifactId>jcommander</artifactId>
				<version>${version.jcommander}</version>
			</dependency>
			<dependency>
				<groupId>org.jdom</groupId>
				<artifactId>jdom</artifactId>
				<version>2.0.2</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-server</artifactId>
				<version>${version.jetty}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-util</artifactId>
				<version>${version.jetty}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-webapp</artifactId>
				<version>${version.jetty}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-servlet</artifactId>
				<version>${version.jetty}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-rewrite</artifactId>
				<version>${version.jetty}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-websocket</artifactId>
				<version>${version.jetty}</version>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>3.0.1</version>
			</dependency>
			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>2.1</version>
			</dependency>
			<dependency>
				<groupId>org.teleal.cling</groupId>
				<artifactId>cling-core</artifactId>
				<version>1.0.5</version>
				<exclusions>
					<exclusion>
						<groupId>com.sun</groupId>
						<artifactId>tools</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-core</artifactId>
				<version>${version.lucene}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-queries</artifactId>
				<version>${version.lucene}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-memory</artifactId>
				<version>${version.lucene}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-analyzers</artifactId>
				<version>${version.lucene}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-highlighter</artifactId>
				<version>${version.lucene}</version>
			</dependency>

		</dependencies>
	</dependencyManagement>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<repositories>
		<repository>
			<id>vaadin-addons</id>
			<url>http://maven.vaadin.com/vaadin-addons</url>
		</repository>
	</repositories>

	<parent>
		<groupId>org.tensin.sonos</groupId>
		<artifactId>sonos-root</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>

	<groupId>org.tensin.sonos</groupId>
	<artifactId>sonos-web</artifactId>
	<version>1.0.0-SNAPSHOT</version>

	<description>SONOS : Module Web</description>
	<name>sonos-web</name>
	<packaging>jar</packaging>

	<build>
		<sourceDirectory>src/main/java</sourceDirectory>
		<resources>
			<resource>
				<directory>src/main/java</directory>
			</resource>
			<resource>
				<directory>src/main/run</directory>
			</resource>
		</resources>
		<testSourceDirectory>src/test/java</testSourceDirectory>
		<testResources>
			<testResource>
				<directory>src/main/java</directory>
			</testResource>
			<testResource>
				<directory>src/test/java</directory>
			</testResource>
		</testResources>

		<plugins>

			<!-- Compiles your custom GWT components with the GWT compiler -->
			<!-- A hosted mode browser for client-side widget debugging can be run 
				with the goal gwt:run after uncommenting the correct line below. A remote 
				debugger can then be connected to port 8998. Note that e.g. a Jetty server 
				should be running with the server side parts - use the goal jetty:run . -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>2.3.0-1</version>
				<configuration>
					<!-- if you don't specify any modules, the plugin will find them -->
					<!-- <modules> <module>${package}.gwt.MyWidgetSet</module> </modules> -->
					<!-- <webappDirectory>${project.build.directory}/${project.build.finalName}/VAADIN/widgetsets</webappDirectory> -->
					<webappDirectory>${project.build.directory}/${project.build.finalName}/VAADIN/widgetsets</webappDirectory>

					<!-- On Mac running Snow Leopard, add "-d32" -->
					<!-- This causes error messages (but build works) in phase "package": 
						two processes would use the same debug port -->
					<!--extraJvmArgs>-Xmx512M -Xss1024k -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8998</extraJvmArgs -->
					<extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
					<runTarget>${project.artifactId}</runTarget>
					<hostedWebapp>${project.build.directory}/${project.build.finalName}</hostedWebapp>
					<noServer>true</noServer>
					<compileReport>true</compileReport>
					<!-- <draftCompile>true</draftCompile> -->
					<!-- <style>PRETTY</style> -->
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>resources</goal>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>com.google.gwt</groupId>
						<artifactId>gwt-user</artifactId>
						<version>2.3.0</version>
					</dependency>
					<dependency>
						<groupId>com.google.gwt</groupId>
						<artifactId>gwt-dev</artifactId>
						<version>2.3.0</version>
					</dependency>
					<dependency>
						<groupId>com.google.gwt</groupId>
						<artifactId>gwt-servlet</artifactId>
						<version>2.3.0</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-maven-plugin</artifactId>
				<version>1.0.1</version>
				<executions>
					<execution>
						<configuration>
							<!-- if you don't specify any modules, the plugin will find them -->
							<!-- <modules> <module>${package}.gwt.MyWidgetSet</module> </modules> -->
						</configuration>
						<goals>
							<goal>update-widgetset</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>

	</build>

	<dependencies>
		<dependency>
			<groupId>org.tensin.sonos</groupId>
			<artifactId>sonos-java</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-server</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-util</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-websocket</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-webapp</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlet</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-rewrite</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>

		<dependency>
			<groupId>org.vaadin</groupId>
			<artifactId>dontpush-addon-ozonelayer</artifactId>
			<version>0.4.8</version>
			<exclusions>
				<exclusion>
					<groupId>org.atmosphere</groupId>
					<artifactId>atmosphere-compat-jetty</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin</artifactId>
			<version>6.8.0</version>
		</dependency>

		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-servlet</artifactId>
			<version>2.3.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<version>2.3.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-dev</artifactId>
			<version>2.3.0</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>
