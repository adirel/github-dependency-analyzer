<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.asynchronous_web_service_calls</groupId>
      <artifactId>asynchronous_web_service_calls</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>asynchronous_web_service_calls-client</artifactId>
   <name>${wsc.module.name}</name>
   <packaging>jar</packaging>

   <dependencies>
      <dependency>
         <groupId>org.gmazza.blog-samples.asynchronous_web_service_calls</groupId>
         <artifactId>asynchronous_web_service_calls-service</artifactId>
         <classifier>jaxws</classifier>
         <version>1.0-SNAPSHOT</version>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <!-- mvn exec:exec to run SOAP client, see blog-samples/pom.xml
              for this plugin's configuration -->
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
         </plugin>
      </plugins>
   </build>
</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza</groupId>
      <artifactId>blog-samples</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <groupId>org.gmazza.blog-samples.asynchronous_web_service_calls</groupId>
   <artifactId>asynchronous_web_service_calls</artifactId>
   <packaging>pom</packaging>
   <name>Tutorial: Making Asynchronous Web Service Calls</name>
   <url>http://www.jroller.com/gmazza/entry/asynchronous_web_service_calls</url>

   <modules>
      <module>service</module>
      <module>war</module>
      <module>client</module>
   </modules>

   <profiles>
      <profile>
         <id>CXF</id>
         <!-- To use Metro by default, move activation element to its profile below  -->
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <dependencies>
            <dependency>
               <groupId>org.apache.cxf</groupId>
               <artifactId>cxf-rt-frontend-jaxws</artifactId>
            </dependency>
            <dependency>
               <groupId>org.apache.cxf</groupId>
               <artifactId>cxf-rt-transports-http</artifactId>
            </dependency>
         </dependencies>
      </profile>

      <profile>
         <id>Metro</id>
         <dependencies>
            <dependency>
               <groupId>org.glassfish.metro</groupId>
               <artifactId>webservices-rt</artifactId>
            </dependency>
         </dependencies>
      </profile>
   </profiles>

</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.asynchronous_web_service_calls</groupId>
      <artifactId>asynchronous_web_service_calls</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>asynchronous_web_service_calls-service</artifactId>
   <name>${wsp.module.name}</name>
   <packaging>jar</packaging>

   <dependencies>
      <dependency>
         <groupId>org.apache.derby</groupId>
         <artifactId>derby</artifactId>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <configuration>
               <descriptors>
                  <descriptor>src/assembly/jaxws-jar.xml</descriptor>
               </descriptors>
            </configuration>
         </plugin>
      </plugins>
   </build>

   <profiles>
      <profile>
         <id>CXF</id>
         <!-- To use Metro, move below activation element to its profile -->
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.cxf</groupId>
                  <artifactId>cxf-codegen-plugin</artifactId>
                  <executions>
                     <execution>
                        <configuration>
                           <wsdlOptions>
                              <wsdlOption>
                                 <wsdl>
                                    ${basedir}/src/main/resources/DoubleIt.wsdl
                                 </wsdl>
                                 <wsdlLocation>classpath:DoubleIt.wsdl</wsdlLocation>
                              </wsdlOption>
                           </wsdlOptions>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>

      <profile>
         <id>Metro</id>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.jvnet.jax-ws-commons</groupId>
                  <artifactId>jaxws-maven-plugin</artifactId>
                  <executions>
                     <execution>
                        <configuration>
                           <wsdlDirectory>
                              src/main/resources
                           </wsdlDirectory>
                           <wsdlFiles>
                              <wsdlFile>DoubleIt.wsdl</wsdlFile>
                           </wsdlFiles>
                           <wsdlLocation>/*</wsdlLocation>
                           <sourceDestDir>
                              ${basedir}/target/generated-sources
                           </sourceDestDir>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>
   </profiles>
</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.asynchronous_web_service_calls</groupId>
      <artifactId>asynchronous_web_service_calls</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>asynchronous_web_service_calls-war</artifactId>
   <name>${wspwar.module.name}</name>
   <packaging>war</packaging>

   <dependencies>
      <dependency>
          <groupId>org.gmazza.blog-samples.asynchronous_web_service_calls</groupId>
          <artifactId>asynchronous_web_service_calls-service</artifactId>
          <version>1.0-SNAPSHOT</version>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.tomcat.maven</groupId>
            <artifactId>tomcat7-maven-plugin</artifactId>
         </plugin>
         <plugin>
            <artifactId>maven-war-plugin</artifactId>
            <configuration>
                <webXml>src/main/webapp/WEB-INF/web.xml</webXml>
                <webResources>
                    <resource>
                        <directory>../service/src/main/resources</directory>
                        <targetPath>WEB-INF/wsdl</targetPath>
                        <includes>
                            <include>*.wsdl</include>
                        </includes>
                    </resource>
                </webResources>
            </configuration>
         </plugin>
      </plugins>
      <!-- Name of the generated WAR file -->
      <finalName>doubleit</finalName>
   </build>

   <profiles>
      <profile>
         <id>CXF</id>
         <!-- Remove activation element below if using Metro  -->
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <dependencies>
            <dependency>
               <groupId>org.springframework</groupId>
               <artifactId>spring-web</artifactId>
            </dependency>
         </dependencies>
      </profile>
   </profiles>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.gmazza.blog-samples.cxf-soap-over-jms</groupId>
        <artifactId>cxf-soap-over-jms</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <artifactId>cxf-soap-over-jms-broker</artifactId>
    <name>-- JMS Broker</name>
    <packaging>jar</packaging>

    <dependencies>
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-core</artifactId>
            <version>5.7.0</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <configuration>
                    <executable>java</executable>
                      <arguments>
                         <argument>-classpath</argument>
                         <classpath />
                         <argument>
                             broker.Broker
                         </argument>
                      </arguments>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.gmazza.blog-samples.cxf-soap-over-jms</groupId>
        <artifactId>cxf-soap-over-jms</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <artifactId>cxf-soap-over-jms-client</artifactId>
    <name>-- SOAP Client</name>
    <packaging>jar</packaging>

    <dependencies>
        <!-- 
             Below dependency transitively brings in several other dependencies
             needed by SOAP client such as CXF's JMS transport and ActiveMQ 
             (run mvn dependency:tree from client folder for list) 
        -->
        <dependency>
            <groupId>org.gmazza.blog-samples.cxf-soap-over-jms</groupId>
            <artifactId>cxf-soap-over-jms-service</artifactId>
            <!-- Classifier below used with Maven Assembly Plugin to specify 
                subset of above artifact needed. -->
            <classifier>jaxws</classifier>
            <version>1.0-SNAPSHOT</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.gmazza</groupId>
        <artifactId>blog-samples</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <groupId>org.gmazza.blog-samples.cxf-soap-over-jms</groupId>
    <artifactId>cxf-soap-over-jms</artifactId>
    <name>Tutorial: Sending SOAP messages over JMS</name>
    <packaging>pom</packaging>
    <url>http://www.jroller.com/gmazza/entry/cxf_soap_over_jms</url>

    <modules>
        <module>broker</module>
        <module>service</module>
        <module>war</module>
        <module>client</module>
    </modules>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.gmazza.blog-samples.cxf-soap-over-jms</groupId>
        <artifactId>cxf-soap-over-jms</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <artifactId>cxf-soap-over-jms-service</artifactId>
    <name>-- Web Service Provider</name>
    <packaging>jar</packaging>

    <dependencies>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-frontend-jaxws</artifactId>
            <version>${cxf.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-transports-jms</artifactId>
            <version>${cxf.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-core</artifactId>
            <version>5.7.0</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- 
                 Create a separate JAR for JAX-WS artifacts that the 
                 SOAP client pom.xml brings in as a dependency.
                 More info: http://maven.apache.org/plugins/maven-assembly-plugin/ 
            -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptors>
                        <descriptor>src/assembly/jaxws-jar.xml</descriptor>
                    </descriptors>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-codegen-plugin</artifactId>
                <configuration>
                    <sourceRoot>
                        ${basedir}/target/generated-sources
                    </sourceRoot>
                    <wsdlOptions>
                        <wsdlOption>
                            <wsdl>
                                ${basedir}/src/main/resources/DoubleIt.wsdl
                            </wsdl>
                            <wsdlLocation>classpath:DoubleIt.wsdl</wsdlLocation>
                        </wsdlOption>
                    </wsdlOptions>
                </configuration>
            </plugin>
        </plugins>
        <!-- Name of the generated WAR file -->
        <finalName>doubleit</finalName>
    </build>

</project>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.gmazza.blog-samples.cxf-soap-over-jms</groupId>
        <artifactId>cxf-soap-over-jms</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <artifactId>cxf-soap-over-jms-war</artifactId>
    <name>-- Service WAR file</name>
    <packaging>war</packaging>

    <!-- Even though web service endpoint hosted on Tomcat, no SOAP http traffic
         occurs, all requests and responses through JMS broker.  See CXF's
         jms_spec_demo sample for a web service hosted standalone with no
         Tomcat.
     -->
    <dependencies>
        <dependency>
            <groupId>org.gmazza.blog-samples.cxf-soap-over-jms</groupId>
            <artifactId>cxf-soap-over-jms-service</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>3.0.6.RELEASE</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <webXml>src/main/webapp/WEB-INF/web.xml</webXml>
                    <webResources>
                        <resource>
                            <directory>../service/src/main/resources</directory>
                            <targetPath>WEB-INF/wsdl</targetPath>
                            <includes>
                                <include>*.wsdl</include>
                            </includes>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
        </plugins>
        <!-- Name of the generated WAR file -->
        <finalName>doubleit</finalName>
    </build>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.gmazza.blog-samples.cxf-sts-tutorial</groupId>
        <artifactId>cxf-sts-tutorial</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <artifactId>cxf-sts-tutorial-client</artifactId>
    <name>${wsc.module.name}</name>
    <packaging>jar</packaging>

    <dependencies>
        <dependency>
            <groupId>org.gmazza.blog-samples.cxf-sts-tutorial</groupId>
            <artifactId>cxf-sts-tutorial-service</artifactId>
            <!-- Classifier below used with Maven Assembly Plugin to 
                 specify subset of above artifact needed. 
            -->
            <classifier>jaxws</classifier>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
        </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
         </plugin>
      </plugins>
   </build>
</project>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.gmazza</groupId>
        <artifactId>blog-samples</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <groupId>org.gmazza.blog-samples.cxf-sts-tutorial</groupId>
    <artifactId>cxf-sts-tutorial</artifactId>
    <packaging>pom</packaging>
    <name>Tutorial: CXF Security Token Service (STS)</name>
    <description>
        This sample shows a WS-Trust scenario of a web service client (WSC) authenticating
        to a CXF Security Token Service (STS) to obtain a security token to use in 
        subsequently making a call against a web service provider (WSP).
    </description>
    <url>http://www.jroller.com/gmazza/entry/cxf_sts_tutorial</url>

    <modules>
        <module>service</module>
        <module>war</module>
        <module>client</module>
        <module>sts-war</module>
    </modules>

    <dependencies>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-frontend-jaxws</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-transports-http</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-ws-security</artifactId>
        </dependency>
    </dependencies>

</project>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.gmazza.blog-samples.cxf-sts-tutorial</groupId>
        <artifactId>cxf-sts-tutorial</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <packaging>jar</packaging>
    <artifactId>cxf-sts-tutorial-service</artifactId>
    <name>${wsp.module.name}</name>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptors>
                        <descriptor>src/assembly/jaxws-jar.xml</descriptor>
                    </descriptors>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-codegen-plugin</artifactId>
                <executions>
                    <execution>
                        <configuration>
                            <sourceRoot>
                                ${basedir}/target/generated-sources
                            </sourceRoot>
                            <wsdlOptions>
                                <wsdlOption>
                                    <wsdl>
                                        ${basedir}/src/main/resources/DoubleIt.wsdl
                                    </wsdl>
                                    <wsdlLocation>classpath:DoubleIt.wsdl</wsdlLocation>
                                </wsdlOption>
                            </wsdlOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <!-- Name of the generated WAR file -->
        <finalName>doubleit</finalName>
    </build>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.gmazza.blog-samples.cxf-sts-tutorial</groupId>
        <artifactId>cxf-sts-tutorial</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <artifactId>cxf-sts-tutorial-stswar</artifactId>
    <name>${stswar.module.name}</name>
    <packaging>war</packaging>

    <dependencies>
        <dependency>
            <groupId>org.apache.cxf.services.sts</groupId>
            <artifactId>cxf-services-sts-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-ws-mex</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
            </plugin>
        </plugins>
        <!-- Name of the generated WAR file -->
        <finalName>DoubleItSTS</finalName>
    </build>
</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.cxf-sts-tutorial</groupId>
      <artifactId>cxf-sts-tutorial</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>cxf-sts-tutorial-war</artifactId>
   <name>${wspwar.module.name}</name>
   <packaging>war</packaging>

   <dependencies>
      <dependency>
         <groupId>org.gmazza.blog-samples.cxf-sts-tutorial</groupId>
         <artifactId>cxf-sts-tutorial-service</artifactId>
         <version>1.0-SNAPSHOT</version>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-web</artifactId>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.tomcat.maven</groupId>
            <artifactId>tomcat7-maven-plugin</artifactId>
         </plugin>
         <plugin>
            <artifactId>maven-war-plugin</artifactId>
            <configuration>
               <webXml>src/main/webapp/WEB-INF/web.xml</webXml>
               <webResources>
                  <resource>
                     <directory>../service/src/main/resources</directory>
                     <targetPath>WEB-INF/wsdl</targetPath>
                     <includes>
                        <include>*.wsdl</include>
                     </includes>
                  </resource>
               </webResources>
            </configuration>
         </plugin>
      </plugins>
      <!-- Name of the generated WAR file -->
      <finalName>doubleit</finalName>
  </build>

</project>

<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.gmazza.blog-samples.cxf-usernametoken-profile</groupId>
        <artifactId>cxf-usernametoken-profile</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <artifactId>cxf-usernametoken-profile-client</artifactId>
    <name>${wsc.module.name}</name>
    <packaging>jar</packaging>

    <dependencies>
        <dependency>
            <groupId>org.gmazza.blog-samples.cxf-usernametoken-profile</groupId>
            <artifactId>cxf-usernametoken-profile-service</artifactId>
            <!-- Classifier below used with Maven Assembly Plugin to specify 
                subset of above artifact needed. -->
            <classifier>jaxws</classifier>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
    </dependencies>

    <!-- mvn exec:exec to run SOAP client, see blog-samples/pom.xml
         for this plugin's configuration -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.gmazza</groupId>
        <artifactId>blog-samples</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <groupId>org.gmazza.blog-samples.cxf-usernametoken-profile</groupId>
    <artifactId>cxf-usernametoken-profile</artifactId>
    <packaging>pom</packaging>
    <name>Tutorial: CXF w/UsernameToken Security</name>
    <description>
        This sample provides a CXF web service provider and SOAP client using UsernameToken 
        profile defined via WS-SecurityPolicy for security.  Follow modifications as  
        given in blog entry below for non-WS-SecurityPolicy (WSS4J interceptor) method.
    </description>
    <url>http://www.jroller.com/gmazza/entry/cxf_usernametoken_profile</url>  

    <modules>
        <module>service</module>
        <module>war</module>
        <module>client</module>
    </modules>

    <dependencies>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-frontend-jaxws</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-transports-http</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-ws-security</artifactId>
        </dependency>
    </dependencies>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.gmazza.blog-samples.cxf-usernametoken-profile</groupId>
        <artifactId>cxf-usernametoken-profile</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <artifactId>cxf-usernametoken-profile-service</artifactId>
    <name>${wsp.module.name}</name>
    <packaging>jar</packaging>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptors>
                        <descriptor>src/assembly/jaxws-jar.xml</descriptor>
                    </descriptors>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-codegen-plugin</artifactId>
                <executions>
                    <execution>
                        <configuration>
                            <sourceRoot>
                                ${basedir}/target/generated-sources
                            </sourceRoot>
                            <wsdlOptions>
                                <wsdlOption>
                                    <wsdl>
                                        ${basedir}/src/main/resources/DoubleIt.wsdl
                                    </wsdl>
                                    <wsdlLocation>classpath:DoubleIt.wsdl</wsdlLocation>
                                </wsdlOption>
                            </wsdlOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <!-- Name of the generated WAR file -->
        <finalName>doubleit</finalName>
    </build>

</project>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.gmazza.blog-samples.cxf-usernametoken-profile</groupId>
        <artifactId>cxf-usernametoken-profile</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <artifactId>cxf-usernametoken-profile-war</artifactId>
    <name>${wspwar.module.name}</name>
    <packaging>war</packaging>

    <dependencies>
        <dependency>
            <groupId>org.gmazza.blog-samples.cxf-usernametoken-profile</groupId>
            <artifactId>cxf-usernametoken-profile-service</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
           <groupId>org.springframework</groupId>
           <artifactId>spring-web</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <webXml>src/main/webapp/WEB-INF/web.xml</webXml>
                    <webResources>
                        <resource>
                            <directory>../service/src/main/resources</directory>
                            <targetPath>WEB-INF/wsdl</targetPath>
                            <includes>
                                <include>*.wsdl</include>
                            </includes>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
        </plugins>
        <!-- Name of the generated WAR file -->
        <finalName>doubleit</finalName>
    </build>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.gmazza.blog-samples.cxf-ut-messagelayer</groupId>
        <artifactId>cxf-ut-messagelayer</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <artifactId>cxf-ut-messagelayer-client</artifactId>
    <name>${wsc.module.name}</name>
    <packaging>jar</packaging>

    <dependencies>
        <dependency>
            <groupId>org.gmazza.blog-samples.cxf-ut-messagelayer</groupId>
            <artifactId>cxf-ut-messagelayer-service</artifactId>
            <!-- Classifier below used with Maven Assembly Plugin to specify 
                subset of above artifact needed. -->
            <classifier>jaxws</classifier>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
    </dependencies>

    <!-- mvn exec:exec to run SOAP client, see blog-samples/pom.xml
         for this plugin's configuration -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza</groupId>
      <artifactId>blog-samples</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <groupId>org.gmazza.blog-samples.cxf-ut-messagelayer</groupId>
   <artifactId>cxf-ut-messagelayer</artifactId>
   <name>Tutorial: UsernameToken w/Message-Layer encryption (CXF)</name>
   <description>
       This sample provides a CXF web service provider and SOAP client using X.509
       token profile security via either WSDL WS-SecurityPolicy statements, or (with
       minor modifications as described in the blog entry below) CXF interceptors
       that do not use any WSDL Policy statements.
   </description>
   <url>http://www.jroller.com/gmazza/entry/usernametoken_messagelayer_encryption</url>

   <packaging>pom</packaging>

   <modules>
      <module>service</module>
      <module>war</module>
      <module>client</module>
   </modules>

   <dependencies>
      <dependency>
         <groupId>org.apache.cxf</groupId>
         <artifactId>cxf-rt-frontend-jaxws</artifactId>
         <!-- If you want the WS-Policy statements in the
              WSDL to be ignored, uncomment the below to
              exclude the policy dependency.

              This obviously is not the case with the WS-SecPol
              approach, but also does not need to be done here for
              the CXF interceptor method either, because we're 
              using a different WSDL in that case which does
              not have Policy statements within it.
         -->
         <!--exclusions>
            <exclusion>
              <groupId>org.apache.cxf</groupId>
              <artifactId>cxf-rt-ws-policy</artifactId>
            </exclusion>
         </exclusions-->
      </dependency>
      <dependency>
         <groupId>org.apache.cxf</groupId>
         <artifactId>cxf-rt-transports-http</artifactId>
      </dependency>
      <dependency>
         <groupId>org.apache.cxf</groupId>
         <artifactId>cxf-rt-ws-security</artifactId>
      </dependency>
   </dependencies>

</project>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.gmazza.blog-samples.cxf-ut-messagelayer</groupId>
        <artifactId>cxf-ut-messagelayer</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <artifactId>cxf-ut-messagelayer-service</artifactId>
    <name>${wsp.module.name}</name>
    <packaging>jar</packaging>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptors>
                        <descriptor>src/assembly/jaxws-jar.xml</descriptor>
                    </descriptors>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-codegen-plugin</artifactId>
                <executions>
                    <execution>
                        <configuration>
                            <sourceRoot>
                                ${basedir}/target/generated-sources
                            </sourceRoot>
                            <wsdlOptions>
                                <wsdlOption>
                                    <wsdl>
                                        ${basedir}/src/main/resources/DoubleIt.wsdl
                                    </wsdl>
                                    <wsdlLocation>classpath:DoubleIt.wsdl</wsdlLocation>
                                </wsdlOption>
                            </wsdlOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <!-- Name of the generated WAR file -->
        <finalName>doubleit</finalName>
    </build>

</project>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.gmazza.blog-samples.cxf-ut-messagelayer</groupId>
        <artifactId>cxf-ut-messagelayer</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <artifactId>cxf-ut-messagelayer-war</artifactId>
    <name>${wspwar.module.name}</name>
    <packaging>war</packaging>

    <dependencies>
        <dependency>
            <groupId>org.gmazza.blog-samples.cxf-ut-messagelayer</groupId>
            <artifactId>cxf-ut-messagelayer-service</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
           <groupId>org.springframework</groupId>
           <artifactId>spring-web</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <webXml>src/main/webapp/WEB-INF/web.xml</webXml>
                    <webResources>
                        <resource>
                            <directory>../service/src/main/resources</directory>
                            <targetPath>WEB-INF/wsdl</targetPath>
                            <includes>
                                <include>*.wsdl</include>
                            </includes>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
        </plugins>
        <!-- Name of the generated WAR file -->
        <finalName>doubleit</finalName>
    </build>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.gmazza.blog-samples.cxf-x509-profile</groupId>
        <artifactId>cxf-x509-profile</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <artifactId>cxf-x509-profile-client</artifactId>
    <name>${wsc.module.name}</name>
    <packaging>jar</packaging>

    <dependencies>
        <dependency>
            <groupId>org.gmazza.blog-samples.cxf-x509-profile</groupId>
            <artifactId>cxf-x509-profile-service</artifactId>
            <!-- Classifier below used with Maven Assembly Plugin to specify 
                subset of above artifact needed. -->
            <classifier>jaxws</classifier>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
    </dependencies>

    <!-- mvn exec:exec to run SOAP client, see blog-samples/pom.xml
         for this plugin's configuration -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza</groupId>
      <artifactId>blog-samples</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <groupId>org.gmazza.blog-samples.cxf-x509-profile</groupId>
   <artifactId>cxf-x509-profile</artifactId>
   <name>Tutorial: CXF w/X509 Profile</name>
   <description>
       This sample provides a CXF web service provider and SOAP client using X.509
       token profile security via either WSDL WS-SecurityPolicy statements, or (with
       minor modifications as described in the blog entry below) CXF interceptors
       that do not use any WSDL Policy statements.
   </description>
   <url>http://www.jroller.com/gmazza/entry/cxf_x509_profile</url>

   <packaging>pom</packaging>

   <modules>
      <module>service</module>
      <module>war</module>
      <module>client</module>
   </modules>

   <dependencies>
      <dependency>
         <groupId>org.apache.cxf</groupId>
         <artifactId>cxf-rt-frontend-jaxws</artifactId>
         <!-- If you want the WS-Policy statements in the
              WSDL to be ignored, uncomment the below to
              exclude the policy dependency.

              This obviously is not the case with the WS-SecPol
              approach, but also does not need to be done here for
              the CXF interceptor method either, because we're 
              using a different WSDL in that case which does
              not have Policy statements within it.
         -->
         <!--exclusions>
            <exclusion>
              <groupId>org.apache.cxf</groupId>
              <artifactId>cxf-rt-ws-policy</artifactId>
            </exclusion>
         </exclusions-->
      </dependency>
      <dependency>
         <groupId>org.apache.cxf</groupId>
         <artifactId>cxf-rt-transports-http</artifactId>
      </dependency>
      <dependency>
         <groupId>org.apache.cxf</groupId>
         <artifactId>cxf-rt-ws-security</artifactId>
      </dependency>
   </dependencies>

</project>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.gmazza.blog-samples.cxf-x509-profile</groupId>
        <artifactId>cxf-x509-profile</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <artifactId>cxf-x509-profile-service</artifactId>
    <name>${wsp.module.name}</name>
    <packaging>jar</packaging>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptors>
                        <descriptor>src/assembly/jaxws-jar.xml</descriptor>
                    </descriptors>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-codegen-plugin</artifactId>
                <executions>
                    <execution>
                        <configuration>
                            <sourceRoot>
                                ${basedir}/target/generated-sources
                            </sourceRoot>
                            <wsdlOptions>
                                <wsdlOption>
                                    <wsdl>
                                        ${basedir}/src/main/resources/DoubleIt.wsdl
                                    </wsdl>
                                    <wsdlLocation>classpath:DoubleIt.wsdl</wsdlLocation>
                                </wsdlOption>
                            </wsdlOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <!-- Name of the generated WAR file -->
        <finalName>doubleit</finalName>
    </build>

</project>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.gmazza.blog-samples.cxf-x509-profile</groupId>
        <artifactId>cxf-x509-profile</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <artifactId>cxf-x509-profile-war</artifactId>
    <name>${wspwar.module.name}</name>
    <packaging>war</packaging>

    <dependencies>
        <dependency>
            <groupId>org.gmazza.blog-samples.cxf-x509-profile</groupId>
            <artifactId>cxf-x509-profile-service</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
           <groupId>org.springframework</groupId>
           <artifactId>spring-web</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <webXml>src/main/webapp/WEB-INF/web.xml</webXml>
                    <webResources>
                        <resource>
                            <directory>../service/src/main/resources</directory>
                            <targetPath>WEB-INF/wsdl</targetPath>
                            <includes>
                                <include>*.wsdl</include>
                            </includes>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
        </plugins>
        <!-- Name of the generated WAR file -->
        <finalName>doubleit</finalName>
    </build>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>org.gmazza.blog-samples.docbook-resources</groupId>
    <artifactId>docbook-resources</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>Docbook Resources</name>
    <description>Guide for Docbook Resources and Tips</description>

    <build>
        <plugins>
            <plugin>
                <groupId>com.agilejava.docbkx</groupId>
                <artifactId>docbkx-maven-plugin</artifactId>
                <version>2.0.14</version>

                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <id>create-pdf-docs</id>
                        <goals>
                            <goal>generate-pdf</goal>
                        </goals>
                        <configuration>
                            <includes>DocbookResources.xml</includes>
                            <xincludeSupported>true</xincludeSupported>
                            <generatedSourceDirectory>${project.build.directory}/xinclude</generatedSourceDirectory>
                            <foCustomization>${basedir}/src/docbkx/xsl/customfo.xsl</foCustomization>
                        </configuration>
                    </execution>
                    <execution>
                        <phase>generate-resources</phase>
                        <id>create-html-docs</id>
                        <goals>
                            <goal>generate-html</goal>
                        </goals>
                        <configuration>
                            <includes>DocbookResources.xml</includes>
                            <htmlCustomization>${basedir}/src/docbkx/xsl/customhtml.xsl</htmlCustomization>
                            <chunkedOutput>false</chunkedOutput>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza</groupId>
      <artifactId>blog-samples</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>

   <groupId>org.gmazza.blog-samples.enhancing_jaxb_artifacts</groupId>
   <artifactId>enhancing_jaxb_artifacts</artifactId>
   <name>Tutorial: Enhancing JAXB-generated classes</name>
   <packaging>jar</packaging>
   <url>http://www.jroller.com/gmazza/entry/enhancing_jaxb_artifacts</url>

   <properties>
      <jaxb2.basics.version>0.6.3</jaxb2.basics.version>
   </properties>

   <dependencies>
      <!-- Needed only when additional methods added by JAXB Basics Plugin 
           into JAXB-generated classes (e.g., -XtoString) reference 
           helper classes defined in JAXB2 Basics library, missing class
           compilation errors will otherwise occur.
      -->
      <dependency>
         <groupId>org.jvnet.jaxb2_commons</groupId>
         <artifactId>jaxb2-basics-runtime</artifactId>
         <version>${jaxb2.basics.version}</version>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <configuration>
               <executable>java</executable>
               <arguments>
                  <argument>-classpath</argument>
                  <classpath />
                  <argument>client.WSClient</argument>
                  <!-- Modify argument below for the item you wish to search eBay for. -->
                  <argument>camera</argument>
               </arguments>
            </configuration>
         </plugin>
      </plugins>
   </build>

   <profiles>
      <profile>
         <id>CXF</id>
         <!-- To use Metro by default, move this activation element to its profile below or use -PMetro with all Maven commands -->
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <dependencies>
            <dependency>
               <groupId>org.apache.cxf</groupId>
               <artifactId>cxf-rt-frontend-jaxws</artifactId>
            </dependency>
            <dependency>
               <groupId>org.apache.cxf</groupId>
               <artifactId>cxf-rt-transports-http</artifactId>
            </dependency>
         </dependencies>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.cxf</groupId>
                  <artifactId>cxf-codegen-plugin</artifactId>
                  <dependencies>
                     <dependency>
                        <groupId>org.jvnet.jaxb2_commons</groupId>
                        <artifactId>jaxb2-basics</artifactId>
                        <version>${jaxb2.basics.version}</version>
                     </dependency>
                  </dependencies>
                  <executions>
                     <execution>
                        <configuration>
                           <sourceRoot>${basedir}/target/generated-sources</sourceRoot>
                           <wsdlOptions>
                              <wsdlOption>
                                 <wsdl>
                                    ${basedir}/src/main/resources/ShoppingService.wsdl
                                 </wsdl>
                                 <wsdlLocation>classpath:ShoppingService.wsdl</wsdlLocation>
                                 <extraargs>
                                    <!-- Below standard JAXB processing flags -->
                                    <extraarg>-xjc-Xlocator,-mark-generated</extraarg>
                                    <extraarg>-xjc-b,${basedir}/src/main/resources/sample.xjb</extraarg>
                                    <!-- Below implemented by JAXB2 Basics Plugin -->
                                    <extraarg>-xjc-XtoString</extraarg>
                                    <extraarg>-xjc-Xinheritance</extraarg>
                                 </extraargs>
                              </wsdlOption>
                           </wsdlOptions>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>
      <profile>
         <id>Metro</id>
         <dependencies>
            <dependency>
               <groupId>org.glassfish.metro</groupId>
               <artifactId>webservices-rt</artifactId>
            </dependency>
         </dependencies>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.jvnet.jax-ws-commons</groupId>
                  <artifactId>jaxws-maven-plugin</artifactId>
                  <dependencies>
                     <dependency>
                        <groupId>org.jvnet.jaxb2_commons</groupId>
                        <artifactId>jaxb2-basics</artifactId>
                        <version>${jaxb2.basics.version}</version>
                     </dependency>
                  </dependencies>
                  <executions>
                     <execution>
                        <configuration>
                           <wsdlDirectory>src/main/resources</wsdlDirectory>
                           <wsdlFiles>
                              <wsdlFile>ShoppingService.wsdl</wsdlFile>
                           </wsdlFiles>
                           <wsdlLocation>/*</wsdlLocation>
                           <sourceDestDir>${basedir}/target/generated-sources</sourceDestDir>
                           <xjcArgs>
                              <!-- Below standard JAXB processing flags -->
                              <xjcArg>-mark-generated</xjcArg>
                              <xjcArg>-Xlocator</xjcArg>
                              <xjcArg>-b</xjcArg>
                              <xjcArg>${basedir}/src/main/resources/sample.xjb</xjcArg>
                              <!-- Below implemented by JAXB2 Basics Plugin -->
                              <xjcArg>-XtoString</xjcArg>
                              <xjcArg>-Xinheritance</xjcArg>
                           </xjcArgs>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>
   </profiles>
</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.web-service-tutorial</groupId>
      <artifactId>web-service-tutorial</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>web-service-tutorial-service</artifactId>
   <name>-- Web Service Provider</name>
   <packaging>bundle</packaging>

   <dependencies>
      <dependency>
         <groupId>junit</groupId>
         <artifactId>junit</artifactId>
         <version>4.11</version>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <!-- 
              Below plugin provides a separate JAR for the JAX-WS artifacts (i.e.,  
              the objects created by running wsdl2java or wsimport), as this JAR
              will also be used by the SOAP client.  More info:
              http://maven.apache.org/plugins/maven-assembly-plugin/
         -->
         <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <version>2.4</version>
            <configuration>
               <descriptors>
                  <descriptor>src/assembly/jaxws-jar.xml</descriptor>
               </descriptors>
               <appendAssemblyId>true</appendAssemblyId>
               <attach>true</attach>
            </configuration>
            <executions>
               <execution>
                  <id>make-assembly</id>
                  <phase>package</phase>
                  <goals>
                     <goal>single</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <configuration>
            <instructions>
               <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
               <Export-Package>service</Export-Package>
            </instructions>
            </configuration>
         </plugin>
      </plugins>
      <!-- Name of the generated WAR file -->
      <finalName>doubleit</finalName>
   </build>

   <profiles>
      <profile>
         <id>CXF</id>
         <!-- To use Metro by default, move activation element to its profile below  -->
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.cxf</groupId>
                  <artifactId>cxf-java2ws-plugin</artifactId>
                  <version>${cxf.version}</version>
                  <executions>
                     <execution>
                        <id>process-classes</id>
                        <phase>process-classes</phase>
                        <configuration>
                           <className>service.DoubleItPortTypeImpl
                           </className>
                           <genWsdl>true</genWsdl>
                           <verbose>true</verbose>
                        </configuration>
                        <goals>
                           <goal>java2ws</goal>
                        </goals>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>

      <profile>
         <id>Metro</id>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.jvnet.jax-ws-commons</groupId>
                  <artifactId>jaxws-maven-plugin</artifactId>
                  <version>2.2.1</version>
                  <executions>
                     <execution>
                        <goals>
                           <goal>wsgen</goal>
                        </goals>
                        <configuration>
                           <sei>service.DoubleItPortTypeImpl</sei>
                           <genWsdl>true</genWsdl>
                           <keep>true</keep>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>
   </profiles>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.jaxws_handler_tutorial</groupId>
      <artifactId>jaxws_handler_tutorial</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>jaxws_handler_tutorial-client</artifactId>
   <name>${wsc.module.name}</name>
   <packaging>jar</packaging>

   <dependencies>
      <dependency>
         <groupId>org.gmazza.blog-samples.jaxws_handler_tutorial</groupId>
         <artifactId>jaxws_handler_tutorial-service</artifactId>
         <classifier>jaxws</classifier>
         <version>1.0-SNAPSHOT</version>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <!-- mvn exec:exec to run SOAP client, see blog-samples/pom.xml
              for this plugin's configuration -->
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
         </plugin>
      </plugins>
   </build>
</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza</groupId>
      <artifactId>blog-samples</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <groupId>org.gmazza.blog-samples.jaxws_handler_tutorial</groupId>
   <artifactId>jaxws_handler_tutorial</artifactId>
   <packaging>pom</packaging>
   <name>Tutorial: Using JAX-WS Handlers</name>
   <url>http://www.jroller.com/gmazza/entry/jaxws_handler_tutorial</url>

   <modules>
      <module>service</module>
      <module>war</module>
      <module>client</module>
   </modules>

   <profiles>
      <profile>
         <id>CXF</id>
         <!-- To use Metro by default, move activation element to its profile below  -->
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <dependencies>
            <dependency>
               <groupId>org.apache.cxf</groupId>
               <artifactId>cxf-rt-frontend-jaxws</artifactId>
            </dependency>
            <dependency>
               <groupId>org.apache.cxf</groupId>
               <artifactId>cxf-rt-transports-http</artifactId>
            </dependency>
         </dependencies>
      </profile>

      <profile>
         <id>Metro</id>
         <dependencies>
            <dependency>
               <groupId>org.glassfish.metro</groupId>
               <artifactId>webservices-rt</artifactId>
            </dependency>
         </dependencies>
      </profile>
   </profiles>

</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.jaxws_handler_tutorial</groupId>
      <artifactId>jaxws_handler_tutorial</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>jaxws_handler_tutorial-service</artifactId>
   <name>${wsp.module.name}</name>
   <packaging>jar</packaging>

   <build>
      <plugins>
         <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <configuration>
               <descriptors>
                  <descriptor>src/assembly/jaxws-jar.xml</descriptor>
               </descriptors>
            </configuration>
         </plugin>
      </plugins>
      <!-- Name of the generated WAR file -->
      <finalName>doubleit</finalName>
   </build>

   <profiles>
      <profile>
         <id>CXF</id>
         <!-- To use Metro, move below activation element to its profile -->
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.cxf</groupId>
                  <artifactId>cxf-codegen-plugin</artifactId>
                  <executions>
                     <execution>
                        <configuration>
                           <wsdlOptions>
                              <wsdlOption>
                                 <wsdl>
                                    ${basedir}/src/main/resources/DoubleIt.wsdl
                                 </wsdl>
                                 <wsdlLocation>classpath:DoubleIt.wsdl</wsdlLocation>
                              </wsdlOption>
                           </wsdlOptions>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>

      <profile>
         <id>Metro</id>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.jvnet.jax-ws-commons</groupId>
                  <artifactId>jaxws-maven-plugin</artifactId>
                  <executions>
                     <execution>
                        <configuration>
                           <wsdlDirectory>
                              src/main/resources
                           </wsdlDirectory>
                           <wsdlFiles>
                              <wsdlFile>DoubleIt.wsdl</wsdlFile>
                           </wsdlFiles>
                           <wsdlLocation>/*</wsdlLocation>
                           <sourceDestDir>
                              ${basedir}/target/generated-sources
                           </sourceDestDir>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>
   </profiles>
</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.jaxws_handler_tutorial</groupId>
      <artifactId>jaxws_handler_tutorial</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>jaxws_handler_tutorial-war</artifactId>
   <name>${wspwar.module.name}</name>
   <packaging>war</packaging>

   <dependencies>
      <dependency>
          <groupId>org.gmazza.blog-samples.jaxws_handler_tutorial</groupId>
          <artifactId>jaxws_handler_tutorial-service</artifactId>
          <version>1.0-SNAPSHOT</version>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.tomcat.maven</groupId>
            <artifactId>tomcat7-maven-plugin</artifactId>
         </plugin>
         <plugin>
            <artifactId>maven-war-plugin</artifactId>
            <configuration>
                <webXml>src/main/webapp/WEB-INF/web.xml</webXml>
                <webResources>
                    <resource>
                        <directory>../service/src/main/resources</directory>
                        <targetPath>WEB-INF/wsdl</targetPath>
                        <includes>
                            <include>*.wsdl</include>
                        </includes>
                    </resource>
                </webResources>
            </configuration>
         </plugin>
      </plugins>
      <!-- Name of the generated WAR file -->
      <finalName>doubleit</finalName>
   </build>

   <profiles>
      <profile>
         <id>CXF</id>
         <!-- Remove activation element below if using Metro  -->
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <dependencies>
            <dependency>
               <groupId>org.springframework</groupId>
               <artifactId>spring-web</artifactId>
            </dependency>
         </dependencies>
      </profile>
   </profiles>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.jaxwshandlers_to_cxfinterceptors</groupId>
      <artifactId>jaxwshandlers_to_cxfinterceptors</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>jaxwshandlers_to_cxfinterceptors-client</artifactId>
   <name>${wsc.module.name}</name>
   <packaging>jar</packaging>

   <dependencies>
      <dependency>
         <groupId>org.gmazza.blog-samples.jaxwshandlers_to_cxfinterceptors</groupId>
         <artifactId>jaxwshandlers_to_cxfinterceptors-service</artifactId>
         <classifier>jaxws</classifier>
         <version>1.0-SNAPSHOT</version>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <!-- mvn exec:exec to run SOAP client, see blog-samples/pom.xml
              for this plugin's configuration -->
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
         </plugin>
      </plugins>
   </build>
</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza</groupId>
      <artifactId>blog-samples</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <groupId>org.gmazza.blog-samples.jaxwshandlers_to_cxfinterceptors</groupId>
   <artifactId>jaxwshandlers_to_cxfinterceptors</artifactId>
   <packaging>pom</packaging>
   <name>Tutorial: JAX-WS handlers --> CXF interceptors</name>
   <url>http://www.jroller.com/gmazza/entry/jaxwshandlers_to_cxfinterceptors</url>

   <modules>
      <module>service</module>
      <module>war</module>
      <module>client</module>
   </modules>

   <dependencies>
      <dependency>
         <groupId>org.apache.cxf</groupId>
         <artifactId>cxf-rt-frontend-jaxws</artifactId>
      </dependency>
      <dependency>
         <groupId>org.apache.cxf</groupId>
         <artifactId>cxf-rt-transports-http</artifactId>
      </dependency>
   </dependencies>

</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.jaxwshandlers_to_cxfinterceptors</groupId>
      <artifactId>jaxwshandlers_to_cxfinterceptors</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>jaxwshandlers_to_cxfinterceptors-service</artifactId>
   <name>${wsp.module.name}</name>
   <packaging>jar</packaging>

   <build>
      <plugins>
         <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <configuration>
               <descriptors>
                  <descriptor>src/assembly/jaxws-jar.xml</descriptor>
               </descriptors>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-codegen-plugin</artifactId>
            <executions>
               <execution>
                  <configuration>
                     <wsdlOptions>
                        <wsdlOption>
                           <wsdl>
                              ${basedir}/src/main/resources/DoubleIt.wsdl
                           </wsdl>
                           <wsdlLocation>classpath:DoubleIt.wsdl</wsdlLocation>
                        </wsdlOption>
                     </wsdlOptions>
                  </configuration>
               </execution>
            </executions>
         </plugin>
      </plugins>
      <!-- Name of the generated WAR file -->
      <finalName>doubleit</finalName>
   </build>

</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.jaxwshandlers_to_cxfinterceptors</groupId>
      <artifactId>jaxwshandlers_to_cxfinterceptors</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>jaxwshandlers_to_cxfinterceptors-war</artifactId>
   <name>${wspwar.module.name}</name>
   <packaging>war</packaging>

   <dependencies>
      <dependency>
          <groupId>org.gmazza.blog-samples.jaxwshandlers_to_cxfinterceptors</groupId>
          <artifactId>jaxwshandlers_to_cxfinterceptors-service</artifactId>
          <version>1.0-SNAPSHOT</version>
      </dependency>
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-web</artifactId>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.tomcat.maven</groupId>
            <artifactId>tomcat7-maven-plugin</artifactId>
         </plugin>
         <plugin>
            <artifactId>maven-war-plugin</artifactId>
            <configuration>
                <webXml>src/main/webapp/WEB-INF/web.xml</webXml>
                <webResources>
                    <resource>
                        <directory>../service/src/main/resources</directory>
                        <targetPath>WEB-INF/wsdl</targetPath>
                        <includes>
                            <include>*.wsdl</include>
                        </includes>
                    </resource>
                </webResources>
            </configuration>
         </plugin>
      </plugins>
      <!-- Name of the generated WAR file -->
      <finalName>doubleit</finalName>
   </build>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>org.gmazza.blog-samples.jpa_and_junit</groupId>
    <artifactId>jpa_and_junit</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>JPA with JUnit example</name>
    <packaging>jar</packaging>
    <url>http://www.jroller.com/gmazza/entry/jpa_and_junit</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derby</artifactId>
            <version>10.10.1.1</version>
        </dependency>
        <!-- Client JDBC driver -->
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derbyclient</artifactId>
            <version>10.10.1.1</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <executable>java</executable>
                    <arguments>
                        <argument>-classpath</argument>
                        <classpath />
                        <argument>
                            SampleRun
                        </argument>
                    </arguments>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.12.4</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.btmatthews.maven.plugins.inmemdb</groupId>
                <artifactId>inmemdb-maven-plugin</artifactId>
                <version>1.3.0</version>
                <configuration>
                    <monitorKey>inmemdb</monitorKey>
                    <monitorPort>11527</monitorPort>
                </configuration>
                <executions>
                    <execution>
                        <id>run</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <daemon>true</daemon>
                            <type>derby</type>
                            <database>jpamemdb</database>
                            <username>app</username>
                            <password>app</password>
                            <sources>
                                <script>
                                    <sourceFile>src/main/config/create-database-derby.sql</sourceFile>
                                </script>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop</id>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.8</version>
                <configuration>
                    <downloadSources>true</downloadSources>
                    <useProjectReferences>false</useProjectReferences>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>EclipseLink</id>
            <!-- EclipseLink is set to default, to change move below activation element to preferred
                 JPA stack profile or use -P[Hibernate|OpenJPA] at the command line.
            -->
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.eclipse.persistence</groupId>
                    <artifactId>eclipselink</artifactId>
                    <version>2.5.0</version>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>Hibernate</id>
            <dependencies>
                <dependency>
                    <groupId>org.hibernate</groupId>
                    <artifactId>hibernate-entitymanager</artifactId>
                    <version>4.2.3.Final</version>
                </dependency>
                <dependency>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-jdk14</artifactId>
                    <version>1.6.4</version>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>OpenJPA</id>
            <dependencies>
                <dependency>
                    <groupId>org.apache.openjpa</groupId>
                    <artifactId>openjpa</artifactId>
                    <version>2.2.2</version>
                    <scope>compile</scope>
                </dependency>
            </dependencies>
        </profile>
    </profiles>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza</groupId>
      <artifactId>blog-samples</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <groupId>org.gmazza.blog-samples.junit-for-soap-clients</groupId>
   <artifactId>junit-for-soap-clients</artifactId>
   <name>Tutorial: Testing SOAP Clients with JUnit</name>
   <packaging>jar</packaging>
   <url>http://www.jroller.com/gmazza/entry/junit_for_soap_clients</url>

   <dependencies>
     <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <configuration>
               <executable>java</executable>
               <arguments>
                  <argument>-classpath</argument>
                  <classpath />
                  <!-- Uncomment below for debugging with Metro. -->
                  <!--argument>
                     -Dcom.sun.xml.ws.transport.http.client.HttpTransportPipe.dump=true
                     </argument-->
                  <!-- Uncomment below for debugging with CXF. -->
                  <!--argument>
                     -Djava.util.logging.config.file=${env.CXF_HOME}/etc/logging.properties
                     </argument-->
                  <argument>client.WSClient</argument>
                  <!-- Modify argument below for the item you wish to search eBay for. -->
                  <argument>camera</argument>
               </arguments>
            </configuration>
         </plugin>
         <!--plugin>  
            <artifactId>maven-surefire-plugin</artifactId>  
            <configuration>  
               <systemProperties>  
                  <property>  
                     <name>???</name>  
                     <value>???</value>  
                  </property>  
               </systemProperties>  
            </configuration>  
         </plugin-->
      </plugins>
   </build>

   <profiles>
      <profile>
         <id>CXF</id>
         <!-- To use Metro by default, move this activation element to its profile below  -->
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <dependencies>
            <dependency>
               <groupId>org.apache.cxf</groupId>
               <artifactId>cxf-rt-frontend-jaxws</artifactId>
            </dependency>
            <dependency>
               <groupId>org.apache.cxf</groupId>
               <artifactId>cxf-rt-transports-http</artifactId>
            </dependency>
            <dependency>
               <groupId>org.apache.cxf</groupId>
               <artifactId>cxf-rt-transports-http-jetty</artifactId>
               <scope>test</scope>
            </dependency>
         </dependencies>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.cxf</groupId>
                  <artifactId>cxf-codegen-plugin</artifactId>
                  <executions>
                     <execution>
                        <configuration>
                           <sourceRoot>${basedir}/target/generated-sources</sourceRoot>
                           <wsdlOptions>
                              <wsdlOption>
                                 <wsdl>
                                    ${basedir}/src/main/resources/ShoppingService.wsdl
                                 </wsdl>
                                 <wsdlLocation>classpath:ShoppingService.wsdl</wsdlLocation>
                                 <!--extraargs>
                                    <extraarg>-impl</extraarg>
                                 </extraargs-->
                              </wsdlOption>
                           </wsdlOptions>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>
      <profile>
         <id>Metro</id>
         <dependencies>
            <dependency>
               <groupId>org.glassfish.metro</groupId>
               <artifactId>webservices-rt</artifactId>
            </dependency>
            <dependency>
               <groupId>javax.servlet</groupId>
               <artifactId>servlet-api</artifactId>
               <scope>test</scope>
            </dependency>
         </dependencies>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.jvnet.jax-ws-commons</groupId>
                  <artifactId>jaxws-maven-plugin</artifactId>
                  <executions>
                     <execution>
                        <configuration>
                           <wsdlDirectory>src/main/resources</wsdlDirectory>
                           <wsdlFiles>
                              <wsdlFile>ShoppingService.wsdl</wsdlFile>
                           </wsdlFiles>
                           <wsdlLocation>/*</wsdlLocation>
                           <sourceDestDir>${basedir}/target/generated-sources</sourceDestDir>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>
   </profiles>
</project>

<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.junit-web-service-testing</groupId>
      <artifactId>junit-web-service-testing</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>junit-web-service-testing-client</artifactId>
   <name>${wsc.module.name}</name>
   <packaging>jar</packaging>

   <dependencies>
      <dependency>
         <groupId>org.gmazza.blog-samples.junit-web-service-testing</groupId>
         <artifactId>junit-web-service-testing-service</artifactId>
         <classifier>jaxws</classifier>
         <version>1.0-SNAPSHOT</version>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <!-- mvn exec:exec to run SOAP client, see blog-samples/pom.xml
              for this plugin's configuration -->
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
         </plugin>
      </plugins>
   </build>
</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza</groupId>
      <artifactId>blog-samples</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <groupId>org.gmazza.blog-samples.junit-web-service-testing</groupId>
   <artifactId>junit-web-service-testing</artifactId>
   <packaging>pom</packaging>
   <name>Tutorial: Testing WSP's with JUnit</name>
   <url>http://www.jroller.com/gmazza/entry/junit_web_service_testing</url>

   <dependencies>
      <dependency>
         <groupId>junit</groupId>
         <artifactId>junit</artifactId>
      </dependency>
   </dependencies>

   <modules>
      <module>service</module>
      <module>war</module>
      <module>client</module>
   </modules>

   <profiles>
      <profile>
         <id>CXF</id>
         <!-- To use Metro by default, move activation element to its profile below  -->
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <dependencies>
            <dependency>
               <groupId>org.apache.cxf</groupId>
               <artifactId>cxf-rt-frontend-jaxws</artifactId>
            </dependency>
            <dependency>
               <groupId>org.apache.cxf</groupId>
               <artifactId>cxf-rt-transports-http</artifactId>
            </dependency>
         </dependencies>
      </profile>

      <profile>
         <id>Metro</id>
         <dependencies>
            <dependency>
               <groupId>org.glassfish.metro</groupId>
               <artifactId>webservices-rt</artifactId>
            </dependency>
         </dependencies>
      </profile>
   </profiles>

</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.junit-web-service-testing</groupId>
      <artifactId>junit-web-service-testing</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>junit-web-service-testing-service</artifactId>
   <name>${wsp.module.name}</name>
   <packaging>jar</packaging>

   <build>
      <plugins>
         <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <configuration>
               <descriptors>
                  <descriptor>src/assembly/jaxws-jar.xml</descriptor>
               </descriptors>
            </configuration>
         </plugin>
      </plugins>
      <!-- Name of the generated WAR file -->
      <finalName>doubleit</finalName>
   </build>

   <profiles>
      <profile>
         <id>CXF</id>
         <!-- To use Metro, move below activation element to its profile -->
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.cxf</groupId>
                  <artifactId>cxf-codegen-plugin</artifactId>
                  <executions>
                     <execution>
                        <configuration>
                           <wsdlOptions>
                              <wsdlOption>
                                 <wsdl>
                                    ${basedir}/src/main/resources/DoubleIt.wsdl
                                 </wsdl>
                                 <wsdlLocation>classpath:DoubleIt.wsdl</wsdlLocation>
                              </wsdlOption>
                           </wsdlOptions>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
         <dependencies>
            <!-- Use following dependency if testing w/Endpoint Class -->
            <dependency>
               <groupId>org.apache.cxf</groupId>
               <artifactId>cxf-rt-transports-http-jetty</artifactId>
               <scope>test</scope>
            </dependency>
         </dependencies>
      </profile>

      <profile>
         <id>Metro</id>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.jvnet.jax-ws-commons</groupId>
                  <artifactId>jaxws-maven-plugin</artifactId>
                  <executions>
                     <execution>
                        <configuration>
                           <wsdlDirectory>
                              src/main/resources
                           </wsdlDirectory>
                           <wsdlFiles>
                              <wsdlFile>DoubleIt.wsdl</wsdlFile>
                           </wsdlFiles>
                           <wsdlLocation>/*</wsdlLocation>
                           <sourceDestDir>
                              ${basedir}/target/generated-sources
                           </sourceDestDir>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
         <dependencies>
            <!-- Use following dependency if testing w/Endpoint Class -->
            <dependency>
               <groupId>javax.servlet</groupId>
               <artifactId>servlet-api</artifactId>
               <version>2.5</version>
               <scope>test</scope>
            </dependency>
         </dependencies>
      </profile>
   </profiles>
</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.junit-web-service-testing</groupId>
      <artifactId>junit-web-service-testing</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>junit-web-service-testing-war</artifactId>
   <name>${wspwar.module.name}</name>
   <packaging>war</packaging>

   <dependencies>
      <dependency>
          <groupId>org.gmazza.blog-samples.junit-web-service-testing</groupId>
          <artifactId>junit-web-service-testing-service</artifactId>
          <version>1.0-SNAPSHOT</version>
      </dependency>
      <!-- Use the below dependency if testing with embedded Jetty -->
      <dependency>
         <groupId>org.eclipse.jetty</groupId>
         <artifactId>jetty-webapp</artifactId>
         <version>8.1.4.v20120524</version>
         <scope>test</scope>
      </dependency>
      <!-- Use the below dependencies if testing with embedded Tomcat -->
      <!--dependency>
         <groupId>org.apache.tomcat.embed</groupId>
         <artifactId>tomcat-embed-core</artifactId>
         <version>7.0.27</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.apache.tomcat</groupId>
         <artifactId>tomcat-catalina</artifactId>
         <version>7.0.27</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.apache.tomcat.embed</groupId>
         <artifactId>tomcat-embed-jasper</artifactId>
         <version>7.0.27</version>
         <scope>test</scope>
      </dependency-->
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.tomcat.maven</groupId>
            <artifactId>tomcat7-maven-plugin</artifactId>
         </plugin>
         <plugin>
            <artifactId>maven-war-plugin</artifactId>
            <configuration>
                <webXml>src/main/webapp/WEB-INF/web.xml</webXml>
                <webResources>
                    <resource>
                        <directory>../service/src/main/resources</directory>
                        <targetPath>WEB-INF/wsdl</targetPath>
                        <includes>
                            <include>*.wsdl</include>
                        </includes>
                    </resource>
                </webResources>
            </configuration>
         </plugin>
      </plugins>
      <!-- Name of the generated WAR file -->
      <finalName>doubleit</finalName>
   </build>

   <profiles>
      <profile>
         <id>CXF</id>
         <!-- Remove activation element below if using Metro  -->
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <dependencies>
            <dependency>
               <groupId>org.springframework</groupId>
               <artifactId>spring-web</artifactId>
            </dependency>
         </dependencies>
      </profile>
   </profiles>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.metro-sts-tutorial</groupId>
      <artifactId>metro-sts-tutorial</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>metro-sts-tutorial-client</artifactId>
   <name>${wsc.module.name}</name>
   <packaging>jar</packaging>

   <!-- Metro WSDL files contain hardcoded keystore config location info
        Below constant filtered (inserted) by Maven into those files for portability 
   -->
   <properties>
      <keystore.dir>${basedir}/src/main/resources</keystore.dir>
   </properties>

   <dependencies>
      <dependency>
         <groupId>${project.parent.groupId}</groupId>
         <artifactId>${project.parent.artifactId}-service</artifactId>
         <!-- Classifier below used with Maven Assembly Plugin to 
              specify subset of above artifact needed. 
         -->
         <classifier>jaxws</classifier>
         <version>1.0-SNAPSHOT</version>
      </dependency>
   </dependencies>

   <build>
      <resources>
          <resource>
              <directory>src/main/resources</directory>
              <includes>
                  <include>**</include>
              </includes>
              <filtering>true</filtering>
          </resource>
       </resources>
      <plugins>
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
         </plugin>
      </plugins>
   </build>

</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza</groupId>
      <artifactId>blog-samples</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <groupId>org.gmazza.blog-samples.metro-sts-tutorial</groupId>
   <artifactId>metro-sts-tutorial</artifactId>
   <name>Tutorial: Metro Security Token Service (STS)</name>
   <url>http://www.jroller.com/gmazza/entry/metro_sts_tutorial</url>

   <packaging>pom</packaging>

   <modules>
      <module>service</module>
      <module>war</module>
      <module>client</module>
      <module>sts-war</module>
   </modules>

   <dependencies>
      <dependency>
         <groupId>org.glassfish.metro</groupId>
         <artifactId>webservices-rt</artifactId>
      </dependency>
   </dependencies>

</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.metro-sts-tutorial</groupId>
      <artifactId>metro-sts-tutorial</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>metro-sts-tutorial-service</artifactId>
   <name>${wsp.module.name}</name>
   <packaging>jar</packaging>

   <build>
      <plugins>
         <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <configuration>
               <descriptors>
                  <descriptor>src/assembly/jaxws-jar.xml</descriptor>
               </descriptors>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.jvnet.jax-ws-commons</groupId>
            <artifactId>jaxws-maven-plugin</artifactId>
            <executions>
               <execution>
                  <configuration>
                     <wsdlDirectory>
                        src/main/config
                     </wsdlDirectory>
                     <wsdlFiles>
                        <wsdlFile>DoubleIt.wsdl</wsdlFile>
                     </wsdlFiles>
                     <wsdlLocation>/*</wsdlLocation>
                     <sourceDestDir>
                        ${basedir}/target/generated-sources
                     </sourceDestDir>
                  </configuration>
               </execution>
            </executions>
         </plugin>
      </plugins>
      <!-- Name of the generated WAR file -->
      <finalName>doubleit</finalName>
   </build>

</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.metro-sts-tutorial</groupId>
      <artifactId>metro-sts-tutorial</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>metro-sts-tutorial-stswar</artifactId>
   <name>${stswar.module.name}</name>
   <packaging>war</packaging>

   <!-- Metro WSDL files contain hardcoded keystore config location info
        Below constant filtered (inserted) by Maven into those files for portability 
   -->
   <properties>
      <keystore.dir>${basedir}/src/main/config</keystore.dir>
   </properties>

   <build>
      <plugins>
         <plugin>
             <groupId>org.apache.tomcat.maven</groupId>
             <artifactId>tomcat7-maven-plugin</artifactId>
         </plugin>

         <plugin>
             <groupId>org.apache.maven.plugins</groupId>
             <artifactId>maven-war-plugin</artifactId>
             <configuration>
                 <webResources>
                     <resource>
                         <directory>src/main/webapp</directory>
                         <filtering>true</filtering>
                     </resource>
                 </webResources>
             </configuration>
         </plugin>

     </plugins>
      <!-- Name of the generated WAR file -->
      <finalName>DoubleItSTS</finalName>
   </build>
</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.metro-sts-tutorial</groupId>
      <artifactId>metro-sts-tutorial</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>metro-sts-tutorial-war</artifactId>
   <name>${wspwar.module.name}</name>
   <packaging>war</packaging>

   <!-- Property needed to define ${keystore.dir} value in WSP WSDL
        Value replaced during copying defined in maven-war-plugin below
   -->
   <properties>
      <keystore.dir>${basedir}/../service/src/main/config</keystore.dir>
   </properties>

   <dependencies>
      <dependency>
          <groupId>${project.parent.groupId}</groupId>
          <artifactId>${project.parent.artifactId}-service</artifactId>
          <version>1.0-SNAPSHOT</version>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.tomcat.maven</groupId>
            <artifactId>tomcat7-maven-plugin</artifactId>
         </plugin>
         <plugin>
            <artifactId>maven-war-plugin</artifactId>
            <configuration>
                <webXml>src/main/webapp/WEB-INF/web.xml</webXml>
                <webResources>
                    <resource>
                        <directory>../service/src/main/config</directory>
                        <targetPath>WEB-INF/wsdl</targetPath>
                        <includes>
                            <include>*.wsdl</include>
                        </includes>
                        <filtering>true</filtering>
                    </resource>
                    <resource>
                        <directory>src/main/webapp/WEB-INF</directory>
                        <targetPath>WEB-INF</targetPath>
                        <includes>
                            <include>*.*</include>
                        </includes>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
      </plugins>
      <!-- Name of the generated WAR file -->
      <finalName>doubleit</finalName>
   </build>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.metro-usernametoken-profile</groupId>
      <artifactId>metro-usernametoken-profile</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>metro-usernametoken-profile-client</artifactId>
   <name>${wsc.module.name}</name>
   <packaging>jar</packaging>

   <dependencies>
      <dependency>
         <groupId>org.gmazza.blog-samples.metro-usernametoken-profile</groupId>
         <artifactId>metro-usernametoken-profile-service</artifactId>
         <!-- Classifier below used with Maven Assembly Plugin to 
              specify subset of above artifact needed. 
         -->
         <classifier>jaxws</classifier>
         <version>1.0-SNAPSHOT</version>
      </dependency>
   </dependencies>

    <!-- mvn exec:exec to run SOAP client -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza</groupId>
      <artifactId>blog-samples</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <groupId>org.gmazza.blog-samples.metro-usernametoken-profile</groupId>
   <artifactId>metro-usernametoken-profile</artifactId>
   <name>Tutorial: Metro w/UsernameToken Security</name>
   <url>http://www.jroller.com/gmazza/entry/metro_usernametoken_profile</url>

   <packaging>pom</packaging>

   <modules>
      <module>service</module>
      <module>war</module>
      <module>client</module>
   </modules>

   <dependencies>
      <dependency>
         <groupId>org.glassfish.metro</groupId>
         <artifactId>webservices-rt</artifactId>
      </dependency>
   </dependencies>

</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.metro-usernametoken-profile</groupId>
      <artifactId>metro-usernametoken-profile</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>metro-usernametoken-profile-service</artifactId>
   <name>${wsp.module.name}</name>
   <packaging>jar</packaging>

   <build>
      <plugins>
         <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <configuration>
               <descriptors>
                  <descriptor>src/assembly/jaxws-jar.xml</descriptor>
               </descriptors>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.jvnet.jax-ws-commons</groupId>
            <artifactId>jaxws-maven-plugin</artifactId>
            <executions>
               <execution>
                  <configuration>
                     <wsdlDirectory>
                        src/main/resources
                     </wsdlDirectory>
                     <wsdlFiles>
                        <wsdlFile>DoubleIt.wsdl</wsdlFile>
                     </wsdlFiles>
                     <wsdlLocation>/*</wsdlLocation>
                     <sourceDestDir>
                        ${basedir}/target/generated-sources
                     </sourceDestDir>
                  </configuration>
               </execution>
            </executions>
         </plugin>
      </plugins>
      <!-- Name of the generated WAR file -->
      <finalName>doubleit</finalName>
   </build>

</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.metro-usernametoken-profile</groupId>
      <artifactId>metro-usernametoken-profile</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>metro-usernametoken-profile-war</artifactId>
   <name>${wspwar.module.name}</name>
   <packaging>war</packaging>

   <dependencies>
      <dependency>
          <groupId>org.gmazza.blog-samples.metro-usernametoken-profile</groupId>
          <artifactId>metro-usernametoken-profile-service</artifactId>
          <version>1.0-SNAPSHOT</version>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.tomcat.maven</groupId>
            <artifactId>tomcat7-maven-plugin</artifactId>
         </plugin>
         <plugin>
            <artifactId>maven-war-plugin</artifactId>
            <configuration>
                <webXml>src/main/webapp/WEB-INF/web.xml</webXml>
                <webResources>
                    <resource>
                        <directory>../service/src/main/resources</directory>
                        <targetPath>WEB-INF/wsdl</targetPath>
                        <includes>
                            <include>*.wsdl</include>
                        </includes>
                    </resource>
                </webResources>
            </configuration>
         </plugin>
      </plugins>
      <!-- Name of the generated WAR file -->
      <finalName>doubleit</finalName>
   </build>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.metro_ut_messagelayer</groupId>
      <artifactId>metro_ut_messagelayer</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>metro_ut_messagelayer-client</artifactId>
   <name>${wsc.module.name}</name>
   <packaging>jar</packaging>

   <!-- Metro WSDL files contain hardcoded keystore config location info
        Below constant filtered (inserted) by Maven into those files for portability 
   -->
   <properties>
      <keystore.dir>${basedir}/src/main/config</keystore.dir>
   </properties>

   <dependencies>
      <dependency>
         <groupId>${project.parent.groupId}</groupId>
         <artifactId>${project.parent.artifactId}-service</artifactId>
         <!-- Classifier below used with Maven Assembly Plugin to 
              specify subset of above artifact needed. 
         -->
         <classifier>jaxws</classifier>
         <version>1.0-SNAPSHOT</version>
      </dependency>
   </dependencies>

   <build>
      <resources>
          <resource>
              <directory>src/main/resources</directory>
              <includes>
                  <include>**</include>
              </includes>
              <filtering>true</filtering>
          </resource>
      </resources>
      <!-- mvn exec:exec to run SOAP client -->
      <plugins>
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
         </plugin>
      </plugins>
   </build>

</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza</groupId>
      <artifactId>blog-samples</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <groupId>org.gmazza.blog-samples.metro_ut_messagelayer</groupId>
   <artifactId>metro_ut_messagelayer</artifactId>
   <name>Tutorial: UsernameToken w/Message-Layer encryption (Metro)</name>
   <url>http://www.jroller.com/gmazza/entry/usernametoken_messagelayer_encryption</url>

   <packaging>pom</packaging>

   <modules>
      <module>service</module>
      <module>war</module>
      <module>client</module>
   </modules>

   <dependencies>
      <dependency>
         <groupId>org.glassfish.metro</groupId>
         <artifactId>webservices-rt</artifactId>
      </dependency>
   </dependencies>

</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.metro_ut_messagelayer</groupId>
      <artifactId>metro_ut_messagelayer</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>metro_ut_messagelayer-service</artifactId>
   <name>${wsp.module.name}</name>
   <packaging>jar</packaging>

   <!-- Metro WSDL files contain hardcoded keystore config location info
        Below constant filtered (inserted) by Maven into those files for portability 
   -->
   <properties>
      <keystore.dir>${basedir}/src/main/config</keystore.dir>
   </properties>

   <build>
      <resources>
          <resource>
              <directory>src/main/resources</directory>
              <includes>
                  <include>**</include>
              </includes>
              <filtering>true</filtering>
          </resource>
      </resources>
      <plugins>
         <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <configuration>
               <descriptors>
                  <descriptor>src/assembly/jaxws-jar.xml</descriptor>
               </descriptors>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.jvnet.jax-ws-commons</groupId>
            <artifactId>jaxws-maven-plugin</artifactId>
            <executions>
               <execution>
                  <configuration>
                     <wsdlDirectory>
                        src/main/resources
                     </wsdlDirectory>
                     <wsdlFiles>
                        <wsdlFile>DoubleIt.wsdl</wsdlFile>
                     </wsdlFiles>
                     <wsdlLocation>/*</wsdlLocation>
                     <sourceDestDir>
                        ${basedir}/target/generated-sources
                     </sourceDestDir>
                  </configuration>
               </execution>
            </executions>
         </plugin>
      </plugins>
      <!-- Name of the generated WAR file -->
      <finalName>doubleit</finalName>
   </build>

</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.metro_ut_messagelayer</groupId>
      <artifactId>metro_ut_messagelayer</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>metro_ut_messagelayer-war</artifactId>
   <name>${wspwar.module.name}</name>
   <packaging>war</packaging>

   <dependencies>
      <dependency>
          <groupId>${project.parent.groupId}</groupId>
          <artifactId>${project.parent.artifactId}-service</artifactId>
          <version>1.0-SNAPSHOT</version>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.tomcat.maven</groupId>
            <artifactId>tomcat7-maven-plugin</artifactId>
         </plugin>
         <plugin>
            <artifactId>maven-war-plugin</artifactId>
            <configuration>
                <webXml>src/main/webapp/WEB-INF/web.xml</webXml>
                <webResources>
                    <resource>
                        <!-- Retrieving from target instead of src as WSDL
                             file has keystore location filtered (placed) 
                             into it. Can alternatively read from src and
                             have this module do the filtering instead.
                        -->
                        <directory>../service/target/classes</directory>
                        <targetPath>WEB-INF/wsdl</targetPath>
                        <includes>
                            <include>*.wsdl</include>
                        </includes>
                    </resource>
                </webResources>
            </configuration>
         </plugin>
      </plugins>
      <!-- Name of the generated WAR file -->
      <finalName>doubleit</finalName>
   </build>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.metro-x509-profile</groupId>
      <artifactId>metro-x509-profile</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>metro-x509-profile-client</artifactId>
   <name>${wsc.module.name}</name>
   <packaging>jar</packaging>

   <!-- Metro WSDL files contain hardcoded keystore config location info
        Below constant filtered (inserted) by Maven into those files for portability 
   -->
   <properties>
      <keystore.dir>${basedir}/src/main/config</keystore.dir>
   </properties>

   <dependencies>
      <dependency>
         <groupId>${project.parent.groupId}</groupId>
         <artifactId>${project.parent.artifactId}-service</artifactId>
         <!-- Classifier below used with Maven Assembly Plugin to 
              specify subset of above artifact needed. 
         -->
         <classifier>jaxws</classifier>
         <version>1.0-SNAPSHOT</version>
      </dependency>
   </dependencies>

   <build>
      <resources>
          <resource>
              <directory>src/main/resources</directory>
              <includes>
                  <include>**</include>
              </includes>
              <filtering>true</filtering>
          </resource>
      </resources>
      <!-- mvn exec:exec to run SOAP client -->
      <plugins>
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
         </plugin>
      </plugins>
   </build>

</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza</groupId>
      <artifactId>blog-samples</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <groupId>org.gmazza.blog-samples.metro-x509-profile</groupId>
   <artifactId>metro-x509-profile</artifactId>
   <name>Tutorial: Metro w/X509 Profile</name>
   <url>http://www.jroller.com/gmazza/entry/metro_x509_profile</url>

   <packaging>pom</packaging>

   <modules>
      <module>service</module>
      <module>war</module>
      <module>client</module>
   </modules>

   <dependencies>
      <dependency>
         <groupId>org.glassfish.metro</groupId>
         <artifactId>webservices-rt</artifactId>
      </dependency>
   </dependencies>

</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.metro-x509-profile</groupId>
      <artifactId>metro-x509-profile</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>metro-x509-profile-service</artifactId>
   <name>${wsp.module.name}</name>
   <packaging>jar</packaging>

   <!-- Metro WSDL files contain hardcoded keystore config location info
        Below constant filtered (inserted) by Maven into those files for portability 
   -->
   <properties>
      <keystore.dir>${basedir}/src/main/config</keystore.dir>
   </properties>

   <build>
      <resources>
          <resource>
              <directory>src/main/resources</directory>
              <includes>
                  <include>**</include>
              </includes>
              <filtering>true</filtering>
          </resource>
      </resources>
      <plugins>
         <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <configuration>
               <descriptors>
                  <descriptor>src/assembly/jaxws-jar.xml</descriptor>
               </descriptors>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.jvnet.jax-ws-commons</groupId>
            <artifactId>jaxws-maven-plugin</artifactId>
            <executions>
               <execution>
                  <configuration>
                     <wsdlDirectory>
                        src/main/resources
                     </wsdlDirectory>
                     <wsdlFiles>
                        <wsdlFile>DoubleIt.wsdl</wsdlFile>
                     </wsdlFiles>
                     <wsdlLocation>/*</wsdlLocation>
                     <sourceDestDir>
                        ${basedir}/target/generated-sources
                     </sourceDestDir>
                  </configuration>
               </execution>
            </executions>
         </plugin>
      </plugins>
      <!-- Name of the generated WAR file -->
      <finalName>doubleit</finalName>
   </build>

</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.metro-x509-profile</groupId>
      <artifactId>metro-x509-profile</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>metro-x509-profile-war</artifactId>
   <name>${wspwar.module.name}</name>
   <packaging>war</packaging>

   <dependencies>
      <dependency>
          <groupId>${project.parent.groupId}</groupId>
          <artifactId>${project.parent.artifactId}-service</artifactId>
          <version>1.0-SNAPSHOT</version>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <artifactId>maven-war-plugin</artifactId>
            <configuration>
                <webXml>src/main/webapp/WEB-INF/web.xml</webXml>
                <webResources>
                    <resource>
                        <!-- Retrieving from target instead of src as WSDL
                             file has keystore location filtered (placed) 
                             into it. Can alternatively read from src and
                             have this module do the filtering instead.
                        -->
                        <directory>../service/target/classes</directory>
                        <targetPath>WEB-INF/wsdl</targetPath>
                        <includes>
                            <include>*.wsdl</include>
                        </includes>
                    </resource>
                </webResources>
            </configuration>
         </plugin>
      </plugins>
      <!-- Name of the generated WAR file -->
      <finalName>doubleit</finalName>
   </build>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.opensaml-with-web-services</groupId>
      <artifactId>opensaml-with-web-services</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>opensaml-with-web-services-client</artifactId>
   <name>${wsc.module.name}</name>
   <packaging>jar</packaging>

   <dependencies>
      <dependency>
         <groupId>org.gmazza.blog-samples.opensaml-with-web-services</groupId>
         <artifactId>opensaml-with-web-services-service</artifactId>
         <classifier>jaxws</classifier>
         <version>1.0-SNAPSHOT</version>
      </dependency>
   </dependencies>

   <build>
      <!-- mvn exec:exec to run SOAP client -->
      <plugins>
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
         </plugin>
      </plugins>
   </build>
</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza</groupId>
      <artifactId>blog-samples</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <groupId>org.gmazza.blog-samples.opensaml-with-web-services</groupId>
   <artifactId>opensaml-with-web-services</artifactId>
   <name>Tutorial: OpenSAML with web services</name>
   <packaging>pom</packaging>
   <url>http://www.jroller.com/gmazza/entry/opensaml_with_web_services</url>

   <modules>
      <module>service</module>
      <module>war</module>
      <module>client</module>
   </modules>

   <dependencies>
      <dependency>
         <groupId>org.opensaml</groupId>
         <artifactId>opensaml</artifactId>
         <version>2.5.1-1</version>
      </dependency>
      <dependency>
         <groupId>org.slf4j</groupId>
         <artifactId>slf4j-jdk14</artifactId>
      </dependency>
   </dependencies>

   <profiles>
      <profile>
         <id>CXF</id>
         <!-- To use Metro by default, move activation element to its profile below  -->
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <dependencies>
            <dependency>
               <groupId>org.apache.cxf</groupId>
               <artifactId>cxf-rt-frontend-jaxws</artifactId>
            </dependency>
            <dependency>
               <groupId>org.apache.cxf</groupId>
               <artifactId>cxf-rt-transports-http</artifactId>
            </dependency>
         </dependencies>
      </profile>

      <profile>
         <id>Metro</id>
         <dependencies>
            <dependency>
               <groupId>org.glassfish.metro</groupId>
               <artifactId>webservices-rt</artifactId>
            </dependency>
         </dependencies>
      </profile>
   </profiles>

</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.opensaml-with-web-services</groupId>
      <artifactId>opensaml-with-web-services</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>opensaml-with-web-services-service</artifactId>
   <name>${wsp.module.name}</name>
   <packaging>jar</packaging>

   <build>
      <plugins>
         <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <configuration>
               <descriptors>
                  <descriptor>src/assembly/jaxws-jar.xml</descriptor>
               </descriptors>
            </configuration>
         </plugin>
      </plugins>
      <!-- Name of the generated WAR file -->
      <finalName>doubleit</finalName>
   </build>

   <profiles>
      <profile>
         <id>CXF</id>
         <!-- To use Metro by default, move activation element to its profile below  -->
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.cxf</groupId>
                  <artifactId>cxf-codegen-plugin</artifactId>
                  <executions>
                     <execution>
                        <configuration>
                           <sourceRoot>
                              ${basedir}/target/generated-sources
                           </sourceRoot>
                           <wsdlOptions>
                              <wsdlOption>
                                 <wsdl>
                                    ${basedir}/src/main/resources/DoubleIt.wsdl
                                 </wsdl>
                                 <wsdlLocation>classpath:DoubleIt.wsdl</wsdlLocation>
                              </wsdlOption>
                           </wsdlOptions>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>

      <profile>
         <id>Metro</id>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.jvnet.jax-ws-commons</groupId>
                  <artifactId>jaxws-maven-plugin</artifactId>
                  <executions>
                     <execution>
                        <configuration>
                           <wsdlDirectory>
                              src/main/resources
                           </wsdlDirectory>
                           <wsdlFiles>
                              <wsdlFile>DoubleIt.wsdl</wsdlFile>
                           </wsdlFiles>
                           <wsdlLocation>/*</wsdlLocation>
                           <sourceDestDir>
                              ${basedir}/target/generated-sources
                           </sourceDestDir>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>
   </profiles>
</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.opensaml-with-web-services</groupId>
      <artifactId>opensaml-with-web-services</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>opensaml-with-web-services-war</artifactId>
   <name>${wspwar.module.name}</name>
   <packaging>war</packaging>

   <dependencies>
      <dependency>
          <groupId>org.gmazza.blog-samples.opensaml-with-web-services</groupId>
          <artifactId>opensaml-with-web-services-service</artifactId>
          <version>1.0-SNAPSHOT</version>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.tomcat.maven</groupId>
            <artifactId>tomcat7-maven-plugin</artifactId>
         </plugin>
         <plugin>
            <artifactId>maven-war-plugin</artifactId>
            <configuration>
                <webXml>src/main/webapp/WEB-INF/web.xml</webXml>
                <webResources>
                    <resource>
                        <directory>../service/src/main/resources</directory>
                        <targetPath>WEB-INF/wsdl</targetPath>
                        <includes>
                            <include>*.wsdl</include>
                        </includes>
                    </resource>
                </webResources>
            </configuration>
         </plugin>
      </plugins>
      <!-- Name of the generated WAR file -->
      <finalName>doubleit</finalName>
   </build>

   <profiles>
      <profile>
         <id>CXF</id>
         <!-- Remove activation element below if using Metro  -->
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <dependencies>
            <dependency>
               <groupId>org.springframework</groupId>
               <artifactId>spring-web</artifactId>
            </dependency>
         </dependencies>
      </profile>
   </profiles>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>org.gmazza</groupId>
    <artifactId>blog-samples</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>Root POM for Blog Samples</name>
    <description>Source code for web service tutorials at http://www.jroller.com/gmazza/entry/blog_article_index</description>
    <packaging>pom</packaging>

    <modules>
        <module>web_service_tutorial</module>
        <module>soap_client_tutorial</module>
        <module>ssl_for_web_services</module>
        <module>cxf_usernametoken_profile</module>
        <module>metro_usernametoken_profile</module>
        <module>cxf_x509_profile</module>
        <module>metro_x509_profile</module>
        <module>cxf_sts_tutorial</module>
        <module>metro_sts_tutorial</module>
        <module>opensaml_with_web_services</module>
        <module>junit_for_soap_clients</module>
        <module>junit_web_service_testing</module>
        <module>asynchronous_web_service_calls</module>
        <module>jaxws_handler_tutorial</module>
        <module>jaxwshandlers_to_cxfinterceptors</module>
        <module>enhancing_jaxb_artifacts</module>
        <module>updating_databases_with_jaxws</module>
        <module>quartz_scheduled_soap_calls</module>
        <module>soap_contract_xslt_cleanup</module>
        <module>using_mtom_and_apache_fop</module>
        <module>cxf_soap_over_jms</module>
        <module>web_service_ear_tutorial</module>
    </modules>

    <prerequisites>
        <maven>3.0</maven>
    </prerequisites>

    <!-- Note web_service_tutorial, java_first_web_service, and soap_client_tutorial  
         poms are standalone (do not reference this pom) to help keep the
         corresponding blog tutorials as clear as possible.
         Others reference this pom and hence rely on the below settings -->

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <cxf.version>2.7.6</cxf.version>
        <spring.version>3.0.7.RELEASE</spring.version>
        <slf4j.version>1.7.5</slf4j.version>
        <wsp.module.name>-- Web Service Provider</wsp.module.name>
        <wspwar.module.name>-- Service WAR file</wspwar.module.name>
        <stswar.module.name>-- STS WAR file</stswar.module.name>
        <wsc.module.name>-- SOAP Client</wsc.module.name>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
	        <groupId>org.springframework</groupId>
	        <artifactId>spring-beans</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-frontend-jaxws</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-transports-http</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-ws-security</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <dependency>
               <groupId>org.apache.cxf</groupId>
               <artifactId>cxf-rt-transports-http-jetty</artifactId>
               <version>${cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf.services.sts</groupId>
                <artifactId>cxf-services-sts-core</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-ws-mex</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-jdk14</artifactId>
                <version>${slf4j.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-simple</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <!-- 
                 See http://metro.java.net/guide/Using_Mavenized_Metro_Binaries.html  
                 for more Metro/Maven config info 
            -->
            <dependency>
                <groupId>org.glassfish.metro</groupId>
                <artifactId>webservices-rt</artifactId>
                <version>2.3</version>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>servlet-api</artifactId>
                <version>2.5</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.11</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.derby</groupId>
                <artifactId>derby</artifactId>
                <version>10.9.1.0</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.0</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <downloadSources>true</downloadSources>
                    <!--downloadJavadocs>true</downloadJavadocs-->
                    <useProjectReferences>true</useProjectReferences>
                </configuration>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <!-- Below plugin provides a separate JAR for the JAX-WS artifacts 
                     (i.e., the objects created by running wsdl2java or wsimport), as this JAR 
                     will also be used by the SOAP client for each web service provider using this plugin. 
                     More info: http://maven.apache.org/plugins/maven-assembly-plugin/ 
                -->
                <plugin>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>2.4</version>
                    <configuration>
                        <appendAssemblyId>true</appendAssemblyId>
                        <attach>true</attach>
                    </configuration>
                    <executions>
                        <execution>
                            <id>make-assembly</id>
                            <phase>package</phase>
                            <goals>
                                <goal>single</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- Below used with client poms, default params for running client via mvn exec:exec -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>1.2.1</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>exec</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <executable>java</executable>
                        <arguments>
                            <argument>-classpath</argument>
                            <classpath />
                            <!-- Uncomment below for debug output with CXF. Will 
                                need to configure client-side interceptors and supply a java.util.logging 
                                properties file: http://cxf.apache.org/docs/debugging-and-logging.html 
                                Place the logging file in the client folder. -->
                            <!--argument> 
                                -Djava.util.logging.config.file=mylogging.properties 
                            </argument -->
                            <!-- Uncomment below for debug output with Metro -->
                            <!--argument>
                                -Dcom.sun.xml.ws.transport.http.client.HttpTransportPipe.dump=true
                            </argument-->
                            <argument>
                                client.WSClient
                            </argument>
                        </arguments>
                    </configuration>
                </plugin>
                <!-- Below used with OSGi deployment; in service poms -->
                <plugin>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>maven-bundle-plugin</artifactId>
                    <version>2.3.7</version>
                    <extensions>true</extensions>
                </plugin>
                <!-- Below used with CXF service poms -->
                <plugin>
                    <groupId>org.apache.cxf</groupId>
                    <artifactId>cxf-codegen-plugin</artifactId>
                    <version>${cxf.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>wsdl2java</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- Below used with Metro service poms -->
                <plugin>
                    <groupId>org.jvnet.jax-ws-commons</groupId>
                    <artifactId>jaxws-maven-plugin</artifactId>
                    <version>2.2.1</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>wsimport</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- 
                  For Tomcat 7, both embedded (tomcat7:run-war) and standalone
                  deployment - tomcat7:deploy/undeploy/redeploy 

                  How to configure Maven and Tomcat to use below plugin:
                  http://www.jroller.com/gmazza/entry/web_service_tutorial#WFstep8
                --> 
                <plugin>
                    <groupId>org.apache.tomcat.maven</groupId>
                    <artifactId>tomcat7-maven-plugin</artifactId>
                    <version>2.1</version>
                    <configuration>
                        <server>myTomcat</server>
                        <url>http://localhost:8080/manager/text</url>
                        <path>/${project.build.finalName}</path>
                    </configuration>
                </plugin>
                <!-- Never used; bad URL error message will remind those 
                     inadvertently using tomcat:xxx instead of tomcat7:xxx -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>tomcat-maven-plugin</artifactId>
                    <version>1.1</version>
                    <configuration>
                        <url>Use tomcat7:xxx instead of tomcat:xxx goals!</url>
                    </configuration>
                </plugin>
                <!-- Below for WAR submodules, defaults for when creating the WAR file. --> 
                <plugin>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>2.3</version>
                </plugin>
                <!-- Below activates any integration tests where testcases require
                     the JAR or WAR to be created first (see http://tinyurl.com/7zfp7v7) -->
	            <plugin>
	                <groupId>org.apache.maven.plugins</groupId>
	                <artifactId>maven-failsafe-plugin</artifactId>
	                <version>2.12.4</version>
	                <executions>
	                    <execution>
	                        <goals>
	                            <goal>integration-test</goal>
	                            <goal>verify</goal>
	                        </goals>
	                    </execution>
	                </executions>
	            </plugin>
	            <plugin>
	                <groupId>org.codehaus.mojo</groupId>
	                <artifactId>xml-maven-plugin</artifactId>
	                <version>1.0</version>
	            </plugin>
            </plugins>        
        </pluginManagement>
    </build>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
        http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza</groupId>
      <artifactId>blog-samples</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <groupId>org.gmazza.blog-samples.quartz_scheduled_soap_calls</groupId>
   <artifactId>quartz_scheduled_soap_calls</artifactId>
   <packaging>war</packaging>
   <name>Tutorial: Quartz Scheduled SOAP Calls</name>
   <url>http://www.jroller.com/gmazza/entry/quartz_scheduled_soap_calls</url>

   <dependencies>
      <dependency>
         <groupId>org.quartz-scheduler</groupId>
         <artifactId>quartz</artifactId>
         <version>2.1.5</version>
      </dependency>
      <dependency>
         <groupId>javax.transaction</groupId>
         <artifactId>jta</artifactId>
         <version>1.1</version>
      </dependency>
      <dependency>
         <groupId>org.slf4j</groupId>
         <artifactId>slf4j-log4j12</artifactId>
         <version>1.6.6</version>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.tomcat.maven</groupId>
            <artifactId>tomcat7-maven-plugin</artifactId>
         </plugin>
      </plugins>
      <finalName>myscheduler</finalName>
   </build>

   <profiles>
      <profile>
         <id>CXF</id>
         <!--
            To use Metro by default, move this activation element to its
            profile below, or use -PMetro with all mvn commands.
         -->
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <dependencies>
            <dependency>
               <groupId>org.apache.cxf</groupId>
               <artifactId>cxf-rt-frontend-jaxws</artifactId>
            </dependency>
            <dependency>
               <groupId>org.apache.cxf</groupId>
               <artifactId>cxf-rt-transports-http</artifactId>
            </dependency>
         </dependencies>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.cxf</groupId>
                  <artifactId>cxf-codegen-plugin</artifactId>
                  <executions>
                     <execution>
                        <configuration>
                           <wsdlOptions>
                              <wsdlOption>
                                 <wsdl>
                                    ${basedir}/src/main/resources/DoubleIt.wsdl
                                 </wsdl>
                                 <wsdlLocation>classpath:DoubleIt.wsdl</wsdlLocation>
                              </wsdlOption>
                           </wsdlOptions>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>
      <profile>
         <id>Metro</id>
         <dependencies>
            <dependency>
               <groupId>org.glassfish.metro</groupId>
               <artifactId>webservices-rt</artifactId>
            </dependency>
         </dependencies>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.jvnet.jax-ws-commons</groupId>
                  <artifactId>jaxws-maven-plugin</artifactId>
                  <executions>
                     <execution>
                        <configuration>
                           <wsdlDirectory>src/main/resources</wsdlDirectory>
                           <wsdlFiles>
                              <wsdlFile>DoubleIt.wsdl</wsdlFile>
                           </wsdlFiles>
                           <wsdlLocation>/*</wsdlLocation>
                           <sourceDestDir>
                              ${basedir}/target/generated-sources
                           </sourceDestDir>
                     </configuration>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>
   </profiles>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <groupId>org.gmazza.blog-samples.resteasy-stamp-collection</groupId>
   <artifactId>resteasy-stamp-collection</artifactId>
   <version>1.0-SNAPSHOT</version>
   <name>Tutorial: RESTEasy Stamp Collection</name>
   <packaging>pom</packaging>
   <url>http://www.jroller.com/gmazza/entry/resteasy_stamp_collection</url>

   <modules>
      <module>server</module>
   </modules>

   <prerequisites>
      <maven>3.0.5</maven>
   </prerequisites>

   <properties>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
   </properties>

   <dependencyManagement>
       <dependencies>
       <dependency>
           <groupId>junit</groupId>
           <artifactId>junit</artifactId>
           <version>4.11</version>
       </dependency>
       </dependencies>
   </dependencyManagement>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.0</version>
            <configuration>
               <source>1.6</source>
               <target>1.6</target>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-eclipse-plugin</artifactId>
            <version>2.8</version>
            <configuration>
               <downloadSources>true</downloadSources>
               <!--downloadJavadocs>true</downloadJavadocs-->
               <!--useProjectReferences>false</useProjectReferences-->
            </configuration>
         </plugin>
      </plugins>
      <pluginManagement>
         <plugins>
         </plugins>
      </pluginManagement>
   </build>

</project>

<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
       <groupId>org.gmazza.blog-samples.resteasy-stamp-collection</groupId>
       <artifactId>resteasy-stamp-collection</artifactId>
       <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>resteasy-stamp-collection-server</artifactId>
   <name>RESTEasy Stamp Server</name>
   <packaging>war</packaging>

   <dependencies>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>4.2.5.Final</version>
        </dependency>
        <!--dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
            <version>1.6.4</version>
        </dependency-->
       <dependency>
          <groupId>org.jboss.resteasy</groupId>
          <artifactId>resteasy-jaxrs</artifactId>
          <version>3.0.4.Final</version>
       </dependency>
       <dependency>
           <groupId>org.jboss.resteasy</groupId>
           <artifactId>resteasy-jaxb-provider</artifactId>
           <version>3.0.4.Final</version>
       </dependency>
        <!-- Activate either of these if you wish to use
             a different JPA stack -->
        <!--dependency>
            <groupId>org.apache.openjpa</groupId>
            <artifactId>openjpa</artifactId>
            <version>2.2.2</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>eclipselink</artifactId>
            <version>2.5.0</version>
        </dependency-->
        <!-- TODO: Different JAX-RS options? -->
       <dependency>
           <groupId>commons-io</groupId>
           <artifactId>commons-io</artifactId>
           <version>2.4</version>
       </dependency>
       <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!--plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <executable>java</executable>
                    <arguments>
                        <argument>-classpath</argument>
                        <classpath/>
                        <argument>
                            service.SampleRun
                        </argument>
                    </arguments>
                </configuration>
            </plugin-->
        </plugins>
        <finalName>stampcollection</finalName>
    </build>

    <profiles>
        <profile>
            <id>EasyDeploy</id>
            <!-- 
                 EasyDeploy uses embedded Tomcat and an in-memory Derby database
                 to eliminate setup needs, just mvn tomcat7:run-war for a running
                 server.
            -->
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.apache.derby</groupId>
                    <artifactId>derbynet</artifactId>
                    <version>10.10.1.1</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.derby</groupId>
                    <artifactId>derbyclient</artifactId>
                    <version>10.10.1.1</version>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.btmatthews.maven.plugins.inmemdb</groupId>
                        <artifactId>inmemdb-maven-plugin</artifactId>
                        <version>1.3.0</version>
                        <configuration>
                            <monitorKey>inmemdb</monitorKey>
                            <monitorPort>11537</monitorPort>
                        </configuration>
                        <executions>
                            <execution>
                                <id>run</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <daemon>true</daemon>
                                    <type>derby</type>
                                    <database>stampdb</database>
                                    <username>APP</username>
                                    <password>APP</password>
                                    <port>3223</port>
                                    <sources>
                                        <script>
                                            <sourceFile>src/main/config/create-database-derby.sql</sourceFile>
                                        </script>
                                    </sources>
                                </configuration>
                            </execution>
                            <!--execution>
                                <id>stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution-->
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.tomcat.maven</groupId>
                        <artifactId>tomcat7-maven-plugin</artifactId>
                        <version>2.1</version>
                        <configuration>
                            <server>myTomcat</server>
                            <url>http://localhost:8080/manager/text</url>
                            <path>/${project.build.finalName}</path>
                        </configuration>
                        <executions>
                            <execution>
                                <id>tomcat-run</id>
                                <goals>
                                    <goal>run-war</goal>
                                </goals>
                                <phase>pre-integration-test</phase>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.apache.derby</groupId>
                                <artifactId>derbynet</artifactId>
                                <version>10.10.1.1</version>
                            </dependency>
                            <dependency>
                                <groupId>org.apache.derby</groupId>
                                <artifactId>derbyclient</artifactId>
                                <version>10.10.1.1</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>FullDeploy</id>
            <!-- 
                 FullDeploy assumes a running MySQL database and deployment of the
                 WAR on a standalone servlet container (tested with JBoss).
            -->
            <dependencies>
                <dependency>
	                <groupId>mysql</groupId>
	                <artifactId>mysql-connector-java</artifactId>
	                <version>5.1.26</version>
                </dependency>
            </dependencies>
        </profile>
    </profiles>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <groupId>org.gmazza.blog-samples.soap-client-tutorial</groupId>
   <artifactId>soap-client-tutorial</artifactId>
   <version>1.0-SNAPSHOT</version>
   <name>Tutorial: Standalone SOAP Client</name>
   <packaging>jar</packaging>
   <url>http://www.jroller.com/gmazza/entry/soap_client_tutorial</url>

   <prerequisites>
      <maven>3.0</maven>
   </prerequisites>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.0</version>
            <configuration>
               <source>1.6</source>
               <target>1.6</target>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-eclipse-plugin</artifactId>
            <version>2.8</version>
            <configuration>
               <downloadSources>true</downloadSources>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.2.1</version>
            <executions>
               <execution>
                  <goals>
                     <goal>exec</goal>
                  </goals>
               </execution>
            </executions>
            <configuration>
               <executable>java</executable>
               <arguments>
                  <argument>-classpath</argument>
                  <classpath />
                  <!-- Uncomment below for debugging with Metro. -->
                  <!--argument>
                     -Dcom.sun.xml.ws.transport.http.client.HttpTransportPipe.dump=true
                     </argument-->
                  <!-- Uncomment below for debugging with CXF. -->
                  <!--argument>
                     -Djava.util.logging.config.file=${env.CXF_HOME}/etc/logging.properties
                     </argument-->
                  <argument>client.WSClient</argument>
                  <!-- Modify argument below for the item you wish to search eBay for. -->
                  <argument>camera</argument>
               </arguments>
            </configuration>
         </plugin>
      </plugins>
   </build>

   <profiles>
      <profile>
         <id>CXF</id>
         <!-- To use Metro by default, move this activation element to its profile below  -->
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <properties>
            <cxf.version>2.7.6</cxf.version>
         </properties>
         <dependencies>
            <dependency>
               <groupId>org.apache.cxf</groupId>
               <artifactId>cxf-rt-frontend-jaxws</artifactId>
               <version>${cxf.version}</version>
            </dependency>
            <dependency>
               <groupId>org.apache.cxf</groupId>
               <artifactId>cxf-rt-transports-http</artifactId>
               <version>${cxf.version}</version>
            </dependency>
         </dependencies>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.cxf</groupId>
                  <artifactId>cxf-codegen-plugin</artifactId>
                  <version>${cxf.version}</version>
                  <executions>
                     <execution>
                        <goals>
                           <goal>wsdl2java</goal>
                        </goals>
                        <configuration>
                           <sourceRoot>${basedir}/target/generated-sources</sourceRoot>
                           <wsdlOptions>
                              <wsdlOption>
                                 <wsdl>
                                    ${basedir}/src/main/resources/ShoppingService.wsdl
                                 </wsdl>
                                 <wsdlLocation>classpath:ShoppingService.wsdl</wsdlLocation>
                              </wsdlOption>
                           </wsdlOptions>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>
      <profile>
         <id>Metro</id>
         <dependencies>
            <dependency>
               <groupId>org.glassfish.metro</groupId>
               <artifactId>webservices-rt</artifactId>
               <version>2.3</version>
            </dependency>
         </dependencies>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.jvnet.jax-ws-commons</groupId>
                  <artifactId>jaxws-maven-plugin</artifactId>
                  <version>2.2.1</version>
                  <executions>
                     <execution>
                        <goals>
                           <goal>wsimport</goal>
                        </goals>
                        <configuration>
                           <wsdlDirectory>src/main/resources</wsdlDirectory>
                           <wsdlFiles>
                              <wsdlFile>ShoppingService.wsdl</wsdlFile>
                           </wsdlFiles>
                           <wsdlLocation>/*</wsdlLocation>
                           <sourceDestDir>${basedir}/target/generated-sources</sourceDestDir>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>
   </profiles>
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza</groupId>
      <artifactId>blog-samples</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>

   <groupId>org.gmazza.blog-samples.soap_contract_xslt_cleanup</groupId>
   <artifactId>soap_contract_xslt_cleanup</artifactId>
   <name>Tutorial: XSLT to organize SOAP contracts</name>
   <packaging>pom</packaging>
   <url>http://www.jroller.com/gmazza/entry/soap_contract_xslt_cleanup</url>

   <build>
      <plugins>
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>xml-maven-plugin</artifactId>
            <executions>
               <execution>
                  <goals>
                     <goal>transform</goal>
                  </goals>
               </execution>
            </executions>
            <configuration>
               <transformationSets>
                  <transformationSet>
                     <dir>src/main/resources</dir>
                     <stylesheet>src/main/config/xsdCleanup.xsl</stylesheet>
                     <includes>
                        <include>**/*.xsd</include>
                     </includes>
                  </transformationSet>
                  <transformationSet>
                     <dir>src/main/resources</dir>
                     <stylesheet>src/main/config/wsdlCleanup.xsl</stylesheet>
                     <includes>
                        <include>**/*.wsdl</include>
                     </includes>
                  </transformationSet>
               </transformationSets>
            </configuration>
            <!-- If XSLT 2.0 needed -->
            <!--dependencies>
               <dependency>
                  <groupId>net.sf.saxon</groupId>
                  <artifactId>saxon</artifactId>
                  <version>8.7</version>
               </dependency>
            </dependencies-->
         </plugin>
      </plugins>
   </build>

</project>

<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.ssl-for-web-services</groupId>
      <artifactId>ssl-for-web-services</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>ssl-for-web-services-client</artifactId>
   <name>${wsc.module.name}</name>
   <packaging>jar</packaging>

   <dependencies>
      <dependency>
         <groupId>org.gmazza.blog-samples.ssl-for-web-services</groupId>
         <artifactId>ssl-for-web-services-service</artifactId>
         <!-- Classifier below used with Maven Assembly Plugin to 
              specify subset of above artifact needed. 
         -->
         <classifier>jaxws</classifier>
         <version>1.0-SNAPSHOT</version>
      </dependency>
      <!-- Add below dependency if using CXF *and* a cxf.xml config file -->
      <!--dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-context</artifactId>
      </dependency-->
   </dependencies>

   <!-- mvn exec:exec to run SOAP client -->
   <build>
      <plugins>
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
         </plugin>
      </plugins>
   </build>
</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
       <groupId>org.gmazza</groupId>
       <artifactId>blog-samples</artifactId>
       <version>1.0-SNAPSHOT</version>
   </parent>
   <groupId>org.gmazza.blog-samples.ssl-for-web-services</groupId>
   <artifactId>ssl-for-web-services</artifactId>
   <name>Tutorial: Web Service w/SSL</name>
   <packaging>pom</packaging>
   <url>http://www.jroller.com/gmazza/entry/ssl_for_web_services</url>

   <modules>
      <module>service</module>
      <module>war</module>
      <module>client</module>
   </modules>

   <profiles>
      <profile>
         <id>CXF</id>
         <!-- To use Metro by default, move activation element to its profile below  -->
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <dependencies>
            <dependency>
               <groupId>org.apache.cxf</groupId>
               <artifactId>cxf-rt-frontend-jaxws</artifactId>
            </dependency>
            <dependency>
               <groupId>org.apache.cxf</groupId>
               <artifactId>cxf-rt-transports-http</artifactId>
            </dependency>
         </dependencies>
      </profile>

      <profile>
         <id>Metro</id>
         <dependencies>
            <dependency>
               <groupId>org.glassfish.metro</groupId>
               <artifactId>webservices-rt</artifactId>
            </dependency>
         </dependencies>
      </profile>
   </profiles>

</project>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.gmazza.blog-samples.ssl-for-web-services</groupId>
        <artifactId>ssl-for-web-services</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <artifactId>ssl-for-web-services-service</artifactId>
    <name>${wsp.module.name}</name>
    <packaging>jar</packaging>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptors>
                        <descriptor>src/assembly/jaxws-jar.xml</descriptor>
                    </descriptors>
                </configuration>
            </plugin>
        </plugins>
        <!-- Name of the generated WAR file -->
        <finalName>doubleit</finalName>
    </build>

    <profiles>
        <profile>
            <id>CXF</id>
            <!-- To use Metro by default, move activation element to its 
                profile below -->
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.cxf</groupId>
                        <artifactId>cxf-codegen-plugin</artifactId>
                        <executions>
                            <execution>
                                <configuration>
                                    <sourceRoot>
                                        ${basedir}/target/generated-sources
                                    </sourceRoot>
                                    <wsdlOptions>
                                        <wsdlOption>
                                            <wsdl>
                                                ${basedir}/src/main/resources/DoubleIt.wsdl
                                            </wsdl>
                                            <wsdlLocation>classpath:DoubleIt.wsdl</wsdlLocation>
                                        </wsdlOption>
                                    </wsdlOptions>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>Metro</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jvnet.jax-ws-commons</groupId>
                        <artifactId>jaxws-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <configuration>
                                    <wsdlDirectory>
                                        src/main/resources
                                    </wsdlDirectory>
                                    <wsdlFiles>
                                        <wsdlFile>DoubleIt.wsdl</wsdlFile>
                                    </wsdlFiles>
                                    <wsdlLocation>/*</wsdlLocation>
                                    <sourceDestDir>
                                        ${basedir}/target/generated-sources
                                    </sourceDestDir>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.ssl-for-web-services</groupId>
      <artifactId>ssl-for-web-services</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>ssl-for-web-services-war</artifactId>
   <name>${wspwar.module.name}</name>
   <packaging>war</packaging>

   <dependencies>
      <dependency>
          <groupId>org.gmazza.blog-samples.ssl-for-web-services</groupId>
          <artifactId>ssl-for-web-services-service</artifactId>
          <version>1.0-SNAPSHOT</version>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.tomcat.maven</groupId>
            <artifactId>tomcat7-maven-plugin</artifactId>
         </plugin>
         <plugin>
            <artifactId>maven-war-plugin</artifactId>
            <configuration>
                <webXml>src/main/webapp/WEB-INF/web.xml</webXml>
                <webResources>
                    <resource>
                        <directory>../service/src/main/resources</directory>
                        <targetPath>WEB-INF/wsdl</targetPath>
                        <includes>
                            <include>*.wsdl</include>
                        </includes>
                    </resource>
                </webResources>
            </configuration>
         </plugin>
      </plugins>
      <!-- Name of the generated WAR file -->
      <finalName>doubleit</finalName>
   </build>

   <profiles>
      <profile>
         <id>CXF</id>
         <!-- Remove activation element below if using Metro  -->
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <dependencies>
            <dependency>
               <groupId>org.springframework</groupId>
               <artifactId>spring-web</artifactId>
               <version>3.0.6.RELEASE</version>
            </dependency>
         </dependencies>
      </profile>
   </profiles>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.updating_databases_with_jaxws</groupId>
      <artifactId>updating_databases_with_jaxws</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>updating_databases_with_jaxws-client</artifactId>
   <name>${wsc.module.name}</name>
   <packaging>jar</packaging>

   <dependencies>
      <dependency>
         <groupId>org.gmazza.blog-samples.updating_databases_with_jaxws</groupId>
         <artifactId>updating_databases_with_jaxws-service</artifactId>
         <classifier>jaxws</classifier>
         <version>1.0-SNAPSHOT</version>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <!-- mvn exec:exec to run SOAP client, see blog-samples/pom.xml
              for this plugin's configuration -->
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
         </plugin>
      </plugins>
   </build>
</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza</groupId>
      <artifactId>blog-samples</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <groupId>org.gmazza.blog-samples.updating_databases_with_jaxws</groupId>
   <artifactId>updating_databases_with_jaxws</artifactId>
   <packaging>pom</packaging>
   <name>Tutorial: Using JAX-WS to update databases</name>
   <url>http://www.jroller.com/gmazza/entry/updating_databases_with_jaxws</url>

   <modules>
      <module>service</module>
      <module>war</module>
      <module>client</module>
   </modules>

   <profiles>
      <profile>
         <id>CXF</id>
         <!-- To use Metro by default, move activation element to its profile below  -->
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <dependencies>
            <dependency>
               <groupId>org.apache.cxf</groupId>
               <artifactId>cxf-rt-frontend-jaxws</artifactId>
            </dependency>
            <dependency>
               <groupId>org.apache.cxf</groupId>
               <artifactId>cxf-rt-transports-http</artifactId>
            </dependency>
         </dependencies>
      </profile>

      <profile>
         <id>Metro</id>
         <dependencies>
            <dependency>
               <groupId>org.glassfish.metro</groupId>
               <artifactId>webservices-rt</artifactId>
            </dependency>
         </dependencies>
      </profile>
   </profiles>

</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.updating_databases_with_jaxws</groupId>
      <artifactId>updating_databases_with_jaxws</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>updating_databases_with_jaxws-service</artifactId>
   <name>${wsp.module.name}</name>
   <packaging>jar</packaging>

   <dependencies>
      <dependency>
         <groupId>org.apache.derby</groupId>
         <artifactId>derby</artifactId>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <configuration>
               <descriptors>
                  <descriptor>src/assembly/jaxws-jar.xml</descriptor>
               </descriptors>
            </configuration>
         </plugin>
      </plugins>
   </build>

   <profiles>
      <profile>
         <id>CXF</id>
         <!-- To use Metro, move below activation element to its profile -->
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.cxf</groupId>
                  <artifactId>cxf-codegen-plugin</artifactId>
                  <executions>
                     <execution>
                        <configuration>
                           <wsdlOptions>
                              <wsdlOption>
                                 <wsdl>
                                    ${basedir}/src/main/resources/Employee.wsdl
                                 </wsdl>
                                 <wsdlLocation>classpath:Employee.wsdl</wsdlLocation>
                              </wsdlOption>
                           </wsdlOptions>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>

      <profile>
         <id>Metro</id>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.jvnet.jax-ws-commons</groupId>
                  <artifactId>jaxws-maven-plugin</artifactId>
                  <executions>
                     <execution>
                        <configuration>
                           <wsdlDirectory>
                              src/main/resources
                           </wsdlDirectory>
                           <wsdlFiles>
                              <wsdlFile>Employee.wsdl</wsdlFile>
                           </wsdlFiles>
                           <wsdlLocation>/*</wsdlLocation>
                           <sourceDestDir>
                              ${basedir}/target/generated-sources
                           </sourceDestDir>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>
   </profiles>
</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.updating_databases_with_jaxws</groupId>
      <artifactId>updating_databases_with_jaxws</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>updating_databases_with_jaxws-war</artifactId>
   <name>${wspwar.module.name}</name>
   <packaging>war</packaging>

   <dependencies>
      <dependency>
          <groupId>org.gmazza.blog-samples.updating_databases_with_jaxws</groupId>
          <artifactId>updating_databases_with_jaxws-service</artifactId>
          <version>1.0-SNAPSHOT</version>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.tomcat.maven</groupId>
            <artifactId>tomcat7-maven-plugin</artifactId>
         </plugin>
         <plugin>
            <artifactId>maven-war-plugin</artifactId>
            <configuration>
                <webXml>src/main/webapp/WEB-INF/web.xml</webXml>
                <webResources>
                    <resource>
                        <directory>../service/src/main/resources</directory>
                        <targetPath>WEB-INF/wsdl</targetPath>
                        <includes>
                            <include>*.wsdl</include>
                        </includes>
                    </resource>
                </webResources>
            </configuration>
         </plugin>
      </plugins>
      <!-- Name of the generated WAR file -->
      <finalName>empservice</finalName>
   </build>

   <profiles>
      <profile>
         <id>CXF</id>
         <!-- Remove activation element below if using Metro  -->
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <dependencies>
            <dependency>
               <groupId>org.springframework</groupId>
               <artifactId>spring-web</artifactId>
            </dependency>
         </dependencies>
      </profile>
   </profiles>

</project>

<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.using_mtom_and_apache_fop</groupId>
      <artifactId>using_mtom_and_apache_fop</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>using_mtom_and_apache_fop-client</artifactId>
   <name>${wsc.module.name}</name>
   <packaging>jar</packaging>

   <dependencies>
      <dependency>
         <groupId>org.gmazza.blog-samples.using_mtom_and_apache_fop</groupId>
         <artifactId>using_mtom_and_apache_fop-service</artifactId>
         <classifier>jaxws</classifier>
         <version>1.0-SNAPSHOT</version>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <!-- mvn exec:exec to run SOAP client, see blog-samples/pom.xml
              for this plugin's configuration -->
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
         </plugin>
      </plugins>
   </build>
</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza</groupId>
      <artifactId>blog-samples</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <groupId>org.gmazza.blog-samples.using_mtom_and_apache_fop</groupId>
   <artifactId>using_mtom_and_apache_fop</artifactId>
   <packaging>pom</packaging>
   <name>Tutorial: Using MTOM with Apache FOP</name>
   <url>http://www.jroller.com/gmazza/entry/using_mtom_and_apache_fop</url>

   <modules>
      <module>service</module>
      <module>war</module>
      <module>client</module>
   </modules>

   <profiles>
      <profile>
         <id>CXF</id>
         <!-- To use Metro by default, move activation element to its profile below  -->
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <dependencies>
            <dependency>
               <groupId>org.apache.cxf</groupId>
               <artifactId>cxf-rt-frontend-jaxws</artifactId>
            </dependency>
            <dependency>
               <groupId>org.apache.cxf</groupId>
               <artifactId>cxf-rt-transports-http</artifactId>
            </dependency>
         </dependencies>
      </profile>

      <profile>
         <id>Metro</id>
         <dependencies>
            <dependency>
               <groupId>org.glassfish.metro</groupId>
               <artifactId>webservices-rt</artifactId>
            </dependency>
         </dependencies>
      </profile>
   </profiles>

</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.using_mtom_and_apache_fop</groupId>
      <artifactId>using_mtom_and_apache_fop</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>using_mtom_and_apache_fop-service</artifactId>
   <name>${wsp.module.name}</name>
   <packaging>jar</packaging>

   <dependencies>
      <dependency>
         <groupId>org.apache.xmlgraphics</groupId>
         <artifactId>fop</artifactId>
         <version>1.0</version>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <configuration>
               <descriptors>
                  <descriptor>src/assembly/jaxws-jar.xml</descriptor>
               </descriptors>
            </configuration>
         </plugin>
      </plugins>
      <!-- Name of the generated WAR file -->
      <finalName>doubleit</finalName>
   </build>

   <profiles>
      <profile>
         <id>CXF</id>
         <!-- To use Metro, move below activation element to its profile -->
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.cxf</groupId>
                  <artifactId>cxf-codegen-plugin</artifactId>
                  <executions>
                     <execution>
                        <configuration>
                           <wsdlOptions>
                              <wsdlOption>
                                 <wsdl>
                                    ${basedir}/src/main/resources/DoubleIt.wsdl
                                 </wsdl>
                                 <wsdlLocation>classpath:DoubleIt.wsdl</wsdlLocation>
                              </wsdlOption>
                           </wsdlOptions>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>

      <profile>
         <id>Metro</id>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.jvnet.jax-ws-commons</groupId>
                  <artifactId>jaxws-maven-plugin</artifactId>
                  <executions>
                     <execution>
                        <configuration>
                           <wsdlDirectory>
                              src/main/resources
                           </wsdlDirectory>
                           <wsdlFiles>
                              <wsdlFile>DoubleIt.wsdl</wsdlFile>
                           </wsdlFiles>
                           <wsdlLocation>/*</wsdlLocation>
                           <sourceDestDir>
                              ${basedir}/target/generated-sources
                           </sourceDestDir>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
         <dependencies>
               <dependency>
               <groupId>javax.mail</groupId>
               <artifactId>mail</artifactId>
               <version>1.4.5</version>
            </dependency>
         </dependencies>
      </profile>
   </profiles>
</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.using_mtom_and_apache_fop</groupId>
      <artifactId>using_mtom_and_apache_fop</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>using_mtom_and_apache_fop-war</artifactId>
   <name>${wspwar.module.name}</name>
   <packaging>war</packaging>

   <dependencies>
      <dependency>
          <groupId>org.gmazza.blog-samples.using_mtom_and_apache_fop</groupId>
          <artifactId>using_mtom_and_apache_fop-service</artifactId>
          <version>1.0-SNAPSHOT</version>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.tomcat.maven</groupId>
            <artifactId>tomcat7-maven-plugin</artifactId>
         </plugin>
         <plugin>
            <artifactId>maven-war-plugin</artifactId>
            <configuration>
                <webXml>src/main/webapp/WEB-INF/web.xml</webXml>
                <webResources>
                    <resource>
                        <directory>../service/src/main/resources</directory>
                        <targetPath>WEB-INF/wsdl</targetPath>
                        <includes>
                            <include>*.wsdl</include>
                        </includes>
                    </resource>
                </webResources>
            </configuration>
         </plugin>
      </plugins>
      <!-- Name of the generated WAR file -->
      <finalName>doubleit</finalName>
   </build>

   <profiles>
      <profile>
         <id>CXF</id>
         <!-- Remove activation element below if using Metro  -->
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <dependencies>
            <dependency>
               <groupId>org.springframework</groupId>
               <artifactId>spring-web</artifactId>
            </dependency>
         </dependencies>
      </profile>
   </profiles>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.web-service-ear-tutorial</groupId>
      <artifactId>web-service-ear-tutorial</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>web-service-ear-tutorial-client</artifactId>
   <name>-- SOAP Client</name>
   <packaging>bundle</packaging>

   <dependencies>
      <dependency>
         <groupId>org.gmazza.blog-samples.web-service-tutorial</groupId>
         <artifactId>web-service-tutorial-service</artifactId>
         <!-- Classifier below used with Maven Assembly Plugin to 
              specify subset of above artifact needed. 
         -->
         <classifier>jaxws</classifier>
         <version>1.0-SNAPSHOT</version>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.2.1</version>
            <executions>
               <execution>
                  <goals>
                     <goal>exec</goal>
                  </goals>
               </execution>
            </executions>
            <configuration>
               <executable>java</executable>
               <arguments>
                  <argument>-classpath</argument>
                  <classpath/>
                  <!-- Uncomment below for debug output with Metro. -->
                  <!--argument>
                     -Dcom.sun.xml.ws.transport.http.client.HttpTransportPipe.dump=true
                  </argument-->
                  <!-- Uncomment below for debug output with CXF.  Will need to configure
                          client-side interceptors and supply a java.util.logging properties file:
                          http://cxf.apache.org/docs/debugging-and-logging.html
                          Place the logging file in the same directory as this pom file.
                   -->
                  <!--argument>
                     -Djava.util.logging.config.file=mylogging.properties
                  </argument-->
                  <argument>
                     client.WSClient
                  </argument>
               </arguments>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <configuration>
               <instructions>
                  <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
                  <Export-Package>client</Export-Package>
                  <Embed-Dependency>web-service-tutorial-service;classifier=jaxws</Embed-Dependency>
               </instructions>
            </configuration>
         </plugin>
      </plugins>
   </build>
</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
      http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.web-service-ear-tutorial</groupId>
      <artifactId>web-service-ear-tutorial</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>web-service-ear-tutorial-ear</artifactId>
   <name>-- Service EAR file</name>
   <packaging>ear</packaging>

   <dependencies>
      <dependency>
         <groupId>org.gmazza.blog-samples.web-service-ear-tutorial</groupId>
         <artifactId>web-service-ear-tutorial-war</artifactId>
         <version>1.0-SNAPSHOT</version>
         <type>war</type>
      </dependency>
      <dependency>
         <groupId>org.gmazza.blog-samples.web-service-ear-tutorial</groupId>
         <artifactId>web-service-ear-tutorial-service</artifactId>
         <version>1.0-SNAPSHOT</version>
      </dependency>
   </dependencies>

   <build>
      <defaultGoal>package</defaultGoal>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-ear-plugin</artifactId>
            <version>2.8</version>
            <configuration>
               <!-- Places jars in a lib subdirectory of the EAR (for readability) -->
               <defaultJavaBundleDir>lib/</defaultJavaBundleDir>
               <modules>
                  <webModule>
                     <groupId>org.gmazza.blog-samples.web-service-ear-tutorial</groupId>
                     <artifactId>web-service-ear-tutorial-war</artifactId>
                     <contextRoot>doubleit</contextRoot>
                  </webModule>
               </modules>
            </configuration>
         </plugin>
      </plugins>
   </build>

   <profiles>
      <profile>
         <id>CXF</id>
         <!-- Remove activation element below if using Metro  -->
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <dependencies>
            <dependency>
               <groupId>org.springframework</groupId>
               <artifactId>spring-web</artifactId>
            </dependency>
         </dependencies>
      </profile>
   </profiles>

</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza</groupId>
      <artifactId>blog-samples</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <groupId>org.gmazza.blog-samples.web-service-ear-tutorial</groupId>
   <artifactId>web-service-ear-tutorial</artifactId>
   <name>Tutorial: Deploying JAX-WS Services as EARs</name>
   <packaging>pom</packaging>
   <url>http://www.jroller.com/gmazza/entry/web_service_ear_tutorial</url>

   <modules>
      <module>service</module>
      <module>war</module>
      <module>ear</module>
      <module>client</module>
   </modules>

   <build>
      <pluginManagement>
         <plugins>
            <plugin>
               <groupId>org.apache.tomcat.maven</groupId>
               <artifactId>tomcat7-maven-plugin</artifactId>
            </plugin>
         </plugins>
      </pluginManagement>
   </build>

   <profiles>
      <profile>
         <id>CXF</id>
         <!-- To use Metro by default, move activation element to its profile below  -->
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <dependencies>
            <dependency>
               <groupId>org.apache.cxf</groupId>
               <artifactId>cxf-rt-frontend-jaxws</artifactId>
            </dependency>
            <dependency>
               <groupId>org.apache.cxf</groupId>
               <artifactId>cxf-rt-transports-http</artifactId>
            </dependency>
         </dependencies>
      </profile>

      <profile>
         <!-- See http://metro.java.net/guide/ch02.html#using-mavenized-metro-binaries
              for more Metro/Maven config info -->
         <id>Metro</id>
         <dependencies>
            <dependency>
               <groupId>org.glassfish.metro</groupId>
               <artifactId>webservices-rt</artifactId>
            </dependency>
         </dependencies>
      </profile>
   </profiles>

</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.web-service-ear-tutorial</groupId>
      <artifactId>web-service-ear-tutorial</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>web-service-ear-tutorial-service</artifactId>
   <name>-- Web Service Provider</name>
   <packaging>bundle</packaging>

   <dependencies>
      <dependency>
         <groupId>junit</groupId>
         <artifactId>junit</artifactId>
         <version>4.11</version>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <!-- 
              Below plugin provides a separate JAR for the JAX-WS artifacts (i.e.,  
              the objects created by running wsdl2java or wsimport), as this JAR
              will also be used by the SOAP client.  More info:
              http://maven.apache.org/plugins/maven-assembly-plugin/
         -->
         <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <version>2.4</version>
            <configuration>
               <descriptors>
                  <descriptor>src/assembly/jaxws-jar.xml</descriptor>
               </descriptors>
               <appendAssemblyId>true</appendAssemblyId>
               <attach>true</attach>
            </configuration>
            <executions>
               <execution>
                  <id>make-assembly</id>
                  <phase>package</phase>
                  <goals>
                     <goal>single</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <configuration>
            <instructions>
               <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
               <Export-Package>service</Export-Package>
            </instructions>
            </configuration>
         </plugin>
      </plugins>
      <!-- Name of the generated WAR file -->
      <finalName>doubleit</finalName>
   </build>

   <profiles>
      <profile>
         <id>CXF</id>
         <!-- To use Metro by default, move activation element to its profile below  -->
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.cxf</groupId>
                  <artifactId>cxf-codegen-plugin</artifactId>
                  <version>${cxf.version}</version>
                  <executions>
                     <execution>
                        <configuration>
                           <sourceRoot>
                              ${basedir}/target/generated-sources
                           </sourceRoot>
                           <wsdlOptions>
                              <wsdlOption>
                                 <wsdl>
                                    ${basedir}/src/main/resources/DoubleIt.wsdl
                                 </wsdl>
                                 <wsdlLocation>classpath:DoubleIt.wsdl</wsdlLocation>
                              </wsdlOption>
                           </wsdlOptions>
                        </configuration>
                        <goals>
                           <goal>wsdl2java</goal>
                        </goals>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>

      <profile>
         <id>Metro</id>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.jvnet.jax-ws-commons</groupId>
                  <artifactId>jaxws-maven-plugin</artifactId>
                  <version>2.2.1</version>
                  <executions>
                     <execution>
                        <goals>
                           <goal>wsimport</goal>
                        </goals>
                        <configuration>
                           <wsdlDirectory>
                              src/main/resources
                           </wsdlDirectory>
                           <wsdlFiles>
                              <wsdlFile>DoubleIt.wsdl</wsdlFile>
                           </wsdlFiles>
                           <wsdlLocation>/*</wsdlLocation>
                           <sourceDestDir>
                              ${basedir}/target/generated-sources
                           </sourceDestDir>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>
   </profiles>
</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.web-service-ear-tutorial</groupId>
      <artifactId>web-service-ear-tutorial</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>web-service-ear-tutorial-war</artifactId>
   <name>-- Service WAR file</name>
   <packaging>war</packaging>

   <dependencies>
      <dependency>
          <groupId>org.gmazza.blog-samples.web-service-ear-tutorial</groupId>
          <artifactId>web-service-ear-tutorial-service</artifactId>
          <version>1.0-SNAPSHOT</version>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.tomcat.maven</groupId>
            <artifactId>tomcat7-maven-plugin</artifactId>
         </plugin>
         <plugin>
            <artifactId>maven-war-plugin</artifactId>
            <version>2.3</version>
            <configuration>
                <webXml>src/main/webapp/WEB-INF/web.xml</webXml>
                <webResources>
                    <resource>
                        <directory>../service/src/main/resources</directory>
                        <targetPath>WEB-INF/wsdl</targetPath>
                        <includes>
                            <include>*.wsdl</include>
                        </includes>
                    </resource>
                </webResources>
                <packagingExcludes>WEB-INF/lib/*.jar</packagingExcludes>
                <archive>
                    <manifest>
                        <addClasspath>true</addClasspath>
                        <classpathPrefix>lib/</classpathPrefix>
                    </manifest>
                </archive>
            </configuration>
         </plugin>
      </plugins>
      <!-- Name of the generated WAR file -->
      <finalName>doubleit</finalName>
   </build>

   <profiles>
      <profile>
         <id>CXF</id>
         <!-- Remove activation element below if using Metro  -->
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <dependencies>
            <dependency>
               <groupId>org.springframework</groupId>
               <artifactId>spring-web</artifactId>
            </dependency>
         </dependencies>
      </profile>
   </profiles>

</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.web-service-tutorial</groupId>
      <artifactId>web-service-tutorial</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>web-service-tutorial-client</artifactId>
   <name>-- SOAP Client</name>
   <packaging>bundle</packaging>

   <dependencies>
      <dependency>
         <groupId>org.gmazza.blog-samples.web-service-tutorial</groupId>
         <artifactId>web-service-tutorial-service</artifactId>
         <!-- Classifier below used with Maven Assembly Plugin to 
              specify subset of above artifact needed. 
         -->
         <classifier>jaxws</classifier>
         <version>1.0-SNAPSHOT</version>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.2.1</version>
            <executions>
               <execution>
                  <goals>
                     <goal>exec</goal>
                  </goals>
               </execution>
            </executions>
            <configuration>
               <executable>java</executable>
               <arguments>
                  <argument>-classpath</argument>
                  <classpath/>
                  <!-- Uncomment below for debug output with Metro. -->
                  <!--argument>
                     -Dcom.sun.xml.ws.transport.http.client.HttpTransportPipe.dump=true
                  </argument-->
                  <!-- Uncomment below for debug output with CXF.  Will need to configure
                          client-side interceptors and supply a java.util.logging properties file:
                          http://cxf.apache.org/docs/debugging-and-logging.html
                          Place the logging file in the same directory as this pom file.
                   -->
                  <!--argument>
                     -Djava.util.logging.config.file=mylogging.properties
                  </argument-->
                  <argument>
                     client.WSClient
                  </argument>
               </arguments>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <configuration>
               <instructions>
                  <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
                  <Export-Package>client</Export-Package>
                  <Embed-Dependency>web-service-tutorial-service;classifier=jaxws</Embed-Dependency>
               </instructions>
            </configuration>
         </plugin>
      </plugins>
   </build>
</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <groupId>org.gmazza.blog-samples.web-service-tutorial</groupId>
   <artifactId>web-service-tutorial</artifactId>
   <version>1.0-SNAPSHOT</version>
   <name>Tutorial: Basic WSDL-First Web Service</name>
   <packaging>pom</packaging>
   <url>http://www.jroller.com/gmazza/entry/web_service_tutorial</url>

   <modules>
      <module>service</module>
      <module>war</module>
      <module>client</module>
   </modules>

   <prerequisites>
      <maven>3.0</maven>
   </prerequisites>

   <properties>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
   </properties>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.0</version>
            <configuration>
               <source>1.6</source>
               <target>1.6</target>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-eclipse-plugin</artifactId>
            <version>2.8</version>
            <configuration>
               <downloadSources>true</downloadSources>
               <!--downloadJavadocs>true</downloadJavadocs-->
               <!--useProjectReferences>false</useProjectReferences-->
            </configuration>
         </plugin>
      </plugins>
      <pluginManagement>
         <plugins>
            <plugin>
               <groupId>org.apache.tomcat.maven</groupId>
               <artifactId>tomcat7-maven-plugin</artifactId>
               <version>2.1</version>
               <configuration>
                  <server>myTomcat</server>
                  <url>http://localhost:8080/manager/text</url>
                  <path>/${project.build.finalName}</path>
               </configuration>
            </plugin>
            <plugin>
               <groupId>org.apache.felix</groupId>
               <artifactId>maven-bundle-plugin</artifactId>
               <version>2.3.7</version>
               <extensions>true</extensions>
            </plugin>
         </plugins>
      </pluginManagement>
   </build>

   <profiles>
      <profile>
         <id>CXF</id>
         <!-- To use Metro by default, move activation element to its profile below  -->
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <properties>
            <cxf.version>2.7.6</cxf.version>
         </properties>
         <dependencies>
            <dependency>
               <groupId>org.apache.cxf</groupId>
               <artifactId>cxf-rt-frontend-jaxws</artifactId>
               <version>${cxf.version}</version>
            </dependency>
            <dependency>
               <groupId>org.apache.cxf</groupId>
               <artifactId>cxf-rt-transports-http</artifactId>
               <version>${cxf.version}</version>
            </dependency>
         </dependencies>
      </profile>

      <profile>
         <!-- See http://metro.java.net/guide/ch02.html#using-mavenized-metro-binaries
              for more Metro/Maven config info -->
         <id>Metro</id>
         <dependencies>
            <dependency>
               <groupId>org.glassfish.metro</groupId>
               <artifactId>webservices-rt</artifactId>
               <version>2.3</version>
            </dependency>
         </dependencies>
      </profile>
   </profiles>

</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.web-service-tutorial</groupId>
      <artifactId>web-service-tutorial</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>web-service-tutorial-service</artifactId>
   <name>-- Web Service Provider</name>
   <packaging>bundle</packaging>

   <dependencies>
      <dependency>
         <groupId>junit</groupId>
         <artifactId>junit</artifactId>
         <version>4.11</version>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <!-- 
              Below plugin provides a separate JAR for the JAX-WS artifacts (i.e.,  
              the objects created by running wsdl2java or wsimport), as this JAR
              will also be used by the SOAP client.  More info:
              http://maven.apache.org/plugins/maven-assembly-plugin/
         -->
         <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <version>2.4</version>
            <configuration>
               <descriptors>
                  <descriptor>src/assembly/jaxws-jar.xml</descriptor>
               </descriptors>
               <appendAssemblyId>true</appendAssemblyId>
               <attach>true</attach>
            </configuration>
            <executions>
               <execution>
                  <id>make-assembly</id>
                  <phase>package</phase>
                  <goals>
                     <goal>single</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <configuration>
            <instructions>
               <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
               <Export-Package>service</Export-Package>
            </instructions>
            </configuration>
         </plugin>
      </plugins>
      <!-- Name of the generated WAR file -->
      <finalName>doubleit</finalName>
   </build>

   <profiles>
      <profile>
         <id>CXF</id>
         <!-- To use Metro by default, move activation element to its profile below  -->
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.cxf</groupId>
                  <artifactId>cxf-codegen-plugin</artifactId>
                  <version>${cxf.version}</version>
                  <executions>
                     <execution>
                        <configuration>
                           <sourceRoot>
                              ${basedir}/target/generated-sources
                           </sourceRoot>
                           <wsdlOptions>
                              <wsdlOption>
                                 <wsdl>
                                    ${basedir}/src/main/resources/DoubleIt.wsdl
                                 </wsdl>
                                 <wsdlLocation>classpath:DoubleIt.wsdl</wsdlLocation>
                              </wsdlOption>
                           </wsdlOptions>
                        </configuration>
                        <goals>
                           <goal>wsdl2java</goal>
                        </goals>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>

      <profile>
         <id>Metro</id>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.jvnet.jax-ws-commons</groupId>
                  <artifactId>jaxws-maven-plugin</artifactId>
                  <version>2.2.1</version>
                  <executions>
                     <execution>
                        <goals>
                           <goal>wsimport</goal>
                        </goals>
                        <configuration>
                           <wsdlDirectory>
                              src/main/resources
                           </wsdlDirectory>
                           <wsdlFiles>
                              <wsdlFile>DoubleIt.wsdl</wsdlFile>
                           </wsdlFiles>
                           <wsdlLocation>/*</wsdlLocation>
                           <sourceDestDir>
                              ${basedir}/target/generated-sources
                           </sourceDestDir>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>
   </profiles>
</project>

<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza.blog-samples.web-service-tutorial</groupId>
      <artifactId>web-service-tutorial</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>web-service-tutorial-war</artifactId>
   <name>-- Service WAR file</name>
   <packaging>war</packaging>

   <dependencies>
      <dependency>
          <groupId>org.gmazza.blog-samples.web-service-tutorial</groupId>
          <artifactId>web-service-tutorial-service</artifactId>
          <version>1.0-SNAPSHOT</version>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.tomcat.maven</groupId>
            <artifactId>tomcat7-maven-plugin</artifactId>
         </plugin>
         <plugin>
            <artifactId>maven-war-plugin</artifactId>
            <version>2.3</version>
            <configuration>
                <webXml>src/main/webapp/WEB-INF/web.xml</webXml>
                <webResources>
                    <resource>
                        <directory>../service/src/main/resources</directory>
                        <targetPath>WEB-INF/wsdl</targetPath>
                        <includes>
                            <include>*.wsdl</include>
                        </includes>
                    </resource>
                </webResources>
            </configuration>
         </plugin>
      </plugins>
      <!-- Name of the generated WAR file -->
      <finalName>doubleit</finalName>
   </build>

   <profiles>
      <profile>
         <id>CXF</id>
         <!-- Remove activation element below if using Metro  -->
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <dependencies>
            <dependency>
               <groupId>org.springframework</groupId>
               <artifactId>spring-web</artifactId>
               <version>3.0.7.RELEASE</version>
            </dependency>
         </dependencies>
      </profile>
   </profiles>

</project>
<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <!-- This sample is just starting, not ready yet -->

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.gmazza</groupId>
      <artifactId>blog-samples</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>

   <groupId>org.gmazza.blog-samples.wspolicy_adder</groupId>
   <artifactId>wspolicy_adder</artifactId>
   <name>Using XSLT to add policy statements</name>
   <packaging>pom</packaging>
   <url>http://www.jroller.com/gmazza/entry/wspolicy_adder</url>

   <build>
      <plugins>
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>xml-maven-plugin</artifactId>
            <version>1.0</version>
            <executions>
               <execution>
                  <goals>
                     <goal>transform</goal>
                  </goals>
                    <configuration>
                       <transformationSets>
                          <transformationSet>
                             <dir>src/main/resources</dir>
                             <stylesheet>src/main/config/secPolAdder.xsl</stylesheet>
                             <includes>
                                <include>**/*.wsdl</include>
                             </includes>
                          </transformationSet>
                       </transformationSets>
                    </configuration>
               </execution>
            </executions>
         </plugin>
      </plugins>
   </build>

</project>

